{"version":3,"file":"stellar-base.js","mappings":"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ACJ;AACA;AACA,IAAI;AACJ;AACA;AACA,iBAAiB,OAAO,eAAe,OAAO,eAAe,OAAO,WAAW,OAAO;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6FAA6F,eAAe;AAC5G;AACA;AACA;AACA;AACA;AACA,6FAA6F,eAAe;AAC5G;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6FAA6F,eAAe;AAC5G;AACA;AACA;AACA;AACA;AACA,6FAA6F,eAAe;AAC5G;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAyE,eAAe;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;AC7kBA;AACA;;AAEa;;AAEb,yBAAyB,wBAAwB,oCAAoC,yCAAyC,kCAAkC,0DAA0D,0BAA0B;AACpP,4BAA4B,gBAAgB,sBAAsB,OAAO,kDAAkD,sDAAsD,8BAA8B,mJAAmJ,qEAAqE,KAAK;AAC5a,4CAA4C,2BAA2B,kBAAkB,kCAAkC,oEAAoE,KAAK,OAAO,oBAAoB;AAC/N,kDAAkD,0CAA0C;AAC5F,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD;AAC/P,8DAA8D,sEAAsE,8DAA8D,kDAAkD,iBAAiB,GAAG;AACxQ,+BAA+B,uCAAuC;AACtE,qCAAqC,iEAAiE,sCAAsC,0BAA0B,+CAA+C,2CAA2C,uEAAuE;AACvU,2CAA2C,+DAA+D,6EAA6E,yEAAyE,eAAe,uDAAuD,GAAG,+CAA+C,iBAAiB,GAAG;AAC5Y,iCAAiC,6DAA6D,yCAAyC,8CAA8C,iCAAiC,mDAAmD,2DAA2D,OAAO,yCAAyC;AACpX,kDAAkD,0EAA0E,eAAe,4BAA4B,mFAAmF;AAC1P,wCAAwC,uBAAuB,yFAAyF;AACxJ,mCAAmC,gEAAgE,sDAAsD,+DAA+D,mCAAmC,6EAA6E,qCAAqC,iDAAiD,8BAA8B,qBAAqB,0EAA0E,qDAAqD,eAAe,yEAAyE,GAAG,2CAA2C;AACttB,2CAA2C,mCAAmC,yCAAyC,OAAO,wDAAwD,gBAAgB,uBAAuB,kDAAkD,kCAAkC,uDAAuD,sBAAsB;AAC9X,uCAAuC,wEAAwE,0CAA0C,8CAA8C,MAAM,4EAA4E,IAAI,eAAe,YAAY;AACxT,iCAAiC;AACjC,iCAAiC,0GAA0G,iBAAiB,aAAa;AACzK,8BAA8B,uGAAuG,mDAAmD;AACxL,sBAAsB,2BAA2B,oGAAoG,mBAAmB,iBAAiB,sHAAsH;AAC/S,eAAe,mBAAO,CAAC,0CAAO;AAC9B;AACA,gBAAgB,mBAAO,CAAC,iEAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,sBAAsB,OAAO,WAAW,OAAO,gBAAgB,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa,IAAI,aAAa;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,UAAU,OAAO,WAAW,OAAO;AACnC;AACA;AACA,YAAY,OAAO,WAAW,OAAO,yBAAyB,OAAO;AACrE;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,UAAU;AACnE;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;AACD;;;;;;;;;;;AC5bA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA,sBAAsB,2BAA2B,oGAAoG,mBAAmB,iBAAiB,sHAAsH;AAC/S,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD;AAC/P,8DAA8D,sEAAsE,8DAA8D,kDAAkD,iBAAiB,GAAG;AACxQ,+BAA+B,uCAAuC;AACtE,qCAAqC,iEAAiE,sCAAsC,0BAA0B,+CAA+C,2CAA2C,uEAAuE;AACvU,kDAAkD,0CAA0C;AAC5F,2CAA2C,+DAA+D,6EAA6E,yEAAyE,eAAe,uDAAuD,GAAG,+CAA+C,iBAAiB,GAAG;AAC5Y,iCAAiC,0GAA0G,iBAAiB,aAAa;AACzK,iCAAiC,6DAA6D,yCAAyC,8CAA8C,iCAAiC,mDAAmD,2DAA2D,OAAO,yCAAyC;AACpX,kDAAkD,0EAA0E,eAAe,4BAA4B,mFAAmF;AAC1P,wCAAwC,uBAAuB,yFAAyF;AACxJ,uCAAuC,wEAAwE,0CAA0C,8CAA8C,MAAM,4EAA4E,IAAI,eAAe,YAAY;AACxT,8BAA8B,uGAAuG,mDAAmD;AACxL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,qCAAqC,mBAAO,CAAC,wDAAW;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iCAAiC,mBAAO,CAAC,0CAAO;AAChD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,CAAC;AACD;AACA,sEAAsE,aAAa;AACnF;AACA;AACA,qCAAqC,mBAAO,CAAC,wDAAW;AACxD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,oBAAoB;;;;;;;;;;;AC1KpB;AACA;;AAEa;;AAEb,kCAAkC;AAClC,8BAA8B;AAC9B,kDAAkD,gBAAgB,gEAAgE,wDAAwD,6DAA6D,sDAAsD;AAC7S,uCAAuC,uDAAuD,uCAAuC,SAAS,uBAAuB;AACrK,uCAAuC,kGAAkG,iBAAiB,wCAAwC,MAAM,yCAAyC,6BAA6B,UAAU,YAAY,kEAAkE,WAAW,YAAY,iBAAiB,UAAU,MAAM,2EAA2E,UAAU,oBAAoB;AACvgB,gCAAgC;AAChC,sBAAsB,2BAA2B,oGAAoG,mBAAmB,iBAAiB,sHAAsH;AAC/S;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uCAAuC,mBAAO,CAAC,oDAAW;AAC1D;AACA;AACA;AACA,gDAAgD,mBAAO,CAAC,8CAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uEAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW,oBAAoB,WAAW;AACzD;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAA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H,cAAA,GAAAttD,CAAA,UAAGoC,MAAM,CAAC+4B,GAAG,CAAC,KAAAmyB,cAAA,GAAAttD,CAAA,UAAGm7B,GAAG;AACrC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICMW;IAAAwyB,cAAA,YAAAA,CAAA;MAAA,OAAAhuD,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAguD,cAAA;AAfiC;AAE7C,iEAAevqD,iEAAG;;;;;;;;;;;ACFL;;AAEb;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,gBAAgB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;;AAEA,cAAc;AACd;AACA;;AAEA;AACA,eAAe;AACf,eAAe;AACf,eAAe;AACf,iBAAiB;AACjB,eAAe;AACf,iBAAiB;;;;;;;;;;;;ACvTL;;AAEZ,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,eAAe,mBAAO,CAAC,oDAAW;AAClC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC;AACA;AACA;AACA;;AAEA,cAAc;AACd,kBAAkB;AAClB,yBAAyB;;AAEzB;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,OAAO;AACjD,WAAW,OAAO;AAClB,EAAE,OAAO;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB,WAAW,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,gBAAgB,WAAW,GAAG,IAAI,KAAK,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,KAAK,mDAAmD,cAAc;AACzF,GAAG;AACH;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,SAAS;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,cAAc,oBAAoB,EAAE,IAAI;AACxC;AACA,YAAY,gBAAgB,EAAE,IAAI;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,SAAS,GAAG,KAAK,qBAAqB,EAAE,EAAE;AACpE,QAAQ;AACR,yBAAyB,GAAG,KAAK,yBAAyB,EAAE,EAAE;AAC9D,mBAAmB,yBAAyB,EAAE,EAAE;AAChD;AACA,MAAM;AACN,oBAAoB,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc,SAAS,OAAO;AACxE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACzjEa;;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AACN;AACA;AACA;;AAEA;;;;;;;;;;;;AC7Da;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,cAAc;AAClC;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qCAAqC,oBAAoB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;;AAEA,iFAAiF,sCAAsC;;AAEvH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACnFa;;AAEb,qBAAqB,mBAAO,CAAC,wEAAkB;;AAE/C;;;;;;;;;;;;ACJa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,oDAAW;AAChC,iBAAiB,mBAAO,CAAC,wDAAgB;AACzC,kBAAkB,mBAAO,CAAC,0DAAiB;AAC3C,sBAAsB,mBAAO,CAAC,sDAAe;AAC7C,mBAAmB,mBAAO,CAAC,4DAAkB;AAC7C,iBAAiB,mBAAO,CAAC,wDAAgB;AACzC,gBAAgB,mBAAO,CAAC,sDAAe;;AAEvC;;AAEA;AACA;AACA;AACA,kCAAkC,8CAA8C;AAChF,GAAG;AACH;;AAEA;AACA;AACA;AACA,UAAU;AACV,GAAG;AACH,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,EAAE;AACF;;AAEA,iBAAiB,mBAAO,CAAC,wDAAa;AACtC,eAAe,mBAAO,CAAC,oDAAW;;AAElC;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,GAAG;AACH,gDAAgD;AAChD,GAAG;AACH,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,4DAAe;AAClC,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtWa;;AAEb,mBAAmB,mBAAO,CAAC,4DAAe;;AAE1C;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfa;;AAEb,sBAAsB,mBAAO,CAAC,sEAAoB;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA,WAAW,aAAa;AACxB;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;;;;;;;;;;;;ACda;;AAEb;AACA,oBAAoB,mBAAO,CAAC,oDAAS;;AAErC;AACA,yCAAyC;AACzC,qCAAqC;AACrC,8CAA8C;AAC9C,0CAA0C;;AAE1C;AACA;;;;;;;;;;;;ACZa;;AAEb;AACA;AACA,2FAA2F;AAC3F,4CAA4C;;AAE5C;AACA;AACA;AACA,gCAAgC;;AAEhC,kEAAkE;AAClE,qEAAqE;;AAErE;AACA,iCAAiC;AACjC;AACA,uCAAuC;;AAEvC,2DAA2D;AAC3D,+DAA+D;;AAE/D;AACA;AACA,oBAAoB,gBAAgB;AACpC,2EAA2E;;AAE3E,yGAAyG;;AAEzG;AACA,6CAA6C;;AAE7C,8DAA8D;;AAE9D;AACA;AACA,uEAAuE;AACvE;;AAEA;AACA;;;;;;;;;;;;ACzCa;;AAEb,iBAAiB,mBAAO,CAAC,8DAAmB;;AAE5C,WAAW,aAAa;AACxB;AACA;AACA;;;;;;;;;;;;ACPa;;AAEb;AACA;AACA,WAAW,mBAAO,CAAC,4DAAe;;AAElC,WAAW,aAAa;AACxB;;;;;;;;;;;ACPA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,SAAS,WAAW;;AAEpB;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;;;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Ba;;AAEb,qBAAqB,mBAAO,CAAC,sEAAuB;AACpD,gBAAgB,mBAAO,CAAC,kEAAqB;;AAE7C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,2DAA2D;;AAE3D;;;;;;;;;;;;AChCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,6BAA6B,WAAW;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,2CAA2C;AAC3C,2EAA2E;;AAE3E,0BAA0B;;AAE1B,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB,gBAAgB;AAChB,kEAAkE;AAClE;AACA;AACA,IAAI;AACJ,iCAAiC;AACjC;AACA;AACA;AACA;AACA,sBAAsB;AACtB,gBAAgB;AAChB,kEAAkE;AAClE,wBAAwB;AACxB,6BAA6B;AAC7B;AACA,6FAA6F;AAC7F;AACA;;;;;;;;;;;;ACpGa;;AAEb;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,sEAAuB;AACpD;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,wCAAwC;AACxC,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACrCa;;AAEb;;AAEA;AACA;AACA;;;;;;;;;;;;ACNa;;AAEb,eAAe,mBAAO,CAAC,oDAAW;AAClC,aAAa,mBAAO,CAAC,oEAAmB;;AAExC,qBAAqB,mBAAO,CAAC,iEAAkB;AAC/C,kBAAkB,mBAAO,CAAC,qDAAY;AACtC,WAAW,mBAAO,CAAC,6CAAQ;;AAE3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACnBa;;AAEb,qBAAqB,mBAAO,CAAC,iEAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTa;;AAEb,aAAa,mBAAO,CAAC,oEAAmB;AACxC,kBAAkB,mBAAO,CAAC,qDAAY;;AAEtC;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;ACfa;;AAEb,sBAAsB,mBAAO,CAAC,oEAAmB;;AAEjD,WAAW,aAAa;AACxB;AACA;AACA;;;;;;;;;;;;ACPa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBa;;AAEb,aAAa,mBAAO,CAAC,oEAAmB;AACxC,eAAe,mBAAO,CAAC,oDAAW;;AAElC,qBAAqB,mBAAO,CAAC,oEAAkB;AAC/C,kBAAkB,mBAAO,CAAC,wDAAY;AACtC,WAAW,mBAAO,CAAC,gDAAQ;;AAE3B;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;ACjBa;;AAEb,qBAAqB,mBAAO,CAAC,oEAAkB;;AAE/C;AACA;AACA;;;;;;;;;;;;ACNa;;AAEb,kBAAkB,mBAAO,CAAC,wDAAY;AACtC,aAAa,mBAAO,CAAC,oEAAmB;;AAExC;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;ACba;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,gEAAe,GAAG;AACxC;AACA,2CAA2C,gBAAgB;AAC3D,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzHa;;AAEb;AACA,aAAa,mBAAO,CAAC,gEAAe;;AAEpC;AACA,6CAA6C,sBAAsB,EAAE,mBAAO,CAAC,sEAAkB;;AAE/F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/Ba;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,wDAAa;AACtC,iBAAiB,mBAAO,CAAC,8DAAmB;AAC5C,gBAAgB,mBAAO,CAAC,kEAAqB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,4BAA4B;AAC5B;AACA,aAAa;AACb;AACA,iBAAiB,sBAAsB;AACvC,qCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA,2CAA2C;AAC3C,mCAAmC;AACnC,6BAA6B;AAC7B;AACA;AACA;;AAEA,YAAY;AACZ;;;;;;;;;;;;AC7Ca;;AAEb,qBAAqB,mBAAO,CAAC,wEAAkB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDa;;AAEb,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;ACvL7B;AACA;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChEa;;AAEb,mBAAmB,mBAAO,CAAC,4DAAe;AAC1C,aAAa,mBAAO,CAAC,0EAAsB;AAC3C,qBAAqB,mBAAO,CAAC,kFAA0B;AACvD,WAAW,mBAAO,CAAC,0CAAM;;AAEzB,iBAAiB,mBAAO,CAAC,wDAAgB;AACzC;;AAEA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C,IAAI;AACJ,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;;;;;;;;;;;ACzCA,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AChFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,mBAAO,CAAC,2CAAO;AAC7B,eAAe,mBAAO,CAAC,6CAAQ;AAC/B,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;;;;;;;;;;;ACdnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtIA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACxDA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,sFAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,SAAS,SAAS;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACnQA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;;AAEA;AACA,yCAAyC;;AAEzC;AACA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;AACA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;AACA,uDAAuD;AACvD,uDAAuD;AACvD,uDAAuD;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,kBAAkB,QAAQ;AAC1B;;AAEA;AACA,kBAAkuBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,4BAA4B;AACnD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD,uBAAuB,2BAA2B;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtgBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB,sBAAsB;;AAEtB;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;;AAE1B;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B,2BAA2B;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;;AAEA,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,OAAO;;AAErB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,cAAc,QAAQ;AACtB;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,SAAS;AACxB;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,QAAQ;;AAEtB;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;;AAEA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC,cAAc,gBAAgB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,kBAAkB,OAAO;AACzB;AACA,KAAK;AACL,IAAI,SAAS,IAA8B;AAC3C;AACA,aAAa,mBAAO,CAAC,qBAAQ;AAC7B;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA,OAAO;AACP;AACA;AACA,CAAC;;AAED,CAAC,EAAE,KAA6B,kEAAkE;;;;;;;;;;;ACt1ElG;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA;;AAEa;;AAEb,wBAAwB,mBAAO,CAAC,0DAAc;AAC9C,0BAA0B,mBAAO,CAAC,4EAAuB;AACzD,sBAAsB,mBAAO,CAAC,oEAAmB;AACjD,mBAAmB,mBAAO,CAAC,8DAAgB;;AAE3C;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,yBAAyB;AACzB,2BAA2B;AAC3B,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;;AAGzB;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;AC7UD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,wBAAwB,SAAS;AACjC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa,OAAO,oBAAoB,OAAO;AAC/C;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA,QAAQ,SAAS,OAAO;AACxB,QAAQ,OAAO;AACf,QAAQ;AACR,QAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,IAAI,OAAO;AACX,iBAAiB,OAAO;AACxB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA,QAAQ,OAAO;AACf;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;AAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,WAAW;AACX;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,kGAA0C;;AAE1C;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA,gBAAgB;AAChB,sBAAsB;;AAEtB;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA,cAAc;AACd,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,eAAe;AACf,2BAA2B;;AAE3B;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,kHAAgD;;AAEhD;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,WAAW;AACX,EAAE,OAAO;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,UAAU;AACrB;AACA,qGAAsC;;AAEtC,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,qCAAqC;AACxE,4BAA4B,OAAO,sDAAsD;AACzF;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;;;;;;;;;;;AC1sBN;;AAEb,cAAc,mBAAO,CAAC,kDAAU;AAChC,2BAA2B,mBAAO,CAAC,8EAAwB;AAC3D,eAAe,mBAAO,CAAC,oDAAW;AAClC,gBAAgB,mBAAO,CAAC,kEAAqB;AAC7C,WAAW,mBAAO,CAAC,0CAAM;;AAEzB,WAAW,uBAAuB;AAClC;AACA,qBAAqB,mBAAO,CAAC,sEAAuB;;AAEpD,4CAA4C,qBAAM;AAClD;;AAEA;AACA,4CAA4C;;AAE5C,WAAW,8DAA8D;AACzE;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,8HAA8H;AAC5I,aAAa,WAAW,2BAA2B,cAAc,IAAI,mBAAmB;AACxF,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,WAAW,uDAAuD;AAClE;AACA,YAAY,sCAAsC;AAClD;AACA;AACA,aAAa,YAAY,eAAe,YAAY,cAAc,KAAK;AACvE,aAAa,4BAA4B,2BAA2B,YAAY;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;;AAEA,WAAW,uDAAuD;AAClE;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA,aAAa,YAAY,eAAe,YAAY,cAAc,KAAK;AACvE,aAAa,kCAAkC,2BAA2B,YAAY;AACtF;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA;;AAEA,WAAW,aAAa;AACxB;AACA,4CAA4C;AAC5C;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;;;;;;;;;;;ACnHA;;;;;;;;;;;ACAa;;AAEb,oBAAoB,mBAAO,CAAC,sFAA4B;;AAExD,4CAA4C,qBAAM;;AAElD,WAAW,aAAa;AACxB;AACA,gBAAgB,yCAAyC;AACzD,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAuD;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjC,UAAU,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kCAAkC,mDAAmD,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,EAAE;AACvF;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA,mFAAmF,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,yBAAyB,kBAAkB;AAC3C,4BAA4B,kBAAkB;AAC9C,yBAAyB,kBAAkB;AAC3C;AACA,yBAAyB,kBAAkB;AAC3C,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,8CAA8C,mDAAmD,GAAG,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,8CAA8C,mDAAmD,GAAG,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA,qCAAqC,kEAAkE,GAAG,EAAE;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,yDAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC,2CAA2C,mDAAmD,GAAG,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,6CAA6C,mDAAmD,GAAG,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,GAAG;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C,UAAU;AACV;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,EAAE;AAC/C,0CAA0C,GAAG,SAAS,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAAyB;AACjC,UAAU,yBAAyB;AACnC;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmkBAAkB,KAAK;AACvB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACviCAAiC,KAAK;AACtC;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACraAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ;AAChB;AACA,kCAAkC,mDAAmD,GAAG,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,8CAA8C,KAAK,MAAM,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,eAAe,QAAQ;AACvB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC;AACA,kCAAkC,6BAA6B,GAAG,GAAG;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA,kCAAkC,mDAAmD,GAAG,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ;AAClB;AACA,8BAA8B,mDAAmD,GAAG,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM;AACf;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,6BAA6B,KAAK;AAClC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,iEAAe,SAAS,EAAC;;;;;;;UC11FzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://StellarBase/./node_modules/@stellar/js-xdr/dist/xdr.js","webpack://StellarBase/./node_modules/assert/build/assert.js","webpack://StellarBase/./node_modules/assert/build/internal/assert/assertion_error.js","webpack://StellarBase/./node_modules/assert/build/internal/errors.js","webpack://StellarBase/./node_modules/assert/build/internal/util/comparisons.js","webpack://StellarBase/./config/buffer.js","webpack://StellarBase/./src/account.js","webpack://StellarBase/./src/address.js","webpack://StellarBase/./src/asset.js","webpack://StellarBase/./src/auth.js","webpack://StellarBase/./src/claimant.js","webpack://StellarBase/./src/contract.js","webpack://StellarBase/./src/events.js","webpack://StellarBase/./src/fee_bump_transaction.js","webpack://StellarBase/./src/generated/curr_generated.js","webpack://StellarBase/./src/get_liquidity_pool_id.js","webpack://StellarBase/./src/hashing.js","webpack://StellarBase/./src/index.js","webpack://StellarBase/./src/invocation.js","webpack://StellarBase/./src/jsxdr.js","webpack://StellarBase/./src/keypair.js","webpack://StellarBase/./src/liquidity_pool_asset.js","webpack://StellarBase/./src/liquidity_pool_id.js","webpack://StellarBase/./src/memo.js","webpack://StellarBase/./src/muxed_account.js","webpack://StellarBase/./src/network.js","webpack://StellarBase/./src/numbers/index.js","webpack://StellarBase/./src/numbers/int128.js","webpack://StellarBase/./src/numbers/int256.js","webpack://StellarBase/./src/numbers/sc_int.js","webpack://StellarBase/./src/numbers/uint128.js","webpack://StellarBase/./src/numbers/uint256.js","webpack://StellarBase/./src/numbers/xdr_large_int.js","webpack://StellarBase/./src/operation.js","webpack://StellarBase/./src/operations/account_merge.js","webpack://StellarBase/./src/operations/allow_trust.js","webpack://StellarBase/./src/operations/begin_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/bump_sequence.js","webpack://StellarBase/./src/operations/change_trust.js","webpack://StellarBase/./src/operations/claim_claimable_balance.js","webpack://StellarBase/./src/operations/clawback.js","webpack://StellarBase/./src/operations/clawback_claimable_balance.js","webpack://StellarBase/./src/operations/create_account.js","webpack://StellarBase/./src/operations/create_claimable_balance.js","webpack://StellarBase/./src/operations/create_passive_sell_offer.js","webpack://StellarBase/./src/operations/end_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/extend_footprint_ttl.js","webpack://StellarBase/./src/operations/index.js","webpack://StellarBase/./src/operations/inflation.js","webpack://StellarBase/./src/operations/invoke_host_function.js","webpack://StellarBase/./src/operations/liquidity_pool_deposit.js","webpack://StellarBase/./src/operations/liquidity_pool_withdraw.js","webpack://StellarBase/./src/operations/manage_buy_offer.js","webpack://StellarBase/./src/operations/manage_data.js","webpack://StellarBase/./src/operations/manage_sell_offer.js","webpack://StellarBase/./src/operations/path_payment_strict_receive.js","webpack://StellarBase/./src/operations/path_payment_strict_send.js","webpack://StellarBase/./src/operations/payment.js","webpack://StellarBase/./src/operations/restore_footprint.js","webpack://StellarBase/./src/operations/revoke_sponsorship.js","webpack://StellarBase/./src/operations/set_options.js","webpack://StellarBase/./src/operations/set_trustline_flags.js","webpack://StellarBase/./src/scval.js","webpack://StellarBase/./src/signerkey.js","webpack://StellarBase/./src/signing.js","webpack://StellarBase/./src/soroban.js","webpack://StellarBase/./src/sorobandata_builder.js","webpack://StellarBase/./src/strkey.js","webpack://StellarBase/./src/transaction.js","webpack://StellarBase/./src/transaction_base.js","webpack://StellarBase/./src/transaction_builder.js","webpack://StellarBase/./src/util/bignumber.js","webpack://StellarBase/./src/util/checksum.js","webpack://StellarBase/./src/util/continued_fraction.js","webpack://StellarBase/./src/util/decode_encode_muxed_account.js","webpack://StellarBase/./src/util/util.js","webpack://StellarBase/./src/xdr.js","webpack://StellarBase/./node_modules/base32.js/base32.js","webpack://StellarBase/./node_modules/base64-js/index.js","webpack://StellarBase/./node_modules/buffer/index.js","webpack://StellarBase/./node_modules/call-bind/callBound.js","webpack://StellarBase/./node_modules/call-bind/index.js","webpack://StellarBase/./node_modules/console-browserify/index.js","webpack://StellarBase/./node_modules/define-data-property/index.js","webpack://StellarBase/./node_modules/define-properties/index.js","webpack://StellarBase/./node_modules/es-define-property/index.js","webpack://StellarBase/./node_modules/es-errors/eval.js","webpack://StellarBase/./node_modules/es-errors/index.js","webpack://StellarBase/./node_modules/es-errors/range.js","webpack://StellarBase/./node_modules/es-errors/ref.js","webpack://StellarBase/./node_modules/es-errors/syntax.js","webpack://StellarBase/./node_modules/es-errors/type.js","webpack://StellarBase/./node_modules/es-errors/uri.js","webpack://StellarBase/./node_modules/for-each/index.js","webpack://StellarBase/./node_modules/function-bind/implementation.js","webpack://StellarBase/./node_modules/function-bind/index.js","webpack://StellarBase/./node_modules/get-intrinsic/index.js","webpack://StellarBase/./node_modules/gopd/index.js","webpack://StellarBase/./node_modules/has-property-descriptors/index.js","webpack://StellarBase/./node_modules/has-proto/index.js","webpack://StellarBase/./node_modules/has-symbols/index.js","webpack://StellarBase/./node_modules/has-symbols/shams.js","webpack://StellarBase/./node_modules/has-tostringtag/shams.js","webpack://StellarBase/./node_modules/hasown/index.js","webpack://StellarBase/./node_modules/ieee754/index.js","webpack://StellarBase/./node_modules/inherits/inherits_browser.js","webpack://StellarBase/./node_modules/is-arguments/index.js","webpack://StellarBase/./node_modules/is-callable/index.js","webpack://StellarBase/./node_modules/is-generator-function/index.js","webpack://StellarBase/./node_modules/is-nan/implementation.js","webpack://StellarBase/./node_modules/is-nan/index.js","webpack://StellarBase/./node_modules/is-nan/polyfill.js","webpack://StellarBase/./node_modules/is-nan/shim.js","webpack://StellarBase/./node_modules/is-typed-array/index.js","webpack://StellarBase/./node_modules/object-is/implementation.js","webpack://StellarBase/./node_modules/object-is/index.js","webpack://StellarBase/./node_modules/object-is/polyfill.js","webpack://StellarBase/./node_modules/object-is/shim.js","webpack://StellarBase/./node_modules/object-keys/implementation.js","webpack://StellarBase/./node_modules/object-keys/index.js","webpack://StellarBase/./node_modules/object-keys/isArguments.js","webpack://StellarBase/./node_modules/object.assign/implementation.js","webpack://StellarBase/./node_modules/object.assign/polyfill.js","webpack://StellarBase/./node_modules/possible-typed-array-names/index.js","webpack://StellarBase/./node_modules/process/browser.js","webpack://StellarBase/./node_modules/safe-buffer/index.js","webpack://StellarBase/./node_modules/set-function-length/index.js","webpack://StellarBase/./node_modules/sha.js/hash.js","webpack://StellarBase/./node_modules/sha.js/index.js","webpack://StellarBase/./node_modules/sha.js/sha.js","webpack://StellarBase/./node_modules/sha.js/sha1.js","webpack://StellarBase/./node_modules/sha.js/sha224.js","webpack://StellarBase/./node_modules/sha.js/sha256.js","webpack://StellarBase/./node_modules/sha.js/sha384.js","webpack://StellarBase/./node_modules/sha.js/sha512.js","webpack://StellarBase/./node_modules/tweetnacl/nacl-fast.js","webpack://StellarBase/./node_modules/util/support/isBufferBrowser.js","webpack://StellarBase/./node_modules/util/support/types.js","webpack://StellarBase/./node_modules/util/util.js","webpack://StellarBase/./node_modules/which-typed-array/index.js","webpack://StellarBase/ignored|D:\\workspace\\js-stellar-base\\node_modules\\tweetnacl|crypto","webpack://StellarBase/./node_modules/available-typed-arrays/index.js","webpack://StellarBase/./node_modules/bignumber.js/bignumber.mjs","webpack://StellarBase/webpack/bootstrap","webpack://StellarBase/webpack/runtime/compat get default export","webpack://StellarBase/webpack/runtime/define property getters","webpack://StellarBase/webpack/runtime/global","webpack://StellarBase/webpack/runtime/harmony module decorator","webpack://StellarBase/webpack/runtime/hasOwnProperty shorthand","webpack://StellarBase/webpack/runtime/make namespace object","webpack://StellarBase/webpack/before-startup","webpack://StellarBase/webpack/startup","webpack://StellarBase/webpack/after-startup"],"sourcesContent":["/*! For license information please see xdr.js.LICENSE.txt */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.XDR=e():t.XDR=e()}(this,(()=>(()=>{var t={616:(t,e,r)=>{\"use strict\";r.d(e,{A:()=>i});var n=r(287);n.hp.alloc(1).subarray(0,1)instanceof n.hp||(n.hp.prototype.subarray=function(t,e){const r=Uint8Array.prototype.subarray.call(this,t,e);return Object.setPrototypeOf(r,n.hp.prototype),r});const i=n.hp},281:(t,e,r)=>{const n=r(164);t.exports=n},164:(t,e,r)=>{\"use strict\";r.r(e),r.d(e,{Array:()=>j,Bool:()=>O,Double:()=>$,Enum:()=>X,Float:()=>T,Hyper:()=>I,Int:()=>B,LargeInt:()=>A,Opaque:()=>M,Option:()=>F,Quadruple:()=>L,Reference:()=>k,String:()=>N,Struct:()=>q,Union:()=>Y,UnsignedHyper:()=>R,UnsignedInt:()=>U,VarArray:()=>z,VarOpaque:()=>D,Void:()=>P,XdrReader:()=>u,XdrWriter:()=>c,config:()=>rt});class n extends TypeError{constructor(t){super(`XDR Write Error: ${t}`)}}class i extends TypeError{constructor(t){super(`XDR Read Error: ${t}`)}}class o extends TypeError{constructor(t){super(`XDR Type Definition Error: ${t}`)}}class s extends o{constructor(){super(\"method not implemented, it should be overloaded in the descendant class.\")}}var f=r(616).A;class u{constructor(t){if(!f.isBuffer(t)){if(!(t instanceof Array||Array.isArray(t)||ArrayBuffer.isView(t)))throw new i(`source invalid: ${t}`);t=f.from(t)}this._buffer=t,this._length=t.length,this._index=0}_buffer;_length;_index;get eof(){return this._index===this._length}advance(t){const e=this._index;if(this._index+=t,this._length<this._index)throw new i(\"attempt to read outside the boundary of the buffer\");const r=4-(t%4||4);if(r>0){for(let t=0;t<r;t++)if(0!==this._buffer[this._index+t])throw new i(\"invalid padding\");this._index+=r}return e}rewind(){this._index=0}read(t){const e=this.advance(t);return this._buffer.subarray(e,e+t)}readInt32BE(){return this._buffer.readInt32BE(this.advance(4))}readUInt32BE(){return this._buffer.readUInt32BE(this.advance(4))}readBigInt64BE(){return this._buffer.readBigInt64BE(this.advance(8))}readBigUInt64BE(){return this._buffer.readBigUInt64BE(this.advance(8))}readFloatBE(){return this._buffer.readFloatBE(this.advance(4))}readDoubleBE(){return this._buffer.readDoubleBE(this.advance(8))}ensureInputConsumed(){if(this._index!==this._length)throw new i(\"invalid XDR contract typecast - source buffer not entirely consumed\")}}var a=r(616).A;const h=8192;class c{constructor(t){\"number\"==typeof t?t=a.allocUnsafe(t):t instanceof a||(t=a.allocUnsafe(h)),this._buffer=t,this._length=t.length}_buffer;_length;_index=0;alloc(t){const e=this._index;return this._index+=t,this._length<this._index&&this.resize(this._index),e}resize(t){const e=Math.ceil(t/h)*h,r=a.allocUnsafe(e);this._buffer.copy(r,0,0,this._length),this._buffer=r,this._length=e}finalize(){return this._buffer.subarray(0,this._index)}toArray(){return[...this.finalize()]}write(t,e){if(\"string\"==typeof t){const r=this.alloc(e);this._buffer.write(t,r,\"utf8\")}else{t instanceof a||(t=a.from(t));const r=this.alloc(e);t.copy(this._buffer,r,0,e)}const r=4-(e%4||4);if(r>0){const t=this.alloc(r);this._buffer.fill(0,t,this._index)}}writeInt32BE(t){const e=this.alloc(4);this._buffer.writeInt32BE(t,e)}writeUInt32BE(t){const e=this.alloc(4);this._buffer.writeUInt32BE(t,e)}writeBigInt64BE(t){const e=this.alloc(8);this._buffer.writeBigInt64BE(t,e)}writeBigUInt64BE(t){const e=this.alloc(8);this._buffer.writeBigUInt64BE(t,e)}writeFloatBE(t){const e=this.alloc(4);this._buffer.writeFloatBE(t,e)}writeDoubleBE(t){const e=this.alloc(8);this._buffer.writeDoubleBE(t,e)}static bufferChunkSize=h}var l=r(616).A;class p{toXDR(t=\"raw\"){if(!this.write)return this.constructor.toXDR(this,t);const e=new c;return this.write(this,e),y(e.finalize(),t)}fromXDR(t,e=\"raw\"){if(!this.read)return this.constructor.fromXDR(t,e);const r=new u(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}static toXDR(t,e=\"raw\"){const r=new c;return this.write(t,r),y(r.finalize(),e)}static fromXDR(t,e=\"raw\"){const r=new u(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}static validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}}class d extends p{static read(t){throw new s}static write(t,e){throw new s}static isValid(t){return!1}}class g extends p{isValid(t){return!1}}class w extends TypeError{constructor(t){super(`Invalid format ${t}, must be one of \"raw\", \"hex\", \"base64\"`)}}function y(t,e){switch(e){case\"raw\":return t;case\"hex\":return t.toString(\"hex\");case\"base64\":return t.toString(\"base64\");default:throw new w(e)}}function m(t,e){switch(e){case\"raw\":return t;case\"hex\":return l.from(t,\"hex\");case\"base64\":return l.from(t,\"base64\");default:throw new w(e)}}const b=2147483647,_=-2147483648;class B extends d{static read(t){return t.readInt32BE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");if((0|t)!==t)throw new n(\"invalid i32 value\");e.writeInt32BE(t)}static isValid(t){return\"number\"==typeof t&&(0|t)===t&&(t>=_&&t<=b)}}function E(t,e,r){if(\"bigint\"!=typeof t)throw new TypeError(\"Expected bigint 'value', got \"+typeof t);const n=e/r;if(1===n)return[t];if(r<32||r>128||2!==n&&4!==n&&8!==n)throw new TypeError(`invalid bigint (${t}) and slice size (${e} -> ${r}) combination`);const i=BigInt(r),o=new Array(n);for(let e=0;e<n;e++)o[e]=BigInt.asIntN(r,t),t>>=i;return o}function v(t,e){if(e)return[0n,(1n<<BigInt(t))-1n];const r=1n<<BigInt(t-1);return[0n-r,r-1n]}B.MAX_VALUE=b,B.MIN_VALUE=2147483648;class A extends d{constructor(t){super(),this._value=function(t,e,r){t instanceof Array?t.length&&t[0]instanceof Array&&(t=t[0]):t=[t];const n=e/t.length;switch(n){case 32:case 64:case 128:case 256:break;default:throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${t}`)}try{for(let e=0;e<t.length;e++)\"bigint\"!=typeof t[e]&&(t[e]=BigInt(t[e].valueOf()))}catch(e){throw new TypeError(`expected bigint-like values, got: ${t} (${e})`)}if(r&&1===t.length&&t[0]<0n)throw new RangeError(`expected a positive value, got: ${t}`);let i=BigInt.asUintN(n,t[0]);for(let e=1;e<t.length;e++)i|=BigInt.asUintN(n,t[e])<<BigInt(e*n);r||(i=BigInt.asIntN(e,i));const[o,s]=v(e,r);if(i>=o&&i<=s)return i;throw new TypeError(`bigint values [${t}] for ${function(t,e){return`${e?\"u\":\"i\"}${t}`}(e,r)} out of range [${o}, ${s}]: ${i}`)}(t,this.size,this.unsigned)}get unsigned(){throw new s}get size(){throw new s}slice(t){return E(this._value,this.size,t)}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}toBigInt(){return BigInt(this._value)}static read(t){const{size:e}=this.prototype;return 64===e?new this(t.readBigUInt64BE()):new this(...Array.from({length:e/64},(()=>t.readBigUInt64BE())).reverse())}static write(t,e){if(t instanceof this)t=t._value;else if(\"bigint\"!=typeof t||t>this.MAX_VALUE||t<this.MIN_VALUE)throw new n(`${t} is not a ${this.name}`);const{unsigned:r,size:i}=this.prototype;if(64===i)r?e.writeBigUInt64BE(t):e.writeBigInt64BE(t);else for(const n of E(t,i,64).reverse())r?e.writeBigUInt64BE(n):e.writeBigInt64BE(n)}static isValid(t){return\"bigint\"==typeof t||t instanceof this}static fromString(t){return new this(t)}static MAX_VALUE=0n;static MIN_VALUE=0n;static defineIntBoundaries(){const[t,e]=v(this.prototype.size,this.prototype.unsigned);this.MIN_VALUE=t,this.MAX_VALUE=e}}class I extends A{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get size(){return 64}get unsigned(){return!1}static fromBits(t,e){return new this(t,e)}}I.defineIntBoundaries();const x=4294967295;class U extends d{static read(t){return t.readUInt32BE()}static write(t,e){if(\"number\"!=typeof t||!(t>=0&&t<=x)||t%1!=0)throw new n(\"invalid u32 value\");e.writeUInt32BE(t)}static isValid(t){return\"number\"==typeof t&&t%1==0&&(t>=0&&t<=x)}}U.MAX_VALUE=x,U.MIN_VALUE=0;class R extends A{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get size(){return 64}get unsigned(){return!0}static fromBits(t,e){return new this(t,e)}}R.defineIntBoundaries();class T extends d{static read(t){return t.readFloatBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeFloatBE(t)}static isValid(t){return\"number\"==typeof t}}class $ extends d{static read(t){return t.readDoubleBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeDoubleBE(t)}static isValid(t){return\"number\"==typeof t}}class L extends d{static read(){throw new o(\"quadruple not supported\")}static write(){throw new o(\"quadruple not supported\")}static isValid(){return!1}}class O extends d{static read(t){const e=B.read(t);switch(e){case 0:return!1;case 1:return!0;default:throw new i(`got ${e} when trying to read a bool`)}}static write(t,e){const r=t?1:0;B.write(r,e)}static isValid(t){return\"boolean\"==typeof t}}var S=r(616).A;class N extends g{constructor(t=U.MAX_VALUE){super(),this._maxLength=t}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length String, max allowed is ${this._maxLength}`);return t.read(e)}readString(t){return this.read(t).toString(\"utf8\")}write(t,e){const r=\"string\"==typeof t?S.byteLength(t,\"utf8\"):t.length;if(r>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);U.write(r,e),e.write(t,r)}isValid(t){return\"string\"==typeof t?S.byteLength(t,\"utf8\")<=this._maxLength:!!(t instanceof Array||S.isBuffer(t))&&t.length<=this._maxLength}}var V=r(616).A;class M extends g{constructor(t){super(),this._length=t}read(t){return t.read(this._length)}write(t,e){const{length:r}=t;if(r!==this._length)throw new n(`got ${t.length} bytes, expected ${this._length}`);e.write(t,r)}isValid(t){return V.isBuffer(t)&&t.length===this._length}}var C=r(616).A;class D extends g{constructor(t=U.MAX_VALUE){super(),this._maxLength=t}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarOpaque, max allowed is ${this._maxLength}`);return t.read(e)}write(t,e){const{length:r}=t;if(t.length>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);U.write(r,e),e.write(t,r)}isValid(t){return C.isBuffer(t)&&t.length<=this._maxLength}}class j extends g{constructor(t,e){super(),this._childType=t,this._length=e}read(t){const e=new r.g.Array(this._length);for(let r=0;r<this._length;r++)e[r]=this._childType.read(t);return e}write(t,e){if(!(t instanceof r.g.Array))throw new n(\"value is not array\");if(t.length!==this._length)throw new n(`got array of size ${t.length}, expected ${this._length}`);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof r.g.Array)||t.length!==this._length)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class z extends g{constructor(t,e=U.MAX_VALUE){super(),this._childType=t,this._maxLength=e}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarArray, max allowed is ${this._maxLength}`);const r=new Array(e);for(let n=0;n<e;n++)r[n]=this._childType.read(t);return r}write(t,e){if(!(t instanceof Array))throw new n(\"value is not array\");if(t.length>this._maxLength)throw new n(`got array of size ${t.length}, max allowed is ${this._maxLength}`);U.write(t.length,e);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof Array)||t.length>this._maxLength)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class F extends d{constructor(t){super(),this._childType=t}read(t){if(O.read(t))return this._childType.read(t)}write(t,e){const r=null!=t;O.write(r,e),r&&this._childType.write(t,e)}isValid(t){return null==t||this._childType.isValid(t)}}class P extends d{static read(){}static write(t){if(void 0!==t)throw new n(\"trying to write value to a void slot\")}static isValid(t){return void 0===t}}class X extends d{constructor(t,e){super(),this.name=t,this.value=e}static read(t){const e=B.read(t),r=this._byValue[e];if(void 0===r)throw new i(`unknown ${this.enumName} member for value ${e}`);return r}static write(t,e){if(!(t instanceof this))throw new n(`unknown ${t} is not a ${this.enumName}`);B.write(t.value,e)}static isValid(t){return t instanceof this}static members(){return this._members}static values(){return Object.values(this._members)}static fromName(t){const e=this._members[t];if(!e)throw new TypeError(`${t} is not a member of ${this.enumName}`);return e}static fromValue(t){const e=this._byValue[t];if(void 0===e)throw new TypeError(`${t} is not a value of any member of ${this.enumName}`);return e}static create(t,e,r){const n=class extends X{};n.enumName=e,t.results[e]=n,n._members={},n._byValue={};for(const[t,e]of Object.entries(r)){const r=new n(t,e);n._members[t]=r,n._byValue[e]=r,n[t]=()=>r}return n}}class k extends d{resolve(){throw new o('\"resolve\" method should be implemented in the descendant class')}}class q extends d{constructor(t){super(),this._attributes=t||{}}static read(t){const e={};for(const[r,n]of this._fields)e[r]=n.read(t);return new this(e)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.structName}`);for(const[r,n]of this._fields){const i=t._attributes[r];n.write(i,e)}}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends q{};n.structName=e,t.results[e]=n;const i=new Array(r.length);for(let e=0;e<r.length;e++){const o=r[e],s=o[0];let f=o[1];f instanceof k&&(f=f.resolve(t)),i[e]=[s,f],n.prototype[s]=G(s)}return n._fields=i,n}}function G(t){return function(e){return void 0!==e&&(this._attributes[t]=e),this._attributes[t]}}class Y extends g{constructor(t,e){super(),this.set(t,e)}set(t,e){\"string\"==typeof t&&(t=this.constructor._switchOn.fromName(t)),this._switch=t;const r=this.constructor.armForSwitch(this._switch);this._arm=r,this._armType=r===P?P:this.constructor._arms[r],this._value=e}get(t=this._arm){if(this._arm!==P&&this._arm!==t)throw new TypeError(`${t} not set`);return this._value}switch(){return this._switch}arm(){return this._arm}armType(){return this._armType}value(){return this._value}static armForSwitch(t){const e=this._switches.get(t);if(void 0!==e)return e;if(this._defaultArm)return this._defaultArm;throw new TypeError(`Bad union switch: ${t}`)}static armTypeForArm(t){return t===P?P:this._arms[t]}static read(t){const e=this._switchOn.read(t),r=this.armForSwitch(e),n=r===P?P:this._arms[r];let i;return i=void 0!==n?n.read(t):r.read(t),new this(e,i)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.unionName}`);this._switchOn.write(t.switch(),e),t.armType().write(t.value(),e)}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends Y{};n.unionName=e,t.results[e]=n,r.switchOn instanceof k?n._switchOn=r.switchOn.resolve(t):n._switchOn=r.switchOn,n._switches=new Map,n._arms={};let i=r.defaultArm;i instanceof k&&(i=i.resolve(t)),n._defaultArm=i;for(const[t,e]of r.switches){const r=\"string\"==typeof t?n._switchOn.fromName(t):t;n._switches.set(r,e)}if(void 0!==n._switchOn.values)for(const t of n._switchOn.values())n[t.name]=function(e){return new n(t,e)},n.prototype[t.name]=function(e){return this.set(t,e)};if(r.arms)for(const[e,i]of Object.entries(r.arms))n._arms[e]=i instanceof k?i.resolve(t):i,i!==P&&(n.prototype[e]=function(){return this.get(e)});return n}}class W extends k{constructor(t){super(),this.name=t}resolve(t){return t.definitions[this.name].resolve(t)}}class H extends k{constructor(t,e,r=!1){super(),this.childReference=t,this.length=e,this.variable=r}resolve(t){let e=this.childReference,r=this.length;return e instanceof k&&(e=e.resolve(t)),r instanceof k&&(r=r.resolve(t)),this.variable?new z(e,r):new j(e,r)}}class J extends k{constructor(t){super(),this.childReference=t,this.name=t.name}resolve(t){let e=this.childReference;return e instanceof k&&(e=e.resolve(t)),new F(e)}}class Q extends k{constructor(t,e){super(),this.sizedType=t,this.length=e}resolve(t){let e=this.length;return e instanceof k&&(e=e.resolve(t)),new this.sizedType(e)}}class Z{constructor(t,e,r){this.constructor=t,this.name=e,this.config=r}resolve(t){return this.name in t.results?t.results[this.name]:this.constructor(t,this.name,this.config)}}function K(t,e,r){return r instanceof k&&(r=r.resolve(t)),t.results[e]=r,r}function tt(t,e,r){return t.results[e]=r,r}class et{constructor(t){this._destination=t,this._definitions={}}enum(t,e){const r=new Z(X.create,t,e);this.define(t,r)}struct(t,e){const r=new Z(q.create,t,e);this.define(t,r)}union(t,e){const r=new Z(Y.create,t,e);this.define(t,r)}typedef(t,e){const r=new Z(K,t,e);this.define(t,r)}const(t,e){const r=new Z(tt,t,e);this.define(t,r)}void(){return P}bool(){return O}int(){return B}hyper(){return I}uint(){return U}uhyper(){return R}float(){return T}double(){return $}quadruple(){return L}string(t){return new Q(N,t)}opaque(t){return new Q(M,t)}varOpaque(t){return new Q(D,t)}array(t,e){return new H(t,e)}varArray(t,e){return new H(t,e,!0)}option(t){return new J(t)}define(t,e){if(void 0!==this._destination[t])throw new o(`${t} is already defined`);this._definitions[t]=e}lookup(t){return new W(t)}resolve(){for(const t of Object.values(this._definitions))t.resolve({definitions:this._definitions,results:this._destination})}}function rt(t,e={}){if(t){const r=new et(e);t(r),r.resolve()}return e}},526:(t,e)=>{\"use strict\";e.byteLength=function(t){var e=f(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,o=f(t),s=o[0],u=o[1],a=new i(function(t,e,r){return 3*(e+r)/4-r}(0,s,u)),h=0,c=u>0?s-4:s;for(r=0;r<c;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;2===u&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,a[h++]=255&e);1===u&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e);return a},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],s=16383,f=0,a=n-i;f<a;f+=s)o.push(u(t,f,f+s>a?a:f+s));1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+\"==\")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\"=\"));return o.join(\"\")};for(var r=[],n=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0;s<64;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function f(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function u(t,e,n){for(var i,o,s=[],f=e;f<n;f+=3)i=(t[f]<<16&16711680)+(t[f+1]<<8&65280)+(255&t[f+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},287:(t,e,r)=>{\"use strict\";const n=r(526),i=r(251),o=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;e.hp=u,e.IS=50;const s=2147483647;function f(t){if(t>s)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new TypeError('The \"string\" argument must be of type string. Received type number');return c(t)}return a(t,e,r)}function a(t,e,r){if(\"string\"==typeof t)return function(t,e){\"string\"==typeof e&&\"\"!==e||(e=\"utf8\");if(!u.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);const r=0|g(t,e);let n=f(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(H(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return l(t)}(t);if(null==t)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t);if(H(t,ArrayBuffer)||t&&H(t.buffer,ArrayBuffer))return p(t,e,r);if(\"undefined\"!=typeof SharedArrayBuffer&&(H(t,SharedArrayBuffer)||t&&H(t.buffer,SharedArrayBuffer)))return p(t,e,r);if(\"number\"==typeof t)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return u.from(n,e,r);const i=function(t){if(u.isBuffer(t)){const e=0|d(t.length),r=f(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return\"number\"!=typeof t.length||J(t.length)?f(0):l(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return l(t.data)}(t);if(i)return i;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive](\"string\"),e,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t)}function h(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be of type number');if(t<0)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"')}function c(t){return h(t),f(t<0?0:0|d(t))}function l(t){const e=t.length<0?0:0|d(t.length),r=f(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function p(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('\"offset\" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,u.prototype),n}function d(t){if(t>=s)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s.toString(16)+\" bytes\");return 0|t}function g(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||H(t,ArrayBuffer))return t.byteLength;if(\"string\"!=typeof t)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return G(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return Y(t).length;default:if(i)return n?-1:G(t).length;e=(\"\"+e).toLowerCase(),i=!0}}function w(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return $(this,e,r);case\"utf8\":case\"utf-8\":return x(this,e,r);case\"ascii\":return R(this,e,r);case\"latin1\":case\"binary\":return T(this,e,r);case\"base64\":return I(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return L(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function y(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),J(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,r,n,i){let o,s=1,f=t.length,u=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;s=2,f/=2,u/=2,r/=2}function a(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){let n=-1;for(o=r;o<f;o++)if(a(t,o)===a(e,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===u)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+u>f&&(r=f-u),o=r;o>=0;o--){let r=!0;for(let n=0;n<u;n++)if(a(t,o+n)!==a(e,n)){r=!1;break}if(r)return o}return-1}function _(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=e.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(J(n))return s;t[r+s]=n}return s}function B(t,e,r,n){return W(G(e,t.length-r),t,r,n)}function E(t,e,r,n){return W(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function v(t,e,r,n){return W(Y(e),t,r,n)}function A(t,e,r,n){return W(function(t,e){let r,n,i;const o=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let o=null,s=e>239?4:e>223?3:e>191?2:1;if(i+s<=r){let r,n,f,u;switch(s){case 1:e<128&&(o=e);break;case 2:r=t[i+1],128==(192&r)&&(u=(31&e)<<6|63&r,u>127&&(o=u));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(u=(15&e)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(o=u));break;case 4:r=t[i+1],n=t[i+2],f=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&f)&&(u=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&f,u>65535&&u<1114112&&(o=u))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(t){const e=t.length;if(e<=U)return String.fromCharCode.apply(String,t);let r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=U));return r}(n)}u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(u.prototype,\"parent\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\"offset\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return a(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return h(t),t<=0?f(t):void 0!==e?\"string\"==typeof r?f(t).fill(e,r):f(t).fill(e):f(t)}(t,e,r)},u.allocUnsafe=function(t){return c(t)},u.allocUnsafeSlow=function(t){return c(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(H(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),H(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=u.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(H(e,Uint8Array))i+e.length>n.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!u.isBuffer(e))throw new TypeError('\"list\" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},u.byteLength=g,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let e=0;e<t;e+=2)y(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?\"\":0===arguments.length?x(this,0,t):w.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t=\"\";const r=e.IS;return t=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(t+=\" ... \"),\"<Buffer \"+t+\">\"},o&&(u.prototype[o]=u.prototype.inspect),u.prototype.compare=function(t,e,r,n,i){if(H(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const f=Math.min(o,s),a=this.slice(n,i),h=t.slice(e,r);for(let t=0;t<f;++t)if(a[t]!==h[t]){o=a[t],s=h[t];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let o=!1;for(;;)switch(n){case\"hex\":return _(this,t,e,r);case\"utf8\":case\"utf-8\":return B(this,t,e,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,t,e,r);case\"base64\":return v(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return A(this,t,e,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const U=4096;function R(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function T(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function $(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i=\"\";for(let n=e;n<r;++n)i+=Q[t[n]];return i}function L(t,e,r){const n=t.slice(e,r);let i=\"\";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function O(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function S(t,e,r,n,i,o){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function N(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function V(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r+7]=o,o>>=8,t[r+6]=o,o>>=8,t[r+5]=o,o>>=8,t[r+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function M(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function C(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function D(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),u.prototype.readBigUInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=e,i=1,o=this[t+--n];for(;n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},u.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=Z((function(t,e=0){return N(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeBigUInt64BE=Z((function(t,e=0){return V(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=0,o=1,s=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=Z((function(t,e=0){return N(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeBigInt64BE=Z((function(t,e=0){return V(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeFloatLE=function(t,e,r){return C(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return C(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return D(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return D(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(!u.isBuffer(t))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},u.prototype.fill=function(t,e,r,n){if(\"string\"==typeof t){if(\"string\"==typeof e?(n=e,e=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===t.length){const e=t.charCodeAt(0);(\"utf8\"===n&&e<128||\"latin1\"===n)&&(t=e)}}else\"number\"==typeof t?t&=255:\"boolean\"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const o=u.isBuffer(t)?t:u.from(t,n),s=o.length;if(0===s)throw new TypeError('The value \"'+t+'\" is invalid for argument \"value\"');for(i=0;i<r-e;++i)this[i+e]=o[i%s]}return this};const j={};function z(t,e,r){j[t]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function F(t){let e=\"\",r=t.length;const n=\"-\"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function P(t,e,r,n,i,o){if(t>r||t<e){const n=\"bigint\"==typeof e?\"n\":\"\";let i;throw i=o>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new j.ERR_OUT_OF_RANGE(\"value\",i,t)}!function(t,e,r){X(e,\"offset\"),void 0!==t[e]&&void 0!==t[e+r]||k(e,t.length-(r+1))}(n,i,o)}function X(t,e){if(\"number\"!=typeof t)throw new j.ERR_INVALID_ARG_TYPE(e,\"number\",t)}function k(t,e,r){if(Math.floor(t)!==t)throw X(t,r),new j.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",t);if(e<0)throw new j.ERR_BUFFER_OUT_OF_BOUNDS;throw new j.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${e}`,t)}z(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(t){return t?`${t} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),z(\"ERR_INVALID_ARG_TYPE\",(function(t,e){return`The \"${t}\" argument must be of type number. Received type ${typeof e}`}),TypeError),z(\"ERR_OUT_OF_RANGE\",(function(t,e,r){let n=`The value of \"${t}\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=F(String(r)):\"bigint\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=F(i)),i+=\"n\"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const q=/[^+/0-9A-Za-z-_]/g;function G(t,e){let r;e=e||1/0;const n=t.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function Y(t){return n.toByteArray(function(t){if((t=(t=t.split(\"=\")[0]).trim().replace(q,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function W(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function H(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function J(t){return t!=t}const Q=function(){const t=\"0123456789abcdef\",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Z(t){return\"undefined\"==typeof BigInt?K:t}function K(){throw new Error(\"BigInt not supported\")}},251:(t,e)=>{e.read=function(t,e,r,n,i){var o,s,f=8*i-n-1,u=(1<<f)-1,a=u>>1,h=-7,c=r?i-1:0,l=r?-1:1,p=t[e+c];for(c+=l,o=p&(1<<-h)-1,p>>=-h,h+=f;h>0;o=256*o+t[e+c],c+=l,h-=8);for(s=o&(1<<-h)-1,o>>=-h,h+=n;h>0;s=256*s+t[e+c],c+=l,h-=8);if(0===o)o=1-a;else{if(o===u)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,n),o-=a}return(p?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,f,u,a=8*o-i-1,h=(1<<a)-1,c=h>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,d=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(f=isNaN(e)?1:0,s=h):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+c>=1?l/u:l*Math.pow(2,1-c))*u>=2&&(s++,u/=2),s+c>=h?(f=0,s=h):s+c>=1?(f=(e*u-1)*Math.pow(2,i),s+=c):(f=e*Math.pow(2,c-1)*Math.pow(2,i),s=0));i>=8;t[r+p]=255&f,p+=d,f/=256,i-=8);for(s=s<<i|f,a+=i;a>0;t[r+p]=255&s,p+=d,s/=256,a-=8);t[r+p-d]|=128*g}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}return r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r(281)})()));\n//# sourceMappingURL=xdr.js.map","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","// See https://github.com/stellar/js-xdr/issues/117\r\nimport { Buffer } from 'buffer';\r\n\r\nif (!(Buffer.alloc(1).subarray(0, 1) instanceof Buffer)) {\r\n  Buffer.prototype.subarray = function subarray(start, end) {\r\n    const result = Uint8Array.prototype.subarray.call(this, start, end);\r\n    Object.setPrototypeOf(result, Buffer.prototype);\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default Buffer;\r\n","import BigNumber from './util/bignumber';\r\n\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Create a new Account object.\r\n *\r\n * `Account` represents a single account in the Stellar network and its sequence\r\n * number. Account tracks the sequence number as it is used by {@link\r\n * TransactionBuilder}. See\r\n * [Accounts](https://developers.stellar.org/docs/glossary/accounts/) for\r\n * more information about how accounts work in Stellar.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} accountId - ID of the account (ex.\r\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\r\n *     provide a muxed account address, this will throw; use {@link\r\n *     MuxedAccount} instead.\r\n * @param {string} sequence  - current sequence number of the account\r\n */\r\nexport class Account {\r\n  constructor(accountId, sequence) {\r\n    if (StrKey.isValidMed25519PublicKey(accountId)) {\r\n      throw new Error('accountId is an M-address; use MuxedAccount instead');\r\n    }\r\n\r\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\r\n      throw new Error('accountId is invalid');\r\n    }\r\n    if (!(typeof sequence === 'string')) {\r\n      throw new Error('sequence must be of type string');\r\n    }\r\n\r\n    this._accountId = accountId;\r\n    this.sequence = new BigNumber(sequence);\r\n  }\r\n\r\n  /**\r\n   * Returns Stellar account ID, ex.\r\n   * `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`.\r\n   * @returns {string}\r\n   */\r\n  accountId() {\r\n    return this._accountId;\r\n  }\r\n\r\n  /**\r\n   * @returns {string}  sequence number for the account as a string\r\n   */\r\n  sequenceNumber() {\r\n    return this.sequence.toString();\r\n  }\r\n\r\n  /**\r\n   * Increments sequence number in this object by one.\r\n   * @returns {void}\r\n   */\r\n  incrementSequenceNumber() {\r\n    this.sequence = this.sequence.plus(1);\r\n  }\r\n}\r\n","import { StrKey } from './strkey';\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * Create a new Address object.\r\n *\r\n * `Address` represents a single address in the Stellar network. An address can\r\n * represent an account or a contract.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} address - ID of the account (ex.\r\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\r\n *     provide a muxed account address, this will throw; use {@link\r\n *     MuxedAccount} instead.\r\n */\r\nexport class Address {\r\n  constructor(address) {\r\n    if (StrKey.isValidEd25519PublicKey(address)) {\r\n      this._type = 'account';\r\n      this._key = StrKey.decodeEd25519PublicKey(address);\r\n    } else if (StrKey.isValidContract(address)) {\r\n      this._type = 'contract';\r\n      this._key = StrKey.decodeContract(address);\r\n    } else {\r\n      throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses a string and returns an Address object.\r\n   *\r\n   * @param {string} address - The address to parse. ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`\r\n   * @returns {Address}\r\n   */\r\n  static fromString(address) {\r\n    return new Address(address);\r\n  }\r\n\r\n  /**\r\n   * Creates a new account Address object from a buffer of raw bytes.\r\n   *\r\n   * @param {Buffer} buffer - The bytes of an address to parse.\r\n   * @returns {Address}\r\n   */\r\n  static account(buffer) {\r\n    return new Address(StrKey.encodeEd25519PublicKey(buffer));\r\n  }\r\n\r\n  /**\r\n   * Creates a new contract Address object from a buffer of raw bytes.\r\n   *\r\n   * @param {Buffer} buffer - The bytes of an address to parse.\r\n   * @returns {Address}\r\n   */\r\n  static contract(buffer) {\r\n    return new Address(StrKey.encodeContract(buffer));\r\n  }\r\n\r\n  /**\r\n   * Convert this from an xdr.ScVal type\r\n   *\r\n   * @param {xdr.ScVal} scVal - The xdr.ScVal type to parse\r\n   * @returns {Address}\r\n   */\r\n  static fromScVal(scVal) {\r\n    return Address.fromScAddress(scVal.address());\r\n  }\r\n\r\n  /**\r\n   * Convert this from an xdr.ScAddress type\r\n   *\r\n   * @param {xdr.ScAddress} scAddress - The xdr.ScAddress type to parse\r\n   * @returns {Address}\r\n   */\r\n  static fromScAddress(scAddress) {\r\n    switch (scAddress.switch()) {\r\n      case xdr.ScAddressType.scAddressTypeAccount():\r\n        return Address.account(scAddress.accountId().ed25519());\r\n      case xdr.ScAddressType.scAddressTypeContract():\r\n        return Address.contract(scAddress.contractId());\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serialize an address to string.\r\n   *\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    switch (this._type) {\r\n      case 'account':\r\n        return StrKey.encodeEd25519PublicKey(this._key);\r\n      case 'contract':\r\n        return StrKey.encodeContract(this._key);\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert this Address to an xdr.ScVal type.\r\n   *\r\n   * @returns {xdr.ScVal}\r\n   */\r\n  toScVal() {\r\n    return xdr.ScVal.scvAddress(this.toScAddress());\r\n  }\r\n\r\n  /**\r\n   * Convert this Address to an xdr.ScAddress type.\r\n   *\r\n   * @returns {xdr.ScAddress}\r\n   */\r\n  toScAddress() {\r\n    switch (this._type) {\r\n      case 'account':\r\n        return xdr.ScAddress.scAddressTypeAccount(\r\n          xdr.PublicKey.publicKeyTypeEd25519(this._key)\r\n        );\r\n      case 'contract':\r\n        return xdr.ScAddress.scAddressTypeContract(this._key);\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the raw public key bytes for this address.\r\n   *\r\n   * @returns {Buffer}\r\n   */\r\n  toBuffer() {\r\n    return this._key;\r\n  }\r\n}\r\n","import { trimEnd } from './util/util';\r\nimport xdr from './xdr';\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\nimport { hash } from './hashing';\r\n\r\n/**\r\n * Asset class represents an asset, either the native asset (`XLM`)\r\n * or an asset code / issuer account ID pair.\r\n *\r\n * An asset code describes an asset code and issuer pair. In the case of the native\r\n * asset XLM, the issuer will be null.\r\n *\r\n * @constructor\r\n * @param {string} code - The asset code.\r\n * @param {string} issuer - The account ID of the issuer.\r\n */\r\nexport class Asset {\r\n  constructor(code, issuer) {\r\n    if (!/^[a-zA-Z0-9]{1,12}$/.test(code)) {\r\n      throw new Error(\r\n        'Asset code is invalid (maximum alphanumeric, 12 characters at max)'\r\n      );\r\n    }\r\n    if (String(code).toLowerCase() !== 'xlm' && !issuer) {\r\n      throw new Error('Issuer cannot be null');\r\n    }\r\n    if (issuer && !StrKey.isValidEd25519PublicKey(issuer)) {\r\n      throw new Error('Issuer is invalid');\r\n    }\r\n\r\n    if (String(code).toLowerCase() === 'xlm') {\r\n      // transform all xLM, Xlm, etc. variants -> XLM\r\n      this.code = 'XLM';\r\n    } else {\r\n      this.code = code;\r\n    }\r\n\r\n    this.issuer = issuer;\r\n  }\r\n\r\n  /**\r\n   * Returns an asset object for the native asset.\r\n   * @Return {Asset}\r\n   */\r\n  static native() {\r\n    return new Asset('XLM');\r\n  }\r\n\r\n  /**\r\n   * Returns an asset object from its XDR object representation.\r\n   * @param {xdr.Asset} assetXdr - The asset xdr object.\r\n   * @returns {Asset}\r\n   */\r\n  static fromOperation(assetXdr) {\r\n    let anum;\r\n    let code;\r\n    let issuer;\r\n    switch (assetXdr.switch()) {\r\n      case xdr.AssetType.assetTypeNative():\r\n        return this.native();\r\n      case xdr.AssetType.assetTypeCreditAlphanum4():\r\n        anum = assetXdr.alphaNum4();\r\n      /* falls through */\r\n      case xdr.AssetType.assetTypeCreditAlphanum12():\r\n        anum = anum || assetXdr.alphaNum12();\r\n        issuer = StrKey.encodeEd25519PublicKey(anum.issuer().ed25519());\r\n        code = trimEnd(anum.assetCode(), '\\0');\r\n        return new this(code, issuer);\r\n      default:\r\n        throw new Error(`Invalid asset type: ${assetXdr.switch().name}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.Asset object for this asset.\r\n   * @returns {xdr.Asset} XDR asset object\r\n   */\r\n  toXDRObject() {\r\n    return this._toXDRObject(xdr.Asset);\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.ChangeTrustAsset object for this asset.\r\n   * @returns {xdr.ChangeTrustAsset} XDR asset object\r\n   */\r\n  toChangeTrustXDRObject() {\r\n    return this._toXDRObject(xdr.ChangeTrustAsset);\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.TrustLineAsset object for this asset.\r\n   * @returns {xdr.TrustLineAsset} XDR asset object\r\n   */\r\n  toTrustLineXDRObject() {\r\n    return this._toXDRObject(xdr.TrustLineAsset);\r\n  }\r\n\r\n  /**\r\n   * Returns the would-be contract ID (`C...` format) for this asset on a given\r\n   * network.\r\n   *\r\n   * @param {string}    networkPassphrase   indicates which network the contract\r\n   *    ID should refer to, since every network will have a unique ID for the\r\n   *    same contract (see {@link Networks} for options)\r\n   *\r\n   * @returns {string}  the strkey-encoded (`C...`) contract ID for this asset\r\n   *\r\n   * @warning This makes no guarantee that this contract actually *exists*.\r\n   */\r\n  contractId(networkPassphrase) {\r\n    const networkId = hash(Buffer.from(networkPassphrase));\r\n    const preimage = xdr.HashIdPreimage.envelopeTypeContractId(\r\n      new xdr.HashIdPreimageContractId({\r\n        networkId,\r\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\r\n          this.toXDRObject()\r\n        )\r\n      })\r\n    );\r\n\r\n    return StrKey.encodeContract(hash(preimage.toXDR()));\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr object for this asset.\r\n   * @param {xdr.Asset | xdr.ChangeTrustAsset} xdrAsset - The asset xdr object.\r\n   * @returns {xdr.Asset | xdr.ChangeTrustAsset | xdr.TrustLineAsset} XDR Asset object\r\n   */\r\n  _toXDRObject(xdrAsset = xdr.Asset) {\r\n    if (this.isNative()) {\r\n      return xdrAsset.assetTypeNative();\r\n    }\r\n\r\n    let xdrType;\r\n    let xdrTypeString;\r\n    if (this.code.length <= 4) {\r\n      xdrType = xdr.AlphaNum4;\r\n      xdrTypeString = 'assetTypeCreditAlphanum4';\r\n    } else {\r\n      xdrType = xdr.AlphaNum12;\r\n      xdrTypeString = 'assetTypeCreditAlphanum12';\r\n    }\r\n\r\n    // pad code with null bytes if necessary\r\n    const padLength = this.code.length <= 4 ? 4 : 12;\r\n    const paddedCode = this.code.padEnd(padLength, '\\0');\r\n\r\n    // eslint-disable-next-line new-cap\r\n    const assetType = new xdrType({\r\n      assetCode: paddedCode,\r\n      issuer: Keypair.fromPublicKey(this.issuer).xdrAccountId()\r\n    });\r\n\r\n    return new xdrAsset(xdrTypeString, assetType);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Asset code\r\n   */\r\n  getCode() {\r\n    if (this.code === undefined) {\r\n      return undefined;\r\n    }\r\n    return String(this.code);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Asset issuer\r\n   */\r\n  getIssuer() {\r\n    if (this.issuer === undefined) {\r\n      return undefined;\r\n    }\r\n    return String(this.issuer);\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {string} Asset type. Can be one of following types:\r\n   *\r\n   *  - `native`,\r\n   *  - `credit_alphanum4`,\r\n   *  - `credit_alphanum12`, or\r\n   *  - `unknown` as the error case (which should never occur)\r\n   */\r\n  getAssetType() {\r\n    switch (this.getRawAssetType()) {\r\n      case xdr.AssetType.assetTypeNative():\r\n        return 'native';\r\n      case xdr.AssetType.assetTypeCreditAlphanum4():\r\n        return 'credit_alphanum4';\r\n      case xdr.AssetType.assetTypeCreditAlphanum12():\r\n        return 'credit_alphanum12';\r\n      default:\r\n        return 'unknown';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.AssetType}  the raw XDR representation of the asset type\r\n   */\r\n  getRawAssetType() {\r\n    if (this.isNative()) {\r\n      return xdr.AssetType.assetTypeNative();\r\n    }\r\n\r\n    if (this.code.length <= 4) {\r\n      return xdr.AssetType.assetTypeCreditAlphanum4();\r\n    }\r\n\r\n    return xdr.AssetType.assetTypeCreditAlphanum12();\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}  true if this asset object is the native asset.\r\n   */\r\n  isNative() {\r\n    return !this.issuer;\r\n  }\r\n\r\n  /**\r\n   * @param {Asset} asset Asset to compare\r\n   * @returns {boolean} true if this asset equals the given asset.\r\n   */\r\n  equals(asset) {\r\n    return this.code === asset.getCode() && this.issuer === asset.getIssuer();\r\n  }\r\n\r\n  toString() {\r\n    if (this.isNative()) {\r\n      return 'native';\r\n    }\r\n\r\n    return `${this.getCode()}:${this.getIssuer()}`;\r\n  }\r\n\r\n  /**\r\n   * Compares two assets according to the criteria:\r\n   *\r\n   *  1. First compare the type (native < alphanum4 < alphanum12).\r\n   *  2. If the types are equal, compare the assets codes.\r\n   *  3. If the asset codes are equal, compare the issuers.\r\n   *\r\n   * @param   {Asset} assetA - the first asset\r\n   * @param   {Asset} assetB - the second asset\r\n   * @returns {number} `-1` if assetA < assetB, `0` if assetA == assetB, `1` if assetA > assetB.\r\n   *\r\n   * @static\r\n   * @memberof Asset\r\n   */\r\n  static compare(assetA, assetB) {\r\n    if (!assetA || !(assetA instanceof Asset)) {\r\n      throw new Error('assetA is invalid');\r\n    }\r\n    if (!assetB || !(assetB instanceof Asset)) {\r\n      throw new Error('assetB is invalid');\r\n    }\r\n\r\n    if (assetA.equals(assetB)) {\r\n      return 0;\r\n    }\r\n\r\n    // Compare asset types.\r\n    const xdrAtype = assetA.getRawAssetType().value;\r\n    const xdrBtype = assetB.getRawAssetType().value;\r\n    if (xdrAtype !== xdrBtype) {\r\n      return xdrAtype < xdrBtype ? -1 : 1;\r\n    }\r\n\r\n    // Compare asset codes.\r\n    const result = asciiCompare(assetA.getCode(), assetB.getCode());\r\n    if (result !== 0) {\r\n      return result;\r\n    }\r\n\r\n    // Compare asset issuers.\r\n    return asciiCompare(assetA.getIssuer(), assetB.getIssuer());\r\n  }\r\n}\r\n\r\n/**\r\n * Compares two ASCII strings in lexographic order with uppercase precedence.\r\n *\r\n * @param   {string} a - the first string to compare\r\n * @param   {string} b - the second\r\n * @returns {number} like all `compare()`s:\r\n *     -1 if `a < b`, 0 if `a == b`, and 1 if `a > b`\r\n *\r\n * @warning No type-checks are done on the parameters\r\n */\r\nfunction asciiCompare(a, b) {\r\n  return Buffer.compare(Buffer.from(a, 'ascii'), Buffer.from(b, 'ascii'));\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\nimport { Networks } from './network';\r\nimport { hash } from './hashing';\r\n\r\nimport { Address } from './address';\r\nimport { nativeToScVal } from './scval';\r\n\r\n/**\r\n * @async\r\n * @callback SigningCallback A callback for signing an XDR structure\r\n * representing all of the details necessary to authorize an invocation tree.\r\n *\r\n * @param {xdr.HashIdPreimage} preimage   the entire authorization envelope\r\n *    whose hash you should sign, so that you can inspect the entire structure\r\n *    if necessary (rather than blindly signing a hash)\r\n *\r\n * @returns {Promise<Uint8Array>}   the signature of the raw payload (which is\r\n *    the sha256 hash of the preimage bytes, so `hash(preimage.toXDR())`) signed\r\n *    by the key corresponding to the public key in the entry you pass to\r\n *    {@link authorizeEntry} (decipherable from its\r\n *    `credentials().address().address()`)\r\n */\r\n\r\n/**\r\n * Actually authorizes an existing authorization entry using the given the\r\n * credentials and expiration details, returning a signed copy.\r\n *\r\n * This \"fills out\" the authorization entry with a signature, indicating to the\r\n * {@link Operation.invokeHostFunction} its attached to that:\r\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\r\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\r\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\r\n *   - on a particular network (uniquely identified by its passphrase, see\r\n *     {@link Networks})\r\n *   - until a particular ledger sequence is reached.\r\n *\r\n * This one lets you pass a either a {@link Keypair} (or, more accurately,\r\n * anything with a `sign(Buffer): Buffer` method) or a callback function (see\r\n * {@link SigningCallback}) to handle signing the envelope hash.\r\n *\r\n * @param {xdr.SorobanAuthorizationEntry} entry   an unsigned authorization entr\r\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\r\n *    or a function which takes a payload (a\r\n *    {@link xdr.HashIdPreimageSorobanAuthorization} instance) input and returns\r\n *    the signature of the hash of the raw payload bytes (where the signing key\r\n *    should correspond to the address in the `entry`)\r\n * @param {number} validUntilLedgerSeq   the (exclusive) future ledger sequence\r\n *    number until which this authorization entry should be valid (if\r\n *    `currentLedgerSeq==validUntil`, this is expired))\r\n * @param {string} [networkPassphrase]  the network passphrase is incorprated\r\n *    into the signature (see {@link Networks} for options)\r\n *\r\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\r\n *    authorization entry that you can pass along to\r\n *    {@link Operation.invokeHostFunction}\r\n *\r\n * @see authorizeInvocation\r\n * @example\r\n * import {\r\n *   SorobanRpc,\r\n *   Transaction,\r\n *   Networks,\r\n *   authorizeEntry\r\n * } from '@stellar/stellar-sdk';\r\n *\r\n * // Assume signPayloadCallback is a well-formed signing callback.\r\n * //\r\n * // It might, for example, pop up a modal from a browser extension, send the\r\n * // transaction to a third-party service for signing, or just do simple\r\n * // signing via Keypair like it does here:\r\n * function signPayloadCallback(payload) {\r\n *    return signer.sign(hash(payload.toXDR());\r\n * }\r\n *\r\n * function multiPartyAuth(\r\n *    server: SorobanRpc.Server,\r\n *    // assume this involves multi-party auth\r\n *    tx: Transaction,\r\n * ) {\r\n *    return server\r\n *      .simulateTransaction(tx)\r\n *      .then((simResult) => {\r\n *          tx.operations[0].auth.map(entry =>\r\n *            authorizeEntry(\r\n *              entry,\r\n *              signPayloadCallback,\r\n *              currentLedger + 1000,\r\n *              Networks.TESTNET);\r\n *          ));\r\n *\r\n *          return server.prepareTransaction(tx, simResult);\r\n *      })\r\n *      .then((preppedTx) => {\r\n *        preppedTx.sign(source);\r\n *        return server.sendTransaction(preppedTx);\r\n *      });\r\n * }\r\n */\r\nexport async function authorizeEntry(\r\n  entry,\r\n  signer,\r\n  validUntilLedgerSeq,\r\n  networkPassphrase = Networks.FUTURENET\r\n) {\r\n  // no-op if it's source account auth\r\n  if (\r\n    entry.credentials().switch().value !==\r\n    xdr.SorobanCredentialsType.sorobanCredentialsAddress().value\r\n  ) {\r\n    return entry;\r\n  }\r\n\r\n  const clone = xdr.SorobanAuthorizationEntry.fromXDR(entry.toXDR());\r\n\r\n  /** @type {xdr.SorobanAddressCredentials} */\r\n  const addrAuth = clone.credentials().address();\r\n  addrAuth.signatureExpirationLedger(validUntilLedgerSeq);\r\n\r\n  const networkId = hash(Buffer.from(networkPassphrase));\r\n  const preimage = xdr.HashIdPreimage.envelopeTypeSorobanAuthorization(\r\n    new xdr.HashIdPreimageSorobanAuthorization({\r\n      networkId,\r\n      nonce: addrAuth.nonce(),\r\n      invocation: clone.rootInvocation(),\r\n      signatureExpirationLedger: addrAuth.signatureExpirationLedger()\r\n    })\r\n  );\r\n  const payload = hash(preimage.toXDR());\r\n\r\n  let signature;\r\n  if (typeof signer === 'function') {\r\n    signature = Buffer.from(await signer(preimage));\r\n  } else {\r\n    signature = Buffer.from(signer.sign(payload));\r\n  }\r\n  const publicKey = Address.fromScAddress(addrAuth.address()).toString();\r\n\r\n  if (!Keypair.fromPublicKey(publicKey).verify(payload, signature)) {\r\n    throw new Error(`signature doesn't match payload`);\r\n  }\r\n\r\n  // This structure is defined here:\r\n  // https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#stellar-account-signatures\r\n  //\r\n  // Encoding a contract structure as an ScVal means the map keys are supposed\r\n  // to be symbols, hence the forced typing here.\r\n  const sigScVal = nativeToScVal(\r\n    {\r\n      public_key: StrKey.decodeEd25519PublicKey(publicKey),\r\n      signature\r\n    },\r\n    {\r\n      type: {\r\n        public_key: ['symbol', null],\r\n        signature: ['symbol', null]\r\n      }\r\n    }\r\n  );\r\n\r\n  addrAuth.signature(xdr.ScVal.scvVec([sigScVal]));\r\n  return clone;\r\n}\r\n\r\n/**\r\n * This builds an entry from scratch, allowing you to express authorization as a\r\n * function of:\r\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\r\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\r\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\r\n *   - on a particular network (uniquely identified by its passphrase, see\r\n *     {@link Networks})\r\n *   - until a particular ledger sequence is reached.\r\n *\r\n * This is in contrast to {@link authorizeEntry}, which signs an existing entry.\r\n *\r\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\r\n *    (or anything with a `.sign(buf): Buffer-like` method) or a function which\r\n *    takes a payload (a {@link xdr.HashIdPreimageSorobanAuthorization}\r\n *    instance) input and returns the signature of the hash of the raw payload\r\n *    bytes (where the signing key should correspond to the address in the\r\n *    `entry`)\r\n * @param {number}  validUntilLedgerSeq  the (exclusive) future ledger sequence\r\n *    number until which this authorization entry should be valid (if\r\n *    `currentLedgerSeq==validUntilLedgerSeq`, this is expired))\r\n * @param {xdr.SorobanAuthorizedInvocation} invocation the invocation tree that\r\n *    we're authorizing (likely, this comes from transaction simulation)\r\n * @param {string}  [publicKey]   the public identity of the signer (when\r\n *    providing a {@link Keypair} to `signer`, this can be omitted, as it just\r\n *    uses {@link Keypair.publicKey})\r\n * @param {string}  [networkPassphrase]   the network passphrase is incorprated\r\n *    into the signature (see {@link Networks} for options, default:\r\n *    {@link Networks.FUTURENET})\r\n *\r\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\r\n *    authorization entry that you can pass along to\r\n *    {@link Operation.invokeHostFunction}\r\n *\r\n * @see authorizeEntry\r\n */\r\nexport function authorizeInvocation(\r\n  signer,\r\n  validUntilLedgerSeq,\r\n  invocation,\r\n  publicKey = '',\r\n  networkPassphrase = Networks.FUTURENET\r\n) {\r\n  // We use keypairs as a source of randomness for the nonce to avoid mucking\r\n  // with any crypto dependencies. Note that this just has to be random and\r\n  // unique, not cryptographically secure, so it's fine.\r\n  const kp = Keypair.random().rawPublicKey();\r\n  const nonce = new xdr.Int64(bytesToInt64(kp));\r\n\r\n  const pk = publicKey || signer.publicKey();\r\n  if (!pk) {\r\n    throw new Error(`authorizeInvocation requires publicKey parameter`);\r\n  }\r\n\r\n  const entry = new xdr.SorobanAuthorizationEntry({\r\n    rootInvocation: invocation,\r\n    credentials: xdr.SorobanCredentials.sorobanCredentialsAddress(\r\n      new xdr.SorobanAddressCredentials({\r\n        address: new Address(pk).toScAddress(),\r\n        nonce,\r\n        signatureExpirationLedger: 0, // replaced\r\n        signature: xdr.ScVal.scvVec([]) // replaced\r\n      })\r\n    )\r\n  });\r\n\r\n  return authorizeEntry(entry, signer, validUntilLedgerSeq, networkPassphrase);\r\n}\r\n\r\nfunction bytesToInt64(bytes) {\r\n  // eslint-disable-next-line no-bitwise\r\n  return bytes.subarray(0, 8).reduce((accum, b) => (accum << 8) | b, 0);\r\n}\r\n","import xdr from './xdr';\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Claimant class represents an xdr.Claimant\r\n *\r\n * The claim predicate is optional, it defaults to unconditional if none is specified.\r\n *\r\n * @constructor\r\n * @param {string} destination - The destination account ID.\r\n * @param {xdr.ClaimPredicate} [predicate] - The claim predicate.\r\n */\r\nexport class Claimant {\r\n  constructor(destination, predicate) {\r\n    if (destination && !StrKey.isValidEd25519PublicKey(destination)) {\r\n      throw new Error('Destination is invalid');\r\n    }\r\n    this._destination = destination;\r\n\r\n    if (!predicate) {\r\n      this._predicate = xdr.ClaimPredicate.claimPredicateUnconditional();\r\n    } else if (predicate instanceof xdr.ClaimPredicate) {\r\n      this._predicate = predicate;\r\n    } else {\r\n      throw new Error('Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an unconditional claim predicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateUnconditional() {\r\n    return xdr.ClaimPredicate.claimPredicateUnconditional();\r\n  }\r\n\r\n  /**\r\n   * Returns an `and` claim predicate\r\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\r\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateAnd(left, right) {\r\n    if (!(left instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n    if (!(right instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateAnd([left, right]);\r\n  }\r\n\r\n  /**\r\n   * Returns an `or` claim predicate\r\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\r\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateOr(left, right) {\r\n    if (!(left instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n    if (!(right instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateOr([left, right]);\r\n  }\r\n\r\n  /**\r\n   * Returns a `not` claim predicate\r\n   * @param {xdr.ClaimPredicate} predicate an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateNot(predicate) {\r\n    if (!(predicate instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateNot(predicate);\r\n  }\r\n\r\n  /**\r\n   * Returns a `BeforeAbsoluteTime` claim predicate\r\n   *\r\n   * This predicate will be fulfilled if the closing time of the ledger that\r\n   * includes the CreateClaimableBalance operation is less than this (absolute)\r\n   * Unix timestamp (expressed in seconds).\r\n   *\r\n   * @param {string} absBefore Unix epoch (in seconds) as a string\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateBeforeAbsoluteTime(absBefore) {\r\n    return xdr.ClaimPredicate.claimPredicateBeforeAbsoluteTime(\r\n      xdr.Int64.fromString(absBefore)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns a `BeforeRelativeTime` claim predicate\r\n   *\r\n   * This predicate will be fulfilled if the closing time of the ledger that\r\n   * includes the CreateClaimableBalance operation plus this relative time delta\r\n   * (in seconds) is less than the current time.\r\n   *\r\n   * @param {strings} seconds seconds since closeTime of the ledger in which the ClaimableBalanceEntry was created (as string)\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateBeforeRelativeTime(seconds) {\r\n    return xdr.ClaimPredicate.claimPredicateBeforeRelativeTime(\r\n      xdr.Int64.fromString(seconds)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns a claimant object from its XDR object representation.\r\n   * @param {xdr.Claimant} claimantXdr - The claimant xdr object.\r\n   * @returns {Claimant}\r\n   */\r\n  static fromXDR(claimantXdr) {\r\n    let value;\r\n    switch (claimantXdr.switch()) {\r\n      case xdr.ClaimantType.claimantTypeV0():\r\n        value = claimantXdr.v0();\r\n        return new this(\r\n          StrKey.encodeEd25519PublicKey(value.destination().ed25519()),\r\n          value.predicate()\r\n        );\r\n      default:\r\n        throw new Error(`Invalid claimant type: ${claimantXdr.switch().name}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr object for this claimant.\r\n   * @returns {xdr.Claimant} XDR Claimant object\r\n   */\r\n  toXDRObject() {\r\n    const claimant = new xdr.ClaimantV0({\r\n      destination: Keypair.fromPublicKey(this._destination).xdrAccountId(),\r\n      predicate: this._predicate\r\n    });\r\n\r\n    return xdr.Claimant.claimantTypeV0(claimant);\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get destination() {\r\n    return this._destination;\r\n  }\r\n\r\n  set destination(value) {\r\n    throw new Error('Claimant is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {xdr.ClaimPredicate}\r\n   * @readonly\r\n   */\r\n  get predicate() {\r\n    return this._predicate;\r\n  }\r\n\r\n  set predicate(value) {\r\n    throw new Error('Claimant is immutable');\r\n  }\r\n}\r\n","import { Address } from './address';\r\nimport { Operation } from './operation';\r\nimport xdr from './xdr';\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Create a new Contract object.\r\n *\r\n * `Contract` represents a single contract in the Stellar network, embodying the\r\n * interface of the contract. See\r\n * [Contracts](https://soroban.stellar.org/docs/learn/interacting-with-contracts)\r\n * for more information about how contracts work in Stellar.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} contractId - ID of the contract (ex.\r\n *     `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`).\r\n */\r\nexport class Contract {\r\n  constructor(contractId) {\r\n    try {\r\n      // First, try it as a strkey\r\n      this._id = StrKey.decodeContract(contractId);\r\n    } catch (_) {\r\n      throw new Error(`Invalid contract ID: ${contractId}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns Stellar contract ID as a strkey, ex.\r\n   * `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`.\r\n   * @returns {string}\r\n   */\r\n  contractId() {\r\n    return StrKey.encodeContract(this._id);\r\n  }\r\n\r\n  /** @returns {string} the ID as a strkey (C...) */\r\n  toString() {\r\n    return this.contractId();\r\n  }\r\n\r\n  /** @returns {Address} the wrapped address of this contract */\r\n  address() {\r\n    return Address.contract(this._id);\r\n  }\r\n\r\n  /**\r\n   * Returns an operation that will invoke this contract call.\r\n   *\r\n   * @param {string}        method   name of the method to call\r\n   * @param {...xdr.ScVal}  params   arguments to pass to the function call\r\n   *\r\n   * @returns {xdr.Operation}   an InvokeHostFunctionOp operation to call the\r\n   *    contract with the given method and parameters\r\n   *\r\n   * @see Operation.invokeHostFunction\r\n   * @see Operation.invokeContractFunction\r\n   * @see Operation.createCustomContract\r\n   * @see Operation.createStellarAssetContract\r\n   * @see Operation.uploadContractWasm\r\n   */\r\n  call(method, ...params) {\r\n    return Operation.invokeContractFunction({\r\n      contract: this.address().toString(),\r\n      function: method,\r\n      args: params\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the read-only footprint entries necessary for any invocations to\r\n   * this contract, for convenience when manually adding it to your\r\n   * transaction's overall footprint or doing bump/restore operations.\r\n   *\r\n   * @returns {xdr.LedgerKey} the ledger key for the deployed contract instance\r\n   */\r\n  getFootprint() {\r\n    return xdr.LedgerKey.contractData(\r\n      new xdr.LedgerKeyContractData({\r\n        contract: this.address().toScAddress(),\r\n        key: xdr.ScVal.scvLedgerKeyContractInstance(),\r\n        durability: xdr.ContractDataDurability.persistent()\r\n      })\r\n    );\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { scValToNative } from './scval';\r\n\r\n/**\r\n * Converts raw diagnostic or contract events into something with a flatter,\r\n * human-readable, and understandable structure.\r\n *\r\n * @param {xdr.DiagnosticEvent[] | xdr.ContractEvent[]} events  either contract\r\n *    events or diagnostic events to parse into a friendly format\r\n *\r\n * @returns {SorobanEvent[]}  a list of human-readable event structures, where\r\n *    each element has the following properties:\r\n *  - type: a string of one of 'system', 'contract', 'diagnostic\r\n *  - contractId?: optionally, a `C...` encoded strkey\r\n *  - topics: a list of {@link scValToNative} invocations on the topics\r\n *  - data: similarly, a {@link scValToNative} invocation on the raw event data\r\n */\r\nexport function humanizeEvents(events) {\r\n  return events.map((e) => {\r\n    if (e instanceof xdr.DiagnosticEvent) {\r\n      return extractEvent(e.event());\r\n    }\r\n\r\n    return extractEvent(e);\r\n  });\r\n}\r\n\r\nfunction extractEvent(event) {\r\n  return {\r\n    ...(event.contractId() != null && {\r\n      contractId: StrKey.encodeContract(event.contractId())\r\n    }),\r\n    type: event.type().name,\r\n    topics: event\r\n      .body()\r\n      .value()\r\n      .topics()\r\n      .map((t) => scValToNative(t)),\r\n    data: scValToNative(event.body().value().data())\r\n  };\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\n\r\nimport { Transaction } from './transaction';\r\nimport { TransactionBase } from './transaction_base';\r\nimport { encodeMuxedAccountToAddress } from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\r\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\r\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\r\n *\r\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\r\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\r\n * submitting to the network or forwarding on to additional signers.\r\n *\r\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\r\n *     object or base64 encoded string.\r\n * @param {string} networkPassphrase - passphrase of the target Stellar network\r\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\r\n *\r\n * @extends TransactionBase\r\n */\r\nexport class FeeBumpTransaction extends TransactionBase {\r\n  constructor(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      const buffer = Buffer.from(envelope, 'base64');\r\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\r\n    }\r\n\r\n    const envelopeType = envelope.switch();\r\n    if (envelopeType !== xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\r\n      throw new Error(\r\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ${envelopeType.name}.`\r\n      );\r\n    }\r\n\r\n    const txEnvelope = envelope.value();\r\n    const tx = txEnvelope.tx();\r\n    const fee = tx.fee().toString();\r\n    // clone signatures\r\n    const signatures = (txEnvelope.signatures() || []).slice();\r\n\r\n    super(tx, signatures, fee, networkPassphrase);\r\n\r\n    const innerTxEnvelope = xdr.TransactionEnvelope.envelopeTypeTx(\r\n      tx.innerTx().v1()\r\n    );\r\n    this._feeSource = encodeMuxedAccountToAddress(this.tx.feeSource());\r\n    this._innerTransaction = new Transaction(\r\n      innerTxEnvelope,\r\n      networkPassphrase\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @type {Transaction}\r\n   * @readonly\r\n   */\r\n  get innerTransaction() {\r\n    return this._innerTransaction;\r\n  }\r\n\r\n  /**\r\n   * @type {Operation[]}\r\n   * @readonly\r\n   */\r\n  get operations() {\r\n    return this._innerTransaction.operations;\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get feeSource() {\r\n    return this._feeSource;\r\n  }\r\n\r\n  /**\r\n   * Returns the \"signature base\" of this transaction, which is the value\r\n   * that, when hashed, should be signed to create a signature that\r\n   * validators on the Stellar Network will accept.\r\n   *\r\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\r\n   * of this transaction.\r\n   * @returns {Buffer}\r\n   */\r\n  signatureBase() {\r\n    const taggedTransaction =\r\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(\r\n        this.tx\r\n      );\r\n\r\n    const txSignature = new xdr.TransactionSignaturePayload({\r\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\r\n      taggedTransaction\r\n    });\r\n\r\n    return txSignature.toXDR();\r\n  }\r\n\r\n  /**\r\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\r\n   * @returns {xdr.TransactionEnvelope}\r\n   */\r\n  toEnvelope() {\r\n    const envelope = new xdr.FeeBumpTransactionEnvelope({\r\n      tx: xdr.FeeBumpTransaction.fromXDR(this.tx.toXDR()), // make a copy of the tx\r\n      signatures: this.signatures.slice() // make a copy of the signatures\r\n    });\r\n\r\n    return new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\r\n  }\r\n}\r\n","// Automatically generated by xdrgen\r\n// DO NOT EDIT or your changes may be overwritten\r\n\r\n/* jshint maxstatements:2147483647  */\r\n/* jshint esnext:true  */\r\n\r\nimport * as XDR from '@stellar/js-xdr';\r\n\r\n\r\nvar types = XDR.config(xdr => {\r\n// Workaround for https://github.com/stellar/xdrgen/issues/152\r\n//\r\n// The \"correct\" way would be to replace bare instances of each constant with\r\n// xdr.lookup(\"...\"), but that's more error-prone.\r\nconst SCSYMBOL_LIMIT = 32;\r\nconst SC_SPEC_DOC_LIMIT = 1024;\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Value<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Value\", xdr.varOpaque());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPBallot\r\n//   {\r\n//       uint32 counter; // n\r\n//       Value value;    // x\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpBallot\", [\r\n  [\"counter\", xdr.lookup(\"Uint32\")],\r\n  [\"value\", xdr.lookup(\"Value\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCPStatementType\r\n//   {\r\n//       SCP_ST_PREPARE = 0,\r\n//       SCP_ST_CONFIRM = 1,\r\n//       SCP_ST_EXTERNALIZE = 2,\r\n//       SCP_ST_NOMINATE = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScpStatementType\", {\r\n  scpStPrepare: 0,\r\n  scpStConfirm: 1,\r\n  scpStExternalize: 2,\r\n  scpStNominate: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPNomination\r\n//   {\r\n//       Hash quorumSetHash; // D\r\n//       Value votes<>;      // X\r\n//       Value accepted<>;   // Y\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpNomination\", [\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"votes\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\r\n  [\"accepted\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementPrepare\", [\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\r\n  [\"prepared\", xdr.option(xdr.lookup(\"ScpBallot\"))],\r\n  [\"preparedPrime\", xdr.option(xdr.lookup(\"ScpBallot\"))],\r\n  [\"nC\", xdr.lookup(\"Uint32\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementConfirm\", [\r\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\r\n  [\"nPrepared\", xdr.lookup(\"Uint32\")],\r\n  [\"nCommit\", xdr.lookup(\"Uint32\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementExternalize\", [\r\n  [\"commit\", xdr.lookup(\"ScpBallot\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n  [\"commitQuorumSetHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (SCPStatementType type)\r\n//       {\r\n//       case SCP_ST_PREPARE:\r\n//           struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           } prepare;\r\n//       case SCP_ST_CONFIRM:\r\n//           struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           } confirm;\r\n//       case SCP_ST_EXTERNALIZE:\r\n//           struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           } externalize;\r\n//       case SCP_ST_NOMINATE:\r\n//           SCPNomination nominate;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScpStatementPledges\", {\r\n  switchOn: xdr.lookup(\"ScpStatementType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scpStPrepare\", \"prepare\"],\r\n    [\"scpStConfirm\", \"confirm\"],\r\n    [\"scpStExternalize\", \"externalize\"],\r\n    [\"scpStNominate\", \"nominate\"],\r\n  ],\r\n  arms: {\r\n    prepare: xdr.lookup(\"ScpStatementPrepare\"),\r\n    confirm: xdr.lookup(\"ScpStatementConfirm\"),\r\n    externalize: xdr.lookup(\"ScpStatementExternalize\"),\r\n    nominate: xdr.lookup(\"ScpNomination\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPStatement\r\n//   {\r\n//       NodeID nodeID;    // v\r\n//       uint64 slotIndex; // i\r\n//\r\n//       union switch (SCPStatementType type)\r\n//       {\r\n//       case SCP_ST_PREPARE:\r\n//           struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           } prepare;\r\n//       case SCP_ST_CONFIRM:\r\n//           struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           } confirm;\r\n//       case SCP_ST_EXTERNALIZE:\r\n//           struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           } externalize;\r\n//       case SCP_ST_NOMINATE:\r\n//           SCPNomination nominate;\r\n//       }\r\n//       pledges;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatement\", [\r\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\r\n  [\"slotIndex\", xdr.lookup(\"Uint64\")],\r\n  [\"pledges\", xdr.lookup(\"ScpStatementPledges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPEnvelope\r\n//   {\r\n//       SCPStatement statement;\r\n//       Signature signature;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpEnvelope\", [\r\n  [\"statement\", xdr.lookup(\"ScpStatement\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPQuorumSet\r\n//   {\r\n//       uint32 threshold;\r\n//       NodeID validators<>;\r\n//       SCPQuorumSet innerSets<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpQuorumSet\", [\r\n  [\"threshold\", xdr.lookup(\"Uint32\")],\r\n  [\"validators\", xdr.varArray(xdr.lookup(\"NodeId\"), 2147483647)],\r\n  [\"innerSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Thresholds[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Thresholds\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string string32<32>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"String32\", xdr.string(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string string64<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"String64\", xdr.string(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef int64 SequenceNumber;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SequenceNumber\", xdr.lookup(\"Int64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque DataValue<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"DataValue\", xdr.varOpaque(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash PoolID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"PoolId\", xdr.lookup(\"Hash\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque AssetCode4[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AssetCode4\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque AssetCode12[12];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AssetCode12\", xdr.opaque(12));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AssetType\r\n//   {\r\n//       ASSET_TYPE_NATIVE = 0,\r\n//       ASSET_TYPE_CREDIT_ALPHANUM4 = 1,\r\n//       ASSET_TYPE_CREDIT_ALPHANUM12 = 2,\r\n//       ASSET_TYPE_POOL_SHARE = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AssetType\", {\r\n  assetTypeNative: 0,\r\n  assetTypeCreditAlphanum4: 1,\r\n  assetTypeCreditAlphanum12: 2,\r\n  assetTypePoolShare: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AssetCode switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AssetCode4 assetCode4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AssetCode12 assetCode12;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AssetCode\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeCreditAlphanum4\", \"assetCode4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"assetCode12\"],\r\n  ],\r\n  arms: {\r\n    assetCode4: xdr.lookup(\"AssetCode4\"),\r\n    assetCode12: xdr.lookup(\"AssetCode12\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AlphaNum4\r\n//   {\r\n//       AssetCode4 assetCode;\r\n//       AccountID issuer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AlphaNum4\", [\r\n  [\"assetCode\", xdr.lookup(\"AssetCode4\")],\r\n  [\"issuer\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AlphaNum12\r\n//   {\r\n//       AssetCode12 assetCode;\r\n//       AccountID issuer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AlphaNum12\", [\r\n  [\"assetCode\", xdr.lookup(\"AssetCode12\")],\r\n  [\"issuer\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Asset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Asset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Price\r\n//   {\r\n//       int32 n; // numerator\r\n//       int32 d; // denominator\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Price\", [\r\n  [\"n\", xdr.lookup(\"Int32\")],\r\n  [\"d\", xdr.lookup(\"Int32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Liabilities\r\n//   {\r\n//       int64 buying;\r\n//       int64 selling;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Liabilities\", [\r\n  [\"buying\", xdr.lookup(\"Int64\")],\r\n  [\"selling\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ThresholdIndexes\r\n//   {\r\n//       THRESHOLD_MASTER_WEIGHT = 0,\r\n//       THRESHOLD_LOW = 1,\r\n//       THRESHOLD_MED = 2,\r\n//       THRESHOLD_HIGH = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ThresholdIndices\", {\r\n  thresholdMasterWeight: 0,\r\n  thresholdLow: 1,\r\n  thresholdMed: 2,\r\n  thresholdHigh: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerEntryType\r\n//   {\r\n//       ACCOUNT = 0,\r\n//       TRUSTLINE = 1,\r\n//       OFFER = 2,\r\n//       DATA = 3,\r\n//       CLAIMABLE_BALANCE = 4,\r\n//       LIQUIDITY_POOL = 5,\r\n//       CONTRACT_DATA = 6,\r\n//       CONTRACT_CODE = 7,\r\n//       CONFIG_SETTING = 8,\r\n//       TTL = 9\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerEntryType\", {\r\n  account: 0,\r\n  trustline: 1,\r\n  offer: 2,\r\n  data: 3,\r\n  claimableBalance: 4,\r\n  liquidityPool: 5,\r\n  contractData: 6,\r\n  contractCode: 7,\r\n  configSetting: 8,\r\n  ttl: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Signer\r\n//   {\r\n//       SignerKey key;\r\n//       uint32 weight; // really only need 1 byte\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Signer\", [\r\n  [\"key\", xdr.lookup(\"SignerKey\")],\r\n  [\"weight\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AccountFlags\r\n//   { // masks for each flag\r\n//\r\n//       // Flags set on issuer accounts\r\n//       // TrustLines are created with authorized set to \"false\" requiring\r\n//       // the issuer to set it for each TrustLine\r\n//       AUTH_REQUIRED_FLAG = 0x1,\r\n//       // If set, the authorized flag in TrustLines can be cleared\r\n//       // otherwise, authorization cannot be revoked\r\n//       AUTH_REVOCABLE_FLAG = 0x2,\r\n//       // Once set, causes all AUTH_* flags to be read-only\r\n//       AUTH_IMMUTABLE_FLAG = 0x4,\r\n//       // Trustlines are created with clawback enabled set to \"true\",\r\n//       // and claimable balances created from those trustlines are created\r\n//       // with clawback enabled set to \"true\"\r\n//       AUTH_CLAWBACK_ENABLED_FLAG = 0x8\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AccountFlags\", {\r\n  authRequiredFlag: 1,\r\n  authRevocableFlag: 2,\r\n  authImmutableFlag: 4,\r\n  authClawbackEnabledFlag: 8,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_ACCOUNT_FLAGS = 0x7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_ACCOUNT_FLAGS\", 0x7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_ACCOUNT_FLAGS_V17 = 0xF;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_ACCOUNT_FLAGS_V17\", 0xF);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MAX_SIGNERS = 20;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MAX_SIGNERS\", 20);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef AccountID* SponsorshipDescriptor;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SponsorshipDescriptor\", xdr.option(xdr.lookup(\"AccountId\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV3\r\n//   {\r\n//       // We can use this to add more fields, or because it is first, to\r\n//       // change AccountEntryExtensionV3 into a union.\r\n//       ExtensionPoint ext;\r\n//\r\n//       // Ledger number at which `seqNum` took on its present value.\r\n//       uint32 seqLedger;\r\n//\r\n//       // Time at which `seqNum` took on its present value.\r\n//       TimePoint seqTime;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV3\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"seqLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"seqTime\", xdr.lookup(\"TimePoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 3:\r\n//           AccountEntryExtensionV3 v3;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExtensionV2Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [3, \"v3\"],\r\n  ],\r\n  arms: {\r\n    v3: xdr.lookup(\"AccountEntryExtensionV3\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV2\r\n//   {\r\n//       uint32 numSponsored;\r\n//       uint32 numSponsoring;\r\n//       SponsorshipDescriptor signerSponsoringIDs<MAX_SIGNERS>;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 3:\r\n//           AccountEntryExtensionV3 v3;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV2\", [\r\n  [\"numSponsored\", xdr.lookup(\"Uint32\")],\r\n  [\"numSponsoring\", xdr.lookup(\"Uint32\")],\r\n  [\"signerSponsoringIDs\", xdr.varArray(xdr.lookup(\"SponsorshipDescriptor\"), xdr.lookup(\"MAX_SIGNERS\"))],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV2Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 2:\r\n//           AccountEntryExtensionV2 v2;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [2, \"v2\"],\r\n  ],\r\n  arms: {\r\n    v2: xdr.lookup(\"AccountEntryExtensionV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV1\r\n//   {\r\n//       Liabilities liabilities;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 2:\r\n//           AccountEntryExtensionV2 v2;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV1\", [\r\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           AccountEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"AccountEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntry\r\n//   {\r\n//       AccountID accountID;      // master public key for this account\r\n//       int64 balance;            // in stroops\r\n//       SequenceNumber seqNum;    // last sequence number used for this account\r\n//       uint32 numSubEntries;     // number of sub-entries this account has\r\n//                                 // drives the reserve\r\n//       AccountID* inflationDest; // Account to vote for during inflation\r\n//       uint32 flags;             // see AccountFlags\r\n//\r\n//       string32 homeDomain; // can be used for reverse federation and memo lookup\r\n//\r\n//       // fields used for signatures\r\n//       // thresholds stores unsigned bytes: [weight of master|low|medium|high]\r\n//       Thresholds thresholds;\r\n//\r\n//       Signer signers<MAX_SIGNERS>; // possible signers for this account\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           AccountEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"balance\", xdr.lookup(\"Int64\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"numSubEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"homeDomain\", xdr.lookup(\"String32\")],\r\n  [\"thresholds\", xdr.lookup(\"Thresholds\")],\r\n  [\"signers\", xdr.varArray(xdr.lookup(\"Signer\"), xdr.lookup(\"MAX_SIGNERS\"))],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TrustLineFlags\r\n//   {\r\n//       // issuer has authorized account to perform transactions with its credit\r\n//       AUTHORIZED_FLAG = 1,\r\n//       // issuer has authorized account to maintain and reduce liabilities for its\r\n//       // credit\r\n//       AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,\r\n//       // issuer has specified that it may clawback its credit, and that claimable\r\n//       // balances created with its credit may also be clawed back\r\n//       TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TrustLineFlags\", {\r\n  authorizedFlag: 1,\r\n  authorizedToMaintainLiabilitiesFlag: 2,\r\n  trustlineClawbackEnabledFlag: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS = 1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS\", 1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS_V13 = 3;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V13\", 3);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS_V17 = 7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V17\", 7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolType\r\n//   {\r\n//       LIQUIDITY_POOL_CONSTANT_PRODUCT = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolType\", {\r\n  liquidityPoolConstantProduct: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TrustLineAsset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//   case ASSET_TYPE_POOL_SHARE:\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineAsset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n    [\"assetTypePoolShare\", \"liquidityPoolId\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n    liquidityPoolId: xdr.lookup(\"PoolId\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryExtensionV2Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TrustLineEntryExtensionV2\r\n//   {\r\n//       int32 liquidityPoolUseCount;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntryExtensionV2\", [\r\n  [\"liquidityPoolUseCount\", xdr.lookup(\"Int32\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryExtensionV2Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [2, \"v2\"],\r\n  ],\r\n  arms: {\r\n    v2: xdr.lookup(\"TrustLineEntryExtensionV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntryV1\", [\r\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           } v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"TrustLineEntryV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TrustLineEntry\r\n//   {\r\n//       AccountID accountID;  // account this trustline belongs to\r\n//       TrustLineAsset asset; // type of asset (with issuer)\r\n//       int64 balance;        // how much of this asset the user has.\r\n//                             // Asset defines the unit for this;\r\n//\r\n//       int64 limit;  // balance cannot be above this\r\n//       uint32 flags; // see TrustLineFlags\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           } v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\r\n  [\"balance\", xdr.lookup(\"Int64\")],\r\n  [\"limit\", xdr.lookup(\"Int64\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OfferEntryFlags\r\n//   {\r\n//       // an offer with this flag will not act on and take a reverse offer of equal\r\n//       // price\r\n//       PASSIVE_FLAG = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OfferEntryFlags\", {\r\n  passiveFlag: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_OFFERENTRY_FLAGS = 1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_OFFERENTRY_FLAGS\", 1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OfferEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct OfferEntry\r\n//   {\r\n//       AccountID sellerID;\r\n//       int64 offerID;\r\n//       Asset selling; // A\r\n//       Asset buying;  // B\r\n//       int64 amount;  // amount of A\r\n//\r\n//       /* price for this offer:\r\n//           price of A in terms of B\r\n//           price=AmountB/AmountA=priceNumerator/priceDenominator\r\n//           price is after fees\r\n//       */\r\n//       Price price;\r\n//       uint32 flags; // see OfferEntryFlags\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"OfferEntry\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"OfferEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"DataEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DataEntry\r\n//   {\r\n//       AccountID accountID; // account this data belongs to\r\n//       string64 dataName;\r\n//       DataValue dataValue;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DataEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n  [\"dataValue\", xdr.lookup(\"DataValue\")],\r\n  [\"ext\", xdr.lookup(\"DataEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimPredicateType\r\n//   {\r\n//       CLAIM_PREDICATE_UNCONDITIONAL = 0,\r\n//       CLAIM_PREDICATE_AND = 1,\r\n//       CLAIM_PREDICATE_OR = 2,\r\n//       CLAIM_PREDICATE_NOT = 3,\r\n//       CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME = 4,\r\n//       CLAIM_PREDICATE_BEFORE_RELATIVE_TIME = 5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimPredicateType\", {\r\n  claimPredicateUnconditional: 0,\r\n  claimPredicateAnd: 1,\r\n  claimPredicateOr: 2,\r\n  claimPredicateNot: 3,\r\n  claimPredicateBeforeAbsoluteTime: 4,\r\n  claimPredicateBeforeRelativeTime: 5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimPredicate switch (ClaimPredicateType type)\r\n//   {\r\n//   case CLAIM_PREDICATE_UNCONDITIONAL:\r\n//       void;\r\n//   case CLAIM_PREDICATE_AND:\r\n//       ClaimPredicate andPredicates<2>;\r\n//   case CLAIM_PREDICATE_OR:\r\n//       ClaimPredicate orPredicates<2>;\r\n//   case CLAIM_PREDICATE_NOT:\r\n//       ClaimPredicate* notPredicate;\r\n//   case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME:\r\n//       int64 absBefore; // Predicate will be true if closeTime < absBefore\r\n//   case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME:\r\n//       int64 relBefore; // Seconds since closeTime of the ledger in which the\r\n//                        // ClaimableBalanceEntry was created\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimPredicate\", {\r\n  switchOn: xdr.lookup(\"ClaimPredicateType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimPredicateUnconditional\", xdr.void()],\r\n    [\"claimPredicateAnd\", \"andPredicates\"],\r\n    [\"claimPredicateOr\", \"orPredicates\"],\r\n    [\"claimPredicateNot\", \"notPredicate\"],\r\n    [\"claimPredicateBeforeAbsoluteTime\", \"absBefore\"],\r\n    [\"claimPredicateBeforeRelativeTime\", \"relBefore\"],\r\n  ],\r\n  arms: {\r\n    andPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\r\n    orPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\r\n    notPredicate: xdr.option(xdr.lookup(\"ClaimPredicate\")),\r\n    absBefore: xdr.lookup(\"Int64\"),\r\n    relBefore: xdr.lookup(\"Int64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimantType\r\n//   {\r\n//       CLAIMANT_TYPE_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimantType\", {\r\n  claimantTypeV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID destination;    // The account that can use this condition\r\n//           ClaimPredicate predicate; // Claimable if predicate is true\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimantV0\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"predicate\", xdr.lookup(\"ClaimPredicate\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Claimant switch (ClaimantType type)\r\n//   {\r\n//   case CLAIMANT_TYPE_V0:\r\n//       struct\r\n//       {\r\n//           AccountID destination;    // The account that can use this condition\r\n//           ClaimPredicate predicate; // Claimable if predicate is true\r\n//       } v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Claimant\", {\r\n  switchOn: xdr.lookup(\"ClaimantType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimantTypeV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ClaimantV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimableBalanceIDType\r\n//   {\r\n//       CLAIMABLE_BALANCE_ID_TYPE_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimableBalanceIdType\", {\r\n  claimableBalanceIdTypeV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimableBalanceID switch (ClaimableBalanceIDType type)\r\n//   {\r\n//   case CLAIMABLE_BALANCE_ID_TYPE_V0:\r\n//       Hash v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceId\", {\r\n  switchOn: xdr.lookup(\"ClaimableBalanceIdType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimableBalanceIdTypeV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimableBalanceFlags\r\n//   {\r\n//       // If set, the issuer account of the asset held by the claimable balance may\r\n//       // clawback the claimable balance\r\n//       CLAIMABLE_BALANCE_CLAWBACK_ENABLED_FLAG = 0x1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimableBalanceFlags\", {\r\n  claimableBalanceClawbackEnabledFlag: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_CLAIMABLE_BALANCE_FLAGS = 0x1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_CLAIMABLE_BALANCE_FLAGS\", 0x1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimableBalanceEntryExtensionV1\r\n//   {\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//\r\n//       uint32 flags; // see ClaimableBalanceFlags\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimableBalanceEntryExtensionV1\", [\r\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExtensionV1Ext\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           ClaimableBalanceEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"ClaimableBalanceEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimableBalanceEntry\r\n//   {\r\n//       // Unique identifier for this ClaimableBalanceEntry\r\n//       ClaimableBalanceID balanceID;\r\n//\r\n//       // List of claimants with associated predicate\r\n//       Claimant claimants<10>;\r\n//\r\n//       // Any asset including native\r\n//       Asset asset;\r\n//\r\n//       // Amount of asset\r\n//       int64 amount;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           ClaimableBalanceEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimableBalanceEntry\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolConstantProductParameters\r\n//   {\r\n//       Asset assetA; // assetA < assetB\r\n//       Asset assetB;\r\n//       int32 fee; // Fee is in basis points, so the actual rate is (fee/100)%\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolConstantProductParameters\", [\r\n  [\"assetA\", xdr.lookup(\"Asset\")],\r\n  [\"assetB\", xdr.lookup(\"Asset\")],\r\n  [\"fee\", xdr.lookup(\"Int32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolEntryConstantProduct\", [\r\n  [\"params\", xdr.lookup(\"LiquidityPoolConstantProductParameters\")],\r\n  [\"reserveA\", xdr.lookup(\"Int64\")],\r\n  [\"reserveB\", xdr.lookup(\"Int64\")],\r\n  [\"totalPoolShares\", xdr.lookup(\"Int64\")],\r\n  [\"poolSharesTrustLineCount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (LiquidityPoolType type)\r\n//       {\r\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//           struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           } constantProduct;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolEntryBody\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\r\n  ],\r\n  arms: {\r\n    constantProduct: xdr.lookup(\"LiquidityPoolEntryConstantProduct\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolEntry\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       union switch (LiquidityPoolType type)\r\n//       {\r\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//           struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           } constantProduct;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolEntry\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"body\", xdr.lookup(\"LiquidityPoolEntryBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractDataDurability {\r\n//       TEMPORARY = 0,\r\n//       PERSISTENT = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractDataDurability\", {\r\n  temporary: 0,\r\n  persistent: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractDataEntry {\r\n//       ExtensionPoint ext;\r\n//\r\n//       SCAddress contract;\r\n//       SCVal key;\r\n//       ContractDataDurability durability;\r\n//       SCVal val;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractDataEntry\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"contract\", xdr.lookup(\"ScAddress\")],\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\r\n  [\"val\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCodeCostInputs {\r\n//       ExtensionPoint ext;\r\n//       uint32 nInstructions;\r\n//       uint32 nFunctions;\r\n//       uint32 nGlobals;\r\n//       uint32 nTableEntries;\r\n//       uint32 nTypes;\r\n//       uint32 nDataSegments;\r\n//       uint32 nElemSegments;\r\n//       uint32 nImports;\r\n//       uint32 nExports;\r\n//       uint32 nDataSegmentBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeCostInputs\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"nInstructions\", xdr.lookup(\"Uint32\")],\r\n  [\"nFunctions\", xdr.lookup(\"Uint32\")],\r\n  [\"nGlobals\", xdr.lookup(\"Uint32\")],\r\n  [\"nTableEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"nTypes\", xdr.lookup(\"Uint32\")],\r\n  [\"nDataSegments\", xdr.lookup(\"Uint32\")],\r\n  [\"nElemSegments\", xdr.lookup(\"Uint32\")],\r\n  [\"nImports\", xdr.lookup(\"Uint32\")],\r\n  [\"nExports\", xdr.lookup(\"Uint32\")],\r\n  [\"nDataSegmentBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeEntryV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"costInputs\", xdr.lookup(\"ContractCodeCostInputs\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//           case 0:\r\n//               void;\r\n//           case 1:\r\n//               struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               } v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractCodeEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"ContractCodeEntryV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCodeEntry {\r\n//       union switch (int v)\r\n//       {\r\n//           case 0:\r\n//               void;\r\n//           case 1:\r\n//               struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               } v1;\r\n//       } ext;\r\n//\r\n//       Hash hash;\r\n//       opaque code<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeEntry\", [\r\n  [\"ext\", xdr.lookup(\"ContractCodeEntryExt\")],\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n  [\"code\", xdr.varOpaque()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TTLEntry {\r\n//       // Hash of the LedgerKey that is associated with this TTLEntry\r\n//       Hash keyHash;\r\n//       uint32 liveUntilLedgerSeq;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TtlEntry\", [\r\n  [\"keyHash\", xdr.lookup(\"Hash\")],\r\n  [\"liveUntilLedgerSeq\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerEntryExtensionV1\r\n//   {\r\n//       SponsorshipDescriptor sponsoringID;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerEntryExtensionV1\", [\r\n  [\"sponsoringId\", xdr.lookup(\"SponsorshipDescriptor\")],\r\n  [\"ext\", xdr.lookup(\"LedgerEntryExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (LedgerEntryType type)\r\n//       {\r\n//       case ACCOUNT:\r\n//           AccountEntry account;\r\n//       case TRUSTLINE:\r\n//           TrustLineEntry trustLine;\r\n//       case OFFER:\r\n//           OfferEntry offer;\r\n//       case DATA:\r\n//           DataEntry data;\r\n//       case CLAIMABLE_BALANCE:\r\n//           ClaimableBalanceEntry claimableBalance;\r\n//       case LIQUIDITY_POOL:\r\n//           LiquidityPoolEntry liquidityPool;\r\n//       case CONTRACT_DATA:\r\n//           ContractDataEntry contractData;\r\n//       case CONTRACT_CODE:\r\n//           ContractCodeEntry contractCode;\r\n//       case CONFIG_SETTING:\r\n//           ConfigSettingEntry configSetting;\r\n//       case TTL:\r\n//           TTLEntry ttl;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryData\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"account\", \"account\"],\r\n    [\"trustline\", \"trustLine\"],\r\n    [\"offer\", \"offer\"],\r\n    [\"data\", \"data\"],\r\n    [\"claimableBalance\", \"claimableBalance\"],\r\n    [\"liquidityPool\", \"liquidityPool\"],\r\n    [\"contractData\", \"contractData\"],\r\n    [\"contractCode\", \"contractCode\"],\r\n    [\"configSetting\", \"configSetting\"],\r\n    [\"ttl\", \"ttl\"],\r\n  ],\r\n  arms: {\r\n    account: xdr.lookup(\"AccountEntry\"),\r\n    trustLine: xdr.lookup(\"TrustLineEntry\"),\r\n    offer: xdr.lookup(\"OfferEntry\"),\r\n    data: xdr.lookup(\"DataEntry\"),\r\n    claimableBalance: xdr.lookup(\"ClaimableBalanceEntry\"),\r\n    liquidityPool: xdr.lookup(\"LiquidityPoolEntry\"),\r\n    contractData: xdr.lookup(\"ContractDataEntry\"),\r\n    contractCode: xdr.lookup(\"ContractCodeEntry\"),\r\n    configSetting: xdr.lookup(\"ConfigSettingEntry\"),\r\n    ttl: xdr.lookup(\"TtlEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerEntry\r\n//   {\r\n//       uint32 lastModifiedLedgerSeq; // ledger the LedgerEntry was last changed\r\n//\r\n//       union switch (LedgerEntryType type)\r\n//       {\r\n//       case ACCOUNT:\r\n//           AccountEntry account;\r\n//       case TRUSTLINE:\r\n//           TrustLineEntry trustLine;\r\n//       case OFFER:\r\n//           OfferEntry offer;\r\n//       case DATA:\r\n//           DataEntry data;\r\n//       case CLAIMABLE_BALANCE:\r\n//           ClaimableBalanceEntry claimableBalance;\r\n//       case LIQUIDITY_POOL:\r\n//           LiquidityPoolEntry liquidityPool;\r\n//       case CONTRACT_DATA:\r\n//           ContractDataEntry contractData;\r\n//       case CONTRACT_CODE:\r\n//           ContractCodeEntry contractCode;\r\n//       case CONFIG_SETTING:\r\n//           ConfigSettingEntry configSetting;\r\n//       case TTL:\r\n//           TTLEntry ttl;\r\n//       }\r\n//       data;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerEntry\", [\r\n  [\"lastModifiedLedgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"data\", xdr.lookup(\"LedgerEntryData\")],\r\n  [\"ext\", xdr.lookup(\"LedgerEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyAccount\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           TrustLineAsset asset;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyTrustLine\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sellerID;\r\n//           int64 offerID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyOffer\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           string64 dataName;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyData\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimableBalanceID balanceID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyClaimableBalance\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           PoolID liquidityPoolID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyLiquidityPool\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           SCAddress contract;\r\n//           SCVal key;\r\n//           ContractDataDurability durability;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyContractData\", [\r\n  [\"contract\", xdr.lookup(\"ScAddress\")],\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash hash;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyContractCode\", [\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ConfigSettingID configSettingID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyConfigSetting\", [\r\n  [\"configSettingId\", xdr.lookup(\"ConfigSettingId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           // Hash of the LedgerKey that is associated with this TTLEntry\r\n//           Hash keyHash;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyTtl\", [\r\n  [\"keyHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerKey switch (LedgerEntryType type)\r\n//   {\r\n//   case ACCOUNT:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//       } account;\r\n//\r\n//   case TRUSTLINE:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           TrustLineAsset asset;\r\n//       } trustLine;\r\n//\r\n//   case OFFER:\r\n//       struct\r\n//       {\r\n//           AccountID sellerID;\r\n//           int64 offerID;\r\n//       } offer;\r\n//\r\n//   case DATA:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           string64 dataName;\r\n//       } data;\r\n//\r\n//   case CLAIMABLE_BALANCE:\r\n//       struct\r\n//       {\r\n//           ClaimableBalanceID balanceID;\r\n//       } claimableBalance;\r\n//\r\n//   case LIQUIDITY_POOL:\r\n//       struct\r\n//       {\r\n//           PoolID liquidityPoolID;\r\n//       } liquidityPool;\r\n//   case CONTRACT_DATA:\r\n//       struct\r\n//       {\r\n//           SCAddress contract;\r\n//           SCVal key;\r\n//           ContractDataDurability durability;\r\n//       } contractData;\r\n//   case CONTRACT_CODE:\r\n//       struct\r\n//       {\r\n//           Hash hash;\r\n//       } contractCode;\r\n//   case CONFIG_SETTING:\r\n//       struct\r\n//       {\r\n//           ConfigSettingID configSettingID;\r\n//       } configSetting;\r\n//   case TTL:\r\n//       struct\r\n//       {\r\n//           // Hash of the LedgerKey that is associated with this TTLEntry\r\n//           Hash keyHash;\r\n//       } ttl;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerKey\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"account\", \"account\"],\r\n    [\"trustline\", \"trustLine\"],\r\n    [\"offer\", \"offer\"],\r\n    [\"data\", \"data\"],\r\n    [\"claimableBalance\", \"claimableBalance\"],\r\n    [\"liquidityPool\", \"liquidityPool\"],\r\n    [\"contractData\", \"contractData\"],\r\n    [\"contractCode\", \"contractCode\"],\r\n    [\"configSetting\", \"configSetting\"],\r\n    [\"ttl\", \"ttl\"],\r\n  ],\r\n  arms: {\r\n    account: xdr.lookup(\"LedgerKeyAccount\"),\r\n    trustLine: xdr.lookup(\"LedgerKeyTrustLine\"),\r\n    offer: xdr.lookup(\"LedgerKeyOffer\"),\r\n    data: xdr.lookup(\"LedgerKeyData\"),\r\n    claimableBalance: xdr.lookup(\"LedgerKeyClaimableBalance\"),\r\n    liquidityPool: xdr.lookup(\"LedgerKeyLiquidityPool\"),\r\n    contractData: xdr.lookup(\"LedgerKeyContractData\"),\r\n    contractCode: xdr.lookup(\"LedgerKeyContractCode\"),\r\n    configSetting: xdr.lookup(\"LedgerKeyConfigSetting\"),\r\n    ttl: xdr.lookup(\"LedgerKeyTtl\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum EnvelopeType\r\n//   {\r\n//       ENVELOPE_TYPE_TX_V0 = 0,\r\n//       ENVELOPE_TYPE_SCP = 1,\r\n//       ENVELOPE_TYPE_TX = 2,\r\n//       ENVELOPE_TYPE_AUTH = 3,\r\n//       ENVELOPE_TYPE_SCPVALUE = 4,\r\n//       ENVELOPE_TYPE_TX_FEE_BUMP = 5,\r\n//       ENVELOPE_TYPE_OP_ID = 6,\r\n//       ENVELOPE_TYPE_POOL_REVOKE_OP_ID = 7,\r\n//       ENVELOPE_TYPE_CONTRACT_ID = 8,\r\n//       ENVELOPE_TYPE_SOROBAN_AUTHORIZATION = 9\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"EnvelopeType\", {\r\n  envelopeTypeTxV0: 0,\r\n  envelopeTypeScp: 1,\r\n  envelopeTypeTx: 2,\r\n  envelopeTypeAuth: 3,\r\n  envelopeTypeScpvalue: 4,\r\n  envelopeTypeTxFeeBump: 5,\r\n  envelopeTypeOpId: 6,\r\n  envelopeTypePoolRevokeOpId: 7,\r\n  envelopeTypeContractId: 8,\r\n  envelopeTypeSorobanAuthorization: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque UpgradeType<128>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"UpgradeType\", xdr.varOpaque(128));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum StellarValueType\r\n//   {\r\n//       STELLAR_VALUE_BASIC = 0,\r\n//       STELLAR_VALUE_SIGNED = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"StellarValueType\", {\r\n  stellarValueBasic: 0,\r\n  stellarValueSigned: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseValueSignature\r\n//   {\r\n//       NodeID nodeID;       // which node introduced the value\r\n//       Signature signature; // nodeID's signature\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseValueSignature\", [\r\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (StellarValueType v)\r\n//       {\r\n//       case STELLAR_VALUE_BASIC:\r\n//           void;\r\n//       case STELLAR_VALUE_SIGNED:\r\n//           LedgerCloseValueSignature lcValueSignature;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"StellarValueExt\", {\r\n  switchOn: xdr.lookup(\"StellarValueType\"),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [\"stellarValueBasic\", xdr.void()],\r\n    [\"stellarValueSigned\", \"lcValueSignature\"],\r\n  ],\r\n  arms: {\r\n    lcValueSignature: xdr.lookup(\"LedgerCloseValueSignature\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct StellarValue\r\n//   {\r\n//       Hash txSetHash;      // transaction set to apply to previous ledger\r\n//       TimePoint closeTime; // network close time\r\n//\r\n//       // upgrades to apply to the previous ledger (usually empty)\r\n//       // this is a vector of encoded 'LedgerUpgrade' so that nodes can drop\r\n//       // unknown steps during consensus if needed.\r\n//       // see notes below on 'LedgerUpgrade' for more detail\r\n//       // max size is dictated by number of upgrade types (+ room for future)\r\n//       UpgradeType upgrades<6>;\r\n//\r\n//       // reserved for future use\r\n//       union switch (StellarValueType v)\r\n//       {\r\n//       case STELLAR_VALUE_BASIC:\r\n//           void;\r\n//       case STELLAR_VALUE_SIGNED:\r\n//           LedgerCloseValueSignature lcValueSignature;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"StellarValue\", [\r\n  [\"txSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"closeTime\", xdr.lookup(\"TimePoint\")],\r\n  [\"upgrades\", xdr.varArray(xdr.lookup(\"UpgradeType\"), 6)],\r\n  [\"ext\", xdr.lookup(\"StellarValueExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_LEDGER_HEADER_FLAGS = 0x7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_LEDGER_HEADER_FLAGS\", 0x7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerHeaderFlags\r\n//   {\r\n//       DISABLE_LIQUIDITY_POOL_TRADING_FLAG = 0x1,\r\n//       DISABLE_LIQUIDITY_POOL_DEPOSIT_FLAG = 0x2,\r\n//       DISABLE_LIQUIDITY_POOL_WITHDRAWAL_FLAG = 0x4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerHeaderFlags\", {\r\n  disableLiquidityPoolTradingFlag: 1,\r\n  disableLiquidityPoolDepositFlag: 2,\r\n  disableLiquidityPoolWithdrawalFlag: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeaderExtensionV1\r\n//   {\r\n//       uint32 flags; // LedgerHeaderFlags\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeaderExtensionV1\", [\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerHeaderExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerHeaderExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeader\r\n//   {\r\n//       uint32 ledgerVersion;    // the protocol version of the ledger\r\n//       Hash previousLedgerHash; // hash of the previous ledger header\r\n//       StellarValue scpValue;   // what consensus agreed to\r\n//       Hash txSetResultHash;    // the TransactionResultSet that led to this ledger\r\n//       Hash bucketListHash;     // hash of the ledger state\r\n//\r\n//       uint32 ledgerSeq; // sequence number of this ledger\r\n//\r\n//       int64 totalCoins; // total number of stroops in existence.\r\n//                         // 10,000,000 stroops in 1 XLM\r\n//\r\n//       int64 feePool;       // fees burned since last inflation run\r\n//       uint32 inflationSeq; // inflation sequence number\r\n//\r\n//       uint64 idPool; // last used global ID, used for generating objects\r\n//\r\n//       uint32 baseFee;     // base fee per operation in stroops\r\n//       uint32 baseReserve; // account base reserve in stroops\r\n//\r\n//       uint32 maxTxSetSize; // maximum size a transaction set can be\r\n//\r\n//       Hash skipList[4]; // hashes of ledgers in the past. allows you to jump back\r\n//                         // in time without walking the chain back ledger by ledger\r\n//                         // each slot contains the oldest ledger that is mod of\r\n//                         // either 50  5000  50000 or 500000 depending on index\r\n//                         // skipList[0] mod(50), skipList[1] mod(5000), etc\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerHeaderExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeader\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"scpValue\", xdr.lookup(\"StellarValue\")],\r\n  [\"txSetResultHash\", xdr.lookup(\"Hash\")],\r\n  [\"bucketListHash\", xdr.lookup(\"Hash\")],\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"totalCoins\", xdr.lookup(\"Int64\")],\r\n  [\"feePool\", xdr.lookup(\"Int64\")],\r\n  [\"inflationSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"idPool\", xdr.lookup(\"Uint64\")],\r\n  [\"baseFee\", xdr.lookup(\"Uint32\")],\r\n  [\"baseReserve\", xdr.lookup(\"Uint32\")],\r\n  [\"maxTxSetSize\", xdr.lookup(\"Uint32\")],\r\n  [\"skipList\", xdr.array(xdr.lookup(\"Hash\"), 4)],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerUpgradeType\r\n//   {\r\n//       LEDGER_UPGRADE_VERSION = 1,\r\n//       LEDGER_UPGRADE_BASE_FEE = 2,\r\n//       LEDGER_UPGRADE_MAX_TX_SET_SIZE = 3,\r\n//       LEDGER_UPGRADE_BASE_RESERVE = 4,\r\n//       LEDGER_UPGRADE_FLAGS = 5,\r\n//       LEDGER_UPGRADE_CONFIG = 6,\r\n//       LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE = 7\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerUpgradeType\", {\r\n  ledgerUpgradeVersion: 1,\r\n  ledgerUpgradeBaseFee: 2,\r\n  ledgerUpgradeMaxTxSetSize: 3,\r\n  ledgerUpgradeBaseReserve: 4,\r\n  ledgerUpgradeFlags: 5,\r\n  ledgerUpgradeConfig: 6,\r\n  ledgerUpgradeMaxSorobanTxSetSize: 7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigUpgradeSetKey {\r\n//       Hash contractID;\r\n//       Hash contentHash;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigUpgradeSetKey\", [\r\n  [\"contractId\", xdr.lookup(\"Hash\")],\r\n  [\"contentHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerUpgrade switch (LedgerUpgradeType type)\r\n//   {\r\n//   case LEDGER_UPGRADE_VERSION:\r\n//       uint32 newLedgerVersion; // update ledgerVersion\r\n//   case LEDGER_UPGRADE_BASE_FEE:\r\n//       uint32 newBaseFee; // update baseFee\r\n//   case LEDGER_UPGRADE_MAX_TX_SET_SIZE:\r\n//       uint32 newMaxTxSetSize; // update maxTxSetSize\r\n//   case LEDGER_UPGRADE_BASE_RESERVE:\r\n//       uint32 newBaseReserve; // update baseReserve\r\n//   case LEDGER_UPGRADE_FLAGS:\r\n//       uint32 newFlags; // update flags\r\n//   case LEDGER_UPGRADE_CONFIG:\r\n//       // Update arbitrary `ConfigSetting` entries identified by the key.\r\n//       ConfigUpgradeSetKey newConfig;\r\n//   case LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE:\r\n//       // Update ConfigSettingContractExecutionLanesV0.ledgerMaxTxCount without\r\n//       // using `LEDGER_UPGRADE_CONFIG`.\r\n//       uint32 newMaxSorobanTxSetSize;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerUpgrade\", {\r\n  switchOn: xdr.lookup(\"LedgerUpgradeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"ledgerUpgradeVersion\", \"newLedgerVersion\"],\r\n    [\"ledgerUpgradeBaseFee\", \"newBaseFee\"],\r\n    [\"ledgerUpgradeMaxTxSetSize\", \"newMaxTxSetSize\"],\r\n    [\"ledgerUpgradeBaseReserve\", \"newBaseReserve\"],\r\n    [\"ledgerUpgradeFlags\", \"newFlags\"],\r\n    [\"ledgerUpgradeConfig\", \"newConfig\"],\r\n    [\"ledgerUpgradeMaxSorobanTxSetSize\", \"newMaxSorobanTxSetSize\"],\r\n  ],\r\n  arms: {\r\n    newLedgerVersion: xdr.lookup(\"Uint32\"),\r\n    newBaseFee: xdr.lookup(\"Uint32\"),\r\n    newMaxTxSetSize: xdr.lookup(\"Uint32\"),\r\n    newBaseReserve: xdr.lookup(\"Uint32\"),\r\n    newFlags: xdr.lookup(\"Uint32\"),\r\n    newConfig: xdr.lookup(\"ConfigUpgradeSetKey\"),\r\n    newMaxSorobanTxSetSize: xdr.lookup(\"Uint32\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigUpgradeSet {\r\n//       ConfigSettingEntry updatedEntry<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigUpgradeSet\", [\r\n  [\"updatedEntry\", xdr.varArray(xdr.lookup(\"ConfigSettingEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BucketEntryType\r\n//   {\r\n//       METAENTRY =\r\n//           -1, // At-and-after protocol 11: bucket metadata, should come first.\r\n//       LIVEENTRY = 0, // Before protocol 11: created-or-updated;\r\n//                      // At-and-after protocol 11: only updated.\r\n//       DEADENTRY = 1,\r\n//       INITENTRY = 2 // At-and-after protocol 11: only created.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BucketEntryType\", {\r\n  metaentry: -1,\r\n  liveentry: 0,\r\n  deadentry: 1,\r\n  initentry: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BucketMetadataExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BucketMetadata\r\n//   {\r\n//       // Indicates the protocol version used to create / merge this bucket.\r\n//       uint32 ledgerVersion;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BucketMetadata\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"BucketMetadataExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BucketEntry switch (BucketEntryType type)\r\n//   {\r\n//   case LIVEENTRY:\r\n//   case INITENTRY:\r\n//       LedgerEntry liveEntry;\r\n//\r\n//   case DEADENTRY:\r\n//       LedgerKey deadEntry;\r\n//   case METAENTRY:\r\n//       BucketMetadata metaEntry;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BucketEntry\", {\r\n  switchOn: xdr.lookup(\"BucketEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liveentry\", \"liveEntry\"],\r\n    [\"initentry\", \"liveEntry\"],\r\n    [\"deadentry\", \"deadEntry\"],\r\n    [\"metaentry\", \"metaEntry\"],\r\n  ],\r\n  arms: {\r\n    liveEntry: xdr.lookup(\"LedgerEntry\"),\r\n    deadEntry: xdr.lookup(\"LedgerKey\"),\r\n    metaEntry: xdr.lookup(\"BucketMetadata\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TxSetComponentType\r\n//   {\r\n//     // txs with effective fee <= bid derived from a base fee (if any).\r\n//     // If base fee is not specified, no discount is applied.\r\n//     TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TxSetComponentType\", {\r\n  txsetCompTxsMaybeDiscountedFee: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//     {\r\n//       int64* baseFee;\r\n//       TransactionEnvelope txs<>;\r\n//     }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TxSetComponentTxsMaybeDiscountedFee\", [\r\n  [\"baseFee\", xdr.option(xdr.lookup(\"Int64\"))],\r\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TxSetComponent switch (TxSetComponentType type)\r\n//   {\r\n//   case TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE:\r\n//     struct\r\n//     {\r\n//       int64* baseFee;\r\n//       TransactionEnvelope txs<>;\r\n//     } txsMaybeDiscountedFee;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TxSetComponent\", {\r\n  switchOn: xdr.lookup(\"TxSetComponentType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"txsetCompTxsMaybeDiscountedFee\", \"txsMaybeDiscountedFee\"],\r\n  ],\r\n  arms: {\r\n    txsMaybeDiscountedFee: xdr.lookup(\"TxSetComponentTxsMaybeDiscountedFee\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionPhase switch (int v)\r\n//   {\r\n//   case 0:\r\n//       TxSetComponent v0Components<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionPhase\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0Components\"],\r\n  ],\r\n  arms: {\r\n    v0Components: xdr.varArray(xdr.lookup(\"TxSetComponent\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSet\r\n//   {\r\n//       Hash previousLedgerHash;\r\n//       TransactionEnvelope txs<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSet\", [\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSetV1\r\n//   {\r\n//       Hash previousLedgerHash;\r\n//       TransactionPhase phases<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSetV1\", [\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"phases\", xdr.varArray(xdr.lookup(\"TransactionPhase\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union GeneralizedTransactionSet switch (int v)\r\n//   {\r\n//   // We consider the legacy TransactionSet to be v0.\r\n//   case 1:\r\n//       TransactionSetV1 v1TxSet;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"GeneralizedTransactionSet\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [1, \"v1TxSet\"],\r\n  ],\r\n  arms: {\r\n    v1TxSet: xdr.lookup(\"TransactionSetV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultPair\r\n//   {\r\n//       Hash transactionHash;\r\n//       TransactionResult result; // result for the transaction\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultPair\", [\r\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\r\n  [\"result\", xdr.lookup(\"TransactionResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultSet\r\n//   {\r\n//       TransactionResultPair results<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultSet\", [\r\n  [\"results\", xdr.varArray(xdr.lookup(\"TransactionResultPair\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           GeneralizedTransactionSet generalizedTxSet;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionHistoryEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"generalizedTxSet\"],\r\n  ],\r\n  arms: {\r\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionHistoryEntry\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       TransactionSet txSet;\r\n//\r\n//       // when v != 0, txSet must be empty\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           GeneralizedTransactionSet generalizedTxSet;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionHistoryEntry\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\r\n  [\"ext\", xdr.lookup(\"TransactionHistoryEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionHistoryResultEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionHistoryResultEntry\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       TransactionResultSet txResultSet;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionHistoryResultEntry\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"txResultSet\", xdr.lookup(\"TransactionResultSet\")],\r\n  [\"ext\", xdr.lookup(\"TransactionHistoryResultEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderHistoryEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeaderHistoryEntry\r\n//   {\r\n//       Hash hash;\r\n//       LedgerHeader header;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeaderHistoryEntry\", [\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n  [\"header\", xdr.lookup(\"LedgerHeader\")],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderHistoryEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerSCPMessages\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       SCPEnvelope messages<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerScpMessages\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"messages\", xdr.varArray(xdr.lookup(\"ScpEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPHistoryEntryV0\r\n//   {\r\n//       SCPQuorumSet quorumSets<>; // additional quorum sets used by ledgerMessages\r\n//       LedgerSCPMessages ledgerMessages;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpHistoryEntryV0\", [\r\n  [\"quorumSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\r\n  [\"ledgerMessages\", xdr.lookup(\"LedgerScpMessages\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCPHistoryEntry switch (int v)\r\n//   {\r\n//   case 0:\r\n//       SCPHistoryEntryV0 v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScpHistoryEntry\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ScpHistoryEntryV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerEntryChangeType\r\n//   {\r\n//       LEDGER_ENTRY_CREATED = 0, // entry was added to the ledger\r\n//       LEDGER_ENTRY_UPDATED = 1, // entry was modified in the ledger\r\n//       LEDGER_ENTRY_REMOVED = 2, // entry was removed from the ledger\r\n//       LEDGER_ENTRY_STATE = 3    // value of the entry\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerEntryChangeType\", {\r\n  ledgerEntryCreated: 0,\r\n  ledgerEntryUpdated: 1,\r\n  ledgerEntryRemoved: 2,\r\n  ledgerEntryState: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerEntryChange switch (LedgerEntryChangeType type)\r\n//   {\r\n//   case LEDGER_ENTRY_CREATED:\r\n//       LedgerEntry created;\r\n//   case LEDGER_ENTRY_UPDATED:\r\n//       LedgerEntry updated;\r\n//   case LEDGER_ENTRY_REMOVED:\r\n//       LedgerKey removed;\r\n//   case LEDGER_ENTRY_STATE:\r\n//       LedgerEntry state;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryChange\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryChangeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"ledgerEntryCreated\", \"created\"],\r\n    [\"ledgerEntryUpdated\", \"updated\"],\r\n    [\"ledgerEntryRemoved\", \"removed\"],\r\n    [\"ledgerEntryState\", \"state\"],\r\n  ],\r\n  arms: {\r\n    created: xdr.lookup(\"LedgerEntry\"),\r\n    updated: xdr.lookup(\"LedgerEntry\"),\r\n    removed: xdr.lookup(\"LedgerKey\"),\r\n    state: xdr.lookup(\"LedgerEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef LedgerEntryChange LedgerEntryChanges<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"LedgerEntryChanges\", xdr.varArray(xdr.lookup(\"LedgerEntryChange\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct OperationMeta\r\n//   {\r\n//       LedgerEntryChanges changes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"OperationMeta\", [\r\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV1\r\n//   {\r\n//       LedgerEntryChanges txChanges; // tx level changes if any\r\n//       OperationMeta operations<>;   // meta for each operation\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV1\", [\r\n  [\"txChanges\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV2\r\n//   {\r\n//       LedgerEntryChanges txChangesBefore; // tx level changes before operations\r\n//                                           // are applied if any\r\n//       OperationMeta operations<>;         // meta for each operation\r\n//       LedgerEntryChanges txChangesAfter;  // tx level changes after operations are\r\n//                                           // applied if any\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV2\", [\r\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractEventType\r\n//   {\r\n//       SYSTEM = 0,\r\n//       CONTRACT = 1,\r\n//       DIAGNOSTIC = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractEventType\", {\r\n  system: 0,\r\n  contract: 1,\r\n  diagnostic: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractEventV0\", [\r\n  [\"topics\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\r\n  [\"data\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           } v0;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractEventBody\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ContractEventV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractEvent\r\n//   {\r\n//       // We can use this to add more fields, or because it\r\n//       // is first, to change ContractEvent into a union.\r\n//       ExtensionPoint ext;\r\n//\r\n//       Hash* contractID;\r\n//       ContractEventType type;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           } v0;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractEvent\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"contractId\", xdr.option(xdr.lookup(\"Hash\"))],\r\n  [\"type\", xdr.lookup(\"ContractEventType\")],\r\n  [\"body\", xdr.lookup(\"ContractEventBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DiagnosticEvent\r\n//   {\r\n//       bool inSuccessfulContractCall;\r\n//       ContractEvent event;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DiagnosticEvent\", [\r\n  [\"inSuccessfulContractCall\", xdr.bool()],\r\n  [\"event\", xdr.lookup(\"ContractEvent\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionMetaExtV1\r\n//   {\r\n//       ExtensionPoint ext;\r\n//\r\n//       // The following are the components of the overall Soroban resource fee\r\n//       // charged for the transaction.\r\n//       // The following relation holds:\r\n//       // `resourceFeeCharged = totalNonRefundableResourceFeeCharged + totalRefundableResourceFeeCharged`\r\n//       // where `resourceFeeCharged` is the overall fee charged for the\r\n//       // transaction. Also, `resourceFeeCharged` <= `sorobanData.resourceFee`\r\n//       // i.e.we never charge more than the declared resource fee.\r\n//       // The inclusion fee for charged the Soroban transaction can be found using\r\n//       // the following equation:\r\n//       // `result.feeCharged = resourceFeeCharged + inclusionFeeCharged`.\r\n//\r\n//       // Total amount (in stroops) that has been charged for non-refundable\r\n//       // Soroban resources.\r\n//       // Non-refundable resources are charged based on the usage declared in\r\n//       // the transaction envelope (such as `instructions`, `readBytes` etc.) and\r\n//       // is charged regardless of the success of the transaction.\r\n//       int64 totalNonRefundableResourceFeeCharged;\r\n//       // Total amount (in stroops) that has been charged for refundable\r\n//       // Soroban resource fees.\r\n//       // Currently this comprises the rent fee (`rentFeeCharged`) and the\r\n//       // fee for the events and return value.\r\n//       // Refundable resources are charged based on the actual resources usage.\r\n//       // Since currently refundable resources are only used for the successful\r\n//       // transactions, this will be `0` for failed transactions.\r\n//       int64 totalRefundableResourceFeeCharged;\r\n//       // Amount (in stroops) that has been charged for rent.\r\n//       // This is a part of `totalNonRefundableResourceFeeCharged`.\r\n//       int64 rentFeeCharged;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionMetaExtV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"totalNonRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"totalRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"rentFeeCharged\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanTransactionMetaExt switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   case 1:\r\n//       SorobanTransactionMetaExtV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanTransactionMetaExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"SorobanTransactionMetaExtV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionMeta\r\n//   {\r\n//       SorobanTransactionMetaExt ext;\r\n//\r\n//       ContractEvent events<>;             // custom events populated by the\r\n//                                           // contracts themselves.\r\n//       SCVal returnValue;                  // return value of the host fn invocation\r\n//\r\n//       // Diagnostics events that are not hashed.\r\n//       // This will contain all contract and diagnostic events. Even ones\r\n//       // that were emitted in a failed contract call.\r\n//       DiagnosticEvent diagnosticEvents<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionMeta\", [\r\n  [\"ext\", xdr.lookup(\"SorobanTransactionMetaExt\")],\r\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\r\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\r\n  [\"diagnosticEvents\", xdr.varArray(xdr.lookup(\"DiagnosticEvent\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV3\r\n//   {\r\n//       ExtensionPoint ext;\r\n//\r\n//       LedgerEntryChanges txChangesBefore;  // tx level changes before operations\r\n//                                            // are applied if any\r\n//       OperationMeta operations<>;          // meta for each operation\r\n//       LedgerEntryChanges txChangesAfter;   // tx level changes after operations are\r\n//                                            // applied if any\r\n//       SorobanTransactionMeta* sorobanMeta; // Soroban-specific meta (only for\r\n//                                            // Soroban transactions).\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV3\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"sorobanMeta\", xdr.option(xdr.lookup(\"SorobanTransactionMeta\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeHostFunctionSuccessPreImage\r\n//   {\r\n//       SCVal returnValue;\r\n//       ContractEvent events<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeHostFunctionSuccessPreImage\", [\r\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\r\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionMeta switch (int v)\r\n//   {\r\n//   case 0:\r\n//       OperationMeta operations<>;\r\n//   case 1:\r\n//       TransactionMetaV1 v1;\r\n//   case 2:\r\n//       TransactionMetaV2 v2;\r\n//   case 3:\r\n//       TransactionMetaV3 v3;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionMeta\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"operations\"],\r\n    [1, \"v1\"],\r\n    [2, \"v2\"],\r\n    [3, \"v3\"],\r\n  ],\r\n  arms: {\r\n    operations: xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647),\r\n    v1: xdr.lookup(\"TransactionMetaV1\"),\r\n    v2: xdr.lookup(\"TransactionMetaV2\"),\r\n    v3: xdr.lookup(\"TransactionMetaV3\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultMeta\r\n//   {\r\n//       TransactionResultPair result;\r\n//       LedgerEntryChanges feeProcessing;\r\n//       TransactionMeta txApplyProcessing;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultMeta\", [\r\n  [\"result\", xdr.lookup(\"TransactionResultPair\")],\r\n  [\"feeProcessing\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"txApplyProcessing\", xdr.lookup(\"TransactionMeta\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UpgradeEntryMeta\r\n//   {\r\n//       LedgerUpgrade upgrade;\r\n//       LedgerEntryChanges changes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UpgradeEntryMeta\", [\r\n  [\"upgrade\", xdr.lookup(\"LedgerUpgrade\")],\r\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaV0\r\n//   {\r\n//       LedgerHeaderHistoryEntry ledgerHeader;\r\n//       // NB: txSet is sorted in \"Hash order\"\r\n//       TransactionSet txSet;\r\n//\r\n//       // NB: transactions are sorted in apply order here\r\n//       // fees for all transactions are processed first\r\n//       // followed by applying transactions\r\n//       TransactionResultMeta txProcessing<>;\r\n//\r\n//       // upgrades are applied last\r\n//       UpgradeEntryMeta upgradesProcessing<>;\r\n//\r\n//       // other misc information attached to the ledger close\r\n//       SCPHistoryEntry scpInfo<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaV0\", [\r\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\r\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\r\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\r\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\r\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaExtV1\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       int64 sorobanFeeWrite1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaExtV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"sorobanFeeWrite1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerCloseMetaExt switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   case 1:\r\n//       LedgerCloseMetaExtV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerCloseMetaExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerCloseMetaExtV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaV1\r\n//   {\r\n//       LedgerCloseMetaExt ext;\r\n//\r\n//       LedgerHeaderHistoryEntry ledgerHeader;\r\n//\r\n//       GeneralizedTransactionSet txSet;\r\n//\r\n//       // NB: transactions are sorted in apply order here\r\n//       // fees for all transactions are processed first\r\n//       // followed by applying transactions\r\n//       TransactionResultMeta txProcessing<>;\r\n//\r\n//       // upgrades are applied last\r\n//       UpgradeEntryMeta upgradesProcessing<>;\r\n//\r\n//       // other misc information attached to the ledger close\r\n//       SCPHistoryEntry scpInfo<>;\r\n//\r\n//       // Size in bytes of BucketList, to support downstream\r\n//       // systems calculating storage fees correctly.\r\n//       uint64 totalByteSizeOfBucketList;\r\n//\r\n//       // Temp keys that are being evicted at this ledger.\r\n//       LedgerKey evictedTemporaryLedgerKeys<>;\r\n//\r\n//       // Archived restorable ledger entries that are being\r\n//       // evicted at this ledger.\r\n//       LedgerEntry evictedPersistentLedgerEntries<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaV1\", [\r\n  [\"ext\", xdr.lookup(\"LedgerCloseMetaExt\")],\r\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\r\n  [\"txSet\", xdr.lookup(\"GeneralizedTransactionSet\")],\r\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\r\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\r\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\r\n  [\"totalByteSizeOfBucketList\", xdr.lookup(\"Uint64\")],\r\n  [\"evictedTemporaryLedgerKeys\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n  [\"evictedPersistentLedgerEntries\", xdr.varArray(xdr.lookup(\"LedgerEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerCloseMeta switch (int v)\r\n//   {\r\n//   case 0:\r\n//       LedgerCloseMetaV0 v0;\r\n//   case 1:\r\n//       LedgerCloseMetaV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerCloseMeta\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"LedgerCloseMetaV0\"),\r\n    v1: xdr.lookup(\"LedgerCloseMetaV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ErrorCode\r\n//   {\r\n//       ERR_MISC = 0, // Unspecific error\r\n//       ERR_DATA = 1, // Malformed data\r\n//       ERR_CONF = 2, // Misconfiguration error\r\n//       ERR_AUTH = 3, // Authentication failure\r\n//       ERR_LOAD = 4  // System overloaded\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ErrorCode\", {\r\n  errMisc: 0,\r\n  errData: 1,\r\n  errConf: 2,\r\n  errAuth: 3,\r\n  errLoad: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Error\r\n//   {\r\n//       ErrorCode code;\r\n//       string msg<100>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Error\", [\r\n  [\"code\", xdr.lookup(\"ErrorCode\")],\r\n  [\"msg\", xdr.string(100)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SendMore\r\n//   {\r\n//       uint32 numMessages;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SendMore\", [\r\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SendMoreExtended\r\n//   {\r\n//       uint32 numMessages;\r\n//       uint32 numBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SendMoreExtended\", [\r\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\r\n  [\"numBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AuthCert\r\n//   {\r\n//       Curve25519Public pubkey;\r\n//       uint64 expiration;\r\n//       Signature sig;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AuthCert\", [\r\n  [\"pubkey\", xdr.lookup(\"Curve25519Public\")],\r\n  [\"expiration\", xdr.lookup(\"Uint64\")],\r\n  [\"sig\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Hello\r\n//   {\r\n//       uint32 ledgerVersion;\r\n//       uint32 overlayVersion;\r\n//       uint32 overlayMinVersion;\r\n//       Hash networkID;\r\n//       string versionStr<100>;\r\n//       int listeningPort;\r\n//       NodeID peerID;\r\n//       AuthCert cert;\r\n//       uint256 nonce;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Hello\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"overlayVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"overlayMinVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"versionStr\", xdr.string(100)],\r\n  [\"listeningPort\", xdr.int()],\r\n  [\"peerId\", xdr.lookup(\"NodeId\")],\r\n  [\"cert\", xdr.lookup(\"AuthCert\")],\r\n  [\"nonce\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED = 200;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED\", 200);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Auth\r\n//   {\r\n//       int flags;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Auth\", [\r\n  [\"flags\", xdr.int()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum IPAddrType\r\n//   {\r\n//       IPv4 = 0,\r\n//       IPv6 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"IpAddrType\", {\r\n  iPv4: 0,\r\n  iPv6: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (IPAddrType type)\r\n//       {\r\n//       case IPv4:\r\n//           opaque ipv4[4];\r\n//       case IPv6:\r\n//           opaque ipv6[16];\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PeerAddressIp\", {\r\n  switchOn: xdr.lookup(\"IpAddrType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"iPv4\", \"ipv4\"],\r\n    [\"iPv6\", \"ipv6\"],\r\n  ],\r\n  arms: {\r\n    ipv4: xdr.opaque(4),\r\n    ipv6: xdr.opaque(16),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PeerAddress\r\n//   {\r\n//       union switch (IPAddrType type)\r\n//       {\r\n//       case IPv4:\r\n//           opaque ipv4[4];\r\n//       case IPv6:\r\n//           opaque ipv6[16];\r\n//       }\r\n//       ip;\r\n//       uint32 port;\r\n//       uint32 numFailures;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PeerAddress\", [\r\n  [\"ip\", xdr.lookup(\"PeerAddressIp\")],\r\n  [\"port\", xdr.lookup(\"Uint32\")],\r\n  [\"numFailures\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum MessageType\r\n//   {\r\n//       ERROR_MSG = 0,\r\n//       AUTH = 2,\r\n//       DONT_HAVE = 3,\r\n//\r\n//       GET_PEERS = 4, // gets a list of peers this guy knows about\r\n//       PEERS = 5,\r\n//\r\n//       GET_TX_SET = 6, // gets a particular txset by hash\r\n//       TX_SET = 7,\r\n//       GENERALIZED_TX_SET = 17,\r\n//\r\n//       TRANSACTION = 8, // pass on a tx you have heard about\r\n//\r\n//       // SCP\r\n//       GET_SCP_QUORUMSET = 9,\r\n//       SCP_QUORUMSET = 10,\r\n//       SCP_MESSAGE = 11,\r\n//       GET_SCP_STATE = 12,\r\n//\r\n//       // new messages\r\n//       HELLO = 13,\r\n//\r\n//       SURVEY_REQUEST = 14,\r\n//       SURVEY_RESPONSE = 15,\r\n//\r\n//       SEND_MORE = 16,\r\n//       SEND_MORE_EXTENDED = 20,\r\n//\r\n//       FLOOD_ADVERT = 18,\r\n//       FLOOD_DEMAND = 19\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"MessageType\", {\r\n  errorMsg: 0,\r\n  auth: 2,\r\n  dontHave: 3,\r\n  getPeers: 4,\r\n  peers: 5,\r\n  getTxSet: 6,\r\n  txSet: 7,\r\n  generalizedTxSet: 17,\r\n  transaction: 8,\r\n  getScpQuorumset: 9,\r\n  scpQuorumset: 10,\r\n  scpMessage: 11,\r\n  getScpState: 12,\r\n  hello: 13,\r\n  surveyRequest: 14,\r\n  surveyResponse: 15,\r\n  sendMore: 16,\r\n  sendMoreExtended: 20,\r\n  floodAdvert: 18,\r\n  floodDemand: 19,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DontHave\r\n//   {\r\n//       MessageType type;\r\n//       uint256 reqHash;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DontHave\", [\r\n  [\"type\", xdr.lookup(\"MessageType\")],\r\n  [\"reqHash\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SurveyMessageCommandType\r\n//   {\r\n//       SURVEY_TOPOLOGY = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SurveyMessageCommandType\", {\r\n  surveyTopology: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SurveyMessageResponseType\r\n//   {\r\n//       SURVEY_TOPOLOGY_RESPONSE_V0 = 0,\r\n//       SURVEY_TOPOLOGY_RESPONSE_V1 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SurveyMessageResponseType\", {\r\n  surveyTopologyResponseV0: 0,\r\n  surveyTopologyResponseV1: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SurveyRequestMessage\r\n//   {\r\n//       NodeID surveyorPeerID;\r\n//       NodeID surveyedPeerID;\r\n//       uint32 ledgerNum;\r\n//       Curve25519Public encryptionKey;\r\n//       SurveyMessageCommandType commandType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SurveyRequestMessage\", [\r\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\r\n  [\"encryptionKey\", xdr.lookup(\"Curve25519Public\")],\r\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SignedSurveyRequestMessage\r\n//   {\r\n//       Signature requestSignature;\r\n//       SurveyRequestMessage request;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignedSurveyRequestMessage\", [\r\n  [\"requestSignature\", xdr.lookup(\"Signature\")],\r\n  [\"request\", xdr.lookup(\"SurveyRequestMessage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque EncryptedBody<64000>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"EncryptedBody\", xdr.varOpaque(64000));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SurveyResponseMessage\r\n//   {\r\n//       NodeID surveyorPeerID;\r\n//       NodeID surveyedPeerID;\r\n//       uint32 ledgerNum;\r\n//       SurveyMessageCommandType commandType;\r\n//       EncryptedBody encryptedBody;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SurveyResponseMessage\", [\r\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\r\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\r\n  [\"encryptedBody\", xdr.lookup(\"EncryptedBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SignedSurveyResponseMessage\r\n//   {\r\n//       Signature responseSignature;\r\n//       SurveyResponseMessage response;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignedSurveyResponseMessage\", [\r\n  [\"responseSignature\", xdr.lookup(\"Signature\")],\r\n  [\"response\", xdr.lookup(\"SurveyResponseMessage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PeerStats\r\n//   {\r\n//       NodeID id;\r\n//       string versionStr<100>;\r\n//       uint64 messagesRead;\r\n//       uint64 messagesWritten;\r\n//       uint64 bytesRead;\r\n//       uint64 bytesWritten;\r\n//       uint64 secondsConnected;\r\n//\r\n//       uint64 uniqueFloodBytesRecv;\r\n//       uint64 duplicateFloodBytesRecv;\r\n//       uint64 uniqueFetchBytesRecv;\r\n//       uint64 duplicateFetchBytesRecv;\r\n//\r\n//       uint64 uniqueFloodMessageRecv;\r\n//       uint64 duplicateFloodMessageRecv;\r\n//       uint64 uniqueFetchMessageRecv;\r\n//       uint64 duplicateFetchMessageRecv;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PeerStats\", [\r\n  [\"id\", xdr.lookup(\"NodeId\")],\r\n  [\"versionStr\", xdr.string(100)],\r\n  [\"messagesRead\", xdr.lookup(\"Uint64\")],\r\n  [\"messagesWritten\", xdr.lookup(\"Uint64\")],\r\n  [\"bytesRead\", xdr.lookup(\"Uint64\")],\r\n  [\"bytesWritten\", xdr.lookup(\"Uint64\")],\r\n  [\"secondsConnected\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFloodBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFloodBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFetchBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFetchBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFloodMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFloodMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFetchMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFetchMessageRecv\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PeerStats PeerStatList<25>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"PeerStatList\", xdr.varArray(xdr.lookup(\"PeerStats\"), 25));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TopologyResponseBodyV0\r\n//   {\r\n//       PeerStatList inboundPeers;\r\n//       PeerStatList outboundPeers;\r\n//\r\n//       uint32 totalInboundPeerCount;\r\n//       uint32 totalOutboundPeerCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TopologyResponseBodyV0\", [\r\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TopologyResponseBodyV1\r\n//   {\r\n//       PeerStatList inboundPeers;\r\n//       PeerStatList outboundPeers;\r\n//\r\n//       uint32 totalInboundPeerCount;\r\n//       uint32 totalOutboundPeerCount;\r\n//\r\n//       uint32 maxInboundPeerCount;\r\n//       uint32 maxOutboundPeerCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TopologyResponseBodyV1\", [\r\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"maxInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"maxOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SurveyResponseBody switch (SurveyMessageResponseType type)\r\n//   {\r\n//   case SURVEY_TOPOLOGY_RESPONSE_V0:\r\n//       TopologyResponseBodyV0 topologyResponseBodyV0;\r\n//   case SURVEY_TOPOLOGY_RESPONSE_V1:\r\n//       TopologyResponseBodyV1 topologyResponseBodyV1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SurveyResponseBody\", {\r\n  switchOn: xdr.lookup(\"SurveyMessageResponseType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"surveyTopologyResponseV0\", \"topologyResponseBodyV0\"],\r\n    [\"surveyTopologyResponseV1\", \"topologyResponseBodyV1\"],\r\n  ],\r\n  arms: {\r\n    topologyResponseBodyV0: xdr.lookup(\"TopologyResponseBodyV0\"),\r\n    topologyResponseBodyV1: xdr.lookup(\"TopologyResponseBodyV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const TX_ADVERT_VECTOR_MAX_SIZE = 1000;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"TX_ADVERT_VECTOR_MAX_SIZE\", 1000);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash TxAdvertVector<TX_ADVERT_VECTOR_MAX_SIZE>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TxAdvertVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_ADVERT_VECTOR_MAX_SIZE\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FloodAdvert\r\n//   {\r\n//       TxAdvertVector txHashes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FloodAdvert\", [\r\n  [\"txHashes\", xdr.lookup(\"TxAdvertVector\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const TX_DEMAND_VECTOR_MAX_SIZE = 1000;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"TX_DEMAND_VECTOR_MAX_SIZE\", 1000);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash TxDemandVector<TX_DEMAND_VECTOR_MAX_SIZE>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TxDemandVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_DEMAND_VECTOR_MAX_SIZE\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FloodDemand\r\n//   {\r\n//       TxDemandVector txHashes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FloodDemand\", [\r\n  [\"txHashes\", xdr.lookup(\"TxDemandVector\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union StellarMessage switch (MessageType type)\r\n//   {\r\n//   case ERROR_MSG:\r\n//       Error error;\r\n//   case HELLO:\r\n//       Hello hello;\r\n//   case AUTH:\r\n//       Auth auth;\r\n//   case DONT_HAVE:\r\n//       DontHave dontHave;\r\n//   case GET_PEERS:\r\n//       void;\r\n//   case PEERS:\r\n//       PeerAddress peers<100>;\r\n//\r\n//   case GET_TX_SET:\r\n//       uint256 txSetHash;\r\n//   case TX_SET:\r\n//       TransactionSet txSet;\r\n//   case GENERALIZED_TX_SET:\r\n//       GeneralizedTransactionSet generalizedTxSet;\r\n//\r\n//   case TRANSACTION:\r\n//       TransactionEnvelope transaction;\r\n//\r\n//   case SURVEY_REQUEST:\r\n//       SignedSurveyRequestMessage signedSurveyRequestMessage;\r\n//\r\n//   case SURVEY_RESPONSE:\r\n//       SignedSurveyResponseMessage signedSurveyResponseMessage;\r\n//\r\n//   // SCP\r\n//   case GET_SCP_QUORUMSET:\r\n//       uint256 qSetHash;\r\n//   case SCP_QUORUMSET:\r\n//       SCPQuorumSet qSet;\r\n//   case SCP_MESSAGE:\r\n//       SCPEnvelope envelope;\r\n//   case GET_SCP_STATE:\r\n//       uint32 getSCPLedgerSeq; // ledger seq requested ; if 0, requests the latest\r\n//   case SEND_MORE:\r\n//       SendMore sendMoreMessage;\r\n//   case SEND_MORE_EXTENDED:\r\n//       SendMoreExtended sendMoreExtendedMessage;\r\n//   // Pull mode\r\n//   case FLOOD_ADVERT:\r\n//        FloodAdvert floodAdvert;\r\n//   case FLOOD_DEMAND:\r\n//        FloodDemand floodDemand;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"StellarMessage\", {\r\n  switchOn: xdr.lookup(\"MessageType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"errorMsg\", \"error\"],\r\n    [\"hello\", \"hello\"],\r\n    [\"auth\", \"auth\"],\r\n    [\"dontHave\", \"dontHave\"],\r\n    [\"getPeers\", xdr.void()],\r\n    [\"peers\", \"peers\"],\r\n    [\"getTxSet\", \"txSetHash\"],\r\n    [\"txSet\", \"txSet\"],\r\n    [\"generalizedTxSet\", \"generalizedTxSet\"],\r\n    [\"transaction\", \"transaction\"],\r\n    [\"surveyRequest\", \"signedSurveyRequestMessage\"],\r\n    [\"surveyResponse\", \"signedSurveyResponseMessage\"],\r\n    [\"getScpQuorumset\", \"qSetHash\"],\r\n    [\"scpQuorumset\", \"qSet\"],\r\n    [\"scpMessage\", \"envelope\"],\r\n    [\"getScpState\", \"getScpLedgerSeq\"],\r\n    [\"sendMore\", \"sendMoreMessage\"],\r\n    [\"sendMoreExtended\", \"sendMoreExtendedMessage\"],\r\n    [\"floodAdvert\", \"floodAdvert\"],\r\n    [\"floodDemand\", \"floodDemand\"],\r\n  ],\r\n  arms: {\r\n    error: xdr.lookup(\"Error\"),\r\n    hello: xdr.lookup(\"Hello\"),\r\n    auth: xdr.lookup(\"Auth\"),\r\n    dontHave: xdr.lookup(\"DontHave\"),\r\n    peers: xdr.varArray(xdr.lookup(\"PeerAddress\"), 100),\r\n    txSetHash: xdr.lookup(\"Uint256\"),\r\n    txSet: xdr.lookup(\"TransactionSet\"),\r\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\r\n    transaction: xdr.lookup(\"TransactionEnvelope\"),\r\n    signedSurveyRequestMessage: xdr.lookup(\"SignedSurveyRequestMessage\"),\r\n    signedSurveyResponseMessage: xdr.lookup(\"SignedSurveyResponseMessage\"),\r\n    qSetHash: xdr.lookup(\"Uint256\"),\r\n    qSet: xdr.lookup(\"ScpQuorumSet\"),\r\n    envelope: xdr.lookup(\"ScpEnvelope\"),\r\n    getScpLedgerSeq: xdr.lookup(\"Uint32\"),\r\n    sendMoreMessage: xdr.lookup(\"SendMore\"),\r\n    sendMoreExtendedMessage: xdr.lookup(\"SendMoreExtended\"),\r\n    floodAdvert: xdr.lookup(\"FloodAdvert\"),\r\n    floodDemand: xdr.lookup(\"FloodDemand\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           uint64 sequence;\r\n//           StellarMessage message;\r\n//           HmacSha256Mac mac;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AuthenticatedMessageV0\", [\r\n  [\"sequence\", xdr.lookup(\"Uint64\")],\r\n  [\"message\", xdr.lookup(\"StellarMessage\")],\r\n  [\"mac\", xdr.lookup(\"HmacSha256Mac\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AuthenticatedMessage switch (uint32 v)\r\n//   {\r\n//   case 0:\r\n//       struct\r\n//       {\r\n//           uint64 sequence;\r\n//           StellarMessage message;\r\n//           HmacSha256Mac mac;\r\n//       } v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AuthenticatedMessage\", {\r\n  switchOn: xdr.lookup(\"Uint32\"),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"AuthenticatedMessageV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MAX_OPS_PER_TX = 100;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MAX_OPS_PER_TX\", 100);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolParameters switch (LiquidityPoolType type)\r\n//   {\r\n//   case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//       LiquidityPoolConstantProductParameters constantProduct;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolParameters\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\r\n  ],\r\n  arms: {\r\n    constantProduct: xdr.lookup(\"LiquidityPoolConstantProductParameters\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           uint64 id;\r\n//           uint256 ed25519;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"MuxedAccountMed25519\", [\r\n  [\"id\", xdr.lookup(\"Uint64\")],\r\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union MuxedAccount switch (CryptoKeyType type)\r\n//   {\r\n//   case KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   case KEY_TYPE_MUXED_ED25519:\r\n//       struct\r\n//       {\r\n//           uint64 id;\r\n//           uint256 ed25519;\r\n//       } med25519;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"MuxedAccount\", {\r\n  switchOn: xdr.lookup(\"CryptoKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"keyTypeEd25519\", \"ed25519\"],\r\n    [\"keyTypeMuxedEd25519\", \"med25519\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n    med25519: xdr.lookup(\"MuxedAccountMed25519\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DecoratedSignature\r\n//   {\r\n//       SignatureHint hint;  // last 4 bytes of the public key, used as a hint\r\n//       Signature signature; // actual signature\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DecoratedSignature\", [\r\n  [\"hint\", xdr.lookup(\"SignatureHint\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OperationType\r\n//   {\r\n//       CREATE_ACCOUNT = 0,\r\n//       PAYMENT = 1,\r\n//       PATH_PAYMENT_STRICT_RECEIVE = 2,\r\n//       MANAGE_SELL_OFFER = 3,\r\n//       CREATE_PASSIVE_SELL_OFFER = 4,\r\n//       SET_OPTIONS = 5,\r\n//       CHANGE_TRUST = 6,\r\n//       ALLOW_TRUST = 7,\r\n//       ACCOUNT_MERGE = 8,\r\n//       INFLATION = 9,\r\n//       MANAGE_DATA = 10,\r\n//       BUMP_SEQUENCE = 11,\r\n//       MANAGE_BUY_OFFER = 12,\r\n//       PATH_PAYMENT_STRICT_SEND = 13,\r\n//       CREATE_CLAIMABLE_BALANCE = 14,\r\n//       CLAIM_CLAIMABLE_BALANCE = 15,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES = 16,\r\n//       END_SPONSORING_FUTURE_RESERVES = 17,\r\n//       REVOKE_SPONSORSHIP = 18,\r\n//       CLAWBACK = 19,\r\n//       CLAWBACK_CLAIMABLE_BALANCE = 20,\r\n//       SET_TRUST_LINE_FLAGS = 21,\r\n//       LIQUIDITY_POOL_DEPOSIT = 22,\r\n//       LIQUIDITY_POOL_WITHDRAW = 23,\r\n//       INVOKE_HOST_FUNCTION = 24,\r\n//       EXTEND_FOOTPRINT_TTL = 25,\r\n//       RESTORE_FOOTPRINT = 26\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OperationType\", {\r\n  createAccount: 0,\r\n  payment: 1,\r\n  pathPaymentStrictReceive: 2,\r\n  manageSellOffer: 3,\r\n  createPassiveSellOffer: 4,\r\n  setOptions: 5,\r\n  changeTrust: 6,\r\n  allowTrust: 7,\r\n  accountMerge: 8,\r\n  inflation: 9,\r\n  manageData: 10,\r\n  bumpSequence: 11,\r\n  manageBuyOffer: 12,\r\n  pathPaymentStrictSend: 13,\r\n  createClaimableBalance: 14,\r\n  claimClaimableBalance: 15,\r\n  beginSponsoringFutureReserves: 16,\r\n  endSponsoringFutureReserves: 17,\r\n  revokeSponsorship: 18,\r\n  clawback: 19,\r\n  clawbackClaimableBalance: 20,\r\n  setTrustLineFlags: 21,\r\n  liquidityPoolDeposit: 22,\r\n  liquidityPoolWithdraw: 23,\r\n  invokeHostFunction: 24,\r\n  extendFootprintTtl: 25,\r\n  restoreFootprint: 26,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateAccountOp\r\n//   {\r\n//       AccountID destination; // account to create\r\n//       int64 startingBalance; // amount they end up with\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateAccountOp\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"startingBalance\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PaymentOp\r\n//   {\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset asset;              // what they end up with\r\n//       int64 amount;             // amount they end up with\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PaymentOp\", [\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PathPaymentStrictReceiveOp\r\n//   {\r\n//       Asset sendAsset; // asset we pay with\r\n//       int64 sendMax;   // the maximum amount of sendAsset to\r\n//                        // send (excluding fees).\r\n//                        // The operation will fail if can't be met\r\n//\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset destAsset;          // what they end up with\r\n//       int64 destAmount;         // amount they end up with\r\n//\r\n//       Asset path<5>; // additional hops it must go through to get there\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictReceiveOp\", [\r\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\r\n  [\"sendMax\", xdr.lookup(\"Int64\")],\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"destAsset\", xdr.lookup(\"Asset\")],\r\n  [\"destAmount\", xdr.lookup(\"Int64\")],\r\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PathPaymentStrictSendOp\r\n//   {\r\n//       Asset sendAsset;  // asset we pay with\r\n//       int64 sendAmount; // amount of sendAsset to send (excluding fees)\r\n//\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset destAsset;          // what they end up with\r\n//       int64 destMin;            // the minimum amount of dest asset to\r\n//                                 // be received\r\n//                                 // The operation will fail if it can't be met\r\n//\r\n//       Asset path<5>; // additional hops it must go through to get there\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictSendOp\", [\r\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\r\n  [\"sendAmount\", xdr.lookup(\"Int64\")],\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"destAsset\", xdr.lookup(\"Asset\")],\r\n  [\"destMin\", xdr.lookup(\"Int64\")],\r\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageSellOfferOp\r\n//   {\r\n//       Asset selling;\r\n//       Asset buying;\r\n//       int64 amount; // amount being sold. if set to 0, delete the offer\r\n//       Price price;  // price of thing being sold in terms of what you are buying\r\n//\r\n//       // 0=create a new offer, otherwise edit an existing offer\r\n//       int64 offerID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageSellOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageBuyOfferOp\r\n//   {\r\n//       Asset selling;\r\n//       Asset buying;\r\n//       int64 buyAmount; // amount being bought. if set to 0, delete the offer\r\n//       Price price;     // price of thing being bought in terms of what you are\r\n//                        // selling\r\n//\r\n//       // 0=create a new offer, otherwise edit an existing offer\r\n//       int64 offerID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageBuyOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"buyAmount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreatePassiveSellOfferOp\r\n//   {\r\n//       Asset selling; // A\r\n//       Asset buying;  // B\r\n//       int64 amount;  // amount taker gets\r\n//       Price price;   // cost of A in terms of B\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreatePassiveSellOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SetOptionsOp\r\n//   {\r\n//       AccountID* inflationDest; // sets the inflation destination\r\n//\r\n//       uint32* clearFlags; // which flags to clear\r\n//       uint32* setFlags;   // which flags to set\r\n//\r\n//       // account threshold manipulation\r\n//       uint32* masterWeight; // weight of the master account\r\n//       uint32* lowThreshold;\r\n//       uint32* medThreshold;\r\n//       uint32* highThreshold;\r\n//\r\n//       string32* homeDomain; // sets the home domain\r\n//\r\n//       // Add, update or remove a signer for the account\r\n//       // signer is deleted if the weight is 0\r\n//       Signer* signer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SetOptionsOp\", [\r\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\r\n  [\"clearFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"setFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"masterWeight\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"lowThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"medThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"highThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"homeDomain\", xdr.option(xdr.lookup(\"String32\"))],\r\n  [\"signer\", xdr.option(xdr.lookup(\"Signer\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ChangeTrustAsset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//   case ASSET_TYPE_POOL_SHARE:\r\n//       LiquidityPoolParameters liquidityPool;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ChangeTrustAsset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n    [\"assetTypePoolShare\", \"liquidityPool\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n    liquidityPool: xdr.lookup(\"LiquidityPoolParameters\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ChangeTrustOp\r\n//   {\r\n//       ChangeTrustAsset line;\r\n//\r\n//       // if limit is set to 0, deletes the trust line\r\n//       int64 limit;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ChangeTrustOp\", [\r\n  [\"line\", xdr.lookup(\"ChangeTrustAsset\")],\r\n  [\"limit\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AllowTrustOp\r\n//   {\r\n//       AccountID trustor;\r\n//       AssetCode asset;\r\n//\r\n//       // One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG\r\n//       uint32 authorize;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AllowTrustOp\", [\r\n  [\"trustor\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"AssetCode\")],\r\n  [\"authorize\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageDataOp\r\n//   {\r\n//       string64 dataName;\r\n//       DataValue* dataValue; // set to null to clear\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageDataOp\", [\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n  [\"dataValue\", xdr.option(xdr.lookup(\"DataValue\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BumpSequenceOp\r\n//   {\r\n//       SequenceNumber bumpTo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BumpSequenceOp\", [\r\n  [\"bumpTo\", xdr.lookup(\"SequenceNumber\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateClaimableBalanceOp\r\n//   {\r\n//       Asset asset;\r\n//       int64 amount;\r\n//       Claimant claimants<10>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateClaimableBalanceOp\", [\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimClaimableBalanceOp\r\n//   {\r\n//       ClaimableBalanceID balanceID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimClaimableBalanceOp\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BeginSponsoringFutureReservesOp\r\n//   {\r\n//       AccountID sponsoredID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BeginSponsoringFutureReservesOp\", [\r\n  [\"sponsoredId\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RevokeSponsorshipType\r\n//   {\r\n//       REVOKE_SPONSORSHIP_LEDGER_ENTRY = 0,\r\n//       REVOKE_SPONSORSHIP_SIGNER = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RevokeSponsorshipType\", {\r\n  revokeSponsorshipLedgerEntry: 0,\r\n  revokeSponsorshipSigner: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           SignerKey signerKey;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"RevokeSponsorshipOpSigner\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"signerKey\", xdr.lookup(\"SignerKey\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RevokeSponsorshipOp switch (RevokeSponsorshipType type)\r\n//   {\r\n//   case REVOKE_SPONSORSHIP_LEDGER_ENTRY:\r\n//       LedgerKey ledgerKey;\r\n//   case REVOKE_SPONSORSHIP_SIGNER:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           SignerKey signerKey;\r\n//       } signer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RevokeSponsorshipOp\", {\r\n  switchOn: xdr.lookup(\"RevokeSponsorshipType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"revokeSponsorshipLedgerEntry\", \"ledgerKey\"],\r\n    [\"revokeSponsorshipSigner\", \"signer\"],\r\n  ],\r\n  arms: {\r\n    ledgerKey: xdr.lookup(\"LedgerKey\"),\r\n    signer: xdr.lookup(\"RevokeSponsorshipOpSigner\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClawbackOp\r\n//   {\r\n//       Asset asset;\r\n//       MuxedAccount from;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClawbackOp\", [\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"from\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClawbackClaimableBalanceOp\r\n//   {\r\n//       ClaimableBalanceID balanceID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClawbackClaimableBalanceOp\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SetTrustLineFlagsOp\r\n//   {\r\n//       AccountID trustor;\r\n//       Asset asset;\r\n//\r\n//       uint32 clearFlags; // which flags to clear\r\n//       uint32 setFlags;   // which flags to set\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SetTrustLineFlagsOp\", [\r\n  [\"trustor\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"clearFlags\", xdr.lookup(\"Uint32\")],\r\n  [\"setFlags\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const LIQUIDITY_POOL_FEE_V18 = 30;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"LIQUIDITY_POOL_FEE_V18\", 30);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolDepositOp\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//       int64 maxAmountA; // maximum amount of first asset to deposit\r\n//       int64 maxAmountB; // maximum amount of second asset to deposit\r\n//       Price minPrice;   // minimum depositA/depositB\r\n//       Price maxPrice;   // maximum depositA/depositB\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolDepositOp\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"maxAmountA\", xdr.lookup(\"Int64\")],\r\n  [\"maxAmountB\", xdr.lookup(\"Int64\")],\r\n  [\"minPrice\", xdr.lookup(\"Price\")],\r\n  [\"maxPrice\", xdr.lookup(\"Price\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolWithdrawOp\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//       int64 amount;     // amount of pool shares to withdraw\r\n//       int64 minAmountA; // minimum amount of first asset to withdraw\r\n//       int64 minAmountB; // minimum amount of second asset to withdraw\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolWithdrawOp\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"minAmountA\", xdr.lookup(\"Int64\")],\r\n  [\"minAmountB\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum HostFunctionType\r\n//   {\r\n//       HOST_FUNCTION_TYPE_INVOKE_CONTRACT = 0,\r\n//       HOST_FUNCTION_TYPE_CREATE_CONTRACT = 1,\r\n//       HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"HostFunctionType\", {\r\n  hostFunctionTypeInvokeContract: 0,\r\n  hostFunctionTypeCreateContract: 1,\r\n  hostFunctionTypeUploadContractWasm: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractIDPreimageType\r\n//   {\r\n//       CONTRACT_ID_PREIMAGE_FROM_ADDRESS = 0,\r\n//       CONTRACT_ID_PREIMAGE_FROM_ASSET = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractIdPreimageType\", {\r\n  contractIdPreimageFromAddress: 0,\r\n  contractIdPreimageFromAsset: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           SCAddress address;\r\n//           uint256 salt;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractIdPreimageFromAddress\", [\r\n  [\"address\", xdr.lookup(\"ScAddress\")],\r\n  [\"salt\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ContractIDPreimage switch (ContractIDPreimageType type)\r\n//   {\r\n//   case CONTRACT_ID_PREIMAGE_FROM_ADDRESS:\r\n//       struct\r\n//       {\r\n//           SCAddress address;\r\n//           uint256 salt;\r\n//       } fromAddress;\r\n//   case CONTRACT_ID_PREIMAGE_FROM_ASSET:\r\n//       Asset fromAsset;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractIdPreimage\", {\r\n  switchOn: xdr.lookup(\"ContractIdPreimageType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"contractIdPreimageFromAddress\", \"fromAddress\"],\r\n    [\"contractIdPreimageFromAsset\", \"fromAsset\"],\r\n  ],\r\n  arms: {\r\n    fromAddress: xdr.lookup(\"ContractIdPreimageFromAddress\"),\r\n    fromAsset: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateContractArgs\r\n//   {\r\n//       ContractIDPreimage contractIDPreimage;\r\n//       ContractExecutable executable;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateContractArgs\", [\r\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\r\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeContractArgs {\r\n//       SCAddress contractAddress;\r\n//       SCSymbol functionName;\r\n//       SCVal args<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeContractArgs\", [\r\n  [\"contractAddress\", xdr.lookup(\"ScAddress\")],\r\n  [\"functionName\", xdr.lookup(\"ScSymbol\")],\r\n  [\"args\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union HostFunction switch (HostFunctionType type)\r\n//   {\r\n//   case HOST_FUNCTION_TYPE_INVOKE_CONTRACT:\r\n//       InvokeContractArgs invokeContract;\r\n//   case HOST_FUNCTION_TYPE_CREATE_CONTRACT:\r\n//       CreateContractArgs createContract;\r\n//   case HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM:\r\n//       opaque wasm<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"HostFunction\", {\r\n  switchOn: xdr.lookup(\"HostFunctionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"hostFunctionTypeInvokeContract\", \"invokeContract\"],\r\n    [\"hostFunctionTypeCreateContract\", \"createContract\"],\r\n    [\"hostFunctionTypeUploadContractWasm\", \"wasm\"],\r\n  ],\r\n  arms: {\r\n    invokeContract: xdr.lookup(\"InvokeContractArgs\"),\r\n    createContract: xdr.lookup(\"CreateContractArgs\"),\r\n    wasm: xdr.varOpaque(),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SorobanAuthorizedFunctionType\r\n//   {\r\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN = 0,\r\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SorobanAuthorizedFunctionType\", {\r\n  sorobanAuthorizedFunctionTypeContractFn: 0,\r\n  sorobanAuthorizedFunctionTypeCreateContractHostFn: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanAuthorizedFunction switch (SorobanAuthorizedFunctionType type)\r\n//   {\r\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:\r\n//       InvokeContractArgs contractFn;\r\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:\r\n//       CreateContractArgs createContractHostFn;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanAuthorizedFunction\", {\r\n  switchOn: xdr.lookup(\"SorobanAuthorizedFunctionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sorobanAuthorizedFunctionTypeContractFn\", \"contractFn\"],\r\n    [\"sorobanAuthorizedFunctionTypeCreateContractHostFn\", \"createContractHostFn\"],\r\n  ],\r\n  arms: {\r\n    contractFn: xdr.lookup(\"InvokeContractArgs\"),\r\n    createContractHostFn: xdr.lookup(\"CreateContractArgs\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAuthorizedInvocation\r\n//   {\r\n//       SorobanAuthorizedFunction function;\r\n//       SorobanAuthorizedInvocation subInvocations<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAuthorizedInvocation\", [\r\n  [\"function\", xdr.lookup(\"SorobanAuthorizedFunction\")],\r\n  [\"subInvocations\", xdr.varArray(xdr.lookup(\"SorobanAuthorizedInvocation\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAddressCredentials\r\n//   {\r\n//       SCAddress address;\r\n//       int64 nonce;\r\n//       uint32 signatureExpirationLedger;\r\n//       SCVal signature;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAddressCredentials\", [\r\n  [\"address\", xdr.lookup(\"ScAddress\")],\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"signature\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SorobanCredentialsType\r\n//   {\r\n//       SOROBAN_CREDENTIALS_SOURCE_ACCOUNT = 0,\r\n//       SOROBAN_CREDENTIALS_ADDRESS = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SorobanCredentialsType\", {\r\n  sorobanCredentialsSourceAccount: 0,\r\n  sorobanCredentialsAddress: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanCredentials switch (SorobanCredentialsType type)\r\n//   {\r\n//   case SOROBAN_CREDENTIALS_SOURCE_ACCOUNT:\r\n//       void;\r\n//   case SOROBAN_CREDENTIALS_ADDRESS:\r\n//       SorobanAddressCredentials address;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanCredentials\", {\r\n  switchOn: xdr.lookup(\"SorobanCredentialsType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sorobanCredentialsSourceAccount\", xdr.void()],\r\n    [\"sorobanCredentialsAddress\", \"address\"],\r\n  ],\r\n  arms: {\r\n    address: xdr.lookup(\"SorobanAddressCredentials\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAuthorizationEntry\r\n//   {\r\n//       SorobanCredentials credentials;\r\n//       SorobanAuthorizedInvocation rootInvocation;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAuthorizationEntry\", [\r\n  [\"credentials\", xdr.lookup(\"SorobanCredentials\")],\r\n  [\"rootInvocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeHostFunctionOp\r\n//   {\r\n//       // Host function to invoke.\r\n//       HostFunction hostFunction;\r\n//       // Per-address authorizations for this host function.\r\n//       SorobanAuthorizationEntry auth<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeHostFunctionOp\", [\r\n  [\"hostFunction\", xdr.lookup(\"HostFunction\")],\r\n  [\"auth\", xdr.varArray(xdr.lookup(\"SorobanAuthorizationEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ExtendFootprintTTLOp\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       uint32 extendTo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ExtendFootprintTtlOp\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"extendTo\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct RestoreFootprintOp\r\n//   {\r\n//       ExtensionPoint ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"RestoreFootprintOp\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountOp createAccountOp;\r\n//       case PAYMENT:\r\n//           PaymentOp paymentOp;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferOp manageSellOfferOp;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsOp setOptionsOp;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustOp changeTrustOp;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustOp allowTrustOp;\r\n//       case ACCOUNT_MERGE:\r\n//           MuxedAccount destination;\r\n//       case INFLATION:\r\n//           void;\r\n//       case MANAGE_DATA:\r\n//           ManageDataOp manageDataOp;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceOp bumpSequenceOp;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferOp manageBuyOfferOp;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           void;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipOp revokeSponsorshipOp;\r\n//       case CLAWBACK:\r\n//           ClawbackOp clawbackOp;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionOp invokeHostFunctionOp;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintOp restoreFootprintOp;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationBody\", {\r\n  switchOn: xdr.lookup(\"OperationType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"createAccount\", \"createAccountOp\"],\r\n    [\"payment\", \"paymentOp\"],\r\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveOp\"],\r\n    [\"manageSellOffer\", \"manageSellOfferOp\"],\r\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferOp\"],\r\n    [\"setOptions\", \"setOptionsOp\"],\r\n    [\"changeTrust\", \"changeTrustOp\"],\r\n    [\"allowTrust\", \"allowTrustOp\"],\r\n    [\"accountMerge\", \"destination\"],\r\n    [\"inflation\", xdr.void()],\r\n    [\"manageData\", \"manageDataOp\"],\r\n    [\"bumpSequence\", \"bumpSequenceOp\"],\r\n    [\"manageBuyOffer\", \"manageBuyOfferOp\"],\r\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendOp\"],\r\n    [\"createClaimableBalance\", \"createClaimableBalanceOp\"],\r\n    [\"claimClaimableBalance\", \"claimClaimableBalanceOp\"],\r\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesOp\"],\r\n    [\"endSponsoringFutureReserves\", xdr.void()],\r\n    [\"revokeSponsorship\", \"revokeSponsorshipOp\"],\r\n    [\"clawback\", \"clawbackOp\"],\r\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceOp\"],\r\n    [\"setTrustLineFlags\", \"setTrustLineFlagsOp\"],\r\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositOp\"],\r\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawOp\"],\r\n    [\"invokeHostFunction\", \"invokeHostFunctionOp\"],\r\n    [\"extendFootprintTtl\", \"extendFootprintTtlOp\"],\r\n    [\"restoreFootprint\", \"restoreFootprintOp\"],\r\n  ],\r\n  arms: {\r\n    createAccountOp: xdr.lookup(\"CreateAccountOp\"),\r\n    paymentOp: xdr.lookup(\"PaymentOp\"),\r\n    pathPaymentStrictReceiveOp: xdr.lookup(\"PathPaymentStrictReceiveOp\"),\r\n    manageSellOfferOp: xdr.lookup(\"ManageSellOfferOp\"),\r\n    createPassiveSellOfferOp: xdr.lookup(\"CreatePassiveSellOfferOp\"),\r\n    setOptionsOp: xdr.lookup(\"SetOptionsOp\"),\r\n    changeTrustOp: xdr.lookup(\"ChangeTrustOp\"),\r\n    allowTrustOp: xdr.lookup(\"AllowTrustOp\"),\r\n    destination: xdr.lookup(\"MuxedAccount\"),\r\n    manageDataOp: xdr.lookup(\"ManageDataOp\"),\r\n    bumpSequenceOp: xdr.lookup(\"BumpSequenceOp\"),\r\n    manageBuyOfferOp: xdr.lookup(\"ManageBuyOfferOp\"),\r\n    pathPaymentStrictSendOp: xdr.lookup(\"PathPaymentStrictSendOp\"),\r\n    createClaimableBalanceOp: xdr.lookup(\"CreateClaimableBalanceOp\"),\r\n    claimClaimableBalanceOp: xdr.lookup(\"ClaimClaimableBalanceOp\"),\r\n    beginSponsoringFutureReservesOp: xdr.lookup(\"BeginSponsoringFutureReservesOp\"),\r\n    revokeSponsorshipOp: xdr.lookup(\"RevokeSponsorshipOp\"),\r\n    clawbackOp: xdr.lookup(\"ClawbackOp\"),\r\n    clawbackClaimableBalanceOp: xdr.lookup(\"ClawbackClaimableBalanceOp\"),\r\n    setTrustLineFlagsOp: xdr.lookup(\"SetTrustLineFlagsOp\"),\r\n    liquidityPoolDepositOp: xdr.lookup(\"LiquidityPoolDepositOp\"),\r\n    liquidityPoolWithdrawOp: xdr.lookup(\"LiquidityPoolWithdrawOp\"),\r\n    invokeHostFunctionOp: xdr.lookup(\"InvokeHostFunctionOp\"),\r\n    extendFootprintTtlOp: xdr.lookup(\"ExtendFootprintTtlOp\"),\r\n    restoreFootprintOp: xdr.lookup(\"RestoreFootprintOp\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Operation\r\n//   {\r\n//       // sourceAccount is the account used to run the operation\r\n//       // if not set, the runtime defaults to \"sourceAccount\" specified at\r\n//       // the transaction level\r\n//       MuxedAccount* sourceAccount;\r\n//\r\n//       union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountOp createAccountOp;\r\n//       case PAYMENT:\r\n//           PaymentOp paymentOp;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferOp manageSellOfferOp;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsOp setOptionsOp;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustOp changeTrustOp;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustOp allowTrustOp;\r\n//       case ACCOUNT_MERGE:\r\n//           MuxedAccount destination;\r\n//       case INFLATION:\r\n//           void;\r\n//       case MANAGE_DATA:\r\n//           ManageDataOp manageDataOp;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceOp bumpSequenceOp;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferOp manageBuyOfferOp;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           void;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipOp revokeSponsorshipOp;\r\n//       case CLAWBACK:\r\n//           ClawbackOp clawbackOp;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionOp invokeHostFunctionOp;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintOp restoreFootprintOp;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Operation\", [\r\n  [\"sourceAccount\", xdr.option(xdr.lookup(\"MuxedAccount\"))],\r\n  [\"body\", xdr.lookup(\"OperationBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageOperationId\", [\r\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"opNum\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//           PoolID liquidityPoolID;\r\n//           Asset asset;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageRevokeId\", [\r\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"opNum\", xdr.lookup(\"Uint32\")],\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash networkID;\r\n//           ContractIDPreimage contractIDPreimage;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageContractId\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash networkID;\r\n//           int64 nonce;\r\n//           uint32 signatureExpirationLedger;\r\n//           SorobanAuthorizedInvocation invocation;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageSorobanAuthorization\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"invocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union HashIDPreimage switch (EnvelopeType type)\r\n//   {\r\n//   case ENVELOPE_TYPE_OP_ID:\r\n//       struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//       } operationID;\r\n//   case ENVELOPE_TYPE_POOL_REVOKE_OP_ID:\r\n//       struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//           PoolID liquidityPoolID;\r\n//           Asset asset;\r\n//       } revokeID;\r\n//   case ENVELOPE_TYPE_CONTRACT_ID:\r\n//       struct\r\n//       {\r\n//           Hash networkID;\r\n//           ContractIDPreimage contractIDPreimage;\r\n//       } contractID;\r\n//   case ENVELOPE_TYPE_SOROBAN_AUTHORIZATION:\r\n//       struct\r\n//       {\r\n//           Hash networkID;\r\n//           int64 nonce;\r\n//           uint32 signatureExpirationLedger;\r\n//           SorobanAuthorizedInvocation invocation;\r\n//       } sorobanAuthorization;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"HashIdPreimage\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeOpId\", \"operationId\"],\r\n    [\"envelopeTypePoolRevokeOpId\", \"revokeId\"],\r\n    [\"envelopeTypeContractId\", \"contractId\"],\r\n    [\"envelopeTypeSorobanAuthorization\", \"sorobanAuthorization\"],\r\n  ],\r\n  arms: {\r\n    operationId: xdr.lookup(\"HashIdPreimageOperationId\"),\r\n    revokeId: xdr.lookup(\"HashIdPreimageRevokeId\"),\r\n    contractId: xdr.lookup(\"HashIdPreimageContractId\"),\r\n    sorobanAuthorization: xdr.lookup(\"HashIdPreimageSorobanAuthorization\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum MemoType\r\n//   {\r\n//       MEMO_NONE = 0,\r\n//       MEMO_TEXT = 1,\r\n//       MEMO_ID = 2,\r\n//       MEMO_HASH = 3,\r\n//       MEMO_RETURN = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"MemoType\", {\r\n  memoNone: 0,\r\n  memoText: 1,\r\n  memoId: 2,\r\n  memoHash: 3,\r\n  memoReturn: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Memo switch (MemoType type)\r\n//   {\r\n//   case MEMO_NONE:\r\n//       void;\r\n//   case MEMO_TEXT:\r\n//       string text<28>;\r\n//   case MEMO_ID:\r\n//       uint64 id;\r\n//   case MEMO_HASH:\r\n//       Hash hash; // the hash of what to pull from the content server\r\n//   case MEMO_RETURN:\r\n//       Hash retHash; // the hash of the tx you are rejecting\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Memo\", {\r\n  switchOn: xdr.lookup(\"MemoType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"memoNone\", xdr.void()],\r\n    [\"memoText\", \"text\"],\r\n    [\"memoId\", \"id\"],\r\n    [\"memoHash\", \"hash\"],\r\n    [\"memoReturn\", \"retHash\"],\r\n  ],\r\n  arms: {\r\n    text: xdr.string(28),\r\n    id: xdr.lookup(\"Uint64\"),\r\n    hash: xdr.lookup(\"Hash\"),\r\n    retHash: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TimeBounds\r\n//   {\r\n//       TimePoint minTime;\r\n//       TimePoint maxTime; // 0 here means no maxTime\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TimeBounds\", [\r\n  [\"minTime\", xdr.lookup(\"TimePoint\")],\r\n  [\"maxTime\", xdr.lookup(\"TimePoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerBounds\r\n//   {\r\n//       uint32 minLedger;\r\n//       uint32 maxLedger; // 0 here means no maxLedger\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerBounds\", [\r\n  [\"minLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"maxLedger\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PreconditionsV2\r\n//   {\r\n//       TimeBounds* timeBounds;\r\n//\r\n//       // Transaction only valid for ledger numbers n such that\r\n//       // minLedger <= n < maxLedger (if maxLedger == 0, then\r\n//       // only minLedger is checked)\r\n//       LedgerBounds* ledgerBounds;\r\n//\r\n//       // If NULL, only valid when sourceAccount's sequence number\r\n//       // is seqNum - 1.  Otherwise, valid when sourceAccount's\r\n//       // sequence number n satisfies minSeqNum <= n < tx.seqNum.\r\n//       // Note that after execution the account's sequence number\r\n//       // is always raised to tx.seqNum, and a transaction is not\r\n//       // valid if tx.seqNum is too high to ensure replay protection.\r\n//       SequenceNumber* minSeqNum;\r\n//\r\n//       // For the transaction to be valid, the current ledger time must\r\n//       // be at least minSeqAge greater than sourceAccount's seqTime.\r\n//       Duration minSeqAge;\r\n//\r\n//       // For the transaction to be valid, the current ledger number\r\n//       // must be at least minSeqLedgerGap greater than sourceAccount's\r\n//       // seqLedger.\r\n//       uint32 minSeqLedgerGap;\r\n//\r\n//       // For the transaction to be valid, there must be a signature\r\n//       // corresponding to every Signer in this array, even if the\r\n//       // signature is not otherwise required by the sourceAccount or\r\n//       // operations.\r\n//       SignerKey extraSigners<2>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PreconditionsV2\", [\r\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\r\n  [\"ledgerBounds\", xdr.option(xdr.lookup(\"LedgerBounds\"))],\r\n  [\"minSeqNum\", xdr.option(xdr.lookup(\"SequenceNumber\"))],\r\n  [\"minSeqAge\", xdr.lookup(\"Duration\")],\r\n  [\"minSeqLedgerGap\", xdr.lookup(\"Uint32\")],\r\n  [\"extraSigners\", xdr.varArray(xdr.lookup(\"SignerKey\"), 2)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PreconditionType\r\n//   {\r\n//       PRECOND_NONE = 0,\r\n//       PRECOND_TIME = 1,\r\n//       PRECOND_V2 = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PreconditionType\", {\r\n  precondNone: 0,\r\n  precondTime: 1,\r\n  precondV2: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Preconditions switch (PreconditionType type)\r\n//   {\r\n//   case PRECOND_NONE:\r\n//       void;\r\n//   case PRECOND_TIME:\r\n//       TimeBounds timeBounds;\r\n//   case PRECOND_V2:\r\n//       PreconditionsV2 v2;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Preconditions\", {\r\n  switchOn: xdr.lookup(\"PreconditionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"precondNone\", xdr.void()],\r\n    [\"precondTime\", \"timeBounds\"],\r\n    [\"precondV2\", \"v2\"],\r\n  ],\r\n  arms: {\r\n    timeBounds: xdr.lookup(\"TimeBounds\"),\r\n    v2: xdr.lookup(\"PreconditionsV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerFootprint\r\n//   {\r\n//       LedgerKey readOnly<>;\r\n//       LedgerKey readWrite<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerFootprint\", [\r\n  [\"readOnly\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n  [\"readWrite\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanResources\r\n//   {\r\n//       // The ledger footprint of the transaction.\r\n//       LedgerFootprint footprint;\r\n//       // The maximum number of instructions this transaction can use\r\n//       uint32 instructions;\r\n//\r\n//       // The maximum number of bytes this transaction can read from ledger\r\n//       uint32 readBytes;\r\n//       // The maximum number of bytes this transaction can write to ledger\r\n//       uint32 writeBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanResources\", [\r\n  [\"footprint\", xdr.lookup(\"LedgerFootprint\")],\r\n  [\"instructions\", xdr.lookup(\"Uint32\")],\r\n  [\"readBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"writeBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionData\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       SorobanResources resources;\r\n//       // Amount of the transaction `fee` allocated to the Soroban resource fees.\r\n//       // The fraction of `resourceFee` corresponding to `resources` specified\r\n//       // above is *not* refundable (i.e. fees for instructions, ledger I/O), as\r\n//       // well as fees for the transaction size.\r\n//       // The remaining part of the fee is refundable and the charged value is\r\n//       // based on the actual consumption of refundable resources (events, ledger\r\n//       // rent bumps).\r\n//       // The `inclusionFee` used for prioritization of the transaction is defined\r\n//       // as `tx.fee - resourceFee`.\r\n//       int64 resourceFee;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionData\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"resources\", xdr.lookup(\"SorobanResources\")],\r\n  [\"resourceFee\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionV0Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV0\r\n//   {\r\n//       uint256 sourceAccountEd25519;\r\n//       uint32 fee;\r\n//       SequenceNumber seqNum;\r\n//       TimeBounds* timeBounds;\r\n//       Memo memo;\r\n//       Operation operations<MAX_OPS_PER_TX>;\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV0\", [\r\n  [\"sourceAccountEd25519\", xdr.lookup(\"Uint256\")],\r\n  [\"fee\", xdr.lookup(\"Uint32\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\r\n  [\"memo\", xdr.lookup(\"Memo\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\r\n  [\"ext\", xdr.lookup(\"TransactionV0Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV0Envelope\r\n//   {\r\n//       TransactionV0 tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV0Envelope\", [\r\n  [\"tx\", xdr.lookup(\"TransactionV0\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           SorobanTransactionData sorobanData;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"sorobanData\"],\r\n  ],\r\n  arms: {\r\n    sorobanData: xdr.lookup(\"SorobanTransactionData\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Transaction\r\n//   {\r\n//       // account used to run the transaction\r\n//       MuxedAccount sourceAccount;\r\n//\r\n//       // the fee the sourceAccount will pay\r\n//       uint32 fee;\r\n//\r\n//       // sequence number to consume in the account\r\n//       SequenceNumber seqNum;\r\n//\r\n//       // validity conditions\r\n//       Preconditions cond;\r\n//\r\n//       Memo memo;\r\n//\r\n//       Operation operations<MAX_OPS_PER_TX>;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           SorobanTransactionData sorobanData;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Transaction\", [\r\n  [\"sourceAccount\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"fee\", xdr.lookup(\"Uint32\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"cond\", xdr.lookup(\"Preconditions\")],\r\n  [\"memo\", xdr.lookup(\"Memo\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\r\n  [\"ext\", xdr.lookup(\"TransactionExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV1Envelope\r\n//   {\r\n//       Transaction tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV1Envelope\", [\r\n  [\"tx\", xdr.lookup(\"Transaction\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (EnvelopeType type)\r\n//       {\r\n//       case ENVELOPE_TYPE_TX:\r\n//           TransactionV1Envelope v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"FeeBumpTransactionInnerTx\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTx\", \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"FeeBumpTransactionExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FeeBumpTransaction\r\n//   {\r\n//       MuxedAccount feeSource;\r\n//       int64 fee;\r\n//       union switch (EnvelopeType type)\r\n//       {\r\n//       case ENVELOPE_TYPE_TX:\r\n//           TransactionV1Envelope v1;\r\n//       }\r\n//       innerTx;\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FeeBumpTransaction\", [\r\n  [\"feeSource\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"fee\", xdr.lookup(\"Int64\")],\r\n  [\"innerTx\", xdr.lookup(\"FeeBumpTransactionInnerTx\")],\r\n  [\"ext\", xdr.lookup(\"FeeBumpTransactionExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FeeBumpTransactionEnvelope\r\n//   {\r\n//       FeeBumpTransaction tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FeeBumpTransactionEnvelope\", [\r\n  [\"tx\", xdr.lookup(\"FeeBumpTransaction\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionEnvelope switch (EnvelopeType type)\r\n//   {\r\n//   case ENVELOPE_TYPE_TX_V0:\r\n//       TransactionV0Envelope v0;\r\n//   case ENVELOPE_TYPE_TX:\r\n//       TransactionV1Envelope v1;\r\n//   case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//       FeeBumpTransactionEnvelope feeBump;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionEnvelope\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTxV0\", \"v0\"],\r\n    [\"envelopeTypeTx\", \"v1\"],\r\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"TransactionV0Envelope\"),\r\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\r\n    feeBump: xdr.lookup(\"FeeBumpTransactionEnvelope\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (EnvelopeType type)\r\n//       {\r\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n//       case ENVELOPE_TYPE_TX:\r\n//           Transaction tx;\r\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//           FeeBumpTransaction feeBump;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionSignaturePayloadTaggedTransaction\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTx\", \"tx\"],\r\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\r\n  ],\r\n  arms: {\r\n    tx: xdr.lookup(\"Transaction\"),\r\n    feeBump: xdr.lookup(\"FeeBumpTransaction\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSignaturePayload\r\n//   {\r\n//       Hash networkId;\r\n//       union switch (EnvelopeType type)\r\n//       {\r\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n//       case ENVELOPE_TYPE_TX:\r\n//           Transaction tx;\r\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//           FeeBumpTransaction feeBump;\r\n//       }\r\n//       taggedTransaction;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSignaturePayload\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"taggedTransaction\", xdr.lookup(\"TransactionSignaturePayloadTaggedTransaction\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimAtomType\r\n//   {\r\n//       CLAIM_ATOM_TYPE_V0 = 0,\r\n//       CLAIM_ATOM_TYPE_ORDER_BOOK = 1,\r\n//       CLAIM_ATOM_TYPE_LIQUIDITY_POOL = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimAtomType\", {\r\n  claimAtomTypeV0: 0,\r\n  claimAtomTypeOrderBook: 1,\r\n  claimAtomTypeLiquidityPool: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimOfferAtomV0\r\n//   {\r\n//       // emitted to identify the offer\r\n//       uint256 sellerEd25519; // Account that owns the offer\r\n//       int64 offerID;\r\n//\r\n//       // amount and asset taken from the owner\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the owner\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimOfferAtomV0\", [\r\n  [\"sellerEd25519\", xdr.lookup(\"Uint256\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimOfferAtom\r\n//   {\r\n//       // emitted to identify the offer\r\n//       AccountID sellerID; // Account that owns the offer\r\n//       int64 offerID;\r\n//\r\n//       // amount and asset taken from the owner\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the owner\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimOfferAtom\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimLiquidityAtom\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       // amount and asset taken from the pool\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the pool\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimLiquidityAtom\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimAtom switch (ClaimAtomType type)\r\n//   {\r\n//   case CLAIM_ATOM_TYPE_V0:\r\n//       ClaimOfferAtomV0 v0;\r\n//   case CLAIM_ATOM_TYPE_ORDER_BOOK:\r\n//       ClaimOfferAtom orderBook;\r\n//   case CLAIM_ATOM_TYPE_LIQUIDITY_POOL:\r\n//       ClaimLiquidityAtom liquidityPool;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimAtom\", {\r\n  switchOn: xdr.lookup(\"ClaimAtomType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimAtomTypeV0\", \"v0\"],\r\n    [\"claimAtomTypeOrderBook\", \"orderBook\"],\r\n    [\"claimAtomTypeLiquidityPool\", \"liquidityPool\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ClaimOfferAtomV0\"),\r\n    orderBook: xdr.lookup(\"ClaimOfferAtom\"),\r\n    liquidityPool: xdr.lookup(\"ClaimLiquidityAtom\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CreateAccountResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CREATE_ACCOUNT_SUCCESS = 0, // account was created\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CREATE_ACCOUNT_MALFORMED = -1,   // invalid destination\r\n//       CREATE_ACCOUNT_UNDERFUNDED = -2, // not enough funds in source account\r\n//       CREATE_ACCOUNT_LOW_RESERVE =\r\n//           -3, // would create an account below the min reserve\r\n//       CREATE_ACCOUNT_ALREADY_EXIST = -4 // account already exists\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CreateAccountResultCode\", {\r\n  createAccountSuccess: 0,\r\n  createAccountMalformed: -1,\r\n  createAccountUnderfunded: -2,\r\n  createAccountLowReserve: -3,\r\n  createAccountAlreadyExist: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union CreateAccountResult switch (CreateAccountResultCode code)\r\n//   {\r\n//   case CREATE_ACCOUNT_SUCCESS:\r\n//       void;\r\n//   case CREATE_ACCOUNT_MALFORMED:\r\n//   case CREATE_ACCOUNT_UNDERFUNDED:\r\n//   case CREATE_ACCOUNT_LOW_RESERVE:\r\n//   case CREATE_ACCOUNT_ALREADY_EXIST:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"CreateAccountResult\", {\r\n  switchOn: xdr.lookup(\"CreateAccountResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"createAccountSuccess\", xdr.void()],\r\n    [\"createAccountMalformed\", xdr.void()],\r\n    [\"createAccountUnderfunded\", xdr.void()],\r\n    [\"createAccountLowReserve\", xdr.void()],\r\n    [\"createAccountAlreadyExist\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PaymentResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PAYMENT_SUCCESS = 0, // payment successfully completed\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PAYMENT_MALFORMED = -1,          // bad input\r\n//       PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account\r\n//       PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account\r\n//       PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer\r\n//       PAYMENT_NO_DESTINATION = -5,     // destination account does not exist\r\n//       PAYMENT_NO_TRUST = -6,       // destination missing a trust line for asset\r\n//       PAYMENT_NOT_AUTHORIZED = -7, // destination not authorized to hold asset\r\n//       PAYMENT_LINE_FULL = -8,      // destination would go above their limit\r\n//       PAYMENT_NO_ISSUER = -9       // missing issuer on asset\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PaymentResultCode\", {\r\n  paymentSuccess: 0,\r\n  paymentMalformed: -1,\r\n  paymentUnderfunded: -2,\r\n  paymentSrcNoTrust: -3,\r\n  paymentSrcNotAuthorized: -4,\r\n  paymentNoDestination: -5,\r\n  paymentNoTrust: -6,\r\n  paymentNotAuthorized: -7,\r\n  paymentLineFull: -8,\r\n  paymentNoIssuer: -9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PaymentResult switch (PaymentResultCode code)\r\n//   {\r\n//   case PAYMENT_SUCCESS:\r\n//       void;\r\n//   case PAYMENT_MALFORMED:\r\n//   case PAYMENT_UNDERFUNDED:\r\n//   case PAYMENT_SRC_NO_TRUST:\r\n//   case PAYMENT_SRC_NOT_AUTHORIZED:\r\n//   case PAYMENT_NO_DESTINATION:\r\n//   case PAYMENT_NO_TRUST:\r\n//   case PAYMENT_NOT_AUTHORIZED:\r\n//   case PAYMENT_LINE_FULL:\r\n//   case PAYMENT_NO_ISSUER:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PaymentResult\", {\r\n  switchOn: xdr.lookup(\"PaymentResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"paymentSuccess\", xdr.void()],\r\n    [\"paymentMalformed\", xdr.void()],\r\n    [\"paymentUnderfunded\", xdr.void()],\r\n    [\"paymentSrcNoTrust\", xdr.void()],\r\n    [\"paymentSrcNotAuthorized\", xdr.void()],\r\n    [\"paymentNoDestination\", xdr.void()],\r\n    [\"paymentNoTrust\", xdr.void()],\r\n    [\"paymentNotAuthorized\", xdr.void()],\r\n    [\"paymentLineFull\", xdr.void()],\r\n    [\"paymentNoIssuer\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PathPaymentStrictReceiveResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SUCCESS = 0, // success\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PATH_PAYMENT_STRICT_RECEIVE_MALFORMED = -1, // bad input\r\n//       PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED =\r\n//           -2, // not enough funds in source account\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST =\r\n//           -3, // no trust line on source account\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED =\r\n//           -4, // source not authorized to transfer\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION =\r\n//           -5, // destination account does not exist\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST =\r\n//           -6, // dest missing a trust line for asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED =\r\n//           -7, // dest not authorized to hold asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL =\r\n//           -8, // dest would go above their limit\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER = -9, // missing issuer on one asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS =\r\n//           -10, // not enough offers to satisfy path\r\n//       PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF =\r\n//           -11, // would cross one of its own offers\r\n//       PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX = -12 // could not satisfy sendmax\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PathPaymentStrictReceiveResultCode\", {\r\n  pathPaymentStrictReceiveSuccess: 0,\r\n  pathPaymentStrictReceiveMalformed: -1,\r\n  pathPaymentStrictReceiveUnderfunded: -2,\r\n  pathPaymentStrictReceiveSrcNoTrust: -3,\r\n  pathPaymentStrictReceiveSrcNotAuthorized: -4,\r\n  pathPaymentStrictReceiveNoDestination: -5,\r\n  pathPaymentStrictReceiveNoTrust: -6,\r\n  pathPaymentStrictReceiveNotAuthorized: -7,\r\n  pathPaymentStrictReceiveLineFull: -8,\r\n  pathPaymentStrictReceiveNoIssuer: -9,\r\n  pathPaymentStrictReceiveTooFewOffers: -10,\r\n  pathPaymentStrictReceiveOfferCrossSelf: -11,\r\n  pathPaymentStrictReceiveOverSendmax: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SimplePaymentResult\r\n//   {\r\n//       AccountID destination;\r\n//       Asset asset;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SimplePaymentResult\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictReceiveResultSuccess\", [\r\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PathPaymentStrictReceiveResult switch (\r\n//       PathPaymentStrictReceiveResultCode code)\r\n//   {\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SUCCESS:\r\n//       struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       } success;\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_MALFORMED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL:\r\n//       void;\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER:\r\n//       Asset noIssuer; // the asset that caused the error\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PathPaymentStrictReceiveResult\", {\r\n  switchOn: xdr.lookup(\"PathPaymentStrictReceiveResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"pathPaymentStrictReceiveSuccess\", \"success\"],\r\n    [\"pathPaymentStrictReceiveMalformed\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveUnderfunded\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveSrcNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveSrcNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoDestination\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveLineFull\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoIssuer\", \"noIssuer\"],\r\n    [\"pathPaymentStrictReceiveTooFewOffers\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveOfferCrossSelf\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveOverSendmax\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"PathPaymentStrictReceiveResultSuccess\"),\r\n    noIssuer: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PathPaymentStrictSendResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PATH_PAYMENT_STRICT_SEND_SUCCESS = 0, // success\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PATH_PAYMENT_STRICT_SEND_MALFORMED = -1, // bad input\r\n//       PATH_PAYMENT_STRICT_SEND_UNDERFUNDED =\r\n//           -2, // not enough funds in source account\r\n//       PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST =\r\n//           -3, // no trust line on source account\r\n//       PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED =\r\n//           -4, // source not authorized to transfer\r\n//       PATH_PAYMENT_STRICT_SEND_NO_DESTINATION =\r\n//           -5, // destination account does not exist\r\n//       PATH_PAYMENT_STRICT_SEND_NO_TRUST =\r\n//           -6, // dest missing a trust line for asset\r\n//       PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED =\r\n//           -7, // dest not authorized to hold asset\r\n//       PATH_PAYMENT_STRICT_SEND_LINE_FULL = -8, // dest would go above their limit\r\n//       PATH_PAYMENT_STRICT_SEND_NO_ISSUER = -9, // missing issuer on one asset\r\n//       PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS =\r\n//           -10, // not enough offers to satisfy path\r\n//       PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF =\r\n//           -11, // would cross one of its own offers\r\n//       PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN = -12 // could not satisfy destMin\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PathPaymentStrictSendResultCode\", {\r\n  pathPaymentStrictSendSuccess: 0,\r\n  pathPaymentStrictSendMalformed: -1,\r\n  pathPaymentStrictSendUnderfunded: -2,\r\n  pathPaymentStrictSendSrcNoTrust: -3,\r\n  pathPaymentStrictSendSrcNotAuthorized: -4,\r\n  pathPaymentStrictSendNoDestination: -5,\r\n  pathPaymentStrictSendNoTrust: -6,\r\n  pathPaymentStrictSendNotAuthorized: -7,\r\n  pathPaymentStrictSendLineFull: -8,\r\n  pathPaymentStrictSendNoIssuer: -9,\r\n  pathPaymentStrictSendTooFewOffers: -10,\r\n  pathPaymentStrictSendOfferCrossSelf: -11,\r\n  pathPaymentStrictSendUnderDestmin: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictSendResultSuccess\", [\r\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PathPaymentStrictSendResult switch (PathPaymentStrictSendResultCode code)\r\n//   {\r\n//   case PATH_PAYMENT_STRICT_SEND_SUCCESS:\r\n//       struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       } success;\r\n//   case PATH_PAYMENT_STRICT_SEND_MALFORMED:\r\n//   case PATH_PAYMENT_STRICT_SEND_UNDERFUNDED:\r\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_DESTINATION:\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_SEND_LINE_FULL:\r\n//       void;\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_ISSUER:\r\n//       Asset noIssuer; // the asset that caused the error\r\n//   case PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS:\r\n//   case PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF:\r\n//   case PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PathPaymentStrictSendResult\", {\r\n  switchOn: xdr.lookup(\"PathPaymentStrictSendResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"pathPaymentStrictSendSuccess\", \"success\"],\r\n    [\"pathPaymentStrictSendMalformed\", xdr.void()],\r\n    [\"pathPaymentStrictSendUnderfunded\", xdr.void()],\r\n    [\"pathPaymentStrictSendSrcNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictSendSrcNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoDestination\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictSendNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictSendLineFull\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoIssuer\", \"noIssuer\"],\r\n    [\"pathPaymentStrictSendTooFewOffers\", xdr.void()],\r\n    [\"pathPaymentStrictSendOfferCrossSelf\", xdr.void()],\r\n    [\"pathPaymentStrictSendUnderDestmin\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"PathPaymentStrictSendResultSuccess\"),\r\n    noIssuer: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageSellOfferResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_SELL_OFFER_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_SELL_OFFER_MALFORMED = -1, // generated offer would be invalid\r\n//       MANAGE_SELL_OFFER_SELL_NO_TRUST =\r\n//           -2,                              // no trust line for what we're selling\r\n//       MANAGE_SELL_OFFER_BUY_NO_TRUST = -3, // no trust line for what we're buying\r\n//       MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\r\n//       MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\r\n//       MANAGE_SELL_OFFER_LINE_FULL = -6, // can't receive more of what it's buying\r\n//       MANAGE_SELL_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\r\n//       MANAGE_SELL_OFFER_CROSS_SELF =\r\n//           -8, // would cross an offer from the same user\r\n//       MANAGE_SELL_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\r\n//       MANAGE_SELL_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\r\n//\r\n//       // update errors\r\n//       MANAGE_SELL_OFFER_NOT_FOUND =\r\n//           -11, // offerID does not match an existing offer\r\n//\r\n//       MANAGE_SELL_OFFER_LOW_RESERVE =\r\n//           -12 // not enough funds to create a new Offer\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageSellOfferResultCode\", {\r\n  manageSellOfferSuccess: 0,\r\n  manageSellOfferMalformed: -1,\r\n  manageSellOfferSellNoTrust: -2,\r\n  manageSellOfferBuyNoTrust: -3,\r\n  manageSellOfferSellNotAuthorized: -4,\r\n  manageSellOfferBuyNotAuthorized: -5,\r\n  manageSellOfferLineFull: -6,\r\n  manageSellOfferUnderfunded: -7,\r\n  manageSellOfferCrossSelf: -8,\r\n  manageSellOfferSellNoIssuer: -9,\r\n  manageSellOfferBuyNoIssuer: -10,\r\n  manageSellOfferNotFound: -11,\r\n  manageSellOfferLowReserve: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageOfferEffect\r\n//   {\r\n//       MANAGE_OFFER_CREATED = 0,\r\n//       MANAGE_OFFER_UPDATED = 1,\r\n//       MANAGE_OFFER_DELETED = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageOfferEffect\", {\r\n  manageOfferCreated: 0,\r\n  manageOfferUpdated: 1,\r\n  manageOfferDeleted: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (ManageOfferEffect effect)\r\n//       {\r\n//       case MANAGE_OFFER_CREATED:\r\n//       case MANAGE_OFFER_UPDATED:\r\n//           OfferEntry offer;\r\n//       case MANAGE_OFFER_DELETED:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageOfferSuccessResultOffer\", {\r\n  switchOn: xdr.lookup(\"ManageOfferEffect\"),\r\n  switchName: \"effect\",\r\n  switches: [\r\n    [\"manageOfferCreated\", \"offer\"],\r\n    [\"manageOfferUpdated\", \"offer\"],\r\n    [\"manageOfferDeleted\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    offer: xdr.lookup(\"OfferEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageOfferSuccessResult\r\n//   {\r\n//       // offers that got claimed while creating this offer\r\n//       ClaimAtom offersClaimed<>;\r\n//\r\n//       union switch (ManageOfferEffect effect)\r\n//       {\r\n//       case MANAGE_OFFER_CREATED:\r\n//       case MANAGE_OFFER_UPDATED:\r\n//           OfferEntry offer;\r\n//       case MANAGE_OFFER_DELETED:\r\n//           void;\r\n//       }\r\n//       offer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageOfferSuccessResult\", [\r\n  [\"offersClaimed\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"offer\", xdr.lookup(\"ManageOfferSuccessResultOffer\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageSellOfferResult switch (ManageSellOfferResultCode code)\r\n//   {\r\n//   case MANAGE_SELL_OFFER_SUCCESS:\r\n//       ManageOfferSuccessResult success;\r\n//   case MANAGE_SELL_OFFER_MALFORMED:\r\n//   case MANAGE_SELL_OFFER_SELL_NO_TRUST:\r\n//   case MANAGE_SELL_OFFER_BUY_NO_TRUST:\r\n//   case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:\r\n//   case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:\r\n//   case MANAGE_SELL_OFFER_LINE_FULL:\r\n//   case MANAGE_SELL_OFFER_UNDERFUNDED:\r\n//   case MANAGE_SELL_OFFER_CROSS_SELF:\r\n//   case MANAGE_SELL_OFFER_SELL_NO_ISSUER:\r\n//   case MANAGE_SELL_OFFER_BUY_NO_ISSUER:\r\n//   case MANAGE_SELL_OFFER_NOT_FOUND:\r\n//   case MANAGE_SELL_OFFER_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageSellOfferResult\", {\r\n  switchOn: xdr.lookup(\"ManageSellOfferResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageSellOfferSuccess\", \"success\"],\r\n    [\"manageSellOfferMalformed\", xdr.void()],\r\n    [\"manageSellOfferSellNoTrust\", xdr.void()],\r\n    [\"manageSellOfferBuyNoTrust\", xdr.void()],\r\n    [\"manageSellOfferSellNotAuthorized\", xdr.void()],\r\n    [\"manageSellOfferBuyNotAuthorized\", xdr.void()],\r\n    [\"manageSellOfferLineFull\", xdr.void()],\r\n    [\"manageSellOfferUnderfunded\", xdr.void()],\r\n    [\"manageSellOfferCrossSelf\", xdr.void()],\r\n    [\"manageSellOfferSellNoIssuer\", xdr.void()],\r\n    [\"manageSellOfferBuyNoIssuer\", xdr.void()],\r\n    [\"manageSellOfferNotFound\", xdr.void()],\r\n    [\"manageSellOfferLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageBuyOfferResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_BUY_OFFER_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_BUY_OFFER_MALFORMED = -1,     // generated offer would be invalid\r\n//       MANAGE_BUY_OFFER_SELL_NO_TRUST = -2, // no trust line for what we're selling\r\n//       MANAGE_BUY_OFFER_BUY_NO_TRUST = -3,  // no trust line for what we're buying\r\n//       MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\r\n//       MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\r\n//       MANAGE_BUY_OFFER_LINE_FULL = -6,   // can't receive more of what it's buying\r\n//       MANAGE_BUY_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\r\n//       MANAGE_BUY_OFFER_CROSS_SELF = -8, // would cross an offer from the same user\r\n//       MANAGE_BUY_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\r\n//       MANAGE_BUY_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\r\n//\r\n//       // update errors\r\n//       MANAGE_BUY_OFFER_NOT_FOUND =\r\n//           -11, // offerID does not match an existing offer\r\n//\r\n//       MANAGE_BUY_OFFER_LOW_RESERVE = -12 // not enough funds to create a new Offer\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageBuyOfferResultCode\", {\r\n  manageBuyOfferSuccess: 0,\r\n  manageBuyOfferMalformed: -1,\r\n  manageBuyOfferSellNoTrust: -2,\r\n  manageBuyOfferBuyNoTrust: -3,\r\n  manageBuyOfferSellNotAuthorized: -4,\r\n  manageBuyOfferBuyNotAuthorized: -5,\r\n  manageBuyOfferLineFull: -6,\r\n  manageBuyOfferUnderfunded: -7,\r\n  manageBuyOfferCrossSelf: -8,\r\n  manageBuyOfferSellNoIssuer: -9,\r\n  manageBuyOfferBuyNoIssuer: -10,\r\n  manageBuyOfferNotFound: -11,\r\n  manageBuyOfferLowReserve: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageBuyOfferResult switch (ManageBuyOfferResultCode code)\r\n//   {\r\n//   case MANAGE_BUY_OFFER_SUCCESS:\r\n//       ManageOfferSuccessResult success;\r\n//   case MANAGE_BUY_OFFER_MALFORMED:\r\n//   case MANAGE_BUY_OFFER_SELL_NO_TRUST:\r\n//   case MANAGE_BUY_OFFER_BUY_NO_TRUST:\r\n//   case MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED:\r\n//   case MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED:\r\n//   case MANAGE_BUY_OFFER_LINE_FULL:\r\n//   case MANAGE_BUY_OFFER_UNDERFUNDED:\r\n//   case MANAGE_BUY_OFFER_CROSS_SELF:\r\n//   case MANAGE_BUY_OFFER_SELL_NO_ISSUER:\r\n//   case MANAGE_BUY_OFFER_BUY_NO_ISSUER:\r\n//   case MANAGE_BUY_OFFER_NOT_FOUND:\r\n//   case MANAGE_BUY_OFFER_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageBuyOfferResult\", {\r\n  switchOn: xdr.lookup(\"ManageBuyOfferResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageBuyOfferSuccess\", \"success\"],\r\n    [\"manageBuyOfferMalformed\", xdr.void()],\r\n    [\"manageBuyOfferSellNoTrust\", xdr.void()],\r\n    [\"manageBuyOfferBuyNoTrust\", xdr.void()],\r\n    [\"manageBuyOfferSellNotAuthorized\", xdr.void()],\r\n    [\"manageBuyOfferBuyNotAuthorized\", xdr.void()],\r\n    [\"manageBuyOfferLineFull\", xdr.void()],\r\n    [\"manageBuyOfferUnderfunded\", xdr.void()],\r\n    [\"manageBuyOfferCrossSelf\", xdr.void()],\r\n    [\"manageBuyOfferSellNoIssuer\", xdr.void()],\r\n    [\"manageBuyOfferBuyNoIssuer\", xdr.void()],\r\n    [\"manageBuyOfferNotFound\", xdr.void()],\r\n    [\"manageBuyOfferLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SetOptionsResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       SET_OPTIONS_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       SET_OPTIONS_LOW_RESERVE = -1,      // not enough funds to add a signer\r\n//       SET_OPTIONS_TOO_MANY_SIGNERS = -2, // max number of signers already reached\r\n//       SET_OPTIONS_BAD_FLAGS = -3,        // invalid combination of clear/set flags\r\n//       SET_OPTIONS_INVALID_INFLATION = -4,      // inflation account does not exist\r\n//       SET_OPTIONS_CANT_CHANGE = -5,            // can no longer change this option\r\n//       SET_OPTIONS_UNKNOWN_FLAG = -6,           // can't set an unknown flag\r\n//       SET_OPTIONS_THRESHOLD_OUT_OF_RANGE = -7, // bad value for weight/threshold\r\n//       SET_OPTIONS_BAD_SIGNER = -8,             // signer cannot be masterkey\r\n//       SET_OPTIONS_INVALID_HOME_DOMAIN = -9,    // malformed home domain\r\n//       SET_OPTIONS_AUTH_REVOCABLE_REQUIRED =\r\n//           -10 // auth revocable is required for clawback\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SetOptionsResultCode\", {\r\n  setOptionsSuccess: 0,\r\n  setOptionsLowReserve: -1,\r\n  setOptionsTooManySigners: -2,\r\n  setOptionsBadFlags: -3,\r\n  setOptionsInvalidInflation: -4,\r\n  setOptionsCantChange: -5,\r\n  setOptionsUnknownFlag: -6,\r\n  setOptionsThresholdOutOfRange: -7,\r\n  setOptionsBadSigner: -8,\r\n  setOptionsInvalidHomeDomain: -9,\r\n  setOptionsAuthRevocableRequired: -10,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SetOptionsResult switch (SetOptionsResultCode code)\r\n//   {\r\n//   case SET_OPTIONS_SUCCESS:\r\n//       void;\r\n//   case SET_OPTIONS_LOW_RESERVE:\r\n//   case SET_OPTIONS_TOO_MANY_SIGNERS:\r\n//   case SET_OPTIONS_BAD_FLAGS:\r\n//   case SET_OPTIONS_INVALID_INFLATION:\r\n//   case SET_OPTIONS_CANT_CHANGE:\r\n//   case SET_OPTIONS_UNKNOWN_FLAG:\r\n//   case SET_OPTIONS_THRESHOLD_OUT_OF_RANGE:\r\n//   case SET_OPTIONS_BAD_SIGNER:\r\n//   case SET_OPTIONS_INVALID_HOME_DOMAIN:\r\n//   case SET_OPTIONS_AUTH_REVOCABLE_REQUIRED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SetOptionsResult\", {\r\n  switchOn: xdr.lookup(\"SetOptionsResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"setOptionsSuccess\", xdr.void()],\r\n    [\"setOptionsLowReserve\", xdr.void()],\r\n    [\"setOptionsTooManySigners\", xdr.void()],\r\n    [\"setOptionsBadFlags\", xdr.void()],\r\n    [\"setOptionsInvalidInflation\", xdr.void()],\r\n    [\"setOptionsCantChange\", xdr.void()],\r\n    [\"setOptionsUnknownFlag\", xdr.void()],\r\n    [\"setOptionsThresholdOutOfRange\", xdr.void()],\r\n    [\"setOptionsBadSigner\", xdr.void()],\r\n    [\"setOptionsInvalidHomeDomain\", xdr.void()],\r\n    [\"setOptionsAuthRevocableRequired\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ChangeTrustResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CHANGE_TRUST_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       CHANGE_TRUST_MALFORMED = -1,     // bad input\r\n//       CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer\r\n//       CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance\r\n//                                        // cannot create with a limit of 0\r\n//       CHANGE_TRUST_LOW_RESERVE =\r\n//           -4, // not enough funds to create a new trust line,\r\n//       CHANGE_TRUST_SELF_NOT_ALLOWED = -5,   // trusting self is not allowed\r\n//       CHANGE_TRUST_TRUST_LINE_MISSING = -6, // Asset trustline is missing for pool\r\n//       CHANGE_TRUST_CANNOT_DELETE =\r\n//           -7, // Asset trustline is still referenced in a pool\r\n//       CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES =\r\n//           -8 // Asset trustline is deauthorized\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ChangeTrustResultCode\", {\r\n  changeTrustSuccess: 0,\r\n  changeTrustMalformed: -1,\r\n  changeTrustNoIssuer: -2,\r\n  changeTrustInvalidLimit: -3,\r\n  changeTrustLowReserve: -4,\r\n  changeTrustSelfNotAllowed: -5,\r\n  changeTrustTrustLineMissing: -6,\r\n  changeTrustCannotDelete: -7,\r\n  changeTrustNotAuthMaintainLiabilities: -8,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ChangeTrustResult switch (ChangeTrustResultCode code)\r\n//   {\r\n//   case CHANGE_TRUST_SUCCESS:\r\n//       void;\r\n//   case CHANGE_TRUST_MALFORMED:\r\n//   case CHANGE_TRUST_NO_ISSUER:\r\n//   case CHANGE_TRUST_INVALID_LIMIT:\r\n//   case CHANGE_TRUST_LOW_RESERVE:\r\n//   case CHANGE_TRUST_SELF_NOT_ALLOWED:\r\n//   case CHANGE_TRUST_TRUST_LINE_MISSING:\r\n//   case CHANGE_TRUST_CANNOT_DELETE:\r\n//   case CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ChangeTrustResult\", {\r\n  switchOn: xdr.lookup(\"ChangeTrustResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"changeTrustSuccess\", xdr.void()],\r\n    [\"changeTrustMalformed\", xdr.void()],\r\n    [\"changeTrustNoIssuer\", xdr.void()],\r\n    [\"changeTrustInvalidLimit\", xdr.void()],\r\n    [\"changeTrustLowReserve\", xdr.void()],\r\n    [\"changeTrustSelfNotAllowed\", xdr.void()],\r\n    [\"changeTrustTrustLineMissing\", xdr.void()],\r\n    [\"changeTrustCannotDelete\", xdr.void()],\r\n    [\"changeTrustNotAuthMaintainLiabilities\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AllowTrustResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       ALLOW_TRUST_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       ALLOW_TRUST_MALFORMED = -1,     // asset is not ASSET_TYPE_ALPHANUM\r\n//       ALLOW_TRUST_NO_TRUST_LINE = -2, // trustor does not have a trustline\r\n//                                       // source account does not require trust\r\n//       ALLOW_TRUST_TRUST_NOT_REQUIRED = -3,\r\n//       ALLOW_TRUST_CANT_REVOKE = -4,      // source account can't revoke trust,\r\n//       ALLOW_TRUST_SELF_NOT_ALLOWED = -5, // trusting self is not allowed\r\n//       ALLOW_TRUST_LOW_RESERVE = -6       // claimable balances can't be created\r\n//                                          // on revoke due to low reserves\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AllowTrustResultCode\", {\r\n  allowTrustSuccess: 0,\r\n  allowTrustMalformed: -1,\r\n  allowTrustNoTrustLine: -2,\r\n  allowTrustTrustNotRequired: -3,\r\n  allowTrustCantRevoke: -4,\r\n  allowTrustSelfNotAllowed: -5,\r\n  allowTrustLowReserve: -6,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AllowTrustResult switch (AllowTrustResultCode code)\r\n//   {\r\n//   case ALLOW_TRUST_SUCCESS:\r\n//       void;\r\n//   case ALLOW_TRUST_MALFORMED:\r\n//   case ALLOW_TRUST_NO_TRUST_LINE:\r\n//   case ALLOW_TRUST_TRUST_NOT_REQUIRED:\r\n//   case ALLOW_TRUST_CANT_REVOKE:\r\n//   case ALLOW_TRUST_SELF_NOT_ALLOWED:\r\n//   case ALLOW_TRUST_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AllowTrustResult\", {\r\n  switchOn: xdr.lookup(\"AllowTrustResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"allowTrustSuccess\", xdr.void()],\r\n    [\"allowTrustMalformed\", xdr.void()],\r\n    [\"allowTrustNoTrustLine\", xdr.void()],\r\n    [\"allowTrustTrustNotRequired\", xdr.void()],\r\n    [\"allowTrustCantRevoke\", xdr.void()],\r\n    [\"allowTrustSelfNotAllowed\", xdr.void()],\r\n    [\"allowTrustLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AccountMergeResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       ACCOUNT_MERGE_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       ACCOUNT_MERGE_MALFORMED = -1,       // can't merge onto itself\r\n//       ACCOUNT_MERGE_NO_ACCOUNT = -2,      // destination does not exist\r\n//       ACCOUNT_MERGE_IMMUTABLE_SET = -3,   // source account has AUTH_IMMUTABLE set\r\n//       ACCOUNT_MERGE_HAS_SUB_ENTRIES = -4, // account has trust lines/offers\r\n//       ACCOUNT_MERGE_SEQNUM_TOO_FAR = -5,  // sequence number is over max allowed\r\n//       ACCOUNT_MERGE_DEST_FULL = -6,       // can't add source balance to\r\n//                                           // destination balance\r\n//       ACCOUNT_MERGE_IS_SPONSOR = -7       // can't merge account that is a sponsor\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AccountMergeResultCode\", {\r\n  accountMergeSuccess: 0,\r\n  accountMergeMalformed: -1,\r\n  accountMergeNoAccount: -2,\r\n  accountMergeImmutableSet: -3,\r\n  accountMergeHasSubEntries: -4,\r\n  accountMergeSeqnumTooFar: -5,\r\n  accountMergeDestFull: -6,\r\n  accountMergeIsSponsor: -7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AccountMergeResult switch (AccountMergeResultCode code)\r\n//   {\r\n//   case ACCOUNT_MERGE_SUCCESS:\r\n//       int64 sourceAccountBalance; // how much got transferred from source account\r\n//   case ACCOUNT_MERGE_MALFORMED:\r\n//   case ACCOUNT_MERGE_NO_ACCOUNT:\r\n//   case ACCOUNT_MERGE_IMMUTABLE_SET:\r\n//   case ACCOUNT_MERGE_HAS_SUB_ENTRIES:\r\n//   case ACCOUNT_MERGE_SEQNUM_TOO_FAR:\r\n//   case ACCOUNT_MERGE_DEST_FULL:\r\n//   case ACCOUNT_MERGE_IS_SPONSOR:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountMergeResult\", {\r\n  switchOn: xdr.lookup(\"AccountMergeResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"accountMergeSuccess\", \"sourceAccountBalance\"],\r\n    [\"accountMergeMalformed\", xdr.void()],\r\n    [\"accountMergeNoAccount\", xdr.void()],\r\n    [\"accountMergeImmutableSet\", xdr.void()],\r\n    [\"accountMergeHasSubEntries\", xdr.void()],\r\n    [\"accountMergeSeqnumTooFar\", xdr.void()],\r\n    [\"accountMergeDestFull\", xdr.void()],\r\n    [\"accountMergeIsSponsor\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    sourceAccountBalance: xdr.lookup(\"Int64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum InflationResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       INFLATION_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       INFLATION_NOT_TIME = -1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"InflationResultCode\", {\r\n  inflationSuccess: 0,\r\n  inflationNotTime: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InflationPayout // or use PaymentResultAtom to limit types?\r\n//   {\r\n//       AccountID destination;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InflationPayout\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union InflationResult switch (InflationResultCode code)\r\n//   {\r\n//   case INFLATION_SUCCESS:\r\n//       InflationPayout payouts<>;\r\n//   case INFLATION_NOT_TIME:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InflationResult\", {\r\n  switchOn: xdr.lookup(\"InflationResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"inflationSuccess\", \"payouts\"],\r\n    [\"inflationNotTime\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    payouts: xdr.varArray(xdr.lookup(\"InflationPayout\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageDataResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_DATA_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_DATA_NOT_SUPPORTED_YET =\r\n//           -1, // The network hasn't moved to this protocol change yet\r\n//       MANAGE_DATA_NAME_NOT_FOUND =\r\n//           -2, // Trying to remove a Data Entry that isn't there\r\n//       MANAGE_DATA_LOW_RESERVE = -3, // not enough funds to create a new Data Entry\r\n//       MANAGE_DATA_INVALID_NAME = -4 // Name not a valid string\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageDataResultCode\", {\r\n  manageDataSuccess: 0,\r\n  manageDataNotSupportedYet: -1,\r\n  manageDataNameNotFound: -2,\r\n  manageDataLowReserve: -3,\r\n  manageDataInvalidName: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageDataResult switch (ManageDataResultCode code)\r\n//   {\r\n//   case MANAGE_DATA_SUCCESS:\r\n//       void;\r\n//   case MANAGE_DATA_NOT_SUPPORTED_YET:\r\n//   case MANAGE_DATA_NAME_NOT_FOUND:\r\n//   case MANAGE_DATA_LOW_RESERVE:\r\n//   case MANAGE_DATA_INVALID_NAME:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageDataResult\", {\r\n  switchOn: xdr.lookup(\"ManageDataResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageDataSuccess\", xdr.void()],\r\n    [\"manageDataNotSupportedYet\", xdr.void()],\r\n    [\"manageDataNameNotFound\", xdr.void()],\r\n    [\"manageDataLowReserve\", xdr.void()],\r\n    [\"manageDataInvalidName\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BumpSequenceResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       BUMP_SEQUENCE_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       BUMP_SEQUENCE_BAD_SEQ = -1 // `bumpTo` is not within bounds\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BumpSequenceResultCode\", {\r\n  bumpSequenceSuccess: 0,\r\n  bumpSequenceBadSeq: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BumpSequenceResult switch (BumpSequenceResultCode code)\r\n//   {\r\n//   case BUMP_SEQUENCE_SUCCESS:\r\n//       void;\r\n//   case BUMP_SEQUENCE_BAD_SEQ:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BumpSequenceResult\", {\r\n  switchOn: xdr.lookup(\"BumpSequenceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"bumpSequenceSuccess\", xdr.void()],\r\n    [\"bumpSequenceBadSeq\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CreateClaimableBalanceResultCode\r\n//   {\r\n//       CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//       CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,\r\n//       CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,\r\n//       CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,\r\n//       CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,\r\n//       CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CreateClaimableBalanceResultCode\", {\r\n  createClaimableBalanceSuccess: 0,\r\n  createClaimableBalanceMalformed: -1,\r\n  createClaimableBalanceLowReserve: -2,\r\n  createClaimableBalanceNoTrust: -3,\r\n  createClaimableBalanceNotAuthorized: -4,\r\n  createClaimableBalanceUnderfunded: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union CreateClaimableBalanceResult switch (\r\n//       CreateClaimableBalanceResultCode code)\r\n//   {\r\n//   case CREATE_CLAIMABLE_BALANCE_SUCCESS:\r\n//       ClaimableBalanceID balanceID;\r\n//   case CREATE_CLAIMABLE_BALANCE_MALFORMED:\r\n//   case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:\r\n//   case CREATE_CLAIMABLE_BALANCE_NO_TRUST:\r\n//   case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\r\n//   case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"CreateClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"CreateClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"createClaimableBalanceSuccess\", \"balanceId\"],\r\n    [\"createClaimableBalanceMalformed\", xdr.void()],\r\n    [\"createClaimableBalanceLowReserve\", xdr.void()],\r\n    [\"createClaimableBalanceNoTrust\", xdr.void()],\r\n    [\"createClaimableBalanceNotAuthorized\", xdr.void()],\r\n    [\"createClaimableBalanceUnderfunded\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    balanceId: xdr.lookup(\"ClaimableBalanceId\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimClaimableBalanceResultCode\r\n//   {\r\n//       CLAIM_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//       CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\r\n//       CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM = -2,\r\n//       CLAIM_CLAIMABLE_BALANCE_LINE_FULL = -3,\r\n//       CLAIM_CLAIMABLE_BALANCE_NO_TRUST = -4,\r\n//       CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimClaimableBalanceResultCode\", {\r\n  claimClaimableBalanceSuccess: 0,\r\n  claimClaimableBalanceDoesNotExist: -1,\r\n  claimClaimableBalanceCannotClaim: -2,\r\n  claimClaimableBalanceLineFull: -3,\r\n  claimClaimableBalanceNoTrust: -4,\r\n  claimClaimableBalanceNotAuthorized: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimClaimableBalanceResult switch (ClaimClaimableBalanceResultCode code)\r\n//   {\r\n//   case CLAIM_CLAIMABLE_BALANCE_SUCCESS:\r\n//       void;\r\n//   case CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\r\n//   case CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM:\r\n//   case CLAIM_CLAIMABLE_BALANCE_LINE_FULL:\r\n//   case CLAIM_CLAIMABLE_BALANCE_NO_TRUST:\r\n//   case CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"ClaimClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"claimClaimableBalanceSuccess\", xdr.void()],\r\n    [\"claimClaimableBalanceDoesNotExist\", xdr.void()],\r\n    [\"claimClaimableBalanceCannotClaim\", xdr.void()],\r\n    [\"claimClaimableBalanceLineFull\", xdr.void()],\r\n    [\"claimClaimableBalanceNoTrust\", xdr.void()],\r\n    [\"claimClaimableBalanceNotAuthorized\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BeginSponsoringFutureReservesResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED = -1,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED = -2,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BeginSponsoringFutureReservesResultCode\", {\r\n  beginSponsoringFutureReservesSuccess: 0,\r\n  beginSponsoringFutureReservesMalformed: -1,\r\n  beginSponsoringFutureReservesAlreadySponsored: -2,\r\n  beginSponsoringFutureReservesRecursive: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BeginSponsoringFutureReservesResult switch (\r\n//       BeginSponsoringFutureReservesResultCode code)\r\n//   {\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS:\r\n//       void;\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED:\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED:\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BeginSponsoringFutureReservesResult\", {\r\n  switchOn: xdr.lookup(\"BeginSponsoringFutureReservesResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"beginSponsoringFutureReservesSuccess\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesMalformed\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesAlreadySponsored\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesRecursive\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum EndSponsoringFutureReservesResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       END_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED = -1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"EndSponsoringFutureReservesResultCode\", {\r\n  endSponsoringFutureReservesSuccess: 0,\r\n  endSponsoringFutureReservesNotSponsored: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union EndSponsoringFutureReservesResult switch (\r\n//       EndSponsoringFutureReservesResultCode code)\r\n//   {\r\n//   case END_SPONSORING_FUTURE_RESERVES_SUCCESS:\r\n//       void;\r\n//   case END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"EndSponsoringFutureReservesResult\", {\r\n  switchOn: xdr.lookup(\"EndSponsoringFutureReservesResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"endSponsoringFutureReservesSuccess\", xdr.void()],\r\n    [\"endSponsoringFutureReservesNotSponsored\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RevokeSponsorshipResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       REVOKE_SPONSORSHIP_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       REVOKE_SPONSORSHIP_DOES_NOT_EXIST = -1,\r\n//       REVOKE_SPONSORSHIP_NOT_SPONSOR = -2,\r\n//       REVOKE_SPONSORSHIP_LOW_RESERVE = -3,\r\n//       REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE = -4,\r\n//       REVOKE_SPONSORSHIP_MALFORMED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RevokeSponsorshipResultCode\", {\r\n  revokeSponsorshipSuccess: 0,\r\n  revokeSponsorshipDoesNotExist: -1,\r\n  revokeSponsorshipNotSponsor: -2,\r\n  revokeSponsorshipLowReserve: -3,\r\n  revokeSponsorshipOnlyTransferable: -4,\r\n  revokeSponsorshipMalformed: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RevokeSponsorshipResult switch (RevokeSponsorshipResultCode code)\r\n//   {\r\n//   case REVOKE_SPONSORSHIP_SUCCESS:\r\n//       void;\r\n//   case REVOKE_SPONSORSHIP_DOES_NOT_EXIST:\r\n//   case REVOKE_SPONSORSHIP_NOT_SPONSOR:\r\n//   case REVOKE_SPONSORSHIP_LOW_RESERVE:\r\n//   case REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE:\r\n//   case REVOKE_SPONSORSHIP_MALFORMED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RevokeSponsorshipResult\", {\r\n  switchOn: xdr.lookup(\"RevokeSponsorshipResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"revokeSponsorshipSuccess\", xdr.void()],\r\n    [\"revokeSponsorshipDoesNotExist\", xdr.void()],\r\n    [\"revokeSponsorshipNotSponsor\", xdr.void()],\r\n    [\"revokeSponsorshipLowReserve\", xdr.void()],\r\n    [\"revokeSponsorshipOnlyTransferable\", xdr.void()],\r\n    [\"revokeSponsorshipMalformed\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClawbackResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CLAWBACK_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CLAWBACK_MALFORMED = -1,\r\n//       CLAWBACK_NOT_CLAWBACK_ENABLED = -2,\r\n//       CLAWBACK_NO_TRUST = -3,\r\n//       CLAWBACK_UNDERFUNDED = -4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClawbackResultCode\", {\r\n  clawbackSuccess: 0,\r\n  clawbackMalformed: -1,\r\n  clawbackNotClawbackEnabled: -2,\r\n  clawbackNoTrust: -3,\r\n  clawbackUnderfunded: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClawbackResult switch (ClawbackResultCode code)\r\n//   {\r\n//   case CLAWBACK_SUCCESS:\r\n//       void;\r\n//   case CLAWBACK_MALFORMED:\r\n//   case CLAWBACK_NOT_CLAWBACK_ENABLED:\r\n//   case CLAWBACK_NO_TRUST:\r\n//   case CLAWBACK_UNDERFUNDED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClawbackResult\", {\r\n  switchOn: xdr.lookup(\"ClawbackResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"clawbackSuccess\", xdr.void()],\r\n    [\"clawbackMalformed\", xdr.void()],\r\n    [\"clawbackNotClawbackEnabled\", xdr.void()],\r\n    [\"clawbackNoTrust\", xdr.void()],\r\n    [\"clawbackUnderfunded\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClawbackClaimableBalanceResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CLAWBACK_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\r\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER = -2,\r\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClawbackClaimableBalanceResultCode\", {\r\n  clawbackClaimableBalanceSuccess: 0,\r\n  clawbackClaimableBalanceDoesNotExist: -1,\r\n  clawbackClaimableBalanceNotIssuer: -2,\r\n  clawbackClaimableBalanceNotClawbackEnabled: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClawbackClaimableBalanceResult switch (\r\n//       ClawbackClaimableBalanceResultCode code)\r\n//   {\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:\r\n//       void;\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClawbackClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"ClawbackClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"clawbackClaimableBalanceSuccess\", xdr.void()],\r\n    [\"clawbackClaimableBalanceDoesNotExist\", xdr.void()],\r\n    [\"clawbackClaimableBalanceNotIssuer\", xdr.void()],\r\n    [\"clawbackClaimableBalanceNotClawbackEnabled\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SetTrustLineFlagsResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       SET_TRUST_LINE_FLAGS_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       SET_TRUST_LINE_FLAGS_MALFORMED = -1,\r\n//       SET_TRUST_LINE_FLAGS_NO_TRUST_LINE = -2,\r\n//       SET_TRUST_LINE_FLAGS_CANT_REVOKE = -3,\r\n//       SET_TRUST_LINE_FLAGS_INVALID_STATE = -4,\r\n//       SET_TRUST_LINE_FLAGS_LOW_RESERVE = -5 // claimable balances can't be created\r\n//                                             // on revoke due to low reserves\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SetTrustLineFlagsResultCode\", {\r\n  setTrustLineFlagsSuccess: 0,\r\n  setTrustLineFlagsMalformed: -1,\r\n  setTrustLineFlagsNoTrustLine: -2,\r\n  setTrustLineFlagsCantRevoke: -3,\r\n  setTrustLineFlagsInvalidState: -4,\r\n  setTrustLineFlagsLowReserve: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SetTrustLineFlagsResult switch (SetTrustLineFlagsResultCode code)\r\n//   {\r\n//   case SET_TRUST_LINE_FLAGS_SUCCESS:\r\n//       void;\r\n//   case SET_TRUST_LINE_FLAGS_MALFORMED:\r\n//   case SET_TRUST_LINE_FLAGS_NO_TRUST_LINE:\r\n//   case SET_TRUST_LINE_FLAGS_CANT_REVOKE:\r\n//   case SET_TRUST_LINE_FLAGS_INVALID_STATE:\r\n//   case SET_TRUST_LINE_FLAGS_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SetTrustLineFlagsResult\", {\r\n  switchOn: xdr.lookup(\"SetTrustLineFlagsResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"setTrustLineFlagsSuccess\", xdr.void()],\r\n    [\"setTrustLineFlagsMalformed\", xdr.void()],\r\n    [\"setTrustLineFlagsNoTrustLine\", xdr.void()],\r\n    [\"setTrustLineFlagsCantRevoke\", xdr.void()],\r\n    [\"setTrustLineFlagsInvalidState\", xdr.void()],\r\n    [\"setTrustLineFlagsLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolDepositResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input\r\n//       LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the\r\n//                                                   // assets\r\n//       LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the\r\n//                                                   // assets\r\n//       LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of\r\n//                                                   // the assets\r\n//       LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't\r\n//                                                   // have sufficient limit\r\n//       LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds\r\n//       LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolDepositResultCode\", {\r\n  liquidityPoolDepositSuccess: 0,\r\n  liquidityPoolDepositMalformed: -1,\r\n  liquidityPoolDepositNoTrust: -2,\r\n  liquidityPoolDepositNotAuthorized: -3,\r\n  liquidityPoolDepositUnderfunded: -4,\r\n  liquidityPoolDepositLineFull: -5,\r\n  liquidityPoolDepositBadPrice: -6,\r\n  liquidityPoolDepositPoolFull: -7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolDepositResult switch (LiquidityPoolDepositResultCode code)\r\n//   {\r\n//   case LIQUIDITY_POOL_DEPOSIT_SUCCESS:\r\n//       void;\r\n//   case LIQUIDITY_POOL_DEPOSIT_MALFORMED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_NO_TRUST:\r\n//   case LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_LINE_FULL:\r\n//   case LIQUIDITY_POOL_DEPOSIT_BAD_PRICE:\r\n//   case LIQUIDITY_POOL_DEPOSIT_POOL_FULL:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolDepositResult\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolDepositResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"liquidityPoolDepositSuccess\", xdr.void()],\r\n    [\"liquidityPoolDepositMalformed\", xdr.void()],\r\n    [\"liquidityPoolDepositNoTrust\", xdr.void()],\r\n    [\"liquidityPoolDepositNotAuthorized\", xdr.void()],\r\n    [\"liquidityPoolDepositUnderfunded\", xdr.void()],\r\n    [\"liquidityPoolDepositLineFull\", xdr.void()],\r\n    [\"liquidityPoolDepositBadPrice\", xdr.void()],\r\n    [\"liquidityPoolDepositPoolFull\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolWithdrawResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       LIQUIDITY_POOL_WITHDRAW_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       LIQUIDITY_POOL_WITHDRAW_MALFORMED = -1,    // bad input\r\n//       LIQUIDITY_POOL_WITHDRAW_NO_TRUST = -2,     // no trust line for one of the\r\n//                                                  // assets\r\n//       LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED = -3,  // not enough balance of the\r\n//                                                  // pool share\r\n//       LIQUIDITY_POOL_WITHDRAW_LINE_FULL = -4,    // would go above limit for one\r\n//                                                  // of the assets\r\n//       LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM = -5 // didn't withdraw enough\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolWithdrawResultCode\", {\r\n  liquidityPoolWithdrawSuccess: 0,\r\n  liquidityPoolWithdrawMalformed: -1,\r\n  liquidityPoolWithdrawNoTrust: -2,\r\n  liquidityPoolWithdrawUnderfunded: -3,\r\n  liquidityPoolWithdrawLineFull: -4,\r\n  liquidityPoolWithdrawUnderMinimum: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolWithdrawResult switch (LiquidityPoolWithdrawResultCode code)\r\n//   {\r\n//   case LIQUIDITY_POOL_WITHDRAW_SUCCESS:\r\n//       void;\r\n//   case LIQUIDITY_POOL_WITHDRAW_MALFORMED:\r\n//   case LIQUIDITY_POOL_WITHDRAW_NO_TRUST:\r\n//   case LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED:\r\n//   case LIQUIDITY_POOL_WITHDRAW_LINE_FULL:\r\n//   case LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolWithdrawResult\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolWithdrawResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"liquidityPoolWithdrawSuccess\", xdr.void()],\r\n    [\"liquidityPoolWithdrawMalformed\", xdr.void()],\r\n    [\"liquidityPoolWithdrawNoTrust\", xdr.void()],\r\n    [\"liquidityPoolWithdrawUnderfunded\", xdr.void()],\r\n    [\"liquidityPoolWithdrawLineFull\", xdr.void()],\r\n    [\"liquidityPoolWithdrawUnderMinimum\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum InvokeHostFunctionResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       INVOKE_HOST_FUNCTION_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       INVOKE_HOST_FUNCTION_MALFORMED = -1,\r\n//       INVOKE_HOST_FUNCTION_TRAPPED = -2,\r\n//       INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED = -3,\r\n//       INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED = -4,\r\n//       INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"InvokeHostFunctionResultCode\", {\r\n  invokeHostFunctionSuccess: 0,\r\n  invokeHostFunctionMalformed: -1,\r\n  invokeHostFunctionTrapped: -2,\r\n  invokeHostFunctionResourceLimitExceeded: -3,\r\n  invokeHostFunctionEntryArchived: -4,\r\n  invokeHostFunctionInsufficientRefundableFee: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union InvokeHostFunctionResult switch (InvokeHostFunctionResultCode code)\r\n//   {\r\n//   case INVOKE_HOST_FUNCTION_SUCCESS:\r\n//       Hash success; // sha256(InvokeHostFunctionSuccessPreImage)\r\n//   case INVOKE_HOST_FUNCTION_MALFORMED:\r\n//   case INVOKE_HOST_FUNCTION_TRAPPED:\r\n//   case INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED:\r\n//   case INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED:\r\n//   case INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InvokeHostFunctionResult\", {\r\n  switchOn: xdr.lookup(\"InvokeHostFunctionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"invokeHostFunctionSuccess\", \"success\"],\r\n    [\"invokeHostFunctionMalformed\", xdr.void()],\r\n    [\"invokeHostFunctionTrapped\", xdr.void()],\r\n    [\"invokeHostFunctionResourceLimitExceeded\", xdr.void()],\r\n    [\"invokeHostFunctionEntryArchived\", xdr.void()],\r\n    [\"invokeHostFunctionInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ExtendFootprintTTLResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       EXTEND_FOOTPRINT_TTL_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       EXTEND_FOOTPRINT_TTL_MALFORMED = -1,\r\n//       EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED = -2,\r\n//       EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ExtendFootprintTtlResultCode\", {\r\n  extendFootprintTtlSuccess: 0,\r\n  extendFootprintTtlMalformed: -1,\r\n  extendFootprintTtlResourceLimitExceeded: -2,\r\n  extendFootprintTtlInsufficientRefundableFee: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ExtendFootprintTTLResult switch (ExtendFootprintTTLResultCode code)\r\n//   {\r\n//   case EXTEND_FOOTPRINT_TTL_SUCCESS:\r\n//       void;\r\n//   case EXTEND_FOOTPRINT_TTL_MALFORMED:\r\n//   case EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED:\r\n//   case EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ExtendFootprintTtlResult\", {\r\n  switchOn: xdr.lookup(\"ExtendFootprintTtlResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"extendFootprintTtlSuccess\", xdr.void()],\r\n    [\"extendFootprintTtlMalformed\", xdr.void()],\r\n    [\"extendFootprintTtlResourceLimitExceeded\", xdr.void()],\r\n    [\"extendFootprintTtlInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RestoreFootprintResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       RESTORE_FOOTPRINT_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       RESTORE_FOOTPRINT_MALFORMED = -1,\r\n//       RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED = -2,\r\n//       RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RestoreFootprintResultCode\", {\r\n  restoreFootprintSuccess: 0,\r\n  restoreFootprintMalformed: -1,\r\n  restoreFootprintResourceLimitExceeded: -2,\r\n  restoreFootprintInsufficientRefundableFee: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RestoreFootprintResult switch (RestoreFootprintResultCode code)\r\n//   {\r\n//   case RESTORE_FOOTPRINT_SUCCESS:\r\n//       void;\r\n//   case RESTORE_FOOTPRINT_MALFORMED:\r\n//   case RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:\r\n//   case RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RestoreFootprintResult\", {\r\n  switchOn: xdr.lookup(\"RestoreFootprintResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"restoreFootprintSuccess\", xdr.void()],\r\n    [\"restoreFootprintMalformed\", xdr.void()],\r\n    [\"restoreFootprintResourceLimitExceeded\", xdr.void()],\r\n    [\"restoreFootprintInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OperationResultCode\r\n//   {\r\n//       opINNER = 0, // inner object result is valid\r\n//\r\n//       opBAD_AUTH = -1,            // too few valid signatures / wrong network\r\n//       opNO_ACCOUNT = -2,          // source account was not found\r\n//       opNOT_SUPPORTED = -3,       // operation not supported at this time\r\n//       opTOO_MANY_SUBENTRIES = -4, // max number of subentries already reached\r\n//       opEXCEEDED_WORK_LIMIT = -5, // operation did too much work\r\n//       opTOO_MANY_SPONSORING = -6  // account is sponsoring too many entries\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OperationResultCode\", {\r\n  opInner: 0,\r\n  opBadAuth: -1,\r\n  opNoAccount: -2,\r\n  opNotSupported: -3,\r\n  opTooManySubentries: -4,\r\n  opExceededWorkLimit: -5,\r\n  opTooManySponsoring: -6,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountResult createAccountResult;\r\n//       case PAYMENT:\r\n//           PaymentResult paymentResult;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferResult manageSellOfferResult;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           ManageSellOfferResult createPassiveSellOfferResult;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsResult setOptionsResult;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustResult changeTrustResult;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustResult allowTrustResult;\r\n//       case ACCOUNT_MERGE:\r\n//           AccountMergeResult accountMergeResult;\r\n//       case INFLATION:\r\n//           InflationResult inflationResult;\r\n//       case MANAGE_DATA:\r\n//           ManageDataResult manageDataResult;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceResult bumpSeqResult;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferResult manageBuyOfferResult;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipResult revokeSponsorshipResult;\r\n//       case CLAWBACK:\r\n//           ClawbackResult clawbackResult;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionResult invokeHostFunctionResult;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintResult restoreFootprintResult;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationResultTr\", {\r\n  switchOn: xdr.lookup(\"OperationType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"createAccount\", \"createAccountResult\"],\r\n    [\"payment\", \"paymentResult\"],\r\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveResult\"],\r\n    [\"manageSellOffer\", \"manageSellOfferResult\"],\r\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferResult\"],\r\n    [\"setOptions\", \"setOptionsResult\"],\r\n    [\"changeTrust\", \"changeTrustResult\"],\r\n    [\"allowTrust\", \"allowTrustResult\"],\r\n    [\"accountMerge\", \"accountMergeResult\"],\r\n    [\"inflation\", \"inflationResult\"],\r\n    [\"manageData\", \"manageDataResult\"],\r\n    [\"bumpSequence\", \"bumpSeqResult\"],\r\n    [\"manageBuyOffer\", \"manageBuyOfferResult\"],\r\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendResult\"],\r\n    [\"createClaimableBalance\", \"createClaimableBalanceResult\"],\r\n    [\"claimClaimableBalance\", \"claimClaimableBalanceResult\"],\r\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesResult\"],\r\n    [\"endSponsoringFutureReserves\", \"endSponsoringFutureReservesResult\"],\r\n    [\"revokeSponsorship\", \"revokeSponsorshipResult\"],\r\n    [\"clawback\", \"clawbackResult\"],\r\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceResult\"],\r\n    [\"setTrustLineFlags\", \"setTrustLineFlagsResult\"],\r\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositResult\"],\r\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawResult\"],\r\n    [\"invokeHostFunction\", \"invokeHostFunctionResult\"],\r\n    [\"extendFootprintTtl\", \"extendFootprintTtlResult\"],\r\n    [\"restoreFootprint\", \"restoreFootprintResult\"],\r\n  ],\r\n  arms: {\r\n    createAccountResult: xdr.lookup(\"CreateAccountResult\"),\r\n    paymentResult: xdr.lookup(\"PaymentResult\"),\r\n    pathPaymentStrictReceiveResult: xdr.lookup(\"PathPaymentStrictReceiveResult\"),\r\n    manageSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\r\n    createPassiveSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\r\n    setOptionsResult: xdr.lookup(\"SetOptionsResult\"),\r\n    changeTrustResult: xdr.lookup(\"ChangeTrustResult\"),\r\n    allowTrustResult: xdr.lookup(\"AllowTrustResult\"),\r\n    accountMergeResult: xdr.lookup(\"AccountMergeResult\"),\r\n    inflationResult: xdr.lookup(\"InflationResult\"),\r\n    manageDataResult: xdr.lookup(\"ManageDataResult\"),\r\n    bumpSeqResult: xdr.lookup(\"BumpSequenceResult\"),\r\n    manageBuyOfferResult: xdr.lookup(\"ManageBuyOfferResult\"),\r\n    pathPaymentStrictSendResult: xdr.lookup(\"PathPaymentStrictSendResult\"),\r\n    createClaimableBalanceResult: xdr.lookup(\"CreateClaimableBalanceResult\"),\r\n    claimClaimableBalanceResult: xdr.lookup(\"ClaimClaimableBalanceResult\"),\r\n    beginSponsoringFutureReservesResult: xdr.lookup(\"BeginSponsoringFutureReservesResult\"),\r\n    endSponsoringFutureReservesResult: xdr.lookup(\"EndSponsoringFutureReservesResult\"),\r\n    revokeSponsorshipResult: xdr.lookup(\"RevokeSponsorshipResult\"),\r\n    clawbackResult: xdr.lookup(\"ClawbackResult\"),\r\n    clawbackClaimableBalanceResult: xdr.lookup(\"ClawbackClaimableBalanceResult\"),\r\n    setTrustLineFlagsResult: xdr.lookup(\"SetTrustLineFlagsResult\"),\r\n    liquidityPoolDepositResult: xdr.lookup(\"LiquidityPoolDepositResult\"),\r\n    liquidityPoolWithdrawResult: xdr.lookup(\"LiquidityPoolWithdrawResult\"),\r\n    invokeHostFunctionResult: xdr.lookup(\"InvokeHostFunctionResult\"),\r\n    extendFootprintTtlResult: xdr.lookup(\"ExtendFootprintTtlResult\"),\r\n    restoreFootprintResult: xdr.lookup(\"RestoreFootprintResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union OperationResult switch (OperationResultCode code)\r\n//   {\r\n//   case opINNER:\r\n//       union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountResult createAccountResult;\r\n//       case PAYMENT:\r\n//           PaymentResult paymentResult;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferResult manageSellOfferResult;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           ManageSellOfferResult createPassiveSellOfferResult;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsResult setOptionsResult;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustResult changeTrustResult;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustResult allowTrustResult;\r\n//       case ACCOUNT_MERGE:\r\n//           AccountMergeResult accountMergeResult;\r\n//       case INFLATION:\r\n//           InflationResult inflationResult;\r\n//       case MANAGE_DATA:\r\n//           ManageDataResult manageDataResult;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceResult bumpSeqResult;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferResult manageBuyOfferResult;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipResult revokeSponsorshipResult;\r\n//       case CLAWBACK:\r\n//           ClawbackResult clawbackResult;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionResult invokeHostFunctionResult;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintResult restoreFootprintResult;\r\n//       }\r\n//       tr;\r\n//   case opBAD_AUTH:\r\n//   case opNO_ACCOUNT:\r\n//   case opNOT_SUPPORTED:\r\n//   case opTOO_MANY_SUBENTRIES:\r\n//   case opEXCEEDED_WORK_LIMIT:\r\n//   case opTOO_MANY_SPONSORING:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationResult\", {\r\n  switchOn: xdr.lookup(\"OperationResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"opInner\", \"tr\"],\r\n    [\"opBadAuth\", xdr.void()],\r\n    [\"opNoAccount\", xdr.void()],\r\n    [\"opNotSupported\", xdr.void()],\r\n    [\"opTooManySubentries\", xdr.void()],\r\n    [\"opExceededWorkLimit\", xdr.void()],\r\n    [\"opTooManySponsoring\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    tr: xdr.lookup(\"OperationResultTr\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TransactionResultCode\r\n//   {\r\n//       txFEE_BUMP_INNER_SUCCESS = 1, // fee bump inner transaction succeeded\r\n//       txSUCCESS = 0,                // all operations succeeded\r\n//\r\n//       txFAILED = -1, // one of the operations failed (none were applied)\r\n//\r\n//       txTOO_EARLY = -2,         // ledger closeTime before minTime\r\n//       txTOO_LATE = -3,          // ledger closeTime after maxTime\r\n//       txMISSING_OPERATION = -4, // no operation was specified\r\n//       txBAD_SEQ = -5,           // sequence number does not match source account\r\n//\r\n//       txBAD_AUTH = -6,             // too few valid signatures / wrong network\r\n//       txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve\r\n//       txNO_ACCOUNT = -8,           // source account not found\r\n//       txINSUFFICIENT_FEE = -9,     // fee is too small\r\n//       txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction\r\n//       txINTERNAL_ERROR = -11,      // an unknown error occurred\r\n//\r\n//       txNOT_SUPPORTED = -12,          // transaction type not supported\r\n//       txFEE_BUMP_INNER_FAILED = -13,  // fee bump inner transaction failed\r\n//       txBAD_SPONSORSHIP = -14,        // sponsorship not confirmed\r\n//       txBAD_MIN_SEQ_AGE_OR_GAP = -15, // minSeqAge or minSeqLedgerGap conditions not met\r\n//       txMALFORMED = -16,              // precondition is invalid\r\n//       txSOROBAN_INVALID = -17         // soroban-specific preconditions were not met\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TransactionResultCode\", {\r\n  txFeeBumpInnerSuccess: 1,\r\n  txSuccess: 0,\r\n  txFailed: -1,\r\n  txTooEarly: -2,\r\n  txTooLate: -3,\r\n  txMissingOperation: -4,\r\n  txBadSeq: -5,\r\n  txBadAuth: -6,\r\n  txInsufficientBalance: -7,\r\n  txNoAccount: -8,\r\n  txInsufficientFee: -9,\r\n  txBadAuthExtra: -10,\r\n  txInternalError: -11,\r\n  txNotSupported: -12,\r\n  txFeeBumpInnerFailed: -13,\r\n  txBadSponsorship: -14,\r\n  txBadMinSeqAgeOrGap: -15,\r\n  txMalformed: -16,\r\n  txSorobanInvalid: -17,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (TransactionResultCode code)\r\n//       {\r\n//       // txFEE_BUMP_INNER_SUCCESS is not included\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // txFEE_BUMP_INNER_FAILED is not included\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InnerTransactionResultResult\", {\r\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"txSuccess\", \"results\"],\r\n    [\"txFailed\", \"results\"],\r\n    [\"txTooEarly\", xdr.void()],\r\n    [\"txTooLate\", xdr.void()],\r\n    [\"txMissingOperation\", xdr.void()],\r\n    [\"txBadSeq\", xdr.void()],\r\n    [\"txBadAuth\", xdr.void()],\r\n    [\"txInsufficientBalance\", xdr.void()],\r\n    [\"txNoAccount\", xdr.void()],\r\n    [\"txInsufficientFee\", xdr.void()],\r\n    [\"txBadAuthExtra\", xdr.void()],\r\n    [\"txInternalError\", xdr.void()],\r\n    [\"txNotSupported\", xdr.void()],\r\n    [\"txBadSponsorship\", xdr.void()],\r\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\r\n    [\"txMalformed\", xdr.void()],\r\n    [\"txSorobanInvalid\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InnerTransactionResultExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InnerTransactionResult\r\n//   {\r\n//       // Always 0. Here for binary compatibility.\r\n//       int64 feeCharged;\r\n//\r\n//       union switch (TransactionResultCode code)\r\n//       {\r\n//       // txFEE_BUMP_INNER_SUCCESS is not included\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // txFEE_BUMP_INNER_FAILED is not included\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//       result;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InnerTransactionResult\", [\r\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"result\", xdr.lookup(\"InnerTransactionResultResult\")],\r\n  [\"ext\", xdr.lookup(\"InnerTransactionResultExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InnerTransactionResultPair\r\n//   {\r\n//       Hash transactionHash;          // hash of the inner transaction\r\n//       InnerTransactionResult result; // result for the inner transaction\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InnerTransactionResultPair\", [\r\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\r\n  [\"result\", xdr.lookup(\"InnerTransactionResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (TransactionResultCode code)\r\n//       {\r\n//       case txFEE_BUMP_INNER_SUCCESS:\r\n//       case txFEE_BUMP_INNER_FAILED:\r\n//           InnerTransactionResultPair innerResultPair;\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // case txFEE_BUMP_INNER_FAILED: handled above\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionResultResult\", {\r\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"txFeeBumpInnerSuccess\", \"innerResultPair\"],\r\n    [\"txFeeBumpInnerFailed\", \"innerResultPair\"],\r\n    [\"txSuccess\", \"results\"],\r\n    [\"txFailed\", \"results\"],\r\n    [\"txTooEarly\", xdr.void()],\r\n    [\"txTooLate\", xdr.void()],\r\n    [\"txMissingOperation\", xdr.void()],\r\n    [\"txBadSeq\", xdr.void()],\r\n    [\"txBadAuth\", xdr.void()],\r\n    [\"txInsufficientBalance\", xdr.void()],\r\n    [\"txNoAccount\", xdr.void()],\r\n    [\"txInsufficientFee\", xdr.void()],\r\n    [\"txBadAuthExtra\", xdr.void()],\r\n    [\"txInternalError\", xdr.void()],\r\n    [\"txNotSupported\", xdr.void()],\r\n    [\"txBadSponsorship\", xdr.void()],\r\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\r\n    [\"txMalformed\", xdr.void()],\r\n    [\"txSorobanInvalid\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    innerResultPair: xdr.lookup(\"InnerTransactionResultPair\"),\r\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionResultExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResult\r\n//   {\r\n//       int64 feeCharged; // actual fee charged for the transaction\r\n//\r\n//       union switch (TransactionResultCode code)\r\n//       {\r\n//       case txFEE_BUMP_INNER_SUCCESS:\r\n//       case txFEE_BUMP_INNER_FAILED:\r\n//           InnerTransactionResultPair innerResultPair;\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // case txFEE_BUMP_INNER_FAILED: handled above\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//       result;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResult\", [\r\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"result\", xdr.lookup(\"TransactionResultResult\")],\r\n  [\"ext\", xdr.lookup(\"TransactionResultExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Hash[32];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Hash\", xdr.opaque(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque uint256[32];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint256\", xdr.opaque(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef unsigned int uint32;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint32\", xdr.uint());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef int int32;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Int32\", xdr.int());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef unsigned hyper uint64;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint64\", xdr.uhyper());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef hyper int64;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Int64\", xdr.hyper());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef uint64 TimePoint;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TimePoint\", xdr.lookup(\"Uint64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef uint64 Duration;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Duration\", xdr.lookup(\"Uint64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ExtensionPoint switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ExtensionPoint\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CryptoKeyType\r\n//   {\r\n//       KEY_TYPE_ED25519 = 0,\r\n//       KEY_TYPE_PRE_AUTH_TX = 1,\r\n//       KEY_TYPE_HASH_X = 2,\r\n//       KEY_TYPE_ED25519_SIGNED_PAYLOAD = 3,\r\n//       // MUXED enum values for supported type are derived from the enum values\r\n//       // above by ORing them with 0x100\r\n//       KEY_TYPE_MUXED_ED25519 = 0x100\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CryptoKeyType\", {\r\n  keyTypeEd25519: 0,\r\n  keyTypePreAuthTx: 1,\r\n  keyTypeHashX: 2,\r\n  keyTypeEd25519SignedPayload: 3,\r\n  keyTypeMuxedEd25519: 256,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PublicKeyType\r\n//   {\r\n//       PUBLIC_KEY_TYPE_ED25519 = KEY_TYPE_ED25519\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PublicKeyType\", {\r\n  publicKeyTypeEd25519: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SignerKeyType\r\n//   {\r\n//       SIGNER_KEY_TYPE_ED25519 = KEY_TYPE_ED25519,\r\n//       SIGNER_KEY_TYPE_PRE_AUTH_TX = KEY_TYPE_PRE_AUTH_TX,\r\n//       SIGNER_KEY_TYPE_HASH_X = KEY_TYPE_HASH_X,\r\n//       SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD = KEY_TYPE_ED25519_SIGNED_PAYLOAD\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SignerKeyType\", {\r\n  signerKeyTypeEd25519: 0,\r\n  signerKeyTypePreAuthTx: 1,\r\n  signerKeyTypeHashX: 2,\r\n  signerKeyTypeEd25519SignedPayload: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PublicKey switch (PublicKeyType type)\r\n//   {\r\n//   case PUBLIC_KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PublicKey\", {\r\n  switchOn: xdr.lookup(\"PublicKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"publicKeyTypeEd25519\", \"ed25519\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           /* Public key that must sign the payload. */\r\n//           uint256 ed25519;\r\n//           /* Payload to be raw signed by ed25519. */\r\n//           opaque payload<64>;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignerKeyEd25519SignedPayload\", [\r\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\r\n  [\"payload\", xdr.varOpaque(64)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SignerKey switch (SignerKeyType type)\r\n//   {\r\n//   case SIGNER_KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   case SIGNER_KEY_TYPE_PRE_AUTH_TX:\r\n//       /* SHA-256 Hash of TransactionSignaturePayload structure */\r\n//       uint256 preAuthTx;\r\n//   case SIGNER_KEY_TYPE_HASH_X:\r\n//       /* Hash of random 256 bit preimage X */\r\n//       uint256 hashX;\r\n//   case SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD:\r\n//       struct\r\n//       {\r\n//           /* Public key that must sign the payload. */\r\n//           uint256 ed25519;\r\n//           /* Payload to be raw signed by ed25519. */\r\n//           opaque payload<64>;\r\n//       } ed25519SignedPayload;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SignerKey\", {\r\n  switchOn: xdr.lookup(\"SignerKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"signerKeyTypeEd25519\", \"ed25519\"],\r\n    [\"signerKeyTypePreAuthTx\", \"preAuthTx\"],\r\n    [\"signerKeyTypeHashX\", \"hashX\"],\r\n    [\"signerKeyTypeEd25519SignedPayload\", \"ed25519SignedPayload\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n    preAuthTx: xdr.lookup(\"Uint256\"),\r\n    hashX: xdr.lookup(\"Uint256\"),\r\n    ed25519SignedPayload: xdr.lookup(\"SignerKeyEd25519SignedPayload\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Signature<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Signature\", xdr.varOpaque(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque SignatureHint[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SignatureHint\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PublicKey NodeID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"NodeId\", xdr.lookup(\"PublicKey\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PublicKey AccountID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AccountId\", xdr.lookup(\"PublicKey\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Curve25519Secret\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Curve25519Secret\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Curve25519Public\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Curve25519Public\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct HmacSha256Key\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HmacSha256Key\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct HmacSha256Mac\r\n//   {\r\n//       opaque mac[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HmacSha256Mac\", [\r\n  [\"mac\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCValType\r\n//   {\r\n//       SCV_BOOL = 0,\r\n//       SCV_VOID = 1,\r\n//       SCV_ERROR = 2,\r\n//\r\n//       // 32 bits is the smallest type in WASM or XDR; no need for u8/u16.\r\n//       SCV_U32 = 3,\r\n//       SCV_I32 = 4,\r\n//\r\n//       // 64 bits is naturally supported by both WASM and XDR also.\r\n//       SCV_U64 = 5,\r\n//       SCV_I64 = 6,\r\n//\r\n//       // Time-related u64 subtypes with their own functions and formatting.\r\n//       SCV_TIMEPOINT = 7,\r\n//       SCV_DURATION = 8,\r\n//\r\n//       // 128 bits is naturally supported by Rust and we use it for Soroban\r\n//       // fixed-point arithmetic prices / balances / similar \"quantities\". These\r\n//       // are represented in XDR as a pair of 2 u64s.\r\n//       SCV_U128 = 9,\r\n//       SCV_I128 = 10,\r\n//\r\n//       // 256 bits is the size of sha256 output, ed25519 keys, and the EVM machine\r\n//       // word, so for interop use we include this even though it requires a small\r\n//       // amount of Rust guest and/or host library code.\r\n//       SCV_U256 = 11,\r\n//       SCV_I256 = 12,\r\n//\r\n//       // Bytes come in 3 flavors, 2 of which have meaningfully different\r\n//       // formatting and validity-checking / domain-restriction.\r\n//       SCV_BYTES = 13,\r\n//       SCV_STRING = 14,\r\n//       SCV_SYMBOL = 15,\r\n//\r\n//       // Vecs and maps are just polymorphic containers of other ScVals.\r\n//       SCV_VEC = 16,\r\n//       SCV_MAP = 17,\r\n//\r\n//       // Address is the universal identifier for contracts and classic\r\n//       // accounts.\r\n//       SCV_ADDRESS = 18,\r\n//\r\n//       // The following are the internal SCVal variants that are not\r\n//       // exposed to the contracts.\r\n//       SCV_CONTRACT_INSTANCE = 19,\r\n//\r\n//       // SCV_LEDGER_KEY_CONTRACT_INSTANCE and SCV_LEDGER_KEY_NONCE are unique\r\n//       // symbolic SCVals used as the key for ledger entries for a contract's\r\n//       // instance and an address' nonce, respectively.\r\n//       SCV_LEDGER_KEY_CONTRACT_INSTANCE = 20,\r\n//       SCV_LEDGER_KEY_NONCE = 21\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScValType\", {\r\n  scvBool: 0,\r\n  scvVoid: 1,\r\n  scvError: 2,\r\n  scvU32: 3,\r\n  scvI32: 4,\r\n  scvU64: 5,\r\n  scvI64: 6,\r\n  scvTimepoint: 7,\r\n  scvDuration: 8,\r\n  scvU128: 9,\r\n  scvI128: 10,\r\n  scvU256: 11,\r\n  scvI256: 12,\r\n  scvBytes: 13,\r\n  scvString: 14,\r\n  scvSymbol: 15,\r\n  scvVec: 16,\r\n  scvMap: 17,\r\n  scvAddress: 18,\r\n  scvContractInstance: 19,\r\n  scvLedgerKeyContractInstance: 20,\r\n  scvLedgerKeyNonce: 21,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCErrorType\r\n//   {\r\n//       SCE_CONTRACT = 0,          // Contract-specific, user-defined codes.\r\n//       SCE_WASM_VM = 1,           // Errors while interpreting WASM bytecode.\r\n//       SCE_CONTEXT = 2,           // Errors in the contract's host context.\r\n//       SCE_STORAGE = 3,           // Errors accessing host storage.\r\n//       SCE_OBJECT = 4,            // Errors working with host objects.\r\n//       SCE_CRYPTO = 5,            // Errors in cryptographic operations.\r\n//       SCE_EVENTS = 6,            // Errors while emitting events.\r\n//       SCE_BUDGET = 7,            // Errors relating to budget limits.\r\n//       SCE_VALUE = 8,             // Errors working with host values or SCVals.\r\n//       SCE_AUTH = 9               // Errors from the authentication subsystem.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScErrorType\", {\r\n  sceContract: 0,\r\n  sceWasmVm: 1,\r\n  sceContext: 2,\r\n  sceStorage: 3,\r\n  sceObject: 4,\r\n  sceCrypto: 5,\r\n  sceEvents: 6,\r\n  sceBudget: 7,\r\n  sceValue: 8,\r\n  sceAuth: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCErrorCode\r\n//   {\r\n//       SCEC_ARITH_DOMAIN = 0,      // Some arithmetic was undefined (overflow, divide-by-zero).\r\n//       SCEC_INDEX_BOUNDS = 1,      // Something was indexed beyond its bounds.\r\n//       SCEC_INVALID_INPUT = 2,     // User provided some otherwise-bad data.\r\n//       SCEC_MISSING_VALUE = 3,     // Some value was required but not provided.\r\n//       SCEC_EXISTING_VALUE = 4,    // Some value was provided where not allowed.\r\n//       SCEC_EXCEEDED_LIMIT = 5,    // Some arbitrary limit -- gas or otherwise -- was hit.\r\n//       SCEC_INVALID_ACTION = 6,    // Data was valid but action requested was not.\r\n//       SCEC_INTERNAL_ERROR = 7,    // The host detected an error in its own logic.\r\n//       SCEC_UNEXPECTED_TYPE = 8,   // Some type wasn't as expected.\r\n//       SCEC_UNEXPECTED_SIZE = 9    // Something's size wasn't as expected.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScErrorCode\", {\r\n  scecArithDomain: 0,\r\n  scecIndexBounds: 1,\r\n  scecInvalidInput: 2,\r\n  scecMissingValue: 3,\r\n  scecExistingValue: 4,\r\n  scecExceededLimit: 5,\r\n  scecInvalidAction: 6,\r\n  scecInternalError: 7,\r\n  scecUnexpectedType: 8,\r\n  scecUnexpectedSize: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCError switch (SCErrorType type)\r\n//   {\r\n//   case SCE_CONTRACT:\r\n//       uint32 contractCode;\r\n//   case SCE_WASM_VM:\r\n//   case SCE_CONTEXT:\r\n//   case SCE_STORAGE:\r\n//   case SCE_OBJECT:\r\n//   case SCE_CRYPTO:\r\n//   case SCE_EVENTS:\r\n//   case SCE_BUDGET:\r\n//   case SCE_VALUE:\r\n//   case SCE_AUTH:\r\n//       SCErrorCode code;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScError\", {\r\n  switchOn: xdr.lookup(\"ScErrorType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sceContract\", \"contractCode\"],\r\n    [\"sceWasmVm\", \"code\"],\r\n    [\"sceContext\", \"code\"],\r\n    [\"sceStorage\", \"code\"],\r\n    [\"sceObject\", \"code\"],\r\n    [\"sceCrypto\", \"code\"],\r\n    [\"sceEvents\", \"code\"],\r\n    [\"sceBudget\", \"code\"],\r\n    [\"sceValue\", \"code\"],\r\n    [\"sceAuth\", \"code\"],\r\n  ],\r\n  arms: {\r\n    contractCode: xdr.lookup(\"Uint32\"),\r\n    code: xdr.lookup(\"ScErrorCode\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UInt128Parts {\r\n//       uint64 hi;\r\n//       uint64 lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UInt128Parts\", [\r\n  [\"hi\", xdr.lookup(\"Uint64\")],\r\n  [\"lo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Int128Parts {\r\n//       int64 hi;\r\n//       uint64 lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Int128Parts\", [\r\n  [\"hi\", xdr.lookup(\"Int64\")],\r\n  [\"lo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UInt256Parts {\r\n//       uint64 hi_hi;\r\n//       uint64 hi_lo;\r\n//       uint64 lo_hi;\r\n//       uint64 lo_lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UInt256Parts\", [\r\n  [\"hiHi\", xdr.lookup(\"Uint64\")],\r\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\r\n  [\"loHi\", xdr.lookup(\"Uint64\")],\r\n  [\"loLo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Int256Parts {\r\n//       int64 hi_hi;\r\n//       uint64 hi_lo;\r\n//       uint64 lo_hi;\r\n//       uint64 lo_lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Int256Parts\", [\r\n  [\"hiHi\", xdr.lookup(\"Int64\")],\r\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\r\n  [\"loHi\", xdr.lookup(\"Uint64\")],\r\n  [\"loLo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractExecutableType\r\n//   {\r\n//       CONTRACT_EXECUTABLE_WASM = 0,\r\n//       CONTRACT_EXECUTABLE_STELLAR_ASSET = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractExecutableType\", {\r\n  contractExecutableWasm: 0,\r\n  contractExecutableStellarAsset: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ContractExecutable switch (ContractExecutableType type)\r\n//   {\r\n//   case CONTRACT_EXECUTABLE_WASM:\r\n//       Hash wasm_hash;\r\n//   case CONTRACT_EXECUTABLE_STELLAR_ASSET:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractExecutable\", {\r\n  switchOn: xdr.lookup(\"ContractExecutableType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"contractExecutableWasm\", \"wasmHash\"],\r\n    [\"contractExecutableStellarAsset\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    wasmHash: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCAddressType\r\n//   {\r\n//       SC_ADDRESS_TYPE_ACCOUNT = 0,\r\n//       SC_ADDRESS_TYPE_CONTRACT = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScAddressType\", {\r\n  scAddressTypeAccount: 0,\r\n  scAddressTypeContract: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCAddress switch (SCAddressType type)\r\n//   {\r\n//   case SC_ADDRESS_TYPE_ACCOUNT:\r\n//       AccountID accountId;\r\n//   case SC_ADDRESS_TYPE_CONTRACT:\r\n//       Hash contractId;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScAddress\", {\r\n  switchOn: xdr.lookup(\"ScAddressType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scAddressTypeAccount\", \"accountId\"],\r\n    [\"scAddressTypeContract\", \"contractId\"],\r\n  ],\r\n  arms: {\r\n    accountId: xdr.lookup(\"AccountId\"),\r\n    contractId: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const SCSYMBOL_LIMIT = 32;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"SCSYMBOL_LIMIT\", 32);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef SCVal SCVec<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScVec\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef SCMapEntry SCMap<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScMap\", xdr.varArray(xdr.lookup(\"ScMapEntry\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque SCBytes<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScBytes\", xdr.varOpaque());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string SCString<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScString\", xdr.string());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string SCSymbol<SCSYMBOL_LIMIT>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScSymbol\", xdr.string(SCSYMBOL_LIMIT));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCNonceKey {\r\n//       int64 nonce;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScNonceKey\", [\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCContractInstance {\r\n//       ContractExecutable executable;\r\n//       SCMap* storage;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScContractInstance\", [\r\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\r\n  [\"storage\", xdr.option(xdr.lookup(\"ScMap\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCVal switch (SCValType type)\r\n//   {\r\n//\r\n//   case SCV_BOOL:\r\n//       bool b;\r\n//   case SCV_VOID:\r\n//       void;\r\n//   case SCV_ERROR:\r\n//       SCError error;\r\n//\r\n//   case SCV_U32:\r\n//       uint32 u32;\r\n//   case SCV_I32:\r\n//       int32 i32;\r\n//\r\n//   case SCV_U64:\r\n//       uint64 u64;\r\n//   case SCV_I64:\r\n//       int64 i64;\r\n//   case SCV_TIMEPOINT:\r\n//       TimePoint timepoint;\r\n//   case SCV_DURATION:\r\n//       Duration duration;\r\n//\r\n//   case SCV_U128:\r\n//       UInt128Parts u128;\r\n//   case SCV_I128:\r\n//       Int128Parts i128;\r\n//\r\n//   case SCV_U256:\r\n//       UInt256Parts u256;\r\n//   case SCV_I256:\r\n//       Int256Parts i256;\r\n//\r\n//   case SCV_BYTES:\r\n//       SCBytes bytes;\r\n//   case SCV_STRING:\r\n//       SCString str;\r\n//   case SCV_SYMBOL:\r\n//       SCSymbol sym;\r\n//\r\n//   // Vec and Map are recursive so need to live\r\n//   // behind an option, due to xdrpp limitations.\r\n//   case SCV_VEC:\r\n//       SCVec *vec;\r\n//   case SCV_MAP:\r\n//       SCMap *map;\r\n//\r\n//   case SCV_ADDRESS:\r\n//       SCAddress address;\r\n//\r\n//   // Special SCVals reserved for system-constructed contract-data\r\n//   // ledger keys, not generally usable elsewhere.\r\n//   case SCV_LEDGER_KEY_CONTRACT_INSTANCE:\r\n//       void;\r\n//   case SCV_LEDGER_KEY_NONCE:\r\n//       SCNonceKey nonce_key;\r\n//\r\n//   case SCV_CONTRACT_INSTANCE:\r\n//       SCContractInstance instance;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScVal\", {\r\n  switchOn: xdr.lookup(\"ScValType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scvBool\", \"b\"],\r\n    [\"scvVoid\", xdr.void()],\r\n    [\"scvError\", \"error\"],\r\n    [\"scvU32\", \"u32\"],\r\n    [\"scvI32\", \"i32\"],\r\n    [\"scvU64\", \"u64\"],\r\n    [\"scvI64\", \"i64\"],\r\n    [\"scvTimepoint\", \"timepoint\"],\r\n    [\"scvDuration\", \"duration\"],\r\n    [\"scvU128\", \"u128\"],\r\n    [\"scvI128\", \"i128\"],\r\n    [\"scvU256\", \"u256\"],\r\n    [\"scvI256\", \"i256\"],\r\n    [\"scvBytes\", \"bytes\"],\r\n    [\"scvString\", \"str\"],\r\n    [\"scvSymbol\", \"sym\"],\r\n    [\"scvVec\", \"vec\"],\r\n    [\"scvMap\", \"map\"],\r\n    [\"scvAddress\", \"address\"],\r\n    [\"scvLedgerKeyContractInstance\", xdr.void()],\r\n    [\"scvLedgerKeyNonce\", \"nonceKey\"],\r\n    [\"scvContractInstance\", \"instance\"],\r\n  ],\r\n  arms: {\r\n    b: xdr.bool(),\r\n    error: xdr.lookup(\"ScError\"),\r\n    u32: xdr.lookup(\"Uint32\"),\r\n    i32: xdr.lookup(\"Int32\"),\r\n    u64: xdr.lookup(\"Uint64\"),\r\n    i64: xdr.lookup(\"Int64\"),\r\n    timepoint: xdr.lookup(\"TimePoint\"),\r\n    duration: xdr.lookup(\"Duration\"),\r\n    u128: xdr.lookup(\"UInt128Parts\"),\r\n    i128: xdr.lookup(\"Int128Parts\"),\r\n    u256: xdr.lookup(\"UInt256Parts\"),\r\n    i256: xdr.lookup(\"Int256Parts\"),\r\n    bytes: xdr.lookup(\"ScBytes\"),\r\n    str: xdr.lookup(\"ScString\"),\r\n    sym: xdr.lookup(\"ScSymbol\"),\r\n    vec: xdr.option(xdr.lookup(\"ScVec\")),\r\n    map: xdr.option(xdr.lookup(\"ScMap\")),\r\n    address: xdr.lookup(\"ScAddress\"),\r\n    nonceKey: xdr.lookup(\"ScNonceKey\"),\r\n    instance: xdr.lookup(\"ScContractInstance\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCMapEntry\r\n//   {\r\n//       SCVal key;\r\n//       SCVal val;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScMapEntry\", [\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"val\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCEnvMetaKind\r\n//   {\r\n//       SC_ENV_META_KIND_INTERFACE_VERSION = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScEnvMetaKind\", {\r\n  scEnvMetaKindInterfaceVersion: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCEnvMetaEntry switch (SCEnvMetaKind kind)\r\n//   {\r\n//   case SC_ENV_META_KIND_INTERFACE_VERSION:\r\n//       uint64 interfaceVersion;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScEnvMetaEntry\", {\r\n  switchOn: xdr.lookup(\"ScEnvMetaKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scEnvMetaKindInterfaceVersion\", \"interfaceVersion\"],\r\n  ],\r\n  arms: {\r\n    interfaceVersion: xdr.lookup(\"Uint64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCMetaV0\r\n//   {\r\n//       string key<>;\r\n//       string val<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScMetaV0\", [\r\n  [\"key\", xdr.string()],\r\n  [\"val\", xdr.string()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCMetaKind\r\n//   {\r\n//       SC_META_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScMetaKind\", {\r\n  scMetaV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCMetaEntry switch (SCMetaKind kind)\r\n//   {\r\n//   case SC_META_V0:\r\n//       SCMetaV0 v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScMetaEntry\", {\r\n  switchOn: xdr.lookup(\"ScMetaKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scMetaV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ScMetaV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const SC_SPEC_DOC_LIMIT = 1024;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"SC_SPEC_DOC_LIMIT\", 1024);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecType\r\n//   {\r\n//       SC_SPEC_TYPE_VAL = 0,\r\n//\r\n//       // Types with no parameters.\r\n//       SC_SPEC_TYPE_BOOL = 1,\r\n//       SC_SPEC_TYPE_VOID = 2,\r\n//       SC_SPEC_TYPE_ERROR = 3,\r\n//       SC_SPEC_TYPE_U32 = 4,\r\n//       SC_SPEC_TYPE_I32 = 5,\r\n//       SC_SPEC_TYPE_U64 = 6,\r\n//       SC_SPEC_TYPE_I64 = 7,\r\n//       SC_SPEC_TYPE_TIMEPOINT = 8,\r\n//       SC_SPEC_TYPE_DURATION = 9,\r\n//       SC_SPEC_TYPE_U128 = 10,\r\n//       SC_SPEC_TYPE_I128 = 11,\r\n//       SC_SPEC_TYPE_U256 = 12,\r\n//       SC_SPEC_TYPE_I256 = 13,\r\n//       SC_SPEC_TYPE_BYTES = 14,\r\n//       SC_SPEC_TYPE_STRING = 16,\r\n//       SC_SPEC_TYPE_SYMBOL = 17,\r\n//       SC_SPEC_TYPE_ADDRESS = 19,\r\n//\r\n//       // Types with parameters.\r\n//       SC_SPEC_TYPE_OPTION = 1000,\r\n//       SC_SPEC_TYPE_RESULT = 1001,\r\n//       SC_SPEC_TYPE_VEC = 1002,\r\n//       SC_SPEC_TYPE_MAP = 1004,\r\n//       SC_SPEC_TYPE_TUPLE = 1005,\r\n//       SC_SPEC_TYPE_BYTES_N = 1006,\r\n//\r\n//       // User defined types.\r\n//       SC_SPEC_TYPE_UDT = 2000\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecType\", {\r\n  scSpecTypeVal: 0,\r\n  scSpecTypeBool: 1,\r\n  scSpecTypeVoid: 2,\r\n  scSpecTypeError: 3,\r\n  scSpecTypeU32: 4,\r\n  scSpecTypeI32: 5,\r\n  scSpecTypeU64: 6,\r\n  scSpecTypeI64: 7,\r\n  scSpecTypeTimepoint: 8,\r\n  scSpecTypeDuration: 9,\r\n  scSpecTypeU128: 10,\r\n  scSpecTypeI128: 11,\r\n  scSpecTypeU256: 12,\r\n  scSpecTypeI256: 13,\r\n  scSpecTypeBytes: 14,\r\n  scSpecTypeString: 16,\r\n  scSpecTypeSymbol: 17,\r\n  scSpecTypeAddress: 19,\r\n  scSpecTypeOption: 1000,\r\n  scSpecTypeResult: 1001,\r\n  scSpecTypeVec: 1002,\r\n  scSpecTypeMap: 1004,\r\n  scSpecTypeTuple: 1005,\r\n  scSpecTypeBytesN: 1006,\r\n  scSpecTypeUdt: 2000,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeOption\r\n//   {\r\n//       SCSpecTypeDef valueType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeOption\", [\r\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeResult\r\n//   {\r\n//       SCSpecTypeDef okType;\r\n//       SCSpecTypeDef errorType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeResult\", [\r\n  [\"okType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n  [\"errorType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeVec\r\n//   {\r\n//       SCSpecTypeDef elementType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeVec\", [\r\n  [\"elementType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeMap\r\n//   {\r\n//       SCSpecTypeDef keyType;\r\n//       SCSpecTypeDef valueType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeMap\", [\r\n  [\"keyType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeTuple\r\n//   {\r\n//       SCSpecTypeDef valueTypes<12>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeTuple\", [\r\n  [\"valueTypes\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeBytesN\r\n//   {\r\n//       uint32 n;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeBytesN\", [\r\n  [\"n\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeUDT\r\n//   {\r\n//       string name<60>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeUdt\", [\r\n  [\"name\", xdr.string(60)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecTypeDef switch (SCSpecType type)\r\n//   {\r\n//   case SC_SPEC_TYPE_VAL:\r\n//   case SC_SPEC_TYPE_BOOL:\r\n//   case SC_SPEC_TYPE_VOID:\r\n//   case SC_SPEC_TYPE_ERROR:\r\n//   case SC_SPEC_TYPE_U32:\r\n//   case SC_SPEC_TYPE_I32:\r\n//   case SC_SPEC_TYPE_U64:\r\n//   case SC_SPEC_TYPE_I64:\r\n//   case SC_SPEC_TYPE_TIMEPOINT:\r\n//   case SC_SPEC_TYPE_DURATION:\r\n//   case SC_SPEC_TYPE_U128:\r\n//   case SC_SPEC_TYPE_I128:\r\n//   case SC_SPEC_TYPE_U256:\r\n//   case SC_SPEC_TYPE_I256:\r\n//   case SC_SPEC_TYPE_BYTES:\r\n//   case SC_SPEC_TYPE_STRING:\r\n//   case SC_SPEC_TYPE_SYMBOL:\r\n//   case SC_SPEC_TYPE_ADDRESS:\r\n//       void;\r\n//   case SC_SPEC_TYPE_OPTION:\r\n//       SCSpecTypeOption option;\r\n//   case SC_SPEC_TYPE_RESULT:\r\n//       SCSpecTypeResult result;\r\n//   case SC_SPEC_TYPE_VEC:\r\n//       SCSpecTypeVec vec;\r\n//   case SC_SPEC_TYPE_MAP:\r\n//       SCSpecTypeMap map;\r\n//   case SC_SPEC_TYPE_TUPLE:\r\n//       SCSpecTypeTuple tuple;\r\n//   case SC_SPEC_TYPE_BYTES_N:\r\n//       SCSpecTypeBytesN bytesN;\r\n//   case SC_SPEC_TYPE_UDT:\r\n//       SCSpecTypeUDT udt;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecTypeDef\", {\r\n  switchOn: xdr.lookup(\"ScSpecType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scSpecTypeVal\", xdr.void()],\r\n    [\"scSpecTypeBool\", xdr.void()],\r\n    [\"scSpecTypeVoid\", xdr.void()],\r\n    [\"scSpecTypeError\", xdr.void()],\r\n    [\"scSpecTypeU32\", xdr.void()],\r\n    [\"scSpecTypeI32\", xdr.void()],\r\n    [\"scSpecTypeU64\", xdr.void()],\r\n    [\"scSpecTypeI64\", xdr.void()],\r\n    [\"scSpecTypeTimepoint\", xdr.void()],\r\n    [\"scSpecTypeDuration\", xdr.void()],\r\n    [\"scSpecTypeU128\", xdr.void()],\r\n    [\"scSpecTypeI128\", xdr.void()],\r\n    [\"scSpecTypeU256\", xdr.void()],\r\n    [\"scSpecTypeI256\", xdr.void()],\r\n    [\"scSpecTypeBytes\", xdr.void()],\r\n    [\"scSpecTypeString\", xdr.void()],\r\n    [\"scSpecTypeSymbol\", xdr.void()],\r\n    [\"scSpecTypeAddress\", xdr.void()],\r\n    [\"scSpecTypeOption\", \"option\"],\r\n    [\"scSpecTypeResult\", \"result\"],\r\n    [\"scSpecTypeVec\", \"vec\"],\r\n    [\"scSpecTypeMap\", \"map\"],\r\n    [\"scSpecTypeTuple\", \"tuple\"],\r\n    [\"scSpecTypeBytesN\", \"bytesN\"],\r\n    [\"scSpecTypeUdt\", \"udt\"],\r\n  ],\r\n  arms: {\r\n    option: xdr.lookup(\"ScSpecTypeOption\"),\r\n    result: xdr.lookup(\"ScSpecTypeResult\"),\r\n    vec: xdr.lookup(\"ScSpecTypeVec\"),\r\n    map: xdr.lookup(\"ScSpecTypeMap\"),\r\n    tuple: xdr.lookup(\"ScSpecTypeTuple\"),\r\n    bytesN: xdr.lookup(\"ScSpecTypeBytesN\"),\r\n    udt: xdr.lookup(\"ScSpecTypeUdt\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTStructFieldV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<30>;\r\n//       SCSpecTypeDef type;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtStructFieldV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(30)],\r\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTStructV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTStructFieldV0 fields<40>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtStructV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"fields\", xdr.varArray(xdr.lookup(\"ScSpecUdtStructFieldV0\"), 40)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionCaseVoidV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionCaseVoidV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionCaseTupleV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       SCSpecTypeDef type<12>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionCaseTupleV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"type\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecUDTUnionCaseV0Kind\r\n//   {\r\n//       SC_SPEC_UDT_UNION_CASE_VOID_V0 = 0,\r\n//       SC_SPEC_UDT_UNION_CASE_TUPLE_V0 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecUdtUnionCaseV0Kind\", {\r\n  scSpecUdtUnionCaseVoidV0: 0,\r\n  scSpecUdtUnionCaseTupleV0: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecUDTUnionCaseV0 switch (SCSpecUDTUnionCaseV0Kind kind)\r\n//   {\r\n//   case SC_SPEC_UDT_UNION_CASE_VOID_V0:\r\n//       SCSpecUDTUnionCaseVoidV0 voidCase;\r\n//   case SC_SPEC_UDT_UNION_CASE_TUPLE_V0:\r\n//       SCSpecUDTUnionCaseTupleV0 tupleCase;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecUdtUnionCaseV0\", {\r\n  switchOn: xdr.lookup(\"ScSpecUdtUnionCaseV0Kind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scSpecUdtUnionCaseVoidV0\", \"voidCase\"],\r\n    [\"scSpecUdtUnionCaseTupleV0\", \"tupleCase\"],\r\n  ],\r\n  arms: {\r\n    voidCase: xdr.lookup(\"ScSpecUdtUnionCaseVoidV0\"),\r\n    tupleCase: xdr.lookup(\"ScSpecUdtUnionCaseTupleV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTUnionCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtUnionCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTEnumCaseV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       uint32 value;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtEnumCaseV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"value\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTEnumV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTEnumCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtEnumV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtEnumCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTErrorEnumCaseV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       uint32 value;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtErrorEnumCaseV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"value\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTErrorEnumV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTErrorEnumCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtErrorEnumV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtErrorEnumCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecFunctionInputV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<30>;\r\n//       SCSpecTypeDef type;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecFunctionInputV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(30)],\r\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecFunctionV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       SCSymbol name;\r\n//       SCSpecFunctionInputV0 inputs<10>;\r\n//       SCSpecTypeDef outputs<1>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecFunctionV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.lookup(\"ScSymbol\")],\r\n  [\"inputs\", xdr.varArray(xdr.lookup(\"ScSpecFunctionInputV0\"), 10)],\r\n  [\"outputs\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 1)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecEntryKind\r\n//   {\r\n//       SC_SPEC_ENTRY_FUNCTION_V0 = 0,\r\n//       SC_SPEC_ENTRY_UDT_STRUCT_V0 = 1,\r\n//       SC_SPEC_ENTRY_UDT_UNION_V0 = 2,\r\n//       SC_SPEC_ENTRY_UDT_ENUM_V0 = 3,\r\n//       SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0 = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecEntryKind\", {\r\n  scSpecEntryFunctionV0: 0,\r\n  scSpecEntryUdtStructV0: 1,\r\n  scSpecEntryUdtUnionV0: 2,\r\n  scSpecEntryUdtEnumV0: 3,\r\n  scSpecEntryUdtErrorEnumV0: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecEntry switch (SCSpecEntryKind kind)\r\n//   {\r\n//   case SC_SPEC_ENTRY_FUNCTION_V0:\r\n//       SCSpecFunctionV0 functionV0;\r\n//   case SC_SPEC_ENTRY_UDT_STRUCT_V0:\r\n//       SCSpecUDTStructV0 udtStructV0;\r\n//   case SC_SPEC_ENTRY_UDT_UNION_V0:\r\n//       SCSpecUDTUnionV0 udtUnionV0;\r\n//   case SC_SPEC_ENTRY_UDT_ENUM_V0:\r\n//       SCSpecUDTEnumV0 udtEnumV0;\r\n//   case SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:\r\n//       SCSpecUDTErrorEnumV0 udtErrorEnumV0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecEntry\", {\r\n  switchOn: xdr.lookup(\"ScSpecEntryKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scSpecEntryFunctionV0\", \"functionV0\"],\r\n    [\"scSpecEntryUdtStructV0\", \"udtStructV0\"],\r\n    [\"scSpecEntryUdtUnionV0\", \"udtUnionV0\"],\r\n    [\"scSpecEntryUdtEnumV0\", \"udtEnumV0\"],\r\n    [\"scSpecEntryUdtErrorEnumV0\", \"udtErrorEnumV0\"],\r\n  ],\r\n  arms: {\r\n    functionV0: xdr.lookup(\"ScSpecFunctionV0\"),\r\n    udtStructV0: xdr.lookup(\"ScSpecUdtStructV0\"),\r\n    udtUnionV0: xdr.lookup(\"ScSpecUdtUnionV0\"),\r\n    udtEnumV0: xdr.lookup(\"ScSpecUdtEnumV0\"),\r\n    udtErrorEnumV0: xdr.lookup(\"ScSpecUdtErrorEnumV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractExecutionLanesV0\r\n//   {\r\n//       // maximum number of Soroban transactions per ledger\r\n//       uint32 ledgerMaxTxCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractExecutionLanesV0\", [\r\n  [\"ledgerMaxTxCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractComputeV0\r\n//   {\r\n//       // Maximum instructions per ledger\r\n//       int64 ledgerMaxInstructions;\r\n//       // Maximum instructions per transaction\r\n//       int64 txMaxInstructions;\r\n//       // Cost of 10000 instructions\r\n//       int64 feeRatePerInstructionsIncrement;\r\n//\r\n//       // Memory limit per transaction. Unlike instructions, there is no fee\r\n//       // for memory, just the limit.\r\n//       uint32 txMemoryLimit;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractComputeV0\", [\r\n  [\"ledgerMaxInstructions\", xdr.lookup(\"Int64\")],\r\n  [\"txMaxInstructions\", xdr.lookup(\"Int64\")],\r\n  [\"feeRatePerInstructionsIncrement\", xdr.lookup(\"Int64\")],\r\n  [\"txMemoryLimit\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractLedgerCostV0\r\n//   {\r\n//       // Maximum number of ledger entry read operations per ledger\r\n//       uint32 ledgerMaxReadLedgerEntries;\r\n//       // Maximum number of bytes that can be read per ledger\r\n//       uint32 ledgerMaxReadBytes;\r\n//       // Maximum number of ledger entry write operations per ledger\r\n//       uint32 ledgerMaxWriteLedgerEntries;\r\n//       // Maximum number of bytes that can be written per ledger\r\n//       uint32 ledgerMaxWriteBytes;\r\n//\r\n//       // Maximum number of ledger entry read operations per transaction\r\n//       uint32 txMaxReadLedgerEntries;\r\n//       // Maximum number of bytes that can be read per transaction\r\n//       uint32 txMaxReadBytes;\r\n//       // Maximum number of ledger entry write operations per transaction\r\n//       uint32 txMaxWriteLedgerEntries;\r\n//       // Maximum number of bytes that can be written per transaction\r\n//       uint32 txMaxWriteBytes;\r\n//\r\n//       int64 feeReadLedgerEntry;  // Fee per ledger entry read\r\n//       int64 feeWriteLedgerEntry; // Fee per ledger entry write\r\n//\r\n//       int64 feeRead1KB;  // Fee for reading 1KB\r\n//\r\n//       // The following parameters determine the write fee per 1KB.\r\n//       // Write fee grows linearly until bucket list reaches this size\r\n//       int64 bucketListTargetSizeBytes;\r\n//       // Fee per 1KB write when the bucket list is empty\r\n//       int64 writeFee1KBBucketListLow;\r\n//       // Fee per 1KB write when the bucket list has reached `bucketListTargetSizeBytes`\r\n//       int64 writeFee1KBBucketListHigh;\r\n//       // Write fee multiplier for any additional data past the first `bucketListTargetSizeBytes`\r\n//       uint32 bucketListWriteFeeGrowthFactor;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractLedgerCostV0\", [\r\n  [\"ledgerMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxReadBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxWriteBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxReadBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxWriteBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeReadLedgerEntry\", xdr.lookup(\"Int64\")],\r\n  [\"feeWriteLedgerEntry\", xdr.lookup(\"Int64\")],\r\n  [\"feeRead1Kb\", xdr.lookup(\"Int64\")],\r\n  [\"bucketListTargetSizeBytes\", xdr.lookup(\"Int64\")],\r\n  [\"writeFee1KbBucketListLow\", xdr.lookup(\"Int64\")],\r\n  [\"writeFee1KbBucketListHigh\", xdr.lookup(\"Int64\")],\r\n  [\"bucketListWriteFeeGrowthFactor\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractHistoricalDataV0\r\n//   {\r\n//       int64 feeHistorical1KB; // Fee for storing 1KB in archives\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractHistoricalDataV0\", [\r\n  [\"feeHistorical1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractEventsV0\r\n//   {\r\n//       // Maximum size of events that a contract call can emit.\r\n//       uint32 txMaxContractEventsSizeBytes;\r\n//       // Fee for generating 1KB of contract events.\r\n//       int64 feeContractEvents1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractEventsV0\", [\r\n  [\"txMaxContractEventsSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeContractEvents1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractBandwidthV0\r\n//   {\r\n//       // Maximum sum of all transaction sizes in the ledger in bytes\r\n//       uint32 ledgerMaxTxsSizeBytes;\r\n//       // Maximum size in bytes for a transaction\r\n//       uint32 txMaxSizeBytes;\r\n//\r\n//       // Fee for 1 KB of transaction size\r\n//       int64 feeTxSize1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractBandwidthV0\", [\r\n  [\"ledgerMaxTxsSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeTxSize1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractCostType {\r\n//       // Cost of running 1 wasm instruction\r\n//       WasmInsnExec = 0,\r\n//       // Cost of allocating a slice of memory (in bytes)\r\n//       MemAlloc = 1,\r\n//       // Cost of copying a slice of bytes into a pre-allocated memory\r\n//       MemCpy = 2,\r\n//       // Cost of comparing two slices of memory\r\n//       MemCmp = 3,\r\n//       // Cost of a host function dispatch, not including the actual work done by\r\n//       // the function nor the cost of VM invocation machinary\r\n//       DispatchHostFunction = 4,\r\n//       // Cost of visiting a host object from the host object storage. Exists to\r\n//       // make sure some baseline cost coverage, i.e. repeatly visiting objects\r\n//       // by the guest will always incur some charges.\r\n//       VisitObject = 5,\r\n//       // Cost of serializing an xdr object to bytes\r\n//       ValSer = 6,\r\n//       // Cost of deserializing an xdr object from bytes\r\n//       ValDeser = 7,\r\n//       // Cost of computing the sha256 hash from bytes\r\n//       ComputeSha256Hash = 8,\r\n//       // Cost of computing the ed25519 pubkey from bytes\r\n//       ComputeEd25519PubKey = 9,\r\n//       // Cost of verifying ed25519 signature of a payload.\r\n//       VerifyEd25519Sig = 10,\r\n//       // Cost of instantiation a VM from wasm bytes code.\r\n//       VmInstantiation = 11,\r\n//       // Cost of instantiation a VM from a cached state.\r\n//       VmCachedInstantiation = 12,\r\n//       // Cost of invoking a function on the VM. If the function is a host function,\r\n//       // additional cost will be covered by `DispatchHostFunction`.\r\n//       InvokeVmFunction = 13,\r\n//       // Cost of computing a keccak256 hash from bytes.\r\n//       ComputeKeccak256Hash = 14,\r\n//       // Cost of decoding an ECDSA signature computed from a 256-bit prime modulus\r\n//       // curve (e.g. secp256k1 and secp256r1)\r\n//       DecodeEcdsaCurve256Sig = 15,\r\n//       // Cost of recovering an ECDSA secp256k1 key from a signature.\r\n//       RecoverEcdsaSecp256k1Key = 16,\r\n//       // Cost of int256 addition (`+`) and subtraction (`-`) operations\r\n//       Int256AddSub = 17,\r\n//       // Cost of int256 multiplication (`*`) operation\r\n//       Int256Mul = 18,\r\n//       // Cost of int256 division (`/`) operation\r\n//       Int256Div = 19,\r\n//       // Cost of int256 power (`exp`) operation\r\n//       Int256Pow = 20,\r\n//       // Cost of int256 shift (`shl`, `shr`) operation\r\n//       Int256Shift = 21,\r\n//       // Cost of drawing random bytes using a ChaCha20 PRNG\r\n//       ChaCha20DrawBytes = 22,\r\n//\r\n//       // Cost of parsing wasm bytes that only encode instructions.\r\n//       ParseWasmInstructions = 23,\r\n//       // Cost of parsing a known number of wasm functions.\r\n//       ParseWasmFunctions = 24,\r\n//       // Cost of parsing a known number of wasm globals.\r\n//       ParseWasmGlobals = 25,\r\n//       // Cost of parsing a known number of wasm table entries.\r\n//       ParseWasmTableEntries = 26,\r\n//       // Cost of parsing a known number of wasm types.\r\n//       ParseWasmTypes = 27,\r\n//       // Cost of parsing a known number of wasm data segments.\r\n//       ParseWasmDataSegments = 28,\r\n//       // Cost of parsing a known number of wasm element segments.\r\n//       ParseWasmElemSegments = 29,\r\n//       // Cost of parsing a known number of wasm imports.\r\n//       ParseWasmImports = 30,\r\n//       // Cost of parsing a known number of wasm exports.\r\n//       ParseWasmExports = 31,\r\n//       // Cost of parsing a known number of data segment bytes.\r\n//       ParseWasmDataSegmentBytes = 32,\r\n//\r\n//       // Cost of instantiating wasm bytes that only encode instructions.\r\n//       InstantiateWasmInstructions = 33,\r\n//       // Cost of instantiating a known number of wasm functions.\r\n//       InstantiateWasmFunctions = 34,\r\n//       // Cost of instantiating a known number of wasm globals.\r\n//       InstantiateWasmGlobals = 35,\r\n//       // Cost of instantiating a known number of wasm table entries.\r\n//       InstantiateWasmTableEntries = 36,\r\n//       // Cost of instantiating a known number of wasm types.\r\n//       InstantiateWasmTypes = 37,\r\n//       // Cost of instantiating a known number of wasm data segments.\r\n//       InstantiateWasmDataSegments = 38,\r\n//       // Cost of instantiating a known number of wasm element segments.\r\n//       InstantiateWasmElemSegments = 39,\r\n//       // Cost of instantiating a known number of wasm imports.\r\n//       InstantiateWasmImports = 40,\r\n//       // Cost of instantiating a known number of wasm exports.\r\n//       InstantiateWasmExports = 41,\r\n//       // Cost of instantiating a known number of data segment bytes.\r\n//       InstantiateWasmDataSegmentBytes = 42,\r\n//\r\n//       // Cost of decoding a bytes array representing an uncompressed SEC-1 encoded\r\n//       // point on a 256-bit elliptic curve\r\n//       Sec1DecodePointUncompressed = 43,\r\n//       // Cost of verifying an ECDSA Secp256r1 signature\r\n//       VerifyEcdsaSecp256r1Sig = 44\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractCostType\", {\r\n  wasmInsnExec: 0,\r\n  memAlloc: 1,\r\n  memCpy: 2,\r\n  memCmp: 3,\r\n  dispatchHostFunction: 4,\r\n  visitObject: 5,\r\n  valSer: 6,\r\n  valDeser: 7,\r\n  computeSha256Hash: 8,\r\n  computeEd25519PubKey: 9,\r\n  verifyEd25519Sig: 10,\r\n  vmInstantiation: 11,\r\n  vmCachedInstantiation: 12,\r\n  invokeVmFunction: 13,\r\n  computeKeccak256Hash: 14,\r\n  decodeEcdsaCurve256Sig: 15,\r\n  recoverEcdsaSecp256k1Key: 16,\r\n  int256AddSub: 17,\r\n  int256Mul: 18,\r\n  int256Div: 19,\r\n  int256Pow: 20,\r\n  int256Shift: 21,\r\n  chaCha20DrawBytes: 22,\r\n  parseWasmInstructions: 23,\r\n  parseWasmFunctions: 24,\r\n  parseWasmGlobals: 25,\r\n  parseWasmTableEntries: 26,\r\n  parseWasmTypes: 27,\r\n  parseWasmDataSegments: 28,\r\n  parseWasmElemSegments: 29,\r\n  parseWasmImports: 30,\r\n  parseWasmExports: 31,\r\n  parseWasmDataSegmentBytes: 32,\r\n  instantiateWasmInstructions: 33,\r\n  instantiateWasmFunctions: 34,\r\n  instantiateWasmGlobals: 35,\r\n  instantiateWasmTableEntries: 36,\r\n  instantiateWasmTypes: 37,\r\n  instantiateWasmDataSegments: 38,\r\n  instantiateWasmElemSegments: 39,\r\n  instantiateWasmImports: 40,\r\n  instantiateWasmExports: 41,\r\n  instantiateWasmDataSegmentBytes: 42,\r\n  sec1DecodePointUncompressed: 43,\r\n  verifyEcdsaSecp256r1Sig: 44,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCostParamEntry {\r\n//       // use `ext` to add more terms (e.g. higher order polynomials) in the future\r\n//       ExtensionPoint ext;\r\n//\r\n//       int64 constTerm;\r\n//       int64 linearTerm;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCostParamEntry\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"constTerm\", xdr.lookup(\"Int64\")],\r\n  [\"linearTerm\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct StateArchivalSettings {\r\n//       uint32 maxEntryTTL;\r\n//       uint32 minTemporaryTTL;\r\n//       uint32 minPersistentTTL;\r\n//\r\n//       // rent_fee = wfee_rate_average / rent_rate_denominator_for_type\r\n//       int64 persistentRentRateDenominator;\r\n//       int64 tempRentRateDenominator;\r\n//\r\n//       // max number of entries that emit archival meta in a single ledger\r\n//       uint32 maxEntriesToArchive;\r\n//\r\n//       // Number of snapshots to use when calculating average BucketList size\r\n//       uint32 bucketListSizeWindowSampleSize;\r\n//\r\n//       // How often to sample the BucketList size for the average, in ledgers\r\n//       uint32 bucketListWindowSamplePeriod;\r\n//\r\n//       // Maximum number of bytes that we scan for eviction per ledger\r\n//       uint32 evictionScanSize;\r\n//\r\n//       // Lowest BucketList level to be scanned to evict entries\r\n//       uint32 startingEvictionScanLevel;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"StateArchivalSettings\", [\r\n  [\"maxEntryTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"minTemporaryTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"minPersistentTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"persistentRentRateDenominator\", xdr.lookup(\"Int64\")],\r\n  [\"tempRentRateDenominator\", xdr.lookup(\"Int64\")],\r\n  [\"maxEntriesToArchive\", xdr.lookup(\"Uint32\")],\r\n  [\"bucketListSizeWindowSampleSize\", xdr.lookup(\"Uint32\")],\r\n  [\"bucketListWindowSamplePeriod\", xdr.lookup(\"Uint32\")],\r\n  [\"evictionScanSize\", xdr.lookup(\"Uint32\")],\r\n  [\"startingEvictionScanLevel\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct EvictionIterator {\r\n//       uint32 bucketListLevel;\r\n//       bool isCurrBucket;\r\n//       uint64 bucketFileOffset;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"EvictionIterator\", [\r\n  [\"bucketListLevel\", xdr.lookup(\"Uint32\")],\r\n  [\"isCurrBucket\", xdr.bool()],\r\n  [\"bucketFileOffset\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const CONTRACT_COST_COUNT_LIMIT = 1024;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"CONTRACT_COST_COUNT_LIMIT\", 1024);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef ContractCostParamEntry ContractCostParams<CONTRACT_COST_COUNT_LIMIT>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ContractCostParams\", xdr.varArray(xdr.lookup(\"ContractCostParamEntry\"), xdr.lookup(\"CONTRACT_COST_COUNT_LIMIT\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ConfigSettingID\r\n//   {\r\n//       CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES = 0,\r\n//       CONFIG_SETTING_CONTRACT_COMPUTE_V0 = 1,\r\n//       CONFIG_SETTING_CONTRACT_LEDGER_COST_V0 = 2,\r\n//       CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0 = 3,\r\n//       CONFIG_SETTING_CONTRACT_EVENTS_V0 = 4,\r\n//       CONFIG_SETTING_CONTRACT_BANDWIDTH_V0 = 5,\r\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS = 6,\r\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES = 7,\r\n//       CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES = 8,\r\n//       CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES = 9,\r\n//       CONFIG_SETTING_STATE_ARCHIVAL = 10,\r\n//       CONFIG_SETTING_CONTRACT_EXECUTION_LANES = 11,\r\n//       CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW = 12,\r\n//       CONFIG_SETTING_EVICTION_ITERATOR = 13\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ConfigSettingId\", {\r\n  configSettingContractMaxSizeBytes: 0,\r\n  configSettingContractComputeV0: 1,\r\n  configSettingContractLedgerCostV0: 2,\r\n  configSettingContractHistoricalDataV0: 3,\r\n  configSettingContractEventsV0: 4,\r\n  configSettingContractBandwidthV0: 5,\r\n  configSettingContractCostParamsCpuInstructions: 6,\r\n  configSettingContractCostParamsMemoryBytes: 7,\r\n  configSettingContractDataKeySizeBytes: 8,\r\n  configSettingContractDataEntrySizeBytes: 9,\r\n  configSettingStateArchival: 10,\r\n  configSettingContractExecutionLanes: 11,\r\n  configSettingBucketlistSizeWindow: 12,\r\n  configSettingEvictionIterator: 13,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ConfigSettingEntry switch (ConfigSettingID configSettingID)\r\n//   {\r\n//   case CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES:\r\n//       uint32 contractMaxSizeBytes;\r\n//   case CONFIG_SETTING_CONTRACT_COMPUTE_V0:\r\n//       ConfigSettingContractComputeV0 contractCompute;\r\n//   case CONFIG_SETTING_CONTRACT_LEDGER_COST_V0:\r\n//       ConfigSettingContractLedgerCostV0 contractLedgerCost;\r\n//   case CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0:\r\n//       ConfigSettingContractHistoricalDataV0 contractHistoricalData;\r\n//   case CONFIG_SETTING_CONTRACT_EVENTS_V0:\r\n//       ConfigSettingContractEventsV0 contractEvents;\r\n//   case CONFIG_SETTING_CONTRACT_BANDWIDTH_V0:\r\n//       ConfigSettingContractBandwidthV0 contractBandwidth;\r\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS:\r\n//       ContractCostParams contractCostParamsCpuInsns;\r\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES:\r\n//       ContractCostParams contractCostParamsMemBytes;\r\n//   case CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES:\r\n//       uint32 contractDataKeySizeBytes;\r\n//   case CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES:\r\n//       uint32 contractDataEntrySizeBytes;\r\n//   case CONFIG_SETTING_STATE_ARCHIVAL:\r\n//       StateArchivalSettings stateArchivalSettings;\r\n//   case CONFIG_SETTING_CONTRACT_EXECUTION_LANES:\r\n//       ConfigSettingContractExecutionLanesV0 contractExecutionLanes;\r\n//   case CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW:\r\n//       uint64 bucketListSizeWindow<>;\r\n//   case CONFIG_SETTING_EVICTION_ITERATOR:\r\n//       EvictionIterator evictionIterator;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ConfigSettingEntry\", {\r\n  switchOn: xdr.lookup(\"ConfigSettingId\"),\r\n  switchName: \"configSettingId\",\r\n  switches: [\r\n    [\"configSettingContractMaxSizeBytes\", \"contractMaxSizeBytes\"],\r\n    [\"configSettingContractComputeV0\", \"contractCompute\"],\r\n    [\"configSettingContractLedgerCostV0\", \"contractLedgerCost\"],\r\n    [\"configSettingContractHistoricalDataV0\", \"contractHistoricalData\"],\r\n    [\"configSettingContractEventsV0\", \"contractEvents\"],\r\n    [\"configSettingContractBandwidthV0\", \"contractBandwidth\"],\r\n    [\"configSettingContractCostParamsCpuInstructions\", \"contractCostParamsCpuInsns\"],\r\n    [\"configSettingContractCostParamsMemoryBytes\", \"contractCostParamsMemBytes\"],\r\n    [\"configSettingContractDataKeySizeBytes\", \"contractDataKeySizeBytes\"],\r\n    [\"configSettingContractDataEntrySizeBytes\", \"contractDataEntrySizeBytes\"],\r\n    [\"configSettingStateArchival\", \"stateArchivalSettings\"],\r\n    [\"configSettingContractExecutionLanes\", \"contractExecutionLanes\"],\r\n    [\"configSettingBucketlistSizeWindow\", \"bucketListSizeWindow\"],\r\n    [\"configSettingEvictionIterator\", \"evictionIterator\"],\r\n  ],\r\n  arms: {\r\n    contractMaxSizeBytes: xdr.lookup(\"Uint32\"),\r\n    contractCompute: xdr.lookup(\"ConfigSettingContractComputeV0\"),\r\n    contractLedgerCost: xdr.lookup(\"ConfigSettingContractLedgerCostV0\"),\r\n    contractHistoricalData: xdr.lookup(\"ConfigSettingContractHistoricalDataV0\"),\r\n    contractEvents: xdr.lookup(\"ConfigSettingContractEventsV0\"),\r\n    contractBandwidth: xdr.lookup(\"ConfigSettingContractBandwidthV0\"),\r\n    contractCostParamsCpuInsns: xdr.lookup(\"ContractCostParams\"),\r\n    contractCostParamsMemBytes: xdr.lookup(\"ContractCostParams\"),\r\n    contractDataKeySizeBytes: xdr.lookup(\"Uint32\"),\r\n    contractDataEntrySizeBytes: xdr.lookup(\"Uint32\"),\r\n    stateArchivalSettings: xdr.lookup(\"StateArchivalSettings\"),\r\n    contractExecutionLanes: xdr.lookup(\"ConfigSettingContractExecutionLanesV0\"),\r\n    bucketListSizeWindow: xdr.varArray(xdr.lookup(\"Uint64\"), 2147483647),\r\n    evictionIterator: xdr.lookup(\"EvictionIterator\"),\r\n  },\r\n});\r\n\r\n});\r\nexport default types;\r\n","import xdr from './xdr';\r\nimport { Asset } from './asset';\r\nimport { hash } from './hashing';\r\n\r\n// LiquidityPoolFeeV18 is the default liquidity pool fee in protocol v18. It defaults to 30 base points (0.3%).\r\nexport const LiquidityPoolFeeV18 = 30;\r\n\r\n/**\r\n * getLiquidityPoolId computes the Pool ID for the given assets, fee and pool type.\r\n *\r\n * @see [stellar-core getPoolID](https://github.com/stellar/stellar-core/blob/9f3a48c6a8f1aa77b6043a055d0638661f718080/src/ledger/test/LedgerTxnTests.cpp#L3746-L3751)\r\n *\r\n * @export\r\n * @param {string} liquidityPoolType – A string representing the liquidity pool type.\r\n * @param {object} liquidityPoolParameters        – The liquidity pool parameters.\r\n * @param {Asset}  liquidityPoolParameters.assetA – The first asset in the Pool, it must respect the rule assetA < assetB.\r\n * @param {Asset}  liquidityPoolParameters.assetB – The second asset in the Pool, it must respect the rule assetA < assetB.\r\n * @param {number} liquidityPoolParameters.fee    – The liquidity pool fee. For now the only fee supported is `30`.\r\n *\r\n * @return {Buffer} the raw Pool ID buffer, which can be stringfied with `toString('hex')`\r\n */\r\nexport function getLiquidityPoolId(\r\n  liquidityPoolType,\r\n  liquidityPoolParameters = {}\r\n) {\r\n  if (liquidityPoolType !== 'constant_product') {\r\n    throw new Error('liquidityPoolType is invalid');\r\n  }\r\n\r\n  const { assetA, assetB, fee } = liquidityPoolParameters;\r\n  if (!assetA || !(assetA instanceof Asset)) {\r\n    throw new Error('assetA is invalid');\r\n  }\r\n  if (!assetB || !(assetB instanceof Asset)) {\r\n    throw new Error('assetB is invalid');\r\n  }\r\n  if (!fee || fee !== LiquidityPoolFeeV18) {\r\n    throw new Error('fee is invalid');\r\n  }\r\n\r\n  if (Asset.compare(assetA, assetB) !== -1) {\r\n    throw new Error('Assets are not in lexicographic order');\r\n  }\r\n\r\n  const lpTypeData =\r\n    xdr.LiquidityPoolType.liquidityPoolConstantProduct().toXDR();\r\n  const lpParamsData = new xdr.LiquidityPoolConstantProductParameters({\r\n    assetA: assetA.toXDRObject(),\r\n    assetB: assetB.toXDRObject(),\r\n    fee\r\n  }).toXDR();\r\n  const payload = Buffer.concat([lpTypeData, lpParamsData]);\r\n  return hash(payload);\r\n}\r\n","import { sha256 } from 'sha.js';\r\n\r\nexport function hash(data) {\r\n  const hasher = new sha256();\r\n  hasher.update(data, 'utf8');\r\n  return hasher.digest();\r\n}\r\n","/* eslint-disable import/no-import-module-exports */\r\nimport xdr from './xdr';\r\nimport cereal from './jsxdr';\r\n\r\nexport { xdr };\r\nexport { cereal };\r\nexport { hash } from './hashing';\r\nexport { sign, verify, FastSigning } from './signing';\r\nexport {\r\n  getLiquidityPoolId,\r\n  LiquidityPoolFeeV18\r\n} from './get_liquidity_pool_id';\r\nexport { Keypair } from './keypair';\r\nexport { UnsignedHyper, Hyper } from '@stellar/js-xdr';\r\nexport { TransactionBase } from './transaction_base';\r\nexport { Transaction } from './transaction';\r\nexport { FeeBumpTransaction } from './fee_bump_transaction';\r\nexport {\r\n  TransactionBuilder,\r\n  TimeoutInfinite,\r\n  BASE_FEE\r\n} from './transaction_builder';\r\nexport { Asset } from './asset';\r\nexport { LiquidityPoolAsset } from './liquidity_pool_asset';\r\nexport { LiquidityPoolId } from './liquidity_pool_id';\r\nexport {\r\n  Operation,\r\n  AuthRequiredFlag,\r\n  AuthRevocableFlag,\r\n  AuthImmutableFlag,\r\n  AuthClawbackEnabledFlag\r\n} from './operation';\r\nexport * from './memo';\r\nexport { Account } from './account';\r\nexport { MuxedAccount } from './muxed_account';\r\nexport { Claimant } from './claimant';\r\nexport { Networks } from './network';\r\nexport { StrKey } from './strkey';\r\nexport { SignerKey } from './signerkey';\r\nexport { Soroban } from './soroban';\r\nexport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress,\r\n  extractBaseAddress,\r\n  encodeMuxedAccount\r\n} from './util/decode_encode_muxed_account';\r\n\r\n//\r\n// Soroban\r\n//\r\n\r\nexport { Contract } from './contract';\r\nexport { Address } from './address';\r\nexport * from './numbers';\r\nexport * from './scval';\r\nexport * from './events';\r\nexport * from './sorobandata_builder';\r\nexport * from './auth';\r\n\r\nexport * from './invocation';\r\n\r\nexport default module.exports;\r\n","import { Asset } from './asset';\r\nimport { Address } from './address';\r\nimport { scValToNative } from './scval';\r\n\r\n/**\r\n * @typedef CreateInvocation\r\n *\r\n * @prop {'wasm'|'sac'} type  a type indicating if this creation was a custom\r\n *    contract or a wrapping of an existing Stellar asset\r\n * @prop {string} [token] when `type=='sac'`, the canonical {@link Asset} that\r\n *    is being wrapped by this Stellar Asset Contract\r\n * @prop {object} [wasm]  when `type=='wasm'`, add'l creation parameters\r\n *\r\n * @prop {string} wasm.hash     hex hash of WASM bytecode backing this contract\r\n * @prop {string} wasm.address  contract address of this deployment\r\n * @prop {string} wasm.salt     hex salt that the user consumed when creating\r\n *    this contract (encoded in the resulting address)\r\n */\r\n\r\n/**\r\n * @typedef ExecuteInvocation\r\n *\r\n * @prop {string} source    the strkey of the contract (C...) being invoked\r\n * @prop {string} function  the name of the function being invoked\r\n * @prop {any[]}  args      the natively-represented parameters to the function\r\n *    invocation (see {@link scValToNative}) for rules on how they're\r\n *    represented a JS types\r\n */\r\n\r\n/**\r\n * @typedef InvocationTree\r\n * @prop {'execute' | 'create'} type  the type of invocation occurring, either\r\n *    contract creation or host function execution\r\n * @prop {CreateInvocation | ExecuteInvocation} args  the parameters to the\r\n *    invocation, depending on the type\r\n * @prop {InvocationTree[]} invocations   any sub-invocations that (may) occur\r\n *    as a result of this invocation (i.e. a tree of call stacks)\r\n */\r\n\r\n/**\r\n * Turns a raw invocation tree into a human-readable format.\r\n *\r\n * This is designed to make the invocation tree easier to understand in order to\r\n * inform users about the side-effects of their contract calls. This will help\r\n * make informed decisions about whether or not a particular invocation will\r\n * result in what you expect it to.\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} root  the raw XDR of the invocation,\r\n *    likely acquired from transaction simulation. this is either from the\r\n *    {@link Operation.invokeHostFunction} itself (the `func` field), or from\r\n *    the authorization entries ({@link xdr.SorobanAuthorizationEntry}, the\r\n *    `rootInvocation` field)\r\n *\r\n * @returns {InvocationTree}  a human-readable version of the invocation tree\r\n *\r\n * @example\r\n * Here, we show a browser modal after simulating an arbitrary transaction,\r\n * `tx`, which we assume has an `Operation.invokeHostFunction` inside of it:\r\n *\r\n * ```typescript\r\n * import { Server, buildInvocationTree } from '@stellar/stellar-sdk';\r\n *\r\n * const s = new Server(\"fill in accordingly\");\r\n *\r\n * s.simulateTransaction(tx).then(\r\n *  (resp: SorobanRpc.SimulateTransactionResponse) => {\r\n *    if (SorobanRpc.isSuccessfulSim(resp) && ) {\r\n *      // bold assumption: there's a valid result with an auth entry\r\n *      alert(\r\n *        \"You are authorizing the following invocation:\\n\" +\r\n *        JSON.stringify(\r\n *          buildInvocationTree(resp.result!.auth[0].rootInvocation()),\r\n *          null,\r\n *          2\r\n *        )\r\n *      );\r\n *    }\r\n *  }\r\n * );\r\n * ```\r\n */\r\nexport function buildInvocationTree(root) {\r\n  const fn = root.function();\r\n\r\n  /** @type {InvocationTree} */\r\n  const output = {};\r\n\r\n  /** @type {xdr.CreateContractArgs | xdr.InvokeContractArgs} */\r\n  const inner = fn.value();\r\n\r\n  switch (fn.switch().value) {\r\n    // sorobanAuthorizedFunctionTypeContractFn\r\n    case 0:\r\n      output.type = 'execute';\r\n      output.args = {\r\n        source: Address.fromScAddress(inner.contractAddress()).toString(),\r\n        function: inner.functionName(),\r\n        args: inner.args().map((arg) => scValToNative(arg))\r\n      };\r\n      break;\r\n\r\n    // sorobanAuthorizedFunctionTypeCreateContractHostFn\r\n    case 1: {\r\n      output.type = 'create';\r\n      output.args = {};\r\n\r\n      // If the executable is a WASM, the preimage MUST be an address. If it's a\r\n      // token, the preimage MUST be an asset. This is a cheeky way to check\r\n      // that, because wasm=0, token=1 and address=0, asset=1 in the XDR switch\r\n      // values.\r\n      //\r\n      // The first part may not be true in V2, but we'd need to update this code\r\n      // anyway so it can still be an error.\r\n      const [exec, preimage] = [inner.executable(), inner.contractIdPreimage()];\r\n      if (!!exec.switch().value !== !!preimage.switch().value) {\r\n        throw new Error(\r\n          `creation function appears invalid: ${JSON.stringify(\r\n            inner\r\n          )} (should be wasm+address or token+asset)`\r\n        );\r\n      }\r\n\r\n      switch (exec.switch().value) {\r\n        // contractExecutableWasm\r\n        case 0: {\r\n          /** @type {xdr.ContractIdPreimageFromAddress} */\r\n          const details = preimage.fromAddress();\r\n\r\n          output.args.type = 'wasm';\r\n          output.args.wasm = {\r\n            salt: details.salt().toString('hex'),\r\n            hash: exec.wasmHash().toString('hex'),\r\n            address: Address.fromScAddress(details.address()).toString()\r\n          };\r\n          break;\r\n        }\r\n\r\n        // contractExecutableStellarAsset\r\n        case 1:\r\n          output.args.type = 'sac';\r\n          output.args.asset = Asset.fromOperation(\r\n            preimage.fromAsset()\r\n          ).toString();\r\n          break;\r\n\r\n        default:\r\n          throw new Error(`unknown creation type: ${JSON.stringify(exec)}`);\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    default:\r\n      throw new Error(\r\n        `unknown invocation type (${fn.switch()}): ${JSON.stringify(fn)}`\r\n      );\r\n  }\r\n\r\n  output.invocations = root.subInvocations().map((i) => buildInvocationTree(i));\r\n  return output;\r\n}\r\n\r\n/**\r\n * @callback InvocationWalker\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} node  the currently explored node\r\n * @param {number} depth  the depth of the tree this node is occurring at (the\r\n *    root starts at a depth of 1)\r\n * @param {xdr.SorobanAuthorizedInvocation} [parent]  this `node`s parent node,\r\n *    if any (i.e. this doesn't exist at the root)\r\n *\r\n * @returns {boolean?}   returning `false` is a hint to stop exploring\r\n */\r\n\r\n/**\r\n * Executes a callback function on each node in the tree until stopped.\r\n *\r\n * Nodes are walked in a depth-first order. Returning `false` from the callback\r\n * stops further depth exploration at that node, but it does not stop the walk\r\n * in a \"global\" view.\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} root  the tree to explore\r\n * @param {InvocationWalker} callback  the callback to execute for each node\r\n * @returns {void}\r\n */\r\nexport function walkInvocationTree(root, callback) {\r\n  walkHelper(root, 1, callback);\r\n}\r\n\r\nfunction walkHelper(node, depth, callback, parent) {\r\n  if (callback(node, depth, parent) === false /* allow void rv */) {\r\n    return;\r\n  }\r\n\r\n  node\r\n    .subInvocations()\r\n    .forEach((i) => walkHelper(i, depth + 1, callback, node));\r\n}\r\n","import { XdrWriter, XdrReader } from '@stellar/js-xdr';\r\n\r\nconst cereal = { XdrWriter, XdrReader };\r\nexport default cereal;\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"^\"]}] */\r\n\r\nimport nacl from 'tweetnacl';\r\n\r\nimport { sign, verify, generate } from './signing';\r\nimport { StrKey } from './strkey';\r\nimport { hash } from './hashing';\r\n\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * `Keypair` represents public (and secret) keys of the account.\r\n *\r\n * Currently `Keypair` only supports ed25519 but in a future this class can be abstraction layer for other\r\n * public-key signature systems.\r\n *\r\n * Use more convenient methods to create `Keypair` object:\r\n * * `{@link Keypair.fromPublicKey}`\r\n * * `{@link Keypair.fromSecret}`\r\n * * `{@link Keypair.random}`\r\n *\r\n * @constructor\r\n * @param {object} keys At least one of keys must be provided.\r\n * @param {string} keys.type Public-key signature system name. (currently only `ed25519` keys are supported)\r\n * @param {Buffer} [keys.publicKey] Raw public key\r\n * @param {Buffer} [keys.secretKey] Raw secret key (32-byte secret seed in ed25519`)\r\n */\r\nexport class Keypair {\r\n  constructor(keys) {\r\n    if (keys.type !== 'ed25519') {\r\n      throw new Error('Invalid keys type');\r\n    }\r\n\r\n    this.type = keys.type;\r\n\r\n    if (keys.secretKey) {\r\n      keys.secretKey = Buffer.from(keys.secretKey);\r\n\r\n      if (keys.secretKey.length !== 32) {\r\n        throw new Error('secretKey length is invalid');\r\n      }\r\n\r\n      this._secretSeed = keys.secretKey;\r\n      this._publicKey = generate(keys.secretKey);\r\n      this._secretKey = Buffer.concat([keys.secretKey, this._publicKey]);\r\n\r\n      if (\r\n        keys.publicKey &&\r\n        !this._publicKey.equals(Buffer.from(keys.publicKey))\r\n      ) {\r\n        throw new Error('secretKey does not match publicKey');\r\n      }\r\n    } else {\r\n      this._publicKey = Buffer.from(keys.publicKey);\r\n\r\n      if (this._publicKey.length !== 32) {\r\n        throw new Error('publicKey length is invalid');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` instance from secret. This can either be secret key or secret seed depending\r\n   * on underlying public-key signature system. Currently `Keypair` only supports ed25519.\r\n   * @param {string} secret secret key (ex. `SDAKFNYEIAORZKKCYRILFQKLLOCNPL5SWJ3YY5NM3ZH6GJSZGXHZEPQS`)\r\n   * @returns {Keypair}\r\n   */\r\n  static fromSecret(secret) {\r\n    const rawSecret = StrKey.decodeEd25519SecretSeed(secret);\r\n    return this.fromRawEd25519Seed(rawSecret);\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` object from ed25519 secret key seed raw bytes.\r\n   *\r\n   * @param {Buffer} rawSeed Raw 32-byte ed25519 secret key seed\r\n   * @returns {Keypair}\r\n   */\r\n  static fromRawEd25519Seed(rawSeed) {\r\n    return new this({ type: 'ed25519', secretKey: rawSeed });\r\n  }\r\n\r\n  /**\r\n   * Returns `Keypair` object representing network master key.\r\n   * @param {string} networkPassphrase passphrase of the target stellar network (e.g. \"Public Global Stellar Network ; September 2015\").\r\n   * @returns {Keypair}\r\n   */\r\n  static master(networkPassphrase) {\r\n    if (!networkPassphrase) {\r\n      throw new Error(\r\n        'No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.'\r\n      );\r\n    }\r\n\r\n    return this.fromRawEd25519Seed(hash(networkPassphrase));\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` object from public key.\r\n   * @param {string} publicKey public key (ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`)\r\n   * @returns {Keypair}\r\n   */\r\n  static fromPublicKey(publicKey) {\r\n    publicKey = StrKey.decodeEd25519PublicKey(publicKey);\r\n    if (publicKey.length !== 32) {\r\n      throw new Error('Invalid Stellar public key');\r\n    }\r\n    return new this({ type: 'ed25519', publicKey });\r\n  }\r\n\r\n  /**\r\n   * Create a random `Keypair` object.\r\n   * @returns {Keypair}\r\n   */\r\n  static random() {\r\n    const secret = nacl.randomBytes(32);\r\n    return this.fromRawEd25519Seed(secret);\r\n  }\r\n\r\n  xdrAccountId() {\r\n    return new xdr.AccountId.publicKeyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  xdrPublicKey() {\r\n    return new xdr.PublicKey.publicKeyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Creates a {@link xdr.MuxedAccount} object from the public key.\r\n   *\r\n   * You will get a different type of muxed account depending on whether or not\r\n   * you pass an ID.\r\n   *\r\n   * @param  {string} [id] - stringified integer indicating the underlying muxed\r\n   *     ID of the new account object\r\n   *\r\n   * @return {xdr.MuxedAccount}\r\n   */\r\n  xdrMuxedAccount(id) {\r\n    if (typeof id !== 'undefined') {\r\n      if (typeof id !== 'string') {\r\n        throw new TypeError(`expected string for ID, got ${typeof id}`);\r\n      }\r\n\r\n      return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n        new xdr.MuxedAccountMed25519({\r\n          id: xdr.Uint64.fromString(id),\r\n          ed25519: this._publicKey\r\n        })\r\n      );\r\n    }\r\n\r\n    return new xdr.MuxedAccount.keyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns raw public key\r\n   * @returns {Buffer}\r\n   */\r\n  rawPublicKey() {\r\n    return this._publicKey;\r\n  }\r\n\r\n  signatureHint() {\r\n    const a = this.xdrAccountId().toXDR();\r\n\r\n    return a.slice(a.length - 4);\r\n  }\r\n\r\n  /**\r\n   * Returns public key associated with this `Keypair` object.\r\n   * @returns {string}\r\n   */\r\n  publicKey() {\r\n    return StrKey.encodeEd25519PublicKey(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns secret key associated with this `Keypair` object\r\n   * @returns {string}\r\n   */\r\n  secret() {\r\n    if (!this._secretSeed) {\r\n      throw new Error('no secret key available');\r\n    }\r\n\r\n    if (this.type === 'ed25519') {\r\n      return StrKey.encodeEd25519SecretSeed(this._secretSeed);\r\n    }\r\n\r\n    throw new Error('Invalid Keypair type');\r\n  }\r\n\r\n  /**\r\n   * Returns raw secret key.\r\n   * @returns {Buffer}\r\n   */\r\n  rawSecretKey() {\r\n    return this._secretSeed;\r\n  }\r\n\r\n  /**\r\n   * Returns `true` if this `Keypair` object contains secret key and can sign.\r\n   * @returns {boolean}\r\n   */\r\n  canSign() {\r\n    return !!this._secretKey;\r\n  }\r\n\r\n  /**\r\n   * Signs data.\r\n   * @param {Buffer} data Data to sign\r\n   * @returns {Buffer}\r\n   */\r\n  sign(data) {\r\n    if (!this.canSign()) {\r\n      throw new Error('cannot sign: no secret key available');\r\n    }\r\n\r\n    return sign(data, this._secretKey);\r\n  }\r\n\r\n  /**\r\n   * Verifies if `signature` for `data` is valid.\r\n   * @param {Buffer} data Signed data\r\n   * @param {Buffer} signature Signature\r\n   * @returns {boolean}\r\n   */\r\n  verify(data, signature) {\r\n    return verify(data, signature, this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns the decorated signature (hint+sig) for arbitrary data.\r\n   *\r\n   * @param  {Buffer} data  arbitrary data to sign\r\n   * @return {xdr.DecoratedSignature}   the raw signature structure which can be\r\n   *     added directly to a transaction envelope\r\n   *\r\n   * @see TransactionBase.addDecoratedSignature\r\n   */\r\n  signDecorated(data) {\r\n    const signature = this.sign(data);\r\n    const hint = this.signatureHint();\r\n\r\n    return new xdr.DecoratedSignature({ hint, signature });\r\n  }\r\n\r\n  /**\r\n   * Returns the raw decorated signature (hint+sig) for a signed payload signer.\r\n   *\r\n   *  The hint is defined as the last 4 bytes of the signer key XORed with last\r\n   *  4 bytes of the payload (zero-left-padded if necessary).\r\n   *\r\n   * @param  {Buffer} data    data to both sign and treat as the payload\r\n   * @return {xdr.DecoratedSignature}\r\n   *\r\n   * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0040.md#signature-hint\r\n   * @see TransactionBase.addDecoratedSignature\r\n   */\r\n  signPayloadDecorated(data) {\r\n    const signature = this.sign(data);\r\n    const keyHint = this.signatureHint();\r\n\r\n    let hint = Buffer.from(data.slice(-4));\r\n    if (hint.length < 4) {\r\n      // append zeroes as needed\r\n      hint = Buffer.concat([hint, Buffer.alloc(4 - data.length, 0)]);\r\n    }\r\n\r\n    return new xdr.DecoratedSignature({\r\n      hint: hint.map((byte, i) => byte ^ keyHint[i]),\r\n      signature\r\n    });\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { Asset } from './asset';\r\nimport {\r\n  LiquidityPoolFeeV18,\r\n  getLiquidityPoolId\r\n} from './get_liquidity_pool_id';\r\n\r\n/**\r\n * LiquidityPoolAsset class represents a liquidity pool trustline change.\r\n *\r\n * @constructor\r\n * @param {Asset} assetA – The first asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\r\n * @param {Asset} assetB – The second asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\r\n * @param {number} fee – The liquidity pool fee. For now the only fee supported is `30`.\r\n */\r\nexport class LiquidityPoolAsset {\r\n  constructor(assetA, assetB, fee) {\r\n    if (!assetA || !(assetA instanceof Asset)) {\r\n      throw new Error('assetA is invalid');\r\n    }\r\n    if (!assetB || !(assetB instanceof Asset)) {\r\n      throw new Error('assetB is invalid');\r\n    }\r\n    if (Asset.compare(assetA, assetB) !== -1) {\r\n      throw new Error('Assets are not in lexicographic order');\r\n    }\r\n    if (!fee || fee !== LiquidityPoolFeeV18) {\r\n      throw new Error('fee is invalid');\r\n    }\r\n\r\n    this.assetA = assetA;\r\n    this.assetB = assetB;\r\n    this.fee = fee;\r\n  }\r\n\r\n  /**\r\n   * Returns a liquidity pool asset object from its XDR ChangeTrustAsset object\r\n   * representation.\r\n   * @param {xdr.ChangeTrustAsset} ctAssetXdr - The asset XDR object.\r\n   * @returns {LiquidityPoolAsset}\r\n   */\r\n  static fromOperation(ctAssetXdr) {\r\n    const assetType = ctAssetXdr.switch();\r\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\r\n      const liquidityPoolParameters = ctAssetXdr\r\n        .liquidityPool()\r\n        .constantProduct();\r\n      return new this(\r\n        Asset.fromOperation(liquidityPoolParameters.assetA()),\r\n        Asset.fromOperation(liquidityPoolParameters.assetB()),\r\n        liquidityPoolParameters.fee()\r\n      );\r\n    }\r\n\r\n    throw new Error(`Invalid asset type: ${assetType.name}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the `xdr.ChangeTrustAsset` object for this liquidity pool asset.\r\n   *\r\n   * Note: To convert from an {@link Asset `Asset`} to `xdr.ChangeTrustAsset`\r\n   * please refer to the\r\n   * {@link Asset.toChangeTrustXDRObject `Asset.toChangeTrustXDRObject`} method.\r\n   *\r\n   * @returns {xdr.ChangeTrustAsset} XDR ChangeTrustAsset object.\r\n   */\r\n  toXDRObject() {\r\n    const lpConstantProductParamsXdr =\r\n      new xdr.LiquidityPoolConstantProductParameters({\r\n        assetA: this.assetA.toXDRObject(),\r\n        assetB: this.assetB.toXDRObject(),\r\n        fee: this.fee\r\n      });\r\n    const lpParamsXdr = new xdr.LiquidityPoolParameters(\r\n      'liquidityPoolConstantProduct',\r\n      lpConstantProductParamsXdr\r\n    );\r\n    return new xdr.ChangeTrustAsset('assetTypePoolShare', lpParamsXdr);\r\n  }\r\n\r\n  /**\r\n   * @returns {LiquidityPoolParameters} Liquidity pool parameters.\r\n   */\r\n  getLiquidityPoolParameters() {\r\n    return {\r\n      ...this,\r\n      assetA: this.assetA,\r\n      assetB: this.assetB,\r\n      fee: this.fee\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\r\n   */\r\n  getAssetType() {\r\n    return 'liquidity_pool_shares';\r\n  }\r\n\r\n  /**\r\n   * @param {LiquidityPoolAsset} other the LiquidityPoolAsset to compare\r\n   * @returns {boolean} `true` if this asset equals the given asset.\r\n   */\r\n  equals(other) {\r\n    return (\r\n      this.assetA.equals(other.assetA) &&\r\n      this.assetB.equals(other.assetB) &&\r\n      this.fee === other.fee\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    const poolId = getLiquidityPoolId(\r\n      'constant_product',\r\n      this.getLiquidityPoolParameters()\r\n    ).toString('hex');\r\n    return `liquidity_pool:${poolId}`;\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\n/**\r\n * LiquidityPoolId class represents the asset referenced by a trustline to a\r\n * liquidity pool.\r\n *\r\n * @constructor\r\n * @param {string} liquidityPoolId - The ID of the liquidity pool in string 'hex'.\r\n */\r\nexport class LiquidityPoolId {\r\n  constructor(liquidityPoolId) {\r\n    if (!liquidityPoolId) {\r\n      throw new Error('liquidityPoolId cannot be empty');\r\n    }\r\n    if (!/^[a-f0-9]{64}$/.test(liquidityPoolId)) {\r\n      throw new Error('Liquidity pool ID is not a valid hash');\r\n    }\r\n\r\n    this.liquidityPoolId = liquidityPoolId;\r\n  }\r\n\r\n  /**\r\n   * Returns a liquidity pool ID object from its xdr.TrustLineAsset representation.\r\n   * @param {xdr.TrustLineAsset} tlAssetXdr - The asset XDR object.\r\n   * @returns {LiquidityPoolId}\r\n   */\r\n  static fromOperation(tlAssetXdr) {\r\n    const assetType = tlAssetXdr.switch();\r\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\r\n      const liquidityPoolId = tlAssetXdr.liquidityPoolId().toString('hex');\r\n      return new this(liquidityPoolId);\r\n    }\r\n\r\n    throw new Error(`Invalid asset type: ${assetType.name}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the `xdr.TrustLineAsset` object for this liquidity pool ID.\r\n   *\r\n   * Note: To convert from {@link Asset `Asset`} to `xdr.TrustLineAsset` please\r\n   * refer to the\r\n   * {@link Asset.toTrustLineXDRObject `Asset.toTrustLineXDRObject`} method.\r\n   *\r\n   * @returns {xdr.TrustLineAsset} XDR LiquidityPoolId object\r\n   */\r\n  toXDRObject() {\r\n    const xdrPoolId = xdr.PoolId.fromXDR(this.liquidityPoolId, 'hex');\r\n    return new xdr.TrustLineAsset('assetTypePoolShare', xdrPoolId);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Liquidity pool ID.\r\n   */\r\n  getLiquidityPoolId() {\r\n    return String(this.liquidityPoolId);\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\r\n   */\r\n  getAssetType() {\r\n    return 'liquidity_pool_shares';\r\n  }\r\n\r\n  /**\r\n   * @param {LiquidityPoolId} asset LiquidityPoolId to compare.\r\n   * @returns {boolean} `true` if this asset equals the given asset.\r\n   */\r\n  equals(asset) {\r\n    return this.liquidityPoolId === asset.getLiquidityPoolId();\r\n  }\r\n\r\n  toString() {\r\n    return `liquidity_pool:${this.liquidityPoolId}`;\r\n  }\r\n}\r\n","import { UnsignedHyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoNone = 'none';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoID = 'id';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoText = 'text';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoHash = 'hash';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoReturn = 'return';\r\n\r\n/**\r\n * `Memo` represents memos attached to transactions.\r\n *\r\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\r\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\r\n * @see [Transactions concept](https://developers.stellar.org/docs/glossary/transactions/)\r\n * @class Memo\r\n */\r\nexport class Memo {\r\n  constructor(type, value = null) {\r\n    this._type = type;\r\n    this._value = value;\r\n\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        break;\r\n      case MemoID:\r\n        Memo._validateIdValue(value);\r\n        break;\r\n      case MemoText:\r\n        Memo._validateTextValue(value);\r\n        break;\r\n      case MemoHash:\r\n      case MemoReturn:\r\n        Memo._validateHashValue(value);\r\n        // We want MemoHash and MemoReturn to have Buffer as a value\r\n        if (typeof value === 'string') {\r\n          this._value = Buffer.from(value, 'hex');\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error('Invalid memo type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\r\n   */\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(type) {\r\n    throw new Error('Memo is immutable');\r\n  }\r\n\r\n  /**\r\n   * Contains memo value:\r\n   * * `null` for `MemoNone`,\r\n   * * `string` for `MemoID`,\r\n   * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\r\n   * * `Buffer` for `MemoHash`, `MemoReturn`.\r\n   */\r\n  get value() {\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        return null;\r\n      case MemoID:\r\n      case MemoText:\r\n        return this._value;\r\n      case MemoHash:\r\n      case MemoReturn:\r\n        return Buffer.from(this._value);\r\n      default:\r\n        throw new Error('Invalid memo type');\r\n    }\r\n  }\r\n\r\n  set value(value) {\r\n    throw new Error('Memo is immutable');\r\n  }\r\n\r\n  static _validateIdValue(value) {\r\n    const error = new Error(`Expects a int64 as a string. Got ${value}`);\r\n\r\n    if (typeof value !== 'string') {\r\n      throw error;\r\n    }\r\n\r\n    let number;\r\n    try {\r\n      number = new BigNumber(value);\r\n    } catch (e) {\r\n      throw error;\r\n    }\r\n\r\n    // Infinity\r\n    if (!number.isFinite()) {\r\n      throw error;\r\n    }\r\n\r\n    // NaN\r\n    if (number.isNaN()) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static _validateTextValue(value) {\r\n    if (!xdr.Memo.armTypeForArm('text').isValid(value)) {\r\n      throw new Error('Expects string, array or buffer, max 28 bytes');\r\n    }\r\n  }\r\n\r\n  static _validateHashValue(value) {\r\n    const error = new Error(\r\n      `Expects a 32 byte hash value or hex encoded string. Got ${value}`\r\n    );\r\n\r\n    if (value === null || typeof value === 'undefined') {\r\n      throw error;\r\n    }\r\n\r\n    let valueBuffer;\r\n    if (typeof value === 'string') {\r\n      if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\r\n        throw error;\r\n      }\r\n      valueBuffer = Buffer.from(value, 'hex');\r\n    } else if (Buffer.isBuffer(value)) {\r\n      valueBuffer = Buffer.from(value);\r\n    } else {\r\n      throw error;\r\n    }\r\n\r\n    if (!valueBuffer.length || valueBuffer.length !== 32) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an empty memo (`MemoNone`).\r\n   * @returns {Memo}\r\n   */\r\n  static none() {\r\n    return new Memo(MemoNone);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoText` memo.\r\n   * @param {string} text - memo text\r\n   * @returns {Memo}\r\n   */\r\n  static text(text) {\r\n    return new Memo(MemoText, text);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoID` memo.\r\n   * @param {string} id - 64-bit number represented as a string\r\n   * @returns {Memo}\r\n   */\r\n  static id(id) {\r\n    return new Memo(MemoID, id);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoHash` memo.\r\n   * @param {array|string} hash - 32 byte hash or hex encoded string\r\n   * @returns {Memo}\r\n   */\r\n  static hash(hash) {\r\n    return new Memo(MemoHash, hash);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoReturn` memo.\r\n   * @param {array|string} hash - 32 byte hash or hex encoded string\r\n   * @returns {Memo}\r\n   */\r\n  static return(hash) {\r\n    return new Memo(MemoReturn, hash);\r\n  }\r\n\r\n  /**\r\n   * Returns XDR memo object.\r\n   * @returns {xdr.Memo}\r\n   */\r\n  toXDRObject() {\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        return xdr.Memo.memoNone();\r\n      case MemoID:\r\n        return xdr.Memo.memoId(UnsignedHyper.fromString(this._value));\r\n      case MemoText:\r\n        return xdr.Memo.memoText(this._value);\r\n      case MemoHash:\r\n        return xdr.Memo.memoHash(this._value);\r\n      case MemoReturn:\r\n        return xdr.Memo.memoReturn(this._value);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns {@link Memo} from XDR memo object.\r\n   * @param {xdr.Memo} object XDR memo object\r\n   * @returns {Memo}\r\n   */\r\n  static fromXDRObject(object) {\r\n    switch (object.arm()) {\r\n      case 'id':\r\n        return Memo.id(object.value().toString());\r\n      case 'text':\r\n        return Memo.text(object.value());\r\n      case 'hash':\r\n        return Memo.hash(object.value());\r\n      case 'retHash':\r\n        return Memo.return(object.value());\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (typeof object.value() === 'undefined') {\r\n      return Memo.none();\r\n    }\r\n\r\n    throw new Error('Unknown type');\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { Account } from './account';\r\nimport { StrKey } from './strkey';\r\nimport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress,\r\n  encodeMuxedAccount,\r\n  extractBaseAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Represents a muxed account for transactions and operations.\r\n *\r\n * A muxed (or *multiplexed*) account (defined rigorously in\r\n * [CAP-27](https://stellar.org/protocol/cap-27) and briefly in\r\n * [SEP-23](https://stellar.org/protocol/sep-23)) is one that resolves a single\r\n * Stellar `G...`` account to many different underlying IDs.\r\n *\r\n * For example, you may have a single Stellar address for accounting purposes:\r\n *   GA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJVSGZ\r\n *\r\n * Yet would like to use it for 4 different family members:\r\n *   1: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAGZFQ\r\n *   2: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAALIWQ\r\n *   3: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAPYHQ\r\n *   4: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAQLQQ\r\n *\r\n * This object makes it easy to create muxed accounts from regular accounts,\r\n * duplicate them, get/set the underlying IDs, etc. without mucking around with\r\n * the raw XDR.\r\n *\r\n * Because muxed accounts are purely an off-chain convention, they all share the\r\n * sequence number tied to their underlying G... account. Thus, this object\r\n * *requires* an {@link Account} instance to be passed in, so that muxed\r\n * instances of an account can collectively modify the sequence number whenever\r\n * a muxed account is used as the source of a @{link Transaction} with {@link\r\n * TransactionBuilder}.\r\n *\r\n * @constructor\r\n *\r\n * @param {Account}   account - the @{link Account} instance representing the\r\n *                              underlying G... address\r\n * @param {string}    id      - a stringified uint64 value that represents the\r\n *                              ID of the muxed account\r\n *\r\n * @link https://developers.stellar.org/docs/glossary/muxed-accounts/\r\n */\r\nexport class MuxedAccount {\r\n  constructor(baseAccount, id) {\r\n    const accountId = baseAccount.accountId();\r\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\r\n      throw new Error('accountId is invalid');\r\n    }\r\n\r\n    this.account = baseAccount;\r\n    this._muxedXdr = encodeMuxedAccount(accountId, id);\r\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\r\n    this._id = id;\r\n  }\r\n\r\n  /**\r\n   * Parses an M-address into a MuxedAccount object.\r\n   *\r\n   * @param  {string} mAddress    - an M-address to transform\r\n   * @param  {string} sequenceNum - the sequence number of the underlying {@link\r\n   *     Account}, to use for the underlying base account (@link\r\n   *     MuxedAccount.baseAccount). If you're using the SDK, you can use\r\n   *     `server.loadAccount` to fetch this if you don't know it.\r\n   *\r\n   * @return {MuxedAccount}\r\n   */\r\n  static fromAddress(mAddress, sequenceNum) {\r\n    const muxedAccount = decodeAddressToMuxedAccount(mAddress);\r\n    const gAddress = extractBaseAddress(mAddress);\r\n    const id = muxedAccount.med25519().id().toString();\r\n\r\n    return new MuxedAccount(new Account(gAddress, sequenceNum), id);\r\n  }\r\n\r\n  /**\r\n   * @return {Account} the underlying account object shared among all muxed\r\n   *     accounts with this Stellar address\r\n   */\r\n  baseAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * @return {string} the M-address representing this account's (G-address, ID)\r\n   */\r\n  accountId() {\r\n    return this._mAddress;\r\n  }\r\n\r\n  id() {\r\n    return this._id;\r\n  }\r\n\r\n  setId(id) {\r\n    if (typeof id !== 'string') {\r\n      throw new Error('id should be a string representing a number (uint64)');\r\n    }\r\n\r\n    this._muxedXdr.med25519().id(xdr.Uint64.fromString(id));\r\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\r\n    this._id = id;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Accesses the underlying account's sequence number.\r\n   * @return {string}  strigified sequence number for the underlying account\r\n   */\r\n  sequenceNumber() {\r\n    return this.account.sequenceNumber();\r\n  }\r\n\r\n  /**\r\n   * Increments the underlying account's sequence number by one.\r\n   * @return {void}\r\n   */\r\n  incrementSequenceNumber() {\r\n    return this.account.incrementSequenceNumber();\r\n  }\r\n\r\n  /**\r\n   * @return {xdr.MuxedAccount} the XDR object representing this muxed account's\r\n   *     G-address and uint64 ID\r\n   */\r\n  toXDRObject() {\r\n    return this._muxedXdr;\r\n  }\r\n\r\n  equals(otherMuxedAccount) {\r\n    return this.accountId() === otherMuxedAccount.accountId();\r\n  }\r\n}\r\n","/**\r\n * Contains passphrases for common networks:\r\n * * `Networks.PUBLIC`: `Public Global Stellar Network ; September 2015`\r\n * * `Networks.TESTNET`: `Test SDF Network ; September 2015`\r\n * * `Networks.FUTURENET`: `Test SDF Future Network ; October 2022`\r\n * * `Networks.STANDALONE`: `Standalone Network ; February 2017`\r\n *\r\n * @type {{PUBLIC: string, TESTNET: string, FUTURENET: string, STANDALONE: string }}\r\n */\r\nexport const Networks = {\r\n  PUBLIC: 'Public Global Stellar Network ; September 2015',\r\n  TESTNET: 'Test SDF Network ; September 2015',\r\n  FUTURENET: 'Test SDF Future Network ; October 2022',\r\n  SANDBOX: 'Local Sandbox Stellar Network ; September 2022',\r\n  STANDALONE: 'Standalone Network ; February 2017'\r\n};\r\n","import { XdrLargeInt } from './xdr_large_int';\r\n\r\nexport { Uint128 } from './uint128';\r\nexport { Uint256 } from './uint256';\r\nexport { Int128 } from './int128';\r\nexport { Int256 } from './int256';\r\nexport { ScInt } from './sc_int';\r\nexport { XdrLargeInt };\r\n\r\n/**\r\n * Transforms an opaque {@link xdr.ScVal} into a native bigint, if possible.\r\n *\r\n * If you then want to use this in the abstractions provided by this module,\r\n * you can pass it to the constructor of {@link XdrLargeInt}.\r\n *\r\n * @example\r\n * let scv = contract.call(\"add\", x, y); // assume it returns an xdr.ScVal\r\n * let bigi = scValToBigInt(scv);\r\n *\r\n * new ScInt(bigi);               // if you don't care about types, and\r\n * new XdrLargeInt('i128', bigi); // if you do\r\n *\r\n * @param {xdr.ScVal} scv - the raw XDR value to parse into an integer\r\n * @returns {bigint} the native value of this input value\r\n *\r\n * @throws {TypeError} if the `scv` input value doesn't represent an integer\r\n */\r\nexport function scValToBigInt(scv) {\r\n  const scIntType = XdrLargeInt.getType(scv.switch().name);\r\n\r\n  switch (scv.switch().name) {\r\n    case 'scvU32':\r\n    case 'scvI32':\r\n      return BigInt(scv.value());\r\n\r\n    case 'scvU64':\r\n    case 'scvI64':\r\n      return new XdrLargeInt(scIntType, scv.value()).toBigInt();\r\n\r\n    case 'scvU128':\r\n    case 'scvI128':\r\n      return new XdrLargeInt(scIntType, [\r\n        scv.value().lo(),\r\n        scv.value().hi()\r\n      ]).toBigInt();\r\n\r\n    case 'scvU256':\r\n    case 'scvI256':\r\n      return new XdrLargeInt(scIntType, [\r\n        scv.value().loLo(),\r\n        scv.value().loHi(),\r\n        scv.value().hiLo(),\r\n        scv.value().hiHi()\r\n      ]).toBigInt();\r\n\r\n    default:\r\n      throw TypeError(`expected integer type, got ${scv.switch()}`);\r\n  }\r\n}\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Int128 extends LargeInt {\r\n  /**\r\n   * Construct a signed 128-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  get size() {\r\n    return 128;\r\n  }\r\n}\r\n\r\nInt128.defineIntBoundaries();\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Int256 extends LargeInt {\r\n  /**\r\n   * Construct a signed 256-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  get size() {\r\n    return 256;\r\n  }\r\n}\r\n\r\nInt256.defineIntBoundaries();\r\n","import { XdrLargeInt } from './xdr_large_int';\r\n\r\n/**\r\n * Provides an easier way to manipulate large numbers for Stellar operations.\r\n *\r\n * You can instantiate this \"**s**mart **c**ontract integer\" value either from\r\n * bigints, strings, or numbers (whole numbers, or this will throw).\r\n *\r\n * If you need to create a native BigInt from a list of integer \"parts\" (for\r\n * example, you have a series of encoded 32-bit integers that represent a larger\r\n * value), you can use the lower level abstraction {@link XdrLargeInt}. For\r\n * example, you could do `new XdrLargeInt('u128', bytes...).toBigInt()`.\r\n *\r\n * @example\r\n * import { xdr, ScInt, scValToBigInt } from \"@stellar/stellar-base\";\r\n *\r\n * // You have an ScVal from a contract and want to parse it into JS native.\r\n * const value = xdr.ScVal.fromXDR(someXdr, \"base64\");\r\n * const bigi = scValToBigInt(value); // grab it as a BigInt\r\n * let sci = new ScInt(bigi);\r\n *\r\n * sci.toNumber(); // gives native JS type (w/ size check)\r\n * sci.toBigInt(); // gives the native BigInt value\r\n * sci.toU64();    // gives ScValType-specific XDR constructs (with size checks)\r\n *\r\n * // You have a number and want to shove it into a contract.\r\n * sci = ScInt(0xdeadcafebabe);\r\n * sci.toBigInt() // returns 244838016400062n\r\n * sci.toNumber() // throws: too large\r\n *\r\n * // Pass any to e.g. a Contract.call(), conversion happens automatically\r\n * // regardless of the initial type.\r\n * const scValU128 = sci.toU128();\r\n * const scValI256 = sci.toI256();\r\n * const scValU64  = sci.toU64();\r\n *\r\n * // Lots of ways to initialize:\r\n * ScInt(\"123456789123456789\")\r\n * ScInt(123456789123456789n);\r\n * ScInt(1n << 140n);\r\n * ScInt(-42);\r\n * ScInt(scValToBigInt(scValU128)); // from above\r\n *\r\n * // If you know the type ahead of time (accessing `.raw` is faster than\r\n * // conversions), you can specify the type directly (otherwise, it's\r\n * // interpreted from the numbers you pass in):\r\n * const i = ScInt(123456789n, { type: \"u256\" });\r\n *\r\n * // For example, you can use the underlying `sdk.U256` and convert it to an\r\n * // `xdr.ScVal` directly like so:\r\n * const scv = new xdr.ScVal.scvU256(i.raw);\r\n *\r\n * // Or reinterpret it as a different type (size permitting):\r\n * const scv = i.toI64();\r\n *\r\n * @param {number|bigint|string} value - a single, integer-like value which will\r\n *    be interpreted in the smallest appropriate XDR type supported by Stellar\r\n *    (64, 128, or 256 bit integer values). signed values are supported, though\r\n *    they are sanity-checked against `opts.type`. if you need 32-bit values,\r\n *    you can construct them directly without needing this wrapper, e.g.\r\n *    `xdr.ScVal.scvU32(1234)`.\r\n *\r\n * @param {object}  [opts] - an optional object controlling optional parameters\r\n * @param {string}  [opts.type] - force a specific data type. the type choices\r\n *    are: 'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the\r\n *    smallest one that fits the `value`)\r\n *\r\n * @throws {RangeError} if the `value` is invalid (e.g. floating point), too\r\n *    large (i.e. exceeds a 256-bit value), or doesn't fit in the `opts.type`\r\n * @throws {TypeError} on missing parameters, or if the \"signedness\" of `opts`\r\n *    doesn't match input `value`, e.g. passing `{type: 'u64'}` yet passing -1n\r\n * @throws {SyntaxError} if a string `value` can't be parsed as a big integer\r\n */\r\nexport class ScInt extends XdrLargeInt {\r\n  constructor(value, opts) {\r\n    const signed = value < 0;\r\n    let type = opts?.type ?? '';\r\n    if (type.startsWith('u') && signed) {\r\n      throw TypeError(`specified type ${opts.type} yet negative (${value})`);\r\n    }\r\n\r\n    // If unspecified, we make a best guess at the type based on the bit length\r\n    // of the value, treating 64 as a minimum and 256 as a maximum.\r\n    if (type === '') {\r\n      type = signed ? 'i' : 'u';\r\n      const bitlen = nearestBigIntSize(value);\r\n\r\n      switch (bitlen) {\r\n        case 64:\r\n        case 128:\r\n        case 256:\r\n          type += bitlen.toString();\r\n          break;\r\n\r\n        default:\r\n          throw RangeError(\r\n            `expected 64/128/256 bits for input (${value}), got ${bitlen}`\r\n          );\r\n      }\r\n    }\r\n\r\n    super(type, value);\r\n  }\r\n}\r\n\r\nfunction nearestBigIntSize(bigI) {\r\n  // Note: Even though BigInt.toString(2) includes the negative sign for\r\n  // negative values (???), the following is still accurate, because the\r\n  // negative sign would be represented by a sign bit.\r\n  const bitlen = bigI.toString(2).length;\r\n  return [64, 128, 256].find((len) => bitlen <= len) ?? bitlen;\r\n}\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Uint128 extends LargeInt {\r\n  /**\r\n   * Construct an unsigned 128-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  get size() {\r\n    return 128;\r\n  }\r\n}\r\n\r\nUint128.defineIntBoundaries();\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Uint256 extends LargeInt {\r\n  /**\r\n   * Construct an unsigned 256-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  get size() {\r\n    return 256;\r\n  }\r\n}\r\n\r\nUint256.defineIntBoundaries();\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\">>\"]}] */\r\nimport { Hyper, UnsignedHyper } from '@stellar/js-xdr';\r\n\r\nimport { Uint128 } from './uint128';\r\nimport { Uint256 } from './uint256';\r\nimport { Int128 } from './int128';\r\nimport { Int256 } from './int256';\r\n\r\nimport xdr from '../xdr';\r\n\r\n/**\r\n * A wrapper class to represent large XDR-encodable integers.\r\n *\r\n * This operates at a lower level than {@link ScInt} by forcing you to specify\r\n * the type / width / size in bits of the integer you're targeting, regardless\r\n * of the input value(s) you provide.\r\n *\r\n * @param {string}  type - force a specific data type. the type choices are:\r\n *    'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the smallest\r\n *    one that fits the `value`) (see {@link XdrLargeInt.isType})\r\n * @param {number|bigint|string|Array<number|bigint|string>} values   a list of\r\n *    integer-like values interpreted in big-endian order\r\n */\r\nexport class XdrLargeInt {\r\n  /** @type {xdr.LargeInt} */\r\n  int; // child class of a jsXdr.LargeInt\r\n\r\n  /** @type {string} */\r\n  type;\r\n\r\n  constructor(type, values) {\r\n    if (!(values instanceof Array)) {\r\n      values = [values];\r\n    }\r\n\r\n    // normalize values to one type\r\n    values = values.map((i) => {\r\n      // micro-optimization to no-op on the likeliest input value:\r\n      if (typeof i === 'bigint') {\r\n        return i;\r\n      }\r\n      if (i instanceof XdrLargeInt) {\r\n        return i.toBigInt();\r\n      }\r\n      return BigInt(i);\r\n    });\r\n\r\n    switch (type) {\r\n      case 'i64':\r\n        this.int = new Hyper(values);\r\n        break;\r\n      case 'i128':\r\n        this.int = new Int128(values);\r\n        break;\r\n      case 'i256':\r\n        this.int = new Int256(values);\r\n        break;\r\n      case 'u64':\r\n        this.int = new UnsignedHyper(values);\r\n        break;\r\n      case 'u128':\r\n        this.int = new Uint128(values);\r\n        break;\r\n      case 'u256':\r\n        this.int = new Uint256(values);\r\n        break;\r\n      default:\r\n        throw TypeError(`invalid type: ${type}`);\r\n    }\r\n\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   * @throws {RangeError} if the value can't fit into a Number\r\n   */\r\n  toNumber() {\r\n    const bi = this.int.toBigInt();\r\n    if (bi > Number.MAX_SAFE_INTEGER || bi < Number.MIN_SAFE_INTEGER) {\r\n      throw RangeError(\r\n        `value ${bi} not in range for Number ` +\r\n          `[${Number.MAX_SAFE_INTEGER}, ${Number.MIN_SAFE_INTEGER}]`\r\n      );\r\n    }\r\n\r\n    return Number(bi);\r\n  }\r\n\r\n  /** @returns {bigint} */\r\n  toBigInt() {\r\n    return this.int.toBigInt();\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I64` */\r\n  toI64() {\r\n    this._sizeCheck(64);\r\n    const v = this.toBigInt();\r\n    if (BigInt.asIntN(64, v) !== v) {\r\n      throw RangeError(`value too large for i64: ${v}`);\r\n    }\r\n\r\n    return xdr.ScVal.scvI64(new xdr.Int64(v));\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U64` */\r\n  toU64() {\r\n    this._sizeCheck(64);\r\n    return xdr.ScVal.scvU64(\r\n      new xdr.Uint64(BigInt.asUintN(64, this.toBigInt())) // reiterpret as unsigned\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = I128`\r\n   * @throws {RangeError} if the value cannot fit in 128 bits\r\n   */\r\n  toI128() {\r\n    this._sizeCheck(128);\r\n\r\n    const v = this.int.toBigInt();\r\n    const hi64 = BigInt.asIntN(64, v >> 64n); // encode top 64 w/ sign bit\r\n    const lo64 = BigInt.asUintN(64, v); // grab btm 64, encode sign\r\n\r\n    return xdr.ScVal.scvI128(\r\n      new xdr.Int128Parts({\r\n        hi: new xdr.Int64(hi64),\r\n        lo: new xdr.Uint64(lo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = U128`\r\n   * @throws {RangeError} if the value cannot fit in 128 bits\r\n   */\r\n  toU128() {\r\n    this._sizeCheck(128);\r\n    const v = this.int.toBigInt();\r\n\r\n    return xdr.ScVal.scvU128(\r\n      new xdr.UInt128Parts({\r\n        hi: new xdr.Uint64(BigInt.asUintN(64, v >> 64n)),\r\n        lo: new xdr.Uint64(BigInt.asUintN(64, v))\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I256` */\r\n  toI256() {\r\n    const v = this.int.toBigInt();\r\n    const hiHi64 = BigInt.asIntN(64, v >> 192n); // keep sign bit\r\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\r\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\r\n    const loLo64 = BigInt.asUintN(64, v);\r\n\r\n    return xdr.ScVal.scvI256(\r\n      new xdr.Int256Parts({\r\n        hiHi: new xdr.Int64(hiHi64),\r\n        hiLo: new xdr.Uint64(hiLo64),\r\n        loHi: new xdr.Uint64(loHi64),\r\n        loLo: new xdr.Uint64(loLo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U256` */\r\n  toU256() {\r\n    const v = this.int.toBigInt();\r\n    const hiHi64 = BigInt.asUintN(64, v >> 192n); // encode sign bit\r\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\r\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\r\n    const loLo64 = BigInt.asUintN(64, v);\r\n\r\n    return xdr.ScVal.scvU256(\r\n      new xdr.UInt256Parts({\r\n        hiHi: new xdr.Uint64(hiHi64),\r\n        hiLo: new xdr.Uint64(hiLo64),\r\n        loHi: new xdr.Uint64(loHi64),\r\n        loLo: new xdr.Uint64(loLo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the smallest interpretation of the stored value */\r\n  toScVal() {\r\n    switch (this.type) {\r\n      case 'i64':\r\n        return this.toI64();\r\n      case 'i128':\r\n        return this.toI128();\r\n      case 'i256':\r\n        return this.toI256();\r\n      case 'u64':\r\n        return this.toU64();\r\n      case 'u128':\r\n        return this.toU128();\r\n      case 'u256':\r\n        return this.toU256();\r\n      default:\r\n        throw TypeError(`invalid type: ${this.type}`);\r\n    }\r\n  }\r\n\r\n  valueOf() {\r\n    return this.int.valueOf();\r\n  }\r\n\r\n  toString() {\r\n    return this.int.toString();\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      value: this.toBigInt().toString(),\r\n      type: this.type\r\n    };\r\n  }\r\n\r\n  _sizeCheck(bits) {\r\n    if (this.int.size > bits) {\r\n      throw RangeError(`value too large for ${bits} bits (${this.type})`);\r\n    }\r\n  }\r\n\r\n  static isType(type) {\r\n    switch (type) {\r\n      case 'i64':\r\n      case 'i128':\r\n      case 'i256':\r\n      case 'u64':\r\n      case 'u128':\r\n      case 'u256':\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert the raw `ScValType` string (e.g. 'scvI128', generated by the XDR)\r\n   * to a type description for {@link XdrLargeInt} construction (e.g. 'i128')\r\n   *\r\n   * @param {string} scvType  the `xdr.ScValType` as a string\r\n   * @returns {string} a suitable equivalent type to construct this object\r\n   */\r\n  static getType(scvType) {\r\n    return scvType.slice(3).toLowerCase();\r\n  }\r\n}\r\n","/* eslint-disable no-bitwise */\r\n\r\nimport { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\nimport { trimEnd } from './util/util';\r\nimport { best_r } from './util/continued_fraction';\r\nimport { Asset } from './asset';\r\nimport { LiquidityPoolAsset } from './liquidity_pool_asset';\r\nimport { Claimant } from './claimant';\r\nimport { StrKey } from './strkey';\r\nimport { LiquidityPoolId } from './liquidity_pool_id';\r\nimport xdr from './xdr';\r\nimport * as ops from './operations';\r\nimport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\nconst ONE = 10000000;\r\nconst MAX_INT64 = '9223372036854775807';\r\n\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, requires the issuing\r\n * account to give other accounts permission before they can hold the issuing\r\n * account’s credit.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthRequiredFlag = 1 << 0;\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, allows the issuing\r\n * account to revoke its credit held by other accounts.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthRevocableFlag = 1 << 1;\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, then none of the\r\n * authorization flags can be set and the account can never be deleted.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthImmutableFlag = 1 << 2;\r\n\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, then any trustlines\r\n * created by this account can have a ClawbackOp operation submitted for the\r\n * corresponding asset.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthClawbackEnabledFlag = 1 << 3;\r\n\r\n/**\r\n * `Operation` class represents\r\n * [operations](https://developers.stellar.org/docs/glossary/operations/) in\r\n * Stellar network.\r\n *\r\n * Use one of static methods to create operations:\r\n * * `{@link Operation.createAccount}`\r\n * * `{@link Operation.payment}`\r\n * * `{@link Operation.pathPaymentStrictReceive}`\r\n * * `{@link Operation.pathPaymentStrictSend}`\r\n * * `{@link Operation.manageSellOffer}`\r\n * * `{@link Operation.manageBuyOffer}`\r\n * * `{@link Operation.createPassiveSellOffer}`\r\n * * `{@link Operation.setOptions}`\r\n * * `{@link Operation.changeTrust}`\r\n * * `{@link Operation.allowTrust}`\r\n * * `{@link Operation.accountMerge}`\r\n * * `{@link Operation.inflation}`\r\n * * `{@link Operation.manageData}`\r\n * * `{@link Operation.bumpSequence}`\r\n * * `{@link Operation.createClaimableBalance}`\r\n * * `{@link Operation.claimClaimableBalance}`\r\n * * `{@link Operation.beginSponsoringFutureReserves}`\r\n * * `{@link Operation.endSponsoringFutureReserves}`\r\n * * `{@link Operation.revokeAccountSponsorship}`\r\n * * `{@link Operation.revokeTrustlineSponsorship}`\r\n * * `{@link Operation.revokeOfferSponsorship}`\r\n * * `{@link Operation.revokeDataSponsorship}`\r\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\r\n * * `{@link Operation.revokeLiquidityPoolSponsorship}`\r\n * * `{@link Operation.revokeSignerSponsorship}`\r\n * * `{@link Operation.clawback}`\r\n * * `{@link Operation.clawbackClaimableBalance}`\r\n * * `{@link Operation.setTrustLineFlags}`\r\n * * `{@link Operation.liquidityPoolDeposit}`\r\n * * `{@link Operation.liquidityPoolWithdraw}`\r\n * * `{@link Operation.invokeHostFunction}`\r\n * * `{@link Operation.extendFootprintTtlOp}`\r\n * * `{@link Operation.restoreFootprint}`\r\n *\r\n * @class Operation\r\n */\r\nexport class Operation {\r\n  static setSourceAccount(opAttributes, opts) {\r\n    if (opts.source) {\r\n      try {\r\n        opAttributes.sourceAccount = decodeAddressToMuxedAccount(opts.source);\r\n      } catch (e) {\r\n        throw new Error('Source address is invalid');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deconstructs the raw XDR operation object into the structured object that\r\n   * was used to create the operation (i.e. the `opts` parameter to most ops).\r\n   *\r\n   * @param {xdr.Operation}   operation - An XDR Operation.\r\n   * @return {Operation}\r\n   */\r\n  static fromXDRObject(operation) {\r\n    const result = {};\r\n    if (operation.sourceAccount()) {\r\n      result.source = encodeMuxedAccountToAddress(operation.sourceAccount());\r\n    }\r\n\r\n    const attrs = operation.body().value();\r\n    const operationName = operation.body().switch().name;\r\n\r\n    switch (operationName) {\r\n      case 'createAccount': {\r\n        result.type = 'createAccount';\r\n        result.destination = accountIdtoAddress(attrs.destination());\r\n        result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\r\n        break;\r\n      }\r\n      case 'payment': {\r\n        result.type = 'payment';\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        break;\r\n      }\r\n      case 'pathPaymentStrictReceive': {\r\n        result.type = 'pathPaymentStrictReceive';\r\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\r\n        result.sendMax = this._fromXDRAmount(attrs.sendMax());\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\r\n        result.destAmount = this._fromXDRAmount(attrs.destAmount());\r\n        result.path = [];\r\n\r\n        const path = attrs.path();\r\n\r\n        // note that Object.values isn't supported by node 6!\r\n        Object.keys(path).forEach((pathKey) => {\r\n          result.path.push(Asset.fromOperation(path[pathKey]));\r\n        });\r\n        break;\r\n      }\r\n      case 'pathPaymentStrictSend': {\r\n        result.type = 'pathPaymentStrictSend';\r\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\r\n        result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\r\n        result.destMin = this._fromXDRAmount(attrs.destMin());\r\n        result.path = [];\r\n\r\n        const path = attrs.path();\r\n\r\n        // note that Object.values isn't supported by node 6!\r\n        Object.keys(path).forEach((pathKey) => {\r\n          result.path.push(Asset.fromOperation(path[pathKey]));\r\n        });\r\n        break;\r\n      }\r\n      case 'changeTrust': {\r\n        result.type = 'changeTrust';\r\n        switch (attrs.line().switch()) {\r\n          case xdr.AssetType.assetTypePoolShare():\r\n            result.line = LiquidityPoolAsset.fromOperation(attrs.line());\r\n            break;\r\n          default:\r\n            result.line = Asset.fromOperation(attrs.line());\r\n            break;\r\n        }\r\n        result.limit = this._fromXDRAmount(attrs.limit());\r\n        break;\r\n      }\r\n      case 'allowTrust': {\r\n        result.type = 'allowTrust';\r\n        result.trustor = accountIdtoAddress(attrs.trustor());\r\n        result.assetCode = attrs.asset().value().toString();\r\n        result.assetCode = trimEnd(result.assetCode, '\\0');\r\n        result.authorize = attrs.authorize();\r\n        break;\r\n      }\r\n      case 'setOptions': {\r\n        result.type = 'setOptions';\r\n        if (attrs.inflationDest()) {\r\n          result.inflationDest = accountIdtoAddress(attrs.inflationDest());\r\n        }\r\n\r\n        result.clearFlags = attrs.clearFlags();\r\n        result.setFlags = attrs.setFlags();\r\n        result.masterWeight = attrs.masterWeight();\r\n        result.lowThreshold = attrs.lowThreshold();\r\n        result.medThreshold = attrs.medThreshold();\r\n        result.highThreshold = attrs.highThreshold();\r\n        // home_domain is checked by iscntrl in stellar-core\r\n        result.homeDomain =\r\n          attrs.homeDomain() !== undefined\r\n            ? attrs.homeDomain().toString('ascii')\r\n            : undefined;\r\n\r\n        if (attrs.signer()) {\r\n          const signer = {};\r\n          const arm = attrs.signer().key().arm();\r\n          if (arm === 'ed25519') {\r\n            signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());\r\n          } else if (arm === 'preAuthTx') {\r\n            signer.preAuthTx = attrs.signer().key().preAuthTx();\r\n          } else if (arm === 'hashX') {\r\n            signer.sha256Hash = attrs.signer().key().hashX();\r\n          } else if (arm === 'ed25519SignedPayload') {\r\n            const signedPayload = attrs.signer().key().ed25519SignedPayload();\r\n            signer.ed25519SignedPayload = StrKey.encodeSignedPayload(\r\n              signedPayload.toXDR()\r\n            );\r\n          }\r\n\r\n          signer.weight = attrs.signer().weight();\r\n          result.signer = signer;\r\n        }\r\n        break;\r\n      }\r\n      // the next case intentionally falls through!\r\n      case 'manageOffer':\r\n      case 'manageSellOffer': {\r\n        result.type = 'manageSellOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        result.offerId = attrs.offerId().toString();\r\n        break;\r\n      }\r\n      case 'manageBuyOffer': {\r\n        result.type = 'manageBuyOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        result.offerId = attrs.offerId().toString();\r\n        break;\r\n      }\r\n      // the next case intentionally falls through!\r\n      case 'createPassiveOffer':\r\n      case 'createPassiveSellOffer': {\r\n        result.type = 'createPassiveSellOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        break;\r\n      }\r\n      case 'accountMerge': {\r\n        result.type = 'accountMerge';\r\n        result.destination = encodeMuxedAccountToAddress(attrs);\r\n        break;\r\n      }\r\n      case 'manageData': {\r\n        result.type = 'manageData';\r\n        // manage_data.name is checked by iscntrl in stellar-core\r\n        result.name = attrs.dataName().toString('ascii');\r\n        result.value = attrs.dataValue();\r\n        break;\r\n      }\r\n      case 'inflation': {\r\n        result.type = 'inflation';\r\n        break;\r\n      }\r\n      case 'bumpSequence': {\r\n        result.type = 'bumpSequence';\r\n        result.bumpTo = attrs.bumpTo().toString();\r\n        break;\r\n      }\r\n      case 'createClaimableBalance': {\r\n        result.type = 'createClaimableBalance';\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.claimants = [];\r\n        attrs.claimants().forEach((claimant) => {\r\n          result.claimants.push(Claimant.fromXDR(claimant));\r\n        });\r\n        break;\r\n      }\r\n      case 'claimClaimableBalance': {\r\n        result.type = 'claimClaimableBalance';\r\n        result.balanceId = attrs.toXDR('hex');\r\n        break;\r\n      }\r\n      case 'beginSponsoringFutureReserves': {\r\n        result.type = 'beginSponsoringFutureReserves';\r\n        result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\r\n        break;\r\n      }\r\n      case 'endSponsoringFutureReserves': {\r\n        result.type = 'endSponsoringFutureReserves';\r\n        break;\r\n      }\r\n      case 'revokeSponsorship': {\r\n        extractRevokeSponshipDetails(attrs, result);\r\n        break;\r\n      }\r\n      case 'clawback': {\r\n        result.type = 'clawback';\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.from = encodeMuxedAccountToAddress(attrs.from());\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        break;\r\n      }\r\n      case 'clawbackClaimableBalance': {\r\n        result.type = 'clawbackClaimableBalance';\r\n        result.balanceId = attrs.toXDR('hex');\r\n        break;\r\n      }\r\n      case 'setTrustLineFlags': {\r\n        result.type = 'setTrustLineFlags';\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.trustor = accountIdtoAddress(attrs.trustor());\r\n\r\n        // Convert from the integer-bitwised flag into a sensible object that\r\n        // indicates true/false for each flag that's on/off.\r\n        const clears = attrs.clearFlags();\r\n        const sets = attrs.setFlags();\r\n\r\n        const mapping = {\r\n          authorized: xdr.TrustLineFlags.authorizedFlag(),\r\n          authorizedToMaintainLiabilities:\r\n            xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\r\n          clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\r\n        };\r\n\r\n        const getFlagValue = (key) => {\r\n          const bit = mapping[key].value;\r\n          if (sets & bit) {\r\n            return true;\r\n          }\r\n          if (clears & bit) {\r\n            return false;\r\n          }\r\n          return undefined;\r\n        };\r\n\r\n        result.flags = {};\r\n        Object.keys(mapping).forEach((flagName) => {\r\n          result.flags[flagName] = getFlagValue(flagName);\r\n        });\r\n\r\n        break;\r\n      }\r\n      case 'liquidityPoolDeposit': {\r\n        result.type = 'liquidityPoolDeposit';\r\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\r\n        result.maxAmountA = this._fromXDRAmount(attrs.maxAmountA());\r\n        result.maxAmountB = this._fromXDRAmount(attrs.maxAmountB());\r\n        result.minPrice = this._fromXDRPrice(attrs.minPrice());\r\n        result.maxPrice = this._fromXDRPrice(attrs.maxPrice());\r\n        break;\r\n      }\r\n      case 'liquidityPoolWithdraw': {\r\n        result.type = 'liquidityPoolWithdraw';\r\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.minAmountA = this._fromXDRAmount(attrs.minAmountA());\r\n        result.minAmountB = this._fromXDRAmount(attrs.minAmountB());\r\n        break;\r\n      }\r\n      case 'invokeHostFunction': {\r\n        result.type = 'invokeHostFunction';\r\n        result.func = attrs.hostFunction();\r\n        result.auth = attrs.auth() ?? [];\r\n        break;\r\n      }\r\n      case 'extendFootprintTtl': {\r\n        result.type = 'extendFootprintTtl';\r\n        result.extendTo = attrs.extendTo();\r\n        break;\r\n      }\r\n      case 'restoreFootprint': {\r\n        result.type = 'restoreFootprint';\r\n        break;\r\n      }\r\n      default: {\r\n        throw new Error(`Unknown operation: ${operationName}`);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Validates that a given amount is possible for a Stellar asset.\r\n   *\r\n   * Specifically, this means that the amount is well, a valid number, but also\r\n   * that it is within the int64 range and has no more than 7 decimal levels of\r\n   * precision.\r\n   *\r\n   * Note that while smart contracts allow larger amounts, this is oriented\r\n   * towards validating the standard Stellar operations.\r\n   *\r\n   * @param {string}  value       the amount to validate\r\n   * @param {boolean} allowZero   optionally, whether or not zero is valid (default: no)\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  static isValidAmount(value, allowZero = false) {\r\n    if (typeof value !== 'string') {\r\n      return false;\r\n    }\r\n\r\n    let amount;\r\n    try {\r\n      amount = new BigNumber(value);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      // == 0\r\n      (!allowZero && amount.isZero()) ||\r\n      // < 0\r\n      amount.isNegative() ||\r\n      // > Max value\r\n      amount.times(ONE).gt(new BigNumber(MAX_INT64).toString()) ||\r\n      // Decimal places (max 7)\r\n      amount.decimalPlaces() > 7 ||\r\n      // NaN or Infinity\r\n      amount.isNaN() ||\r\n      !amount.isFinite()\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  static constructAmountRequirementsError(arg) {\r\n    return `${arg} argument must be of type String, represent a positive number and have at most 7 digits after the decimal`;\r\n  }\r\n\r\n  /**\r\n   * Returns value converted to uint32 value or undefined.\r\n   * If `value` is not `Number`, `String` or `Undefined` then throws an error.\r\n   * Used in {@link Operation.setOptions}.\r\n   * @private\r\n   * @param {string} name Name of the property (used in error message only)\r\n   * @param {*} value Value to check\r\n   * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\r\n   * @returns {undefined|Number}\r\n   */\r\n  static _checkUnsignedIntValue(name, value, isValidFunction = null) {\r\n    if (typeof value === 'undefined') {\r\n      return undefined;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      value = parseFloat(value);\r\n    }\r\n\r\n    switch (true) {\r\n      case typeof value !== 'number' ||\r\n        !Number.isFinite(value) ||\r\n        value % 1 !== 0:\r\n        throw new Error(`${name} value is invalid`);\r\n      case value < 0:\r\n        throw new Error(`${name} value must be unsigned`);\r\n      case !isValidFunction ||\r\n        (isValidFunction && isValidFunction(value, name)):\r\n        return value;\r\n      default:\r\n        throw new Error(`${name} value is invalid`);\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   * @param {string|BigNumber} value Value\r\n   * @returns {Hyper} XDR amount\r\n   */\r\n  static _toXDRAmount(value) {\r\n    const amount = new BigNumber(value).times(ONE);\r\n    return Hyper.fromString(amount.toString());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string|BigNumber} value XDR amount\r\n   * @returns {BigNumber} Number\r\n   */\r\n  static _fromXDRAmount(value) {\r\n    return new BigNumber(value).div(ONE).toFixed(7);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {object} price Price object\r\n   * @param {function} price.n numerator function that returns a value\r\n   * @param {function} price.d denominator function that returns a value\r\n   * @returns {BigNumber} Big string\r\n   */\r\n  static _fromXDRPrice(price) {\r\n    const n = new BigNumber(price.n());\r\n    return n.div(new BigNumber(price.d())).toString();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {object} price Price object\r\n   * @param {function} price.n numerator function that returns a value\r\n   * @param {function} price.d denominator function that returns a value\r\n   * @returns {object} XDR price object\r\n   */\r\n  static _toXDRPrice(price) {\r\n    let xdrObject;\r\n    if (price.n && price.d) {\r\n      xdrObject = new xdr.Price(price);\r\n    } else {\r\n      const approx = best_r(price);\r\n      xdrObject = new xdr.Price({\r\n        n: parseInt(approx[0], 10),\r\n        d: parseInt(approx[1], 10)\r\n      });\r\n    }\r\n\r\n    if (xdrObject.n() < 0 || xdrObject.d() < 0) {\r\n      throw new Error('price must be positive');\r\n    }\r\n\r\n    return xdrObject;\r\n  }\r\n}\r\n\r\nfunction extractRevokeSponshipDetails(attrs, result) {\r\n  switch (attrs.switch().name) {\r\n    case 'revokeSponsorshipLedgerEntry': {\r\n      const ledgerKey = attrs.ledgerKey();\r\n      switch (ledgerKey.switch().name) {\r\n        case xdr.LedgerEntryType.account().name: {\r\n          result.type = 'revokeAccountSponsorship';\r\n          result.account = accountIdtoAddress(ledgerKey.account().accountId());\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.trustline().name: {\r\n          result.type = 'revokeTrustlineSponsorship';\r\n          result.account = accountIdtoAddress(\r\n            ledgerKey.trustLine().accountId()\r\n          );\r\n          const xdrAsset = ledgerKey.trustLine().asset();\r\n          switch (xdrAsset.switch()) {\r\n            case xdr.AssetType.assetTypePoolShare():\r\n              result.asset = LiquidityPoolId.fromOperation(xdrAsset);\r\n              break;\r\n            default:\r\n              result.asset = Asset.fromOperation(xdrAsset);\r\n              break;\r\n          }\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.offer().name: {\r\n          result.type = 'revokeOfferSponsorship';\r\n          result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\r\n          result.offerId = ledgerKey.offer().offerId().toString();\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.data().name: {\r\n          result.type = 'revokeDataSponsorship';\r\n          result.account = accountIdtoAddress(ledgerKey.data().accountId());\r\n          result.name = ledgerKey.data().dataName().toString('ascii');\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.claimableBalance().name: {\r\n          result.type = 'revokeClaimableBalanceSponsorship';\r\n          result.balanceId = ledgerKey\r\n            .claimableBalance()\r\n            .balanceId()\r\n            .toXDR('hex');\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.liquidityPool().name: {\r\n          result.type = 'revokeLiquidityPoolSponsorship';\r\n          result.liquidityPoolId = ledgerKey\r\n            .liquidityPool()\r\n            .liquidityPoolId()\r\n            .toString('hex');\r\n          break;\r\n        }\r\n        default: {\r\n          throw new Error(`Unknown ledgerKey: ${attrs.switch().name}`);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'revokeSponsorshipSigner': {\r\n      result.type = 'revokeSignerSponsorship';\r\n      result.account = accountIdtoAddress(attrs.signer().accountId());\r\n      result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error(`Unknown revokeSponsorship: ${attrs.switch().name}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertXDRSignerKeyToObject(signerKey) {\r\n  const attrs = {};\r\n  switch (signerKey.switch().name) {\r\n    case xdr.SignerKeyType.signerKeyTypeEd25519().name: {\r\n      attrs.ed25519PublicKey = StrKey.encodeEd25519PublicKey(\r\n        signerKey.ed25519()\r\n      );\r\n      break;\r\n    }\r\n    case xdr.SignerKeyType.signerKeyTypePreAuthTx().name: {\r\n      attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\r\n      break;\r\n    }\r\n    case xdr.SignerKeyType.signerKeyTypeHashX().name: {\r\n      attrs.sha256Hash = signerKey.hashX().toString('hex');\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error(`Unknown signerKey: ${signerKey.switch().name}`);\r\n    }\r\n  }\r\n\r\n  return attrs;\r\n}\r\n\r\nfunction accountIdtoAddress(accountId) {\r\n  return StrKey.encodeEd25519PublicKey(accountId.ed25519());\r\n}\r\n\r\n// Attach all imported operations as static methods on the Operation class\r\nOperation.accountMerge = ops.accountMerge;\r\nOperation.allowTrust = ops.allowTrust;\r\nOperation.bumpSequence = ops.bumpSequence;\r\nOperation.changeTrust = ops.changeTrust;\r\nOperation.createAccount = ops.createAccount;\r\nOperation.createClaimableBalance = ops.createClaimableBalance;\r\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\r\nOperation.clawbackClaimableBalance = ops.clawbackClaimableBalance;\r\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\r\nOperation.inflation = ops.inflation;\r\nOperation.manageData = ops.manageData;\r\nOperation.manageSellOffer = ops.manageSellOffer;\r\nOperation.manageBuyOffer = ops.manageBuyOffer;\r\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\r\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\r\nOperation.payment = ops.payment;\r\nOperation.setOptions = ops.setOptions;\r\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\r\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\r\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\r\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\r\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\r\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\r\nOperation.revokeClaimableBalanceSponsorship =\r\n  ops.revokeClaimableBalanceSponsorship;\r\nOperation.revokeLiquidityPoolSponsorship = ops.revokeLiquidityPoolSponsorship;\r\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;\r\nOperation.clawback = ops.clawback;\r\nOperation.setTrustLineFlags = ops.setTrustLineFlags;\r\nOperation.liquidityPoolDeposit = ops.liquidityPoolDeposit;\r\nOperation.liquidityPoolWithdraw = ops.liquidityPoolWithdraw;\r\nOperation.invokeHostFunction = ops.invokeHostFunction;\r\nOperation.extendFootprintTtl = ops.extendFootprintTtl;\r\nOperation.restoreFootprint = ops.restoreFootprint;\r\n\r\n// these are not `xdr.Operation`s directly, but are proxies for complex but\r\n// common versions of `Operation.invokeHostFunction`\r\nOperation.createStellarAssetContract = ops.createStellarAssetContract;\r\nOperation.invokeContractFunction = ops.invokeContractFunction;\r\nOperation.createCustomContract = ops.createCustomContract;\r\nOperation.uploadContractWasm = ops.uploadContractWasm;\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Transfers native balance to destination account.\r\n *\r\n * @function\r\n * @alias Operation.accountMerge\r\n *\r\n * @param {object} opts - options object\r\n * @param {string} opts.destination - destination to merge the source account into\r\n * @param {string} [opts.source]    - operation source account (defaults to\r\n *     transaction source)\r\n *\r\n * @returns {xdr.Operation} an Account Merge operation (xdr.AccountMergeOp)\r\n */\r\nexport function accountMerge(opts) {\r\n  const opAttributes = {};\r\n  try {\r\n    opAttributes.body = xdr.OperationBody.accountMerge(\r\n      decodeAddressToMuxedAccount(opts.destination)\r\n    );\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * @deprecated since v5.0\r\n *\r\n * Returns an XDR AllowTrustOp. An \"allow trust\" operation authorizes another\r\n * account to hold your account's credit for a given asset.\r\n *\r\n * @function\r\n * @alias Operation.allowTrust\r\n *\r\n * @param {object} opts Options object\r\n * @param {string} opts.trustor - The trusting account (the one being authorized)\r\n * @param {string} opts.assetCode - The asset code being authorized.\r\n * @param {(0|1|2)} opts.authorize - `1` to authorize, `2` to authorize to maintain liabilities, and `0` to deauthorize.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n *\r\n * @returns {xdr.AllowTrustOp} Allow Trust operation\r\n */\r\nexport function allowTrust(opts) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.trustor)) {\r\n    throw new Error('trustor is invalid');\r\n  }\r\n  const attributes = {};\r\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\r\n  if (opts.assetCode.length <= 4) {\r\n    const code = opts.assetCode.padEnd(4, '\\0');\r\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum4(code);\r\n  } else if (opts.assetCode.length <= 12) {\r\n    const code = opts.assetCode.padEnd(12, '\\0');\r\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum12(code);\r\n  } else {\r\n    throw new Error('Asset code must be 12 characters at max.');\r\n  }\r\n\r\n  if (typeof opts.authorize === 'boolean') {\r\n    if (opts.authorize) {\r\n      attributes.authorize = xdr.TrustLineFlags.authorizedFlag().value;\r\n    } else {\r\n      attributes.authorize = 0;\r\n    }\r\n  } else {\r\n    attributes.authorize = opts.authorize;\r\n  }\r\n\r\n  const allowTrustOp = new xdr.AllowTrustOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.allowTrust(allowTrustOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\nimport { Keypair } from '../keypair';\r\n\r\n/**\r\n * Create a \"begin sponsoring future reserves\" operation.\r\n * @function\r\n * @alias Operation.beginSponsoringFutureReserves\r\n * @param {object} opts Options object\r\n * @param {string} opts.sponsoredId - The sponsored account id.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.beginSponsoringFutureReserves({\r\n *   sponsoredId: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n * });\r\n *\r\n */\r\nexport function beginSponsoringFutureReserves(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.sponsoredId)) {\r\n    throw new Error('sponsoredId is invalid');\r\n  }\r\n  const op = new xdr.BeginSponsoringFutureReservesOp({\r\n    sponsoredId: Keypair.fromPublicKey(opts.sponsoredId).xdrAccountId()\r\n  });\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.beginSponsoringFutureReserves(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from '../util/bignumber';\r\nimport xdr from '../xdr';\r\n\r\n/**\r\n * This operation bumps sequence number.\r\n * @function\r\n * @alias Operation.bumpSequence\r\n * @param {object} opts Options object\r\n * @param {string} opts.bumpTo - Sequence number to bump to.\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.BumpSequenceOp} Operation\r\n */\r\nexport function bumpSequence(opts) {\r\n  const attributes = {};\r\n\r\n  if (typeof opts.bumpTo !== 'string') {\r\n    throw new Error('bumpTo must be a string');\r\n  }\r\n\r\n  try {\r\n    // eslint-disable-next-line no-new\r\n    new BigNumber(opts.bumpTo);\r\n  } catch (e) {\r\n    throw new Error('bumpTo must be a stringified number');\r\n  }\r\n\r\n  attributes.bumpTo = Hyper.fromString(opts.bumpTo);\r\n\r\n  const bumpSequenceOp = new xdr.BumpSequenceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.bumpSequence(bumpSequenceOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from '../util/bignumber';\r\nimport xdr from '../xdr';\r\nimport { Asset } from '../asset';\r\nimport { LiquidityPoolAsset } from '../liquidity_pool_asset';\r\n\r\nconst MAX_INT64 = '9223372036854775807';\r\n\r\n/**\r\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\r\n * trust line for a given asset from the source account to another.\r\n * @function\r\n * @alias Operation.changeTrust\r\n * @param {object} opts Options object\r\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\r\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\r\n *                                If the limit is set to \"0\" it deletes the trustline.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @returns {xdr.ChangeTrustOp} Change Trust operation\r\n */\r\nexport function changeTrust(opts) {\r\n  const attributes = {};\r\n\r\n  if (opts.asset instanceof Asset) {\r\n    attributes.line = opts.asset.toChangeTrustXDRObject();\r\n  } else if (opts.asset instanceof LiquidityPoolAsset) {\r\n    attributes.line = opts.asset.toXDRObject();\r\n  } else {\r\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\r\n  }\r\n\r\n  if (opts.limit !== undefined && !this.isValidAmount(opts.limit, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\r\n  }\r\n\r\n  if (opts.limit) {\r\n    attributes.limit = this._toXDRAmount(opts.limit);\r\n  } else {\r\n    attributes.limit = Hyper.fromString(new BigNumber(MAX_INT64).toString());\r\n  }\r\n\r\n  if (opts.source) {\r\n    attributes.source = opts.source.masterKeypair;\r\n  }\r\n  const changeTrustOP = new xdr.ChangeTrustOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.changeTrust(changeTrustOP);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Create a new claim claimable balance operation.\r\n * @function\r\n * @alias Operation.claimClaimableBalance\r\n * @param {object} opts Options object\r\n * @param {string} opts.balanceId - The claimable balance id to be claimed.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} Claim claimable balance operation\r\n *\r\n * @example\r\n * const op = Operation.claimClaimableBalance({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n */\r\nexport function claimClaimableBalance(opts = {}) {\r\n  validateClaimableBalanceId(opts.balanceId);\r\n\r\n  const attributes = {};\r\n  attributes.balanceId = xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex');\r\n  const claimClaimableBalanceOp = new xdr.ClaimClaimableBalanceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.claimClaimableBalance(\r\n    claimClaimableBalanceOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\nexport function validateClaimableBalanceId(balanceId) {\r\n  if (\r\n    typeof balanceId !== 'string' ||\r\n    balanceId.length !== 8 + 64 /* 8b discriminant + 64b string */\r\n  ) {\r\n    throw new Error('must provide a valid claimable balance id');\r\n  }\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a clawback operation.\r\n *\r\n * @function\r\n * @alias Operation.clawback\r\n *\r\n * @param {object} opts - Options object\r\n * @param {Asset}  opts.asset   - The asset being clawed back.\r\n * @param {string} opts.amount  - The amount of the asset to claw back.\r\n * @param {string} opts.from    - The public key of the (optionally-muxed)\r\n *     account to claw back from.\r\n *\r\n * @param {string} [opts.source] - The source account for the operation.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @return {xdr.ClawbackOp}\r\n *\r\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-operation\r\n */\r\nexport function clawback(opts) {\r\n  const attributes = {};\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  try {\r\n    attributes.from = decodeAddressToMuxedAccount(opts.from);\r\n  } catch (e) {\r\n    throw new Error('from address is invalid');\r\n  }\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.clawback(new xdr.ClawbackOp(attributes))\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { validateClaimableBalanceId } from './claim_claimable_balance';\r\n\r\n/**\r\n * Creates a clawback operation for a claimable balance.\r\n *\r\n * @function\r\n * @alias Operation.clawbackClaimableBalance\r\n * @param {object} opts - Options object\r\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @return {xdr.ClawbackClaimableBalanceOp}\r\n *\r\n * @example\r\n * const op = Operation.clawbackClaimableBalance({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\r\n */\r\nexport function clawbackClaimableBalance(opts = {}) {\r\n  validateClaimableBalanceId(opts.balanceId);\r\n\r\n  const attributes = {\r\n    balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\r\n  };\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.clawbackClaimableBalance(\r\n      new xdr.ClawbackClaimableBalanceOp(attributes)\r\n    )\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * Create and fund a non existent account.\r\n * @function\r\n * @alias Operation.createAccount\r\n * @param {object} opts Options object\r\n * @param {string} opts.destination - Destination account ID to create an account for.\r\n * @param {string} opts.startingBalance - Amount in XLM the account should be funded for. Must be greater\r\n *                                   than the [reserve balance amount](https://developers.stellar.org/docs/glossary/fees/).\r\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\r\n * @returns {xdr.CreateAccountOp} Create account operation\r\n */\r\nexport function createAccount(opts) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.destination)) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  if (!this.isValidAmount(opts.startingBalance, true)) {\r\n    throw new TypeError(\r\n      this.constructAmountRequirementsError('startingBalance')\r\n    );\r\n  }\r\n  const attributes = {};\r\n  attributes.destination = Keypair.fromPublicKey(\r\n    opts.destination\r\n  ).xdrAccountId();\r\n  attributes.startingBalance = this._toXDRAmount(opts.startingBalance);\r\n  const createAccountOp = new xdr.CreateAccountOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createAccount(createAccountOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Asset } from '../asset';\r\n\r\n/**\r\n * Create a new claimable balance operation.\r\n *\r\n * @function\r\n * @alias Operation.createClaimableBalance\r\n *\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.asset - The asset for the claimable balance.\r\n * @param {string} opts.amount - Amount.\r\n * @param {Claimant[]} opts.claimants - An array of Claimants\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation} Create claimable balance operation\r\n *\r\n * @example\r\n * const asset = new Asset(\r\n *   'USD',\r\n *   'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n * );\r\n * const amount = '100.0000000';\r\n * const claimants = [\r\n *   new Claimant(\r\n *     'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ',\r\n *      Claimant.predicateBeforeAbsoluteTime(\"4102444800000\")\r\n *   )\r\n * ];\r\n *\r\n * const op = Operation.createClaimableBalance({\r\n *   asset,\r\n *   amount,\r\n *   claimants\r\n * });\r\n *\r\n */\r\nexport function createClaimableBalance(opts) {\r\n  if (!(opts.asset instanceof Asset)) {\r\n    throw new Error(\r\n      'must provide an asset for create claimable balance operation'\r\n    );\r\n  }\r\n\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n\r\n  if (!Array.isArray(opts.claimants) || opts.claimants.length === 0) {\r\n    throw new Error('must provide at least one claimant');\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  attributes.claimants = Object.values(opts.claimants).map((c) =>\r\n    c.toXDRObject()\r\n  );\r\n\r\n  const createClaimableBalanceOp = new xdr.CreateClaimableBalanceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createClaimableBalance(\r\n    createClaimableBalanceOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\r\n * offer that won't consume a counter offer that exactly matches this offer. This is\r\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\r\n * to manage this offer after using this operation to create it.\r\n * @function\r\n * @alias Operation.createPassiveSellOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\r\n */\r\nexport function createPassiveSellOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n  const createPassiveSellOfferOp = new xdr.CreatePassiveSellOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createPassiveSellOffer(\r\n    createPassiveSellOfferOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Create an \"end sponsoring future reserves\" operation.\r\n * @function\r\n * @alias Operation.endSponsoringFutureReserves\r\n * @param {object} opts Options object\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.endSponsoringFutureReserves();\r\n *\r\n */\r\nexport function endSponsoringFutureReserves(opts = {}) {\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.endSponsoringFutureReserves();\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Builds an operation to bump the time-to-live (TTL) of the ledger keys. The\r\n * keys for extension have to be provided in the read-only footprint of\r\n * the transaction.\r\n *\r\n * The only parameter of the operation itself is the new minimum TTL for\r\n * all the provided entries. If an entry already has a higher TTL, then it\r\n * will just be skipped.\r\n *\r\n * TTL is the number of ledgers from the current ledger (exclusive) until\r\n * the last ledger the entry is still considered alive (inclusive). Thus\r\n * the exact ledger until the entries will live will only be determined\r\n * when transaction has been applied.\r\n *\r\n * The footprint has to be specified in the transaction. See\r\n * {@link TransactionBuilder}'s `opts.sorobanData` parameter, which is a\r\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\r\n * usage as part of {@link xdr.SorobanResources}.\r\n *\r\n * @function\r\n * @alias Operation.extendFootprintTtl\r\n *\r\n * @param {object} opts - object holding operation parameters\r\n * @param {number} opts.extendTo - the minimum TTL that all the entries in\r\n *    the read-only footprint will have\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Extend Footprint TTL operation\r\n *    (xdr.ExtendFootprintTTLOp)\r\n */\r\nexport function extendFootprintTtl(opts) {\r\n  if ((opts.extendTo ?? -1) <= 0) {\r\n    throw new RangeError('extendTo has to be positive');\r\n  }\r\n\r\n  const extendFootprintOp = new xdr.ExtendFootprintTtlOp({\r\n    ext: new xdr.ExtensionPoint(0),\r\n    extendTo: opts.extendTo\r\n  });\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.extendFootprintTtl(extendFootprintOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","export { manageSellOffer } from './manage_sell_offer';\r\nexport { createPassiveSellOffer } from './create_passive_sell_offer';\r\nexport { accountMerge } from './account_merge';\r\nexport { allowTrust } from './allow_trust';\r\nexport { bumpSequence } from './bump_sequence';\r\nexport { changeTrust } from './change_trust';\r\nexport { createAccount } from './create_account';\r\nexport { createClaimableBalance } from './create_claimable_balance';\r\nexport { claimClaimableBalance } from './claim_claimable_balance';\r\nexport { clawbackClaimableBalance } from './clawback_claimable_balance';\r\nexport { inflation } from './inflation';\r\nexport { manageData } from './manage_data';\r\nexport { manageBuyOffer } from './manage_buy_offer';\r\nexport { pathPaymentStrictReceive } from './path_payment_strict_receive';\r\nexport { pathPaymentStrictSend } from './path_payment_strict_send';\r\nexport { payment } from './payment';\r\nexport { setOptions } from './set_options';\r\nexport { beginSponsoringFutureReserves } from './begin_sponsoring_future_reserves';\r\nexport { endSponsoringFutureReserves } from './end_sponsoring_future_reserves';\r\nexport {\r\n  revokeAccountSponsorship,\r\n  revokeTrustlineSponsorship,\r\n  revokeOfferSponsorship,\r\n  revokeDataSponsorship,\r\n  revokeClaimableBalanceSponsorship,\r\n  revokeLiquidityPoolSponsorship,\r\n  revokeSignerSponsorship\r\n} from './revoke_sponsorship';\r\nexport { clawback } from './clawback';\r\nexport { setTrustLineFlags } from './set_trustline_flags';\r\nexport { liquidityPoolDeposit } from './liquidity_pool_deposit';\r\nexport { liquidityPoolWithdraw } from './liquidity_pool_withdraw';\r\nexport {\r\n  invokeHostFunction,\r\n  invokeContractFunction,\r\n  createStellarAssetContract,\r\n  createCustomContract,\r\n  uploadContractWasm\r\n} from './invoke_host_function';\r\nexport { extendFootprintTtl } from './extend_footprint_ttl';\r\nexport { restoreFootprint } from './restore_footprint';\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * This operation generates the inflation.\r\n * @function\r\n * @alias Operation.inflation\r\n * @param {object} [opts] Options object\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.InflationOp} Inflation operation\r\n */\r\nexport function inflation(opts = {}) {\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.inflation();\r\n  this.setSourceAccount(opAttributes, opts);\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\nimport { Keypair } from '../keypair';\r\nimport { Address } from '../address';\r\nimport { Asset } from '../asset';\r\n\r\n/**\r\n * Invokes a single smart contract host function.\r\n *\r\n * @function\r\n * @alias Operation.invokeHostFunction\r\n *\r\n * @param {object} opts - options object\r\n * @param {xdr.HostFunction} opts.func - host function to execute (with its\r\n *    wrapped parameters)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - list outlining the\r\n *    tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n * @see Operation.invokeContractFunction\r\n * @see Operation.createCustomContract\r\n * @see Operation.createStellarAssetContract\r\n * @see Operation.uploadContractWasm\r\n * @see Contract.call\r\n */\r\nexport function invokeHostFunction(opts) {\r\n  if (!opts.func) {\r\n    throw new TypeError(\r\n      `host function invocation ('func') required (got ${JSON.stringify(opts)})`\r\n    );\r\n  }\r\n\r\n  const invokeHostFunctionOp = new xdr.InvokeHostFunctionOp({\r\n    hostFunction: opts.func,\r\n    auth: opts.auth || []\r\n  });\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.invokeHostFunction(invokeHostFunctionOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Returns an operation that invokes a contract function.\r\n *\r\n * @function\r\n * @alias Operation.invokeContractFunction\r\n *\r\n * @param {any}         opts - the set of parameters\r\n * @param {string}      opts.contract - a strkey-fied contract address (`C...`)\r\n * @param {string}      opts.function - the name of the contract fn to invoke\r\n * @param {xdr.ScVal[]} opts.args - parameters to pass to the function\r\n *    invocation (try {@link nativeToScVal} or {@link ScInt} to make building\r\n *    these easier)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see Operation.invokeHostFunction\r\n * @see Contract.call\r\n * @see Address\r\n */\r\nexport function invokeContractFunction(opts) {\r\n  const c = new Address(opts.contract);\r\n  if (c._type !== 'contract') {\r\n    throw new TypeError(`expected contract strkey instance, got ${c}`);\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeInvokeContract(\r\n      new xdr.InvokeContractArgs({\r\n        contractAddress: c.toScAddress(),\r\n        functionName: opts.function,\r\n        args: opts.args\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that creates a custom WASM contract.\r\n *\r\n * @function\r\n * @alias Operation.createCustomContract\r\n *\r\n * @param {any}     opts - the set of parameters\r\n * @param {Address} opts.address - the contract uploader address\r\n * @param {Uint8Array|Buffer}  opts.wasmHash - the SHA-256 hash of the contract\r\n *    WASM you're uploading (see {@link hash} and\r\n *    {@link Operation.uploadContractWasm})\r\n * @param {Uint8Array|Buffer} [opts.salt] - an optional, 32-byte salt to\r\n *    distinguish deployment instances of the same wasm from the same user (if\r\n *    omitted, one will be generated for you)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n */\r\nexport function createCustomContract(opts) {\r\n  const salt = Buffer.from(opts.salt || getSalty());\r\n\r\n  if (!opts.wasmHash || opts.wasmHash.length !== 32) {\r\n    throw new TypeError(\r\n      `expected hash(contract WASM) in 'opts.wasmHash', got ${opts.wasmHash}`\r\n    );\r\n  }\r\n  if (salt.length !== 32) {\r\n    throw new TypeError(\r\n      `expected 32-byte salt in 'opts.salt', got ${opts.wasmHash}`\r\n    );\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\r\n      new xdr.CreateContractArgs({\r\n        executable: xdr.ContractExecutable.contractExecutableWasm(\r\n          Buffer.from(opts.wasmHash)\r\n        ),\r\n        contractIdPreimage:\r\n          xdr.ContractIdPreimage.contractIdPreimageFromAddress(\r\n            new xdr.ContractIdPreimageFromAddress({\r\n              address: opts.address.toScAddress(),\r\n              salt\r\n            })\r\n          )\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that wraps a Stellar asset into a token contract.\r\n *\r\n * @function\r\n * @alias Operation.createStellarAssetContract\r\n *\r\n * @param {any}          opts - the set of parameters\r\n * @param {Asset|string} opts.asset - the Stellar asset to wrap, either as an\r\n *    {@link Asset} object or in canonical form (SEP-11, `code:issuer`)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see https://stellar.org/protocol/sep-11#alphanum4-alphanum12\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions\r\n * @see\r\n * https://soroban.stellar.org/docs/advanced-tutorials/stellar-asset-contract\r\n * @see Operation.invokeHostFunction\r\n */\r\nexport function createStellarAssetContract(opts) {\r\n  let asset = opts.asset;\r\n  if (typeof asset === 'string') {\r\n    const [code, issuer] = asset.split(':');\r\n    asset = new Asset(code, issuer); // handles 'xlm' by default\r\n  }\r\n\r\n  if (!(asset instanceof Asset)) {\r\n    throw new TypeError(`expected Asset in 'opts.asset', got ${asset}`);\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\r\n      new xdr.CreateContractArgs({\r\n        executable: xdr.ContractExecutable.contractExecutableStellarAsset(),\r\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\r\n          asset.toXDRObject()\r\n        )\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that uploads WASM for a contract.\r\n *\r\n * @function\r\n * @alias Operation.uploadContractWasm\r\n *\r\n * @param {any}               opts - the set of parameters\r\n * @param {Uint8Array|Buffer} opts.wasm - a WASM blob to upload to the ledger\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n */\r\nexport function uploadContractWasm(opts) {\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeUploadContractWasm(\r\n      Buffer.from(opts.wasm) // coalesce so we can drop `Buffer` someday\r\n    )\r\n  });\r\n}\r\n\r\n/** @returns {Buffer} a random 256-bit \"salt\" value. */\r\nfunction getSalty() {\r\n  return Keypair.random().xdrPublicKey().value(); // ed25519 is 256 bits, too\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Creates a liquidity pool deposit operation.\r\n *\r\n * @function\r\n * @alias Operation.liquidityPoolDeposit\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\r\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\r\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\r\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\r\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\r\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\r\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\r\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\r\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\r\n */\r\nexport function liquidityPoolDeposit(opts = {}) {\r\n  const { liquidityPoolId, maxAmountA, maxAmountB, minPrice, maxPrice } = opts;\r\n  const attributes = {};\r\n\r\n  if (!liquidityPoolId) {\r\n    throw new TypeError('liquidityPoolId argument is required');\r\n  }\r\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(liquidityPoolId, 'hex');\r\n\r\n  if (!this.isValidAmount(maxAmountA, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountA'));\r\n  }\r\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\r\n\r\n  if (!this.isValidAmount(maxAmountB, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountB'));\r\n  }\r\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\r\n\r\n  if (minPrice === undefined) {\r\n    throw new TypeError('minPrice argument is required');\r\n  }\r\n  attributes.minPrice = this._toXDRPrice(minPrice);\r\n\r\n  if (maxPrice === undefined) {\r\n    throw new TypeError('maxPrice argument is required');\r\n  }\r\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\r\n\r\n  const liquidityPoolDepositOp = new xdr.LiquidityPoolDepositOp(attributes);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Creates a liquidity pool withdraw operation.\r\n *\r\n * @function\r\n * @alias Operation.liquidityPoolWithdraw\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-withdraw\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\r\n * @param {string} opts.amount - Amount of pool shares to withdraw.\r\n * @param {string} opts.minAmountA - Minimum amount of first asset to withdraw.\r\n * @param {string} opts.minAmountB - Minimum amount of second asset to withdraw.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   The resulting operation (xdr.LiquidityPoolWithdrawOp).\r\n */\r\nexport function liquidityPoolWithdraw(opts = {}) {\r\n  const attributes = {};\r\n  if (!opts.liquidityPoolId) {\r\n    throw new TypeError('liquidityPoolId argument is required');\r\n  }\r\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex');\r\n\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n\r\n  if (!this.isValidAmount(opts.minAmountA, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('minAmountA'));\r\n  }\r\n  attributes.minAmountA = this._toXDRAmount(opts.minAmountA);\r\n\r\n  if (!this.isValidAmount(opts.minAmountB, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('minAmountB'));\r\n  }\r\n  attributes.minAmountB = this._toXDRAmount(opts.minAmountB);\r\n\r\n  const liquidityPoolWithdrawOp = new xdr.LiquidityPoolWithdrawOp(attributes);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.liquidityPoolWithdraw(liquidityPoolWithdrawOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport xdr from '../xdr';\r\n/**\r\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\r\n * deletes a buy offer.\r\n * @function\r\n * @alias Operation.manageBuyOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\r\n */\r\nexport function manageBuyOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.buyAmount, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\r\n  }\r\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n\r\n  if (opts.offerId !== undefined) {\r\n    opts.offerId = opts.offerId.toString();\r\n  } else {\r\n    opts.offerId = '0';\r\n  }\r\n\r\n  attributes.offerId = Hyper.fromString(opts.offerId);\r\n  const manageBuyOfferOp = new xdr.ManageBuyOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageBuyOffer(manageBuyOfferOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * This operation adds data entry to the ledger.\r\n * @function\r\n * @alias Operation.manageData\r\n * @param {object} opts Options object\r\n * @param {string} opts.name - The name of the data entry.\r\n * @param {string|Buffer} opts.value - The value of the data entry.\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.ManageDataOp} Manage Data operation\r\n */\r\nexport function manageData(opts) {\r\n  const attributes = {};\r\n\r\n  if (!(typeof opts.name === 'string' && opts.name.length <= 64)) {\r\n    throw new Error('name must be a string, up to 64 characters');\r\n  }\r\n  attributes.dataName = opts.name;\r\n\r\n  if (\r\n    typeof opts.value !== 'string' &&\r\n    !Buffer.isBuffer(opts.value) &&\r\n    opts.value !== null\r\n  ) {\r\n    throw new Error('value must be a string, Buffer or null');\r\n  }\r\n\r\n  if (typeof opts.value === 'string') {\r\n    attributes.dataValue = Buffer.from(opts.value);\r\n  } else {\r\n    attributes.dataValue = opts.value;\r\n  }\r\n\r\n  if (attributes.dataValue !== null && attributes.dataValue.length > 64) {\r\n    throw new Error('value cannot be longer that 64 bytes');\r\n  }\r\n\r\n  const manageDataOp = new xdr.ManageDataOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageData(manageDataOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport xdr from '../xdr';\r\n/**\r\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\r\n * deletes an offer.\r\n * @function\r\n * @alias Operation.manageSellOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\r\n */\r\nexport function manageSellOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.amount, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n\r\n  if (opts.offerId !== undefined) {\r\n    opts.offerId = opts.offerId.toString();\r\n  } else {\r\n    opts.offerId = '0';\r\n  }\r\n\r\n  attributes.offerId = Hyper.fromString(opts.offerId);\r\n  const manageSellOfferOp = new xdr.ManageSellOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageSellOffer(manageSellOfferOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a PathPaymentStrictReceive operation.\r\n *\r\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\r\n * destination account. It credits the destination with `destAmount` of\r\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\r\n * The transfer optionally occurs through a path. XLM payments create the\r\n * destination account if it does not exist.\r\n *\r\n * @function\r\n * @alias Operation.pathPaymentStrictReceive\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {Asset}   opts.sendAsset    - asset to pay with\r\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\r\n * @param {string}  opts.destination  - destination account to send to\r\n * @param {Asset}   opts.destAsset    - asset the destination will receive\r\n * @param {string}  opts.destAmount   - amount the destination receives\r\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\r\n */\r\nexport function pathPaymentStrictReceive(opts) {\r\n  switch (true) {\r\n    case !opts.sendAsset:\r\n      throw new Error('Must specify a send asset');\r\n    case !this.isValidAmount(opts.sendMax):\r\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\r\n    case !opts.destAsset:\r\n      throw new Error('Must provide a destAsset for a payment operation');\r\n    case !this.isValidAmount(opts.destAmount):\r\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\r\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n\r\n  attributes.destAsset = opts.destAsset.toXDRObject();\r\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\r\n\r\n  const path = opts.path ? opts.path : [];\r\n  attributes.path = path.map((x) => x.toXDRObject());\r\n\r\n  const payment = new xdr.PathPaymentStrictReceiveOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictReceive(payment);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a PathPaymentStrictSend operation.\r\n *\r\n * A `PathPaymentStrictSend` operation sends the specified amount to the\r\n * destination account crediting at least `destMin` of `destAsset`, optionally\r\n * through a path. XLM payments create the destination account if it does not\r\n * exist.\r\n *\r\n * @function\r\n * @alias Operation.pathPaymentStrictSend\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {Asset}   opts.sendAsset    - asset to pay with\r\n * @param {string}  opts.sendAmount   - amount of sendAsset to send (excluding fees)\r\n * @param {string}  opts.destination  - destination account to send to\r\n * @param {Asset}   opts.destAsset    - asset the destination will receive\r\n * @param {string}  opts.destMin      - minimum amount of destAsset to be receive\r\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   the resulting path payment operation\r\n *     (xdr.PathPaymentStrictSendOp)\r\n */\r\nexport function pathPaymentStrictSend(opts) {\r\n  switch (true) {\r\n    case !opts.sendAsset:\r\n      throw new Error('Must specify a send asset');\r\n    case !this.isValidAmount(opts.sendAmount):\r\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\r\n    case !opts.destAsset:\r\n      throw new Error('Must provide a destAsset for a payment operation');\r\n    case !this.isValidAmount(opts.destMin):\r\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\r\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  attributes.destAsset = opts.destAsset.toXDRObject();\r\n  attributes.destMin = this._toXDRAmount(opts.destMin);\r\n\r\n  const path = opts.path ? opts.path : [];\r\n  attributes.path = path.map((x) => x.toXDRObject());\r\n\r\n  const payment = new xdr.PathPaymentStrictSendOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictSend(payment);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Create a payment operation.\r\n *\r\n * @function\r\n * @alias Operation.payment\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#payment\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {string}  opts.destination  - destination account ID\r\n * @param {Asset}   opts.asset        - asset to send\r\n * @param {string}  opts.amount       - amount to send\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   The resulting payment operation (xdr.PaymentOp)\r\n */\r\nexport function payment(opts) {\r\n  if (!opts.asset) {\r\n    throw new Error('Must provide an asset for a payment operation');\r\n  }\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n\r\n  const attributes = {};\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  const paymentOp = new xdr.PaymentOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.payment(paymentOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Builds an operation to restore the archived ledger entries specified\r\n * by the ledger keys.\r\n *\r\n * The ledger keys to restore are specified separately from the operation\r\n * in read-write footprint of the transaction.\r\n *\r\n * It takes no parameters because the relevant footprint is derived from the\r\n * transaction itself. See {@link TransactionBuilder}'s `opts.sorobanData`\r\n * parameter (or {@link TransactionBuilder.setSorobanData} /\r\n * {@link TransactionBuilder.setLedgerKeys}), which is a\r\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\r\n * usage as part of {@link xdr.SorobanTransactionData}.\r\n *\r\n * @function\r\n * @alias Operation.restoreFootprint\r\n *\r\n * @param {object} [opts] - an optional set of parameters\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} a Bump Footprint Expiration operation\r\n *    (xdr.RestoreFootprintOp)\r\n */\r\nexport function restoreFootprint(opts = {}) {\r\n  const op = new xdr.RestoreFootprintOp({ ext: new xdr.ExtensionPoint(0) });\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.restoreFootprint(op)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts ?? {});\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\nimport { Keypair } from '../keypair';\r\nimport { Asset } from '../asset';\r\nimport { LiquidityPoolId } from '../liquidity_pool_id';\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for an account.\r\n *\r\n * @function\r\n * @alias Operation.revokeAccountSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The sponsored account ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeAccountSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n * });\r\n *\r\n */\r\nexport function revokeAccountSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.account(\r\n    new xdr.LedgerKeyAccount({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId()\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a trustline.\r\n *\r\n * @function\r\n * @alias Operation.revokeTrustlineSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID which owns the trustline.\r\n * @param {Asset | LiquidityPoolId} opts.asset - The trustline asset.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeTrustlineSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   asset: new StellarBase.LiquidityPoolId(\r\n *     'USDUSD',\r\n *     'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n *   )\r\n * });\r\n *\r\n */\r\nexport function revokeTrustlineSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n\r\n  let asset;\r\n  if (opts.asset instanceof Asset) {\r\n    asset = opts.asset.toTrustLineXDRObject();\r\n  } else if (opts.asset instanceof LiquidityPoolId) {\r\n    asset = opts.asset.toXDRObject();\r\n  } else {\r\n    throw new TypeError('asset must be an Asset or LiquidityPoolId');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.trustline(\r\n    new xdr.LedgerKeyTrustLine({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n      asset\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for an offer.\r\n *\r\n * @function\r\n * @alias Operation.revokeOfferSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.seller - The account ID which created the offer.\r\n * @param {string} opts.offerId - The offer ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeOfferSponsorship({\r\n *   seller: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   offerId: '1234'\r\n * });\r\n *\r\n */\r\nexport function revokeOfferSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.seller)) {\r\n    throw new Error('seller is invalid');\r\n  }\r\n  if (typeof opts.offerId !== 'string') {\r\n    throw new Error('offerId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.offer(\r\n    new xdr.LedgerKeyOffer({\r\n      sellerId: Keypair.fromPublicKey(opts.seller).xdrAccountId(),\r\n      offerId: xdr.Int64.fromString(opts.offerId)\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a data entry.\r\n *\r\n * @function\r\n * @alias Operation.revokeDataSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID which owns the data entry.\r\n * @param {string} opts.name - The name of the data entry\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeDataSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   name: 'foo'\r\n * });\r\n *\r\n */\r\nexport function revokeDataSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n  if (typeof opts.name !== 'string' || opts.name.length > 64) {\r\n    throw new Error('name must be a string, up to 64 characters');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.data(\r\n    new xdr.LedgerKeyData({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n      dataName: opts.name\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a claimable balance.\r\n *\r\n * @function\r\n * @alias Operation.revokeClaimableBalanceSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.balanceId - The sponsored claimable balance ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeClaimableBalanceSponsorship({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n */\r\nexport function revokeClaimableBalanceSponsorship(opts = {}) {\r\n  if (typeof opts.balanceId !== 'string') {\r\n    throw new Error('balanceId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.claimableBalance(\r\n    new xdr.LedgerKeyClaimableBalance({\r\n      balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Creates a \"revoke sponsorship\" operation for a liquidity pool.\r\n *\r\n * @function\r\n * @alias Operation.revokeLiquidityPoolSponsorship\r\n * @param {object} opts – Options object.\r\n * @param {string} opts.liquidityPoolId - The sponsored liquidity pool ID in 'hex' string.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr Operation.\r\n *\r\n * @example\r\n * const op = Operation.revokeLiquidityPoolSponsorship({\r\n *   liquidityPoolId: 'dd7b1ab831c273310ddbec6f97870aa83c2fbd78ce22aded37ecbf4f3380fac7',\r\n * });\r\n *\r\n */\r\nexport function revokeLiquidityPoolSponsorship(opts = {}) {\r\n  if (typeof opts.liquidityPoolId !== 'string') {\r\n    throw new Error('liquidityPoolId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.liquidityPool(\r\n    new xdr.LedgerKeyLiquidityPool({\r\n      liquidityPoolId: xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex')\r\n    })\r\n  );\r\n\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.revokeSponsorship(op)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a signer.\r\n *\r\n * @function\r\n * @alias Operation.revokeSignerSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID where the signer sponsorship is being removed from.\r\n * @param {object} opts.signer - The signer whose sponsorship is being removed.\r\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\r\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string).\r\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeSignerSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   signer: {\r\n *     ed25519PublicKey: 'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ'\r\n *   }\r\n * })\r\n *\r\n */\r\nexport function revokeSignerSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n  let key;\r\n  if (opts.signer.ed25519PublicKey) {\r\n    if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\r\n      throw new Error('signer.ed25519PublicKey is invalid.');\r\n    }\r\n    const rawKey = StrKey.decodeEd25519PublicKey(opts.signer.ed25519PublicKey);\r\n\r\n    key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\r\n  } else if (opts.signer.preAuthTx) {\r\n    let buffer;\r\n    if (typeof opts.signer.preAuthTx === 'string') {\r\n      buffer = Buffer.from(opts.signer.preAuthTx, 'hex');\r\n    } else {\r\n      buffer = opts.signer.preAuthTx;\r\n    }\r\n\r\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\r\n      throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\r\n    }\r\n\r\n    key = new xdr.SignerKey.signerKeyTypePreAuthTx(buffer);\r\n  } else if (opts.signer.sha256Hash) {\r\n    let buffer;\r\n    if (typeof opts.signer.sha256Hash === 'string') {\r\n      buffer = Buffer.from(opts.signer.sha256Hash, 'hex');\r\n    } else {\r\n      buffer = opts.signer.sha256Hash;\r\n    }\r\n\r\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\r\n      throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\r\n    }\r\n\r\n    key = new xdr.SignerKey.signerKeyTypeHashX(buffer);\r\n  } else {\r\n    throw new Error('signer is invalid');\r\n  }\r\n\r\n  const signer = new xdr.RevokeSponsorshipOpSigner({\r\n    accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n    signerKey: key\r\n  });\r\n\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipSigner(signer);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\nfunction weightCheckFunction(value, name) {\r\n  if (value >= 0 && value <= 255) {\r\n    return true;\r\n  }\r\n  throw new Error(`${name} value must be between 0 and 255`);\r\n}\r\n\r\n/**\r\n * Returns an XDR SetOptionsOp. A \"set options\" operations set or clear account flags,\r\n * set the account's inflation destination, and/or add new signers to the account.\r\n * The flags used in `opts.clearFlags` and `opts.setFlags` can be the following:\r\n *   - `{@link AuthRequiredFlag}`\r\n *   - `{@link AuthRevocableFlag}`\r\n *   - `{@link AuthImmutableFlag}`\r\n *   - `{@link AuthClawbackEnabledFlag}`\r\n *\r\n * It's possible to set/clear multiple flags at once using logical or.\r\n *\r\n * @function\r\n * @alias Operation.setOptions\r\n *\r\n * @param {object} opts Options object\r\n * @param {string} [opts.inflationDest] - Set this account ID as the account's inflation destination.\r\n * @param {(number|string)} [opts.clearFlags] - Bitmap integer for which account flags to clear.\r\n * @param {(number|string)} [opts.setFlags] - Bitmap integer for which account flags to set.\r\n * @param {number|string} [opts.masterWeight] - The master key weight.\r\n * @param {number|string} [opts.lowThreshold] - The sum weight for the low threshold.\r\n * @param {number|string} [opts.medThreshold] - The sum weight for the medium threshold.\r\n * @param {number|string} [opts.highThreshold] - The sum weight for the high threshold.\r\n * @param {object} [opts.signer] - Add or remove a signer from the account. The signer is\r\n *                                 deleted if the weight is 0. Only one of `ed25519PublicKey`, `sha256Hash`, `preAuthTx` should be defined.\r\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\r\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string) of preimage that will unlock funds. Preimage should be used as signature of future transaction.\r\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction that will unlock funds.\r\n * @param {string} [opts.signer.ed25519SignedPayload] - Signed payload signer (ed25519 public key + raw payload) for atomic transaction signature disclosure.\r\n * @param {number|string} [opts.signer.weight] - The weight of the new signer (0 to delete or 1-255)\r\n * @param {string} [opts.homeDomain] - sets the home domain used for reverse federation lookup.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n *\r\n * @returns {xdr.SetOptionsOp}  XDR operation\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport function setOptions(opts) {\r\n  const attributes = {};\r\n\r\n  if (opts.inflationDest) {\r\n    if (!StrKey.isValidEd25519PublicKey(opts.inflationDest)) {\r\n      throw new Error('inflationDest is invalid');\r\n    }\r\n    attributes.inflationDest = Keypair.fromPublicKey(\r\n      opts.inflationDest\r\n    ).xdrAccountId();\r\n  }\r\n\r\n  attributes.clearFlags = this._checkUnsignedIntValue(\r\n    'clearFlags',\r\n    opts.clearFlags\r\n  );\r\n  attributes.setFlags = this._checkUnsignedIntValue('setFlags', opts.setFlags);\r\n  attributes.masterWeight = this._checkUnsignedIntValue(\r\n    'masterWeight',\r\n    opts.masterWeight,\r\n    weightCheckFunction\r\n  );\r\n  attributes.lowThreshold = this._checkUnsignedIntValue(\r\n    'lowThreshold',\r\n    opts.lowThreshold,\r\n    weightCheckFunction\r\n  );\r\n  attributes.medThreshold = this._checkUnsignedIntValue(\r\n    'medThreshold',\r\n    opts.medThreshold,\r\n    weightCheckFunction\r\n  );\r\n  attributes.highThreshold = this._checkUnsignedIntValue(\r\n    'highThreshold',\r\n    opts.highThreshold,\r\n    weightCheckFunction\r\n  );\r\n\r\n  if (opts.homeDomain !== undefined && typeof opts.homeDomain !== 'string') {\r\n    throw new TypeError('homeDomain argument must be of type String');\r\n  }\r\n  attributes.homeDomain = opts.homeDomain;\r\n\r\n  if (opts.signer) {\r\n    const weight = this._checkUnsignedIntValue(\r\n      'signer.weight',\r\n      opts.signer.weight,\r\n      weightCheckFunction\r\n    );\r\n    let key;\r\n\r\n    let setValues = 0;\r\n\r\n    if (opts.signer.ed25519PublicKey) {\r\n      if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\r\n        throw new Error('signer.ed25519PublicKey is invalid.');\r\n      }\r\n      const rawKey = StrKey.decodeEd25519PublicKey(\r\n        opts.signer.ed25519PublicKey\r\n      );\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.preAuthTx) {\r\n      if (typeof opts.signer.preAuthTx === 'string') {\r\n        opts.signer.preAuthTx = Buffer.from(opts.signer.preAuthTx, 'hex');\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Buffer.isBuffer(opts.signer.preAuthTx) &&\r\n          opts.signer.preAuthTx.length === 32\r\n        )\r\n      ) {\r\n        throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\r\n      }\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypePreAuthTx(opts.signer.preAuthTx);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.sha256Hash) {\r\n      if (typeof opts.signer.sha256Hash === 'string') {\r\n        opts.signer.sha256Hash = Buffer.from(opts.signer.sha256Hash, 'hex');\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Buffer.isBuffer(opts.signer.sha256Hash) &&\r\n          opts.signer.sha256Hash.length === 32\r\n        )\r\n      ) {\r\n        throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\r\n      }\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypeHashX(opts.signer.sha256Hash);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.ed25519SignedPayload) {\r\n      if (!StrKey.isValidSignedPayload(opts.signer.ed25519SignedPayload)) {\r\n        throw new Error('signer.ed25519SignedPayload is invalid.');\r\n      }\r\n      const rawKey = StrKey.decodeSignedPayload(\r\n        opts.signer.ed25519SignedPayload\r\n      );\r\n      const signedPayloadXdr =\r\n        xdr.SignerKeyEd25519SignedPayload.fromXDR(rawKey);\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = xdr.SignerKey.signerKeyTypeEd25519SignedPayload(signedPayloadXdr);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (setValues !== 1) {\r\n      throw new Error(\r\n        'Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.'\r\n      );\r\n    }\r\n\r\n    attributes.signer = new xdr.Signer({ key, weight });\r\n  }\r\n\r\n  const setOptionsOp = new xdr.SetOptionsOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.setOptions(setOptionsOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\n\r\n/**\r\n * Creates a trustline flag configuring operation.\r\n *\r\n * For the flags, set them to true to enable them and false to disable them. Any\r\n * unmodified operations will be marked `undefined` in the result.\r\n *\r\n * Note that you can only **clear** the clawbackEnabled flag set; it must be set\r\n * account-wide via operations.SetOptions (setting\r\n * xdr.AccountFlags.clawbackEnabled).\r\n *\r\n * @function\r\n * @alias Operation.setTrustLineFlags\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.trustor     - the account whose trustline this is\r\n * @param {Asset}  opts.asset       - the asset on the trustline\r\n * @param {object} opts.flags       - the set of flags to modify\r\n *\r\n * @param {bool}   [opts.flags.authorized]  - authorize account to perform\r\n *     transactions with its credit\r\n * @param {bool}   [opts.flags.authorizedToMaintainLiabilities] - authorize\r\n *     account to maintain and reduce liabilities for its credit\r\n * @param {bool}   [opts.flags.clawbackEnabled] - stop claimable balances on\r\n *     this trustlines from having clawbacks enabled (this flag can only be set\r\n *     to false!)\r\n * @param {string} [opts.source] - The source account for the operation.\r\n *                                 Defaults to the transaction's source account.\r\n *\r\n * @note You must include at least one flag.\r\n *\r\n * @return {xdr.SetTrustLineFlagsOp}\r\n *\r\n * @link xdr.AccountFlags\r\n * @link xdr.TrustLineFlags\r\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#set-trustline-flags-operation\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#set-options\r\n */\r\nexport function setTrustLineFlags(opts = {}) {\r\n  const attributes = {};\r\n\r\n  if (typeof opts.flags !== 'object' || Object.keys(opts.flags).length === 0) {\r\n    throw new Error('opts.flags must be a map of boolean flags to modify');\r\n  }\r\n\r\n  const mapping = {\r\n    authorized: xdr.TrustLineFlags.authorizedFlag(),\r\n    authorizedToMaintainLiabilities:\r\n      xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\r\n    clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\r\n  };\r\n\r\n  /* eslint no-bitwise: \"off\" */\r\n  let clearFlag = 0;\r\n  let setFlag = 0;\r\n\r\n  Object.keys(opts.flags).forEach((flagName) => {\r\n    if (!Object.prototype.hasOwnProperty.call(mapping, flagName)) {\r\n      throw new Error(`unsupported flag name specified: ${flagName}`);\r\n    }\r\n\r\n    const flagValue = opts.flags[flagName];\r\n    const bit = mapping[flagName].value;\r\n    if (flagValue === true) {\r\n      setFlag |= bit;\r\n    } else if (flagValue === false) {\r\n      clearFlag |= bit;\r\n    }\r\n  });\r\n\r\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.clearFlags = clearFlag;\r\n  attributes.setFlags = setFlag;\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.setTrustLineFlags(\r\n      new xdr.SetTrustLineFlagsOp(attributes)\r\n    )\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { Address } from './address';\r\nimport { Contract } from './contract';\r\nimport { ScInt, XdrLargeInt, scValToBigInt } from './numbers/index';\r\n\r\n/**\r\n * Attempts to convert native types into smart contract values\r\n * ({@link xdr.ScVal}).\r\n *\r\n * Provides conversions from smart contract XDR values ({@link xdr.ScVal}) to\r\n * native JavaScript types.\r\n *\r\n * The conversions are as follows:\r\n *\r\n *  - xdr.ScVal -> passthrough\r\n *  - null/undefined -> scvVoid\r\n *  - string -> scvString (a copy is made)\r\n *  - UintArray8 -> scvBytes (a copy is made)\r\n *  - boolean -> scvBool\r\n *\r\n *  - number/bigint -> the smallest possible XDR integer type that will fit the\r\n *    input value (if you want a specific type, use {@link ScInt})\r\n *\r\n *  - {@link Address} or {@link Contract} -> scvAddress (for contracts and\r\n *    public keys)\r\n *\r\n *  - Array<T> -> scvVec after attempting to convert each item of type `T` to an\r\n *    xdr.ScVal (recursively). note that all values must be the same type!\r\n *\r\n *  - object -> scvMap after attempting to convert each key and value to an\r\n *    xdr.ScVal (recursively). note that there is no restriction on types\r\n *    matching anywhere (unlike arrays)\r\n *\r\n * When passing an integer-like native value, you can also optionally specify a\r\n * type which will force a particular interpretation of that value.\r\n *\r\n * Note that not all type specifications are compatible with all `ScVal`s, e.g.\r\n * `toScVal(\"a string\", {type: \"i256\"})` will throw.\r\n *\r\n * @param {any} val -       a native (or convertible) input value to wrap\r\n * @param {object} [opts] - an optional set of hints around the type of\r\n *    conversion you'd like to see\r\n * @param {string} [opts.type] - there is different behavior for different input\r\n *    types for `val`:\r\n *\r\n *     - when `val` is an integer-like type (i.e. number|bigint), this will be\r\n *       forwarded to {@link ScInt} or forced to be u32/i32.\r\n *\r\n *     - when `val` is an array type, this is forwarded to the recursion\r\n *\r\n *     - when `val` is an object type (key-value entries), this should be an\r\n *       object in which each key has a pair of types (to represent forced types\r\n *       for the key and the value), where `null` (or a missing entry) indicates\r\n *       the default interpretation(s) (refer to the examples, below)\r\n *\r\n *     - when `val` is a string type, this can be 'string' or 'symbol' to force\r\n *       a particular interpretation of `val`.\r\n *\r\n *     - when `val` is a bytes-like type, this can be 'string', 'symbol', or\r\n *       'bytes' to force a particular interpretation\r\n *\r\n *    As a simple example, `nativeToScVal(\"hello\", {type: 'symbol'})` will\r\n *    return an `scvSymbol`, whereas without the type it would have been an\r\n *    `scvString`.\r\n *\r\n * @returns {xdr.ScVal} a wrapped, smart, XDR version of the input value\r\n * @throws {TypeError} if...\r\n *  - there are arrays with more than one type in them\r\n *  - there are values that do not have a sensible conversion (e.g. random XDR\r\n *    types, custom classes)\r\n *  - the type of the input object (or some inner value of said object) cannot\r\n *    be determined (via `typeof`)\r\n *  - the type you specified (via `opts.type`) is incompatible with the value\r\n *    you passed in (`val`), e.g. `nativeToScVal(\"a string\", { type: 'i128' })`,\r\n *    though this does not apply for types that ignore `opts` (e.g. addresses).\r\n * @see scValToNative\r\n *\r\n * @example\r\n * nativeToScVal(1000);                   // gives ScValType === scvU64\r\n * nativeToScVal(1000n);                  // gives ScValType === scvU64\r\n * nativeToScVal(1n << 100n);             // gives ScValType === scvU128\r\n * nativeToScVal(1000, { type: 'u32' });  // gives ScValType === scvU32\r\n * nativeToScVal(1000, { type: 'i125' }); // gives ScValType === scvI256\r\n * nativeToScVal(\"a string\");                     // gives ScValType === scvString\r\n * nativeToScVal(\"a string\", { type: 'symbol' }); // gives scvSymbol\r\n * nativeToScVal(new Uint8Array(5));                      // scvBytes\r\n * nativeToScVal(new Uint8Array(5), { type: 'symbol' });  // scvSymbol\r\n * nativeToScVal(null); // scvVoid\r\n * nativeToScVal(true); // scvBool\r\n * nativeToScVal([1, 2, 3]);                    // gives scvVec with each element as scvU64\r\n * nativeToScVal([1, 2, 3], { type: 'i128' });  // scvVec<scvI128>\r\n * nativeToScVal({ 'hello': 1, 'world': [ true, false ] }, {\r\n *   type: {\r\n *     'hello': [ 'symbol', 'i128' ],\r\n *   }\r\n * })\r\n * // gives scvMap with entries: [\r\n * //     [ scvSymbol, scvI128 ],\r\n * //     [ scvString, scvArray<scvBool> ]\r\n * // ]\r\n *\r\n * @example\r\n * import {\r\n *   nativeToScVal,\r\n *   scValToNative,\r\n *   ScInt,\r\n *   xdr\r\n * } from '@stellar/stellar-base';\r\n *\r\n * let gigaMap = {\r\n *   bool: true,\r\n *   void: null,\r\n *   u32: xdr.ScVal.scvU32(1),\r\n *   i32: xdr.ScVal.scvI32(1),\r\n *   u64: 1n,\r\n *   i64: -1n,\r\n *   u128: new ScInt(1).toU128(),\r\n *   i128: new ScInt(1).toI128(),\r\n *   u256: new ScInt(1).toU256(),\r\n *   i256: new ScInt(1).toI256(),\r\n *   map: {\r\n *     arbitrary: 1n,\r\n *     nested: 'values',\r\n *     etc: false\r\n *   },\r\n *   vec: ['same', 'type', 'list'],\r\n * };\r\n *\r\n * // then, simply:\r\n * let scv = nativeToScVal(gigaMap);    // scv.switch() == xdr.ScValType.scvMap()\r\n *\r\n * // then...\r\n * someContract.call(\"method\", scv);\r\n *\r\n * // Similarly, the inverse should work:\r\n * scValToNative(scv) == gigaMap;       // true\r\n */\r\nexport function nativeToScVal(val, opts = {}) {\r\n  switch (typeof val) {\r\n    case 'object':\r\n      if (val === null) {\r\n        return xdr.ScVal.scvVoid();\r\n      }\r\n\r\n      if (val instanceof xdr.ScVal) {\r\n        return val; // should we copy?\r\n      }\r\n\r\n      if (val instanceof Address) {\r\n        return val.toScVal();\r\n      }\r\n\r\n      if (val instanceof Contract) {\r\n        return val.address().toScVal();\r\n      }\r\n\r\n      if (val instanceof Uint8Array || Buffer.isBuffer(val)) {\r\n        const copy = Uint8Array.from(val);\r\n        switch (opts?.type ?? 'bytes') {\r\n          case 'bytes':\r\n            return xdr.ScVal.scvBytes(copy);\r\n          case 'symbol':\r\n            return xdr.ScVal.scvSymbol(copy);\r\n          case 'string':\r\n            return xdr.ScVal.scvString(copy);\r\n          default:\r\n            throw new TypeError(\r\n              `invalid type (${opts.type}) specified for bytes-like value`\r\n            );\r\n        }\r\n      }\r\n\r\n      if (Array.isArray(val)) {\r\n        if (val.length > 0 && val.some((v) => typeof v !== typeof val[0])) {\r\n          throw new TypeError(\r\n            `array values (${val}) must have the same type (types: ${val\r\n              .map((v) => typeof v)\r\n              .join(',')})`\r\n          );\r\n        }\r\n        return xdr.ScVal.scvVec(val.map((v) => nativeToScVal(v, opts)));\r\n      }\r\n\r\n      if ((val.constructor?.name ?? '') !== 'Object') {\r\n        throw new TypeError(\r\n          `cannot interpret ${\r\n            val.constructor?.name\r\n          } value as ScVal (${JSON.stringify(val)})`\r\n        );\r\n      }\r\n\r\n      return xdr.ScVal.scvMap(\r\n        Object.entries(val).map(([k, v]) => {\r\n          // the type can be specified with an entry for the key and the value,\r\n          // e.g. val = { 'hello': 1 } and opts.type = { hello: [ 'symbol',\r\n          // 'u128' ]} or you can use `null` for the default interpretation\r\n          const [keyType, valType] = (opts?.type ?? {})[k] ?? [null, null];\r\n          const keyOpts = keyType ? { type: keyType } : {};\r\n          const valOpts = valType ? { type: valType } : {};\r\n\r\n          return new xdr.ScMapEntry({\r\n            key: nativeToScVal(k, keyOpts),\r\n            val: nativeToScVal(v, valOpts)\r\n          });\r\n        })\r\n      );\r\n\r\n    case 'number':\r\n    case 'bigint':\r\n      switch (opts?.type) {\r\n        case 'u32':\r\n          return xdr.ScVal.scvU32(val);\r\n\r\n        case 'i32':\r\n          return xdr.ScVal.scvI32(val);\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return new ScInt(val, { type: opts?.type }).toScVal();\r\n\r\n    case 'string': {\r\n      const optType = opts?.type ?? 'string';\r\n      switch (optType) {\r\n        case 'string':\r\n          return xdr.ScVal.scvString(val);\r\n\r\n        case 'symbol':\r\n          return xdr.ScVal.scvSymbol(val);\r\n\r\n        case 'address':\r\n          return new Address(val).toScVal();\r\n\r\n        default:\r\n          if (XdrLargeInt.isType(optType)) {\r\n            return new XdrLargeInt(optType, val).toScVal();\r\n          }\r\n\r\n          throw new TypeError(\r\n            `invalid type (${opts.type}) specified for string value`\r\n          );\r\n      }\r\n    }\r\n\r\n    case 'boolean':\r\n      return xdr.ScVal.scvBool(val);\r\n\r\n    case 'undefined':\r\n      return xdr.ScVal.scvVoid();\r\n\r\n    case 'function': // FIXME: Is this too helpful?\r\n      return nativeToScVal(val());\r\n\r\n    default:\r\n      throw new TypeError(`failed to convert typeof ${typeof val} (${val})`);\r\n  }\r\n}\r\n\r\n/**\r\n * Given a smart contract value, attempt to convert it to a native type.\r\n * Possible conversions include:\r\n *\r\n *  - void -> `null`\r\n *  - u32, i32 -> `number`\r\n *  - u64, i64, u128, i128, u256, i256 -> `bigint`\r\n *  - vec -> `Array` of any of the above (via recursion)\r\n *  - map -> key-value object of any of the above (via recursion)\r\n *  - bool -> `boolean`\r\n *  - bytes -> `Uint8Array`\r\n *  - symbol -> `string`\r\n *  - string -> `string` IF the underlying buffer can be decoded as ascii/utf8,\r\n *              `Uint8Array` of the raw contents in any error case\r\n *\r\n * If no viable conversion can be determined, this just \"unwraps\" the smart\r\n * value to return its underlying XDR value.\r\n *\r\n * @param {xdr.ScVal} scv - the input smart contract value\r\n *\r\n * @returns {any}\r\n * @see nativeToScVal\r\n */\r\nexport function scValToNative(scv) {\r\n  // we use the verbose xdr.ScValType.<type>.value form here because it's faster\r\n  // than string comparisons and the underlying constants never need to be\r\n  // updated\r\n  switch (scv.switch().value) {\r\n    case xdr.ScValType.scvVoid().value:\r\n      return null;\r\n\r\n    // these can be converted to bigints directly\r\n    case xdr.ScValType.scvU64().value:\r\n    case xdr.ScValType.scvI64().value:\r\n      return scv.value().toBigInt();\r\n\r\n    // these can be parsed by internal abstractions note that this can also\r\n    // handle the above two cases, but it's not as efficient (another\r\n    // type-check, parsing, etc.)\r\n    case xdr.ScValType.scvU128().value:\r\n    case xdr.ScValType.scvI128().value:\r\n    case xdr.ScValType.scvU256().value:\r\n    case xdr.ScValType.scvI256().value:\r\n      return scValToBigInt(scv);\r\n\r\n    case xdr.ScValType.scvVec().value:\r\n      return (scv.vec() ?? []).map(scValToNative);\r\n\r\n    case xdr.ScValType.scvAddress().value:\r\n      return Address.fromScVal(scv).toString();\r\n\r\n    case xdr.ScValType.scvMap().value:\r\n      return Object.fromEntries(\r\n        (scv.map() ?? []).map((entry) => [\r\n          scValToNative(entry.key()),\r\n          scValToNative(entry.val())\r\n        ])\r\n      );\r\n\r\n    // these return the primitive type directly\r\n    case xdr.ScValType.scvBool().value:\r\n    case xdr.ScValType.scvU32().value:\r\n    case xdr.ScValType.scvI32().value:\r\n    case xdr.ScValType.scvBytes().value:\r\n      return scv.value();\r\n\r\n    // Symbols are limited to [a-zA-Z0-9_]+, so we can safely make ascii strings\r\n    //\r\n    // Strings, however, are \"presented\" as strings and we treat them as such\r\n    // (in other words, string = bytes with a hint that it's text). If the user\r\n    // encoded non-printable bytes in their string value, that's on them.\r\n    //\r\n    // Note that we assume a utf8 encoding (ascii-compatible). For other\r\n    // encodings, you should probably use bytes anyway. If it cannot be decoded,\r\n    // the raw bytes are returned.\r\n    case xdr.ScValType.scvSymbol().value:\r\n    case xdr.ScValType.scvString().value: {\r\n      const v = scv.value(); // string|Buffer\r\n      if (Buffer.isBuffer(v) || ArrayBuffer.isView(v)) {\r\n        try {\r\n          return new TextDecoder().decode(v);\r\n        } catch (e) {\r\n          return new Uint8Array(v.buffer); // copy of bytes\r\n        }\r\n      }\r\n      return v; // string already\r\n    }\r\n\r\n    // these can be converted to bigint\r\n    case xdr.ScValType.scvTimepoint().value:\r\n    case xdr.ScValType.scvDuration().value:\r\n      return new xdr.Uint64(scv.value()).toBigInt();\r\n\r\n    case xdr.ScValType.scvError().value:\r\n      switch (scv.error().switch().value) {\r\n        // Distinguish errors from the user contract.\r\n        case xdr.ScErrorType.sceContract().value:\r\n          return { type: 'contract', code: scv.error().contractCode() };\r\n        default: {\r\n          const err = scv.error();\r\n          return {\r\n            type: 'system',\r\n            code: err.code().value,\r\n            value: err.code().name\r\n          };\r\n        }\r\n      }\r\n\r\n    // in the fallthrough case, just return the underlying value directly\r\n    default:\r\n      return scv.value();\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { StrKey, encodeCheck, decodeCheck } from './strkey';\r\n\r\n/**\r\n * A container class with helpers to convert between signer keys\r\n * (`xdr.SignerKey`) and {@link StrKey}s.\r\n *\r\n * It's primarly used for manipulating the `extraSigners` precondition on a\r\n * {@link Transaction}.\r\n *\r\n * @see {@link TransactionBuilder.setExtraSigners}\r\n */\r\nexport class SignerKey {\r\n  /**\r\n   * Decodes a StrKey address into an xdr.SignerKey instance.\r\n   *\r\n   * Only ED25519 public keys (G...), pre-auth transactions (T...), hashes\r\n   * (H...), and signed payloads (P...) can be signer keys.\r\n   *\r\n   * @param   {string} address  a StrKey-encoded signer address\r\n   * @returns {xdr.SignerKey}\r\n   */\r\n  static decodeAddress(address) {\r\n    const signerKeyMap = {\r\n      ed25519PublicKey: xdr.SignerKey.signerKeyTypeEd25519,\r\n      preAuthTx: xdr.SignerKey.signerKeyTypePreAuthTx,\r\n      sha256Hash: xdr.SignerKey.signerKeyTypeHashX,\r\n      signedPayload: xdr.SignerKey.signerKeyTypeEd25519SignedPayload\r\n    };\r\n\r\n    const vb = StrKey.getVersionByteForPrefix(address);\r\n    const encoder = signerKeyMap[vb];\r\n    if (!encoder) {\r\n      throw new Error(`invalid signer key type (${vb})`);\r\n    }\r\n\r\n    const raw = decodeCheck(vb, address);\r\n    switch (vb) {\r\n      case 'signedPayload':\r\n        return encoder(\r\n          new xdr.SignerKeyEd25519SignedPayload({\r\n            ed25519: raw.slice(0, 32),\r\n            payload: raw.slice(32 + 4)\r\n          })\r\n        );\r\n\r\n      case 'ed25519PublicKey': // falls through\r\n      case 'preAuthTx': // falls through\r\n      case 'sha256Hash': // falls through\r\n      default:\r\n        return encoder(raw);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encodes a signer key into its StrKey equivalent.\r\n   *\r\n   * @param   {xdr.SignerKey} signerKey   the signer\r\n   * @returns {string} the StrKey representation of the signer\r\n   */\r\n  static encodeSignerKey(signerKey) {\r\n    let strkeyType;\r\n    let raw;\r\n\r\n    switch (signerKey.switch()) {\r\n      case xdr.SignerKeyType.signerKeyTypeEd25519():\r\n        strkeyType = 'ed25519PublicKey';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypePreAuthTx():\r\n        strkeyType = 'preAuthTx';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypeHashX():\r\n        strkeyType = 'sha256Hash';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypeEd25519SignedPayload():\r\n        strkeyType = 'signedPayload';\r\n        raw = signerKey.ed25519SignedPayload().toXDR('raw');\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`invalid SignerKey (type: ${signerKey.switch()})`);\r\n    }\r\n\r\n    return encodeCheck(strkeyType, raw);\r\n  }\r\n}\r\n","//  This module provides the signing functionality used by the stellar network\r\n//  The code below may look a little strange... this is because we try to provide\r\n//  the most efficient signing method possible.  First, we try to load the\r\n//  native `sodium-native` package for node.js environments, and if that fails we\r\n//  fallback to `tweetnacl`\r\n\r\nconst actualMethods = {};\r\n\r\n/**\r\n * Use this flag to check if fast signing (provided by `sodium-native` package) is available.\r\n * If your app is signing a large number of transaction or verifying a large number\r\n * of signatures make sure `sodium-native` package is installed.\r\n */\r\nexport const FastSigning = checkFastSigning();\r\n\r\nexport function sign(data, secretKey) {\r\n  return actualMethods.sign(data, secretKey);\r\n}\r\n\r\nexport function verify(data, signature, publicKey) {\r\n  return actualMethods.verify(data, signature, publicKey);\r\n}\r\n\r\nexport function generate(secretKey) {\r\n  return actualMethods.generate(secretKey);\r\n}\r\n\r\nfunction checkFastSigning() {\r\n  return typeof window === 'undefined'\r\n    ? checkFastSigningNode()\r\n    : checkFastSigningBrowser();\r\n}\r\n\r\nfunction checkFastSigningNode() {\r\n  // NOTE: we use commonjs style require here because es6 imports\r\n  // can only occur at the top level.  thanks, obama.\r\n  let sodium;\r\n  try {\r\n    // eslint-disable-next-line\r\n    sodium = require('sodium-native');\r\n  } catch (err) {\r\n    return checkFastSigningBrowser();\r\n  }\r\n\r\n  if (!Object.keys(sodium).length) {\r\n    return checkFastSigningBrowser();\r\n  }\r\n\r\n  actualMethods.generate = (secretKey) => {\r\n    const pk = Buffer.alloc(sodium.crypto_sign_PUBLICKEYBYTES);\r\n    const sk = Buffer.alloc(sodium.crypto_sign_SECRETKEYBYTES);\r\n    sodium.crypto_sign_seed_keypair(pk, sk, secretKey);\r\n    return pk;\r\n  };\r\n\r\n  actualMethods.sign = (data, secretKey) => {\r\n    data = Buffer.from(data);\r\n    const signature = Buffer.alloc(sodium.crypto_sign_BYTES);\r\n    sodium.crypto_sign_detached(signature, data, secretKey);\r\n    return signature;\r\n  };\r\n\r\n  actualMethods.verify = (data, signature, publicKey) => {\r\n    data = Buffer.from(data);\r\n    try {\r\n      return sodium.crypto_sign_verify_detached(signature, data, publicKey);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkFastSigningBrowser() {\r\n  // fallback to `tweetnacl` if we're in the browser or\r\n  // if there was a failure installing `sodium-native`\r\n  // eslint-disable-next-line\r\n  const nacl = require('tweetnacl');\r\n\r\n  actualMethods.generate = (secretKey) => {\r\n    const secretKeyUint8 = new Uint8Array(secretKey);\r\n    const naclKeys = nacl.sign.keyPair.fromSeed(secretKeyUint8);\r\n    return Buffer.from(naclKeys.publicKey);\r\n  };\r\n\r\n  actualMethods.sign = (data, secretKey) => {\r\n    data = Buffer.from(data);\r\n    data = new Uint8Array(data.toJSON().data);\r\n    secretKey = new Uint8Array(secretKey.toJSON().data);\r\n\r\n    const signature = nacl.sign.detached(data, secretKey);\r\n\r\n    return Buffer.from(signature);\r\n  };\r\n\r\n  actualMethods.verify = (data, signature, publicKey) => {\r\n    data = Buffer.from(data);\r\n    data = new Uint8Array(data.toJSON().data);\r\n    signature = new Uint8Array(signature.toJSON().data);\r\n    publicKey = new Uint8Array(publicKey.toJSON().data);\r\n\r\n    return nacl.sign.detached.verify(data, signature, publicKey);\r\n  };\r\n\r\n  return false;\r\n}\r\n","/* Helper class to assist with formatting and parsing token amounts. */\r\nexport class Soroban {\r\n  /**\r\n   * Given a whole number smart contract amount of a token and an amount of\r\n   * decimal places (if the token has any), it returns a \"display\" value.\r\n   *\r\n   * All arithmetic inside the contract is performed on integers to avoid\r\n   * potential precision and consistency issues of floating-point.\r\n   *\r\n   * @param {string} amount   the token amount you want to display\r\n   * @param {number} decimals specify how many decimal places a token has\r\n   *\r\n   * @returns {string} the display value\r\n   * @throws {TypeError} if the given amount has a decimal point already\r\n   * @example\r\n   * formatTokenAmount(\"123000\", 4) === \"12.3\";\r\n   */\r\n  static formatTokenAmount(amount, decimals) {\r\n    if (amount.includes('.')) {\r\n      throw new TypeError('No decimals are allowed');\r\n    }\r\n\r\n    let formatted = amount;\r\n    if (decimals > 0) {\r\n      if (decimals > formatted.length) {\r\n        formatted = ['0', formatted.toString().padStart(decimals, '0')].join(\r\n          '.'\r\n        );\r\n      } else {\r\n        formatted = [\r\n          formatted.slice(0, -decimals),\r\n          formatted.slice(-decimals)\r\n        ].join('.');\r\n      }\r\n    }\r\n\r\n    // remove trailing zero if any\r\n    return formatted.replace(/(\\.\\d*?)0+$/, '$1');\r\n  }\r\n\r\n  /**\r\n   * Parse a token amount to use it on smart contract\r\n   *\r\n   * This function takes the display value and its decimals (if the token has\r\n   * any) and returns a string that'll be used within the smart contract.\r\n   *\r\n   * @param {string} value      the token amount you want to use it on smart\r\n   *    contract which you've been displaying in a UI\r\n   * @param {number} decimals   the number of decimal places expected in the\r\n   *    display value (different than the \"actual\" number, because suffix zeroes\r\n   *    might not be present)\r\n   *\r\n   * @returns {string}  the whole number token amount represented by the display\r\n   *    value with the decimal places shifted over\r\n   *\r\n   * @example\r\n   * const displayValueAmount = \"123.4560\"\r\n   * const parsedAmtForSmartContract = parseTokenAmount(displayValueAmount, 5);\r\n   * parsedAmtForSmartContract === \"12345600\"\r\n   */\r\n  static parseTokenAmount(value, decimals) {\r\n    const [whole, fraction, ...rest] = value.split('.').slice();\r\n\r\n    if (rest.length) {\r\n      throw new Error(`Invalid decimal value: ${value}`);\r\n    }\r\n\r\n    const shifted = BigInt(\r\n      whole + (fraction?.padEnd(decimals, '0') ?? '0'.repeat(decimals))\r\n    );\r\n\r\n    return shifted.toString();\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\n/**\r\n * Supports building {@link xdr.SorobanTransactionData} structures with various\r\n * items set to specific values.\r\n *\r\n * This is recommended for when you are building\r\n * {@link Operation.extendFootprintTtl} / {@link Operation.restoreFootprint}\r\n * operations and need to {@link TransactionBuilder.setSorobanData} to avoid\r\n * (re)building the entire data structure from scratch.\r\n *\r\n * @constructor\r\n *\r\n * @param {string | xdr.SorobanTransactionData} [sorobanData]  either a\r\n *      base64-encoded string that represents an\r\n *      {@link xdr.SorobanTransactionData} instance or an XDR instance itself\r\n *      (it will be copied); if omitted or \"falsy\" (e.g. an empty string), it\r\n *      starts with an empty instance\r\n *\r\n * @example\r\n * // You want to use an existing data blob but override specific parts.\r\n * const newData = new SorobanDataBuilder(existing)\r\n *   .setReadOnly(someLedgerKeys)\r\n *   .setRefundableFee(\"1000\")\r\n *   .build();\r\n *\r\n * // You want an instance from scratch\r\n * const newData = new SorobanDataBuilder()\r\n *   .setFootprint([someLedgerKey], [])\r\n *   .setRefundableFee(\"1000\")\r\n *   .build();\r\n */\r\nexport class SorobanDataBuilder {\r\n  _data;\r\n\r\n  constructor(sorobanData) {\r\n    let data;\r\n\r\n    if (!sorobanData) {\r\n      data = new xdr.SorobanTransactionData({\r\n        resources: new xdr.SorobanResources({\r\n          footprint: new xdr.LedgerFootprint({ readOnly: [], readWrite: [] }),\r\n          instructions: 0,\r\n          readBytes: 0,\r\n          writeBytes: 0\r\n        }),\r\n        ext: new xdr.ExtensionPoint(0),\r\n        resourceFee: new xdr.Int64(0)\r\n      });\r\n    } else if (\r\n      typeof sorobanData === 'string' ||\r\n      ArrayBuffer.isView(sorobanData)\r\n    ) {\r\n      data = SorobanDataBuilder.fromXDR(sorobanData);\r\n    } else {\r\n      data = SorobanDataBuilder.fromXDR(sorobanData.toXDR()); // copy\r\n    }\r\n\r\n    this._data = data;\r\n    this._data.resourceFee(new xdr.Int64(1e7));\r\n  }\r\n\r\n  /**\r\n   * Decodes and builds a {@link xdr.SorobanTransactionData} instance.\r\n   * @param {Uint8Array|Buffer|string} data   raw input to decode\r\n   * @returns {xdr.SorobanTransactionData}\r\n   */\r\n  static fromXDR(data) {\r\n    return xdr.SorobanTransactionData.fromXDR(\r\n      data,\r\n      typeof data === 'string' ? 'base64' : 'raw'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the resource fee portion of the Soroban data.\r\n   * @param {number | bigint | string} fee  the resource fee to set (int64)\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setResourceFee(fee) {\r\n    this._data.resourceFee(new xdr.Int64(fee));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets up the resource metrics.\r\n   *\r\n   * You should almost NEVER need this, as its often generated / provided to you\r\n   * by transaction simulation/preflight from a Soroban RPC server.\r\n   *\r\n   * @param {number} cpuInstrs      number of CPU instructions\r\n   * @param {number} readBytes      number of bytes being read\r\n   * @param {number} writeBytes     number of bytes being written\r\n   *\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setResources(cpuInstrs, readBytes, writeBytes) {\r\n    this._data.resources().instructions(cpuInstrs);\r\n    this._data.resources().readBytes(readBytes);\r\n    this._data.resources().writeBytes(writeBytes);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends the given ledger keys to the existing storage access footprint.\r\n   * @param {xdr.LedgerKey[]} readOnly   read-only keys to add\r\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys to add\r\n   * @returns {SorobanDataBuilder} this builder instance\r\n   */\r\n  appendFootprint(readOnly, readWrite) {\r\n    return this.setFootprint(\r\n      this.getReadOnly().concat(readOnly),\r\n      this.getReadWrite().concat(readWrite)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the storage access footprint to be a certain set of ledger keys.\r\n   *\r\n   * You can also set each field explicitly via\r\n   * {@link SorobanDataBuilder.setReadOnly} and\r\n   * {@link SorobanDataBuilder.setReadWrite} or add to the existing footprint\r\n   * via {@link SorobanDataBuilder.appendFootprint}.\r\n   *\r\n   * Passing `null|undefined` to either parameter will IGNORE the existing\r\n   * values. If you want to clear them, pass `[]`, instead.\r\n   *\r\n   * @param {xdr.LedgerKey[]|null} [readOnly]   the set of ledger keys to set in\r\n   *    the read-only portion of the transaction's `sorobanData`, or `null |\r\n   *    undefined` to keep the existing keys\r\n   * @param {xdr.LedgerKey[]|null} [readWrite]  the set of ledger keys to set in\r\n   *    the read-write portion of the transaction's `sorobanData`, or `null |\r\n   *    undefined` to keep the existing keys\r\n   * @returns {SorobanDataBuilder} this builder instance\r\n   */\r\n  setFootprint(readOnly, readWrite) {\r\n    if (readOnly !== null) {\r\n      // null means \"leave me alone\"\r\n      this.setReadOnly(readOnly);\r\n    }\r\n    if (readWrite !== null) {\r\n      this.setReadWrite(readWrite);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {xdr.LedgerKey[]} readOnly  read-only keys in the access footprint\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setReadOnly(readOnly) {\r\n    this._data\r\n      .resources()\r\n      .footprint()\r\n      .readOnly(readOnly ?? []);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys in the access footprint\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setReadWrite(readWrite) {\r\n    this._data\r\n      .resources()\r\n      .footprint()\r\n      .readWrite(readWrite ?? []);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.SorobanTransactionData} a copy of the final data structure\r\n   */\r\n  build() {\r\n    return xdr.SorobanTransactionData.fromXDR(this._data.toXDR()); // clone\r\n  }\r\n\r\n  //\r\n  // getters follow\r\n  //\r\n\r\n  /** @returns {xdr.LedgerKey[]} the read-only storage access pattern */\r\n  getReadOnly() {\r\n    return this.getFootprint().readOnly();\r\n  }\r\n\r\n  /** @returns {xdr.LedgerKey[]} the read-write storage access pattern */\r\n  getReadWrite() {\r\n    return this.getFootprint().readWrite();\r\n  }\r\n\r\n  /** @returns {xdr.LedgerFootprint} the storage access pattern */\r\n  getFootprint() {\r\n    return this._data.resources().footprint();\r\n  }\r\n}\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"<<\", \">>\", \"^\", \"&\", \"&=\"]}] */\r\n\r\nimport base32 from 'base32.js';\r\nimport { verifyChecksum } from './util/checksum';\r\n\r\nconst versionBytes = {\r\n  ed25519PublicKey: 6 << 3, // G (when encoded in base32)\r\n  ed25519SecretSeed: 18 << 3, // S\r\n  med25519PublicKey: 12 << 3, // M\r\n  preAuthTx: 19 << 3, // T\r\n  sha256Hash: 23 << 3, // X\r\n  signedPayload: 15 << 3, // P\r\n  contract: 2 << 3 // C\r\n};\r\n\r\nconst strkeyTypes = {\r\n  G: 'ed25519PublicKey',\r\n  S: 'ed25519SecretSeed',\r\n  M: 'med25519PublicKey',\r\n  T: 'preAuthTx',\r\n  X: 'sha256Hash',\r\n  P: 'signedPayload',\r\n  C: 'contract'\r\n};\r\n\r\n/**\r\n * StrKey is a helper class that allows encoding and decoding Stellar keys\r\n * to/from strings, i.e. between their binary (Buffer, xdr.PublicKey, etc.) and\r\n * string (i.e. \"GABCD...\", etc.) representations.\r\n */\r\nexport class StrKey {\r\n  /**\r\n   * Encodes `data` to strkey ed25519 public key.\r\n   *\r\n   * @param   {Buffer} data   raw data to encode\r\n   * @returns {string}        \"G...\" representation of the key\r\n   */\r\n  static encodeEd25519PublicKey(data) {\r\n    return encodeCheck('ed25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey ed25519 public key to raw data.\r\n   *\r\n   * If the parameter is a muxed account key (\"M...\"), this will only encode it\r\n   * as a basic Ed25519 key (as if in \"G...\" format).\r\n   *\r\n   * @param   {string} data   \"G...\" (or \"M...\") key representation to decode\r\n   * @returns {Buffer}        raw key\r\n   */\r\n  static decodeEd25519PublicKey(data) {\r\n    return decodeCheck('ed25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar public key is a valid ed25519 public key.\r\n   * @param {string} publicKey public key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidEd25519PublicKey(publicKey) {\r\n    return isValid('ed25519PublicKey', publicKey);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey ed25519 seed.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeEd25519SecretSeed(data) {\r\n    return encodeCheck('ed25519SecretSeed', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey ed25519 seed to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeEd25519SecretSeed(address) {\r\n    return decodeCheck('ed25519SecretSeed', address);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar secret key is a valid ed25519 secret seed.\r\n   * @param {string} seed seed to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidEd25519SecretSeed(seed) {\r\n    return isValid('ed25519SecretSeed', seed);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey med25519 public key.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeMed25519PublicKey(data) {\r\n    return encodeCheck('med25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey med25519 public key to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeMed25519PublicKey(address) {\r\n    return decodeCheck('med25519PublicKey', address);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar public key is a valid med25519 public key.\r\n   * @param {string} publicKey public key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidMed25519PublicKey(publicKey) {\r\n    return isValid('med25519PublicKey', publicKey);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey preAuthTx.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodePreAuthTx(data) {\r\n    return encodeCheck('preAuthTx', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey PreAuthTx to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodePreAuthTx(address) {\r\n    return decodeCheck('preAuthTx', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey sha256 hash.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeSha256Hash(data) {\r\n    return encodeCheck('sha256Hash', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey sha256 hash to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeSha256Hash(address) {\r\n    return decodeCheck('sha256Hash', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes raw data to strkey signed payload (P...).\r\n   * @param   {Buffer} data  data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeSignedPayload(data) {\r\n    return encodeCheck('signedPayload', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey signed payload (P...) to raw data.\r\n   * @param   {string} address  address to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeSignedPayload(address) {\r\n    return decodeCheck('signedPayload', address);\r\n  }\r\n\r\n  /**\r\n   * Checks validity of alleged signed payload (P...) strkey address.\r\n   * @param   {string} address  signer key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidSignedPayload(address) {\r\n    return isValid('signedPayload', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes raw data to strkey contract (C...).\r\n   * @param   {Buffer} data  data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeContract(data) {\r\n    return encodeCheck('contract', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey contract (C...) to raw data.\r\n   * @param   {string} address  address to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeContract(address) {\r\n    return decodeCheck('contract', address);\r\n  }\r\n\r\n  /**\r\n   * Checks validity of alleged contract (C...) strkey address.\r\n   * @param   {string} address  signer key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidContract(address) {\r\n    return isValid('contract', address);\r\n  }\r\n\r\n  static getVersionByteForPrefix(address) {\r\n    return strkeyTypes[address[0]];\r\n  }\r\n}\r\n\r\n/**\r\n * Sanity-checks whether or not a strkey *appears* valid.\r\n *\r\n * @param  {string}  versionByteName the type of strkey to expect in `encoded`\r\n * @param  {string}  encoded         the strkey to validate\r\n *\r\n * @return {Boolean} whether or not the `encoded` strkey appears valid for the\r\n *     `versionByteName` strkey type (see `versionBytes`, above).\r\n *\r\n * @note This isn't a *definitive* check of validity, but rather a best-effort\r\n *     check based on (a) input length, (b) whether or not it can be decoded,\r\n *     and (c) output length.\r\n */\r\nfunction isValid(versionByteName, encoded) {\r\n  if (typeof encoded !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  // basic length checks on the strkey lengths\r\n  switch (versionByteName) {\r\n    case 'ed25519PublicKey': // falls through\r\n    case 'ed25519SecretSeed': // falls through\r\n    case 'preAuthTx': // falls through\r\n    case 'sha256Hash': // falls through\r\n    case 'contract':\r\n      if (encoded.length !== 56) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    case 'med25519PublicKey':\r\n      if (encoded.length !== 69) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    case 'signedPayload':\r\n      if (encoded.length < 56 || encoded.length > 165) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n\r\n  let decoded = '';\r\n  try {\r\n    decoded = decodeCheck(versionByteName, encoded);\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n\r\n  // basic length checks on the resulting buffer sizes\r\n  switch (versionByteName) {\r\n    case 'ed25519PublicKey': // falls through\r\n    case 'ed25519SecretSeed': // falls through\r\n    case 'preAuthTx': // falls through\r\n    case 'sha256Hash': // falls through\r\n    case 'contract':\r\n      return decoded.length === 32;\r\n\r\n    case 'med25519PublicKey':\r\n      return decoded.length === 40; // +8 bytes for the ID\r\n\r\n    case 'signedPayload':\r\n      return (\r\n        // 32 for the signer, +4 for the payload size, then either +4 for the\r\n        // min or +64 for the max payload\r\n        decoded.length >= 32 + 4 + 4 && decoded.length <= 32 + 4 + 64\r\n      );\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nexport function decodeCheck(versionByteName, encoded) {\r\n  if (typeof encoded !== 'string') {\r\n    throw new TypeError('encoded argument must be of type String');\r\n  }\r\n\r\n  const decoded = base32.decode(encoded);\r\n  const versionByte = decoded[0];\r\n  const payload = decoded.slice(0, -2);\r\n  const data = payload.slice(1);\r\n  const checksum = decoded.slice(-2);\r\n\r\n  if (encoded !== base32.encode(decoded)) {\r\n    throw new Error('invalid encoded string');\r\n  }\r\n\r\n  const expectedVersion = versionBytes[versionByteName];\r\n\r\n  if (expectedVersion === undefined) {\r\n    throw new Error(\r\n      `${versionByteName} is not a valid version byte name. ` +\r\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\r\n    );\r\n  }\r\n\r\n  if (versionByte !== expectedVersion) {\r\n    throw new Error(\r\n      `invalid version byte. expected ${expectedVersion}, got ${versionByte}`\r\n    );\r\n  }\r\n\r\n  const expectedChecksum = calculateChecksum(payload);\r\n\r\n  if (!verifyChecksum(expectedChecksum, checksum)) {\r\n    throw new Error(`invalid checksum`);\r\n  }\r\n\r\n  return Buffer.from(data);\r\n}\r\n\r\nexport function encodeCheck(versionByteName, data) {\r\n  if (data === null || data === undefined) {\r\n    throw new Error('cannot encode null data');\r\n  }\r\n\r\n  const versionByte = versionBytes[versionByteName];\r\n\r\n  if (versionByte === undefined) {\r\n    throw new Error(\r\n      `${versionByteName} is not a valid version byte name. ` +\r\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\r\n    );\r\n  }\r\n  data = Buffer.from(data);\r\n\r\n  const versionBuffer = Buffer.from([versionByte]);\r\n  const payload = Buffer.concat([versionBuffer, data]);\r\n  const checksum = Buffer.from(calculateChecksum(payload));\r\n  const unencoded = Buffer.concat([payload, checksum]);\r\n\r\n  return base32.encode(unencoded);\r\n}\r\n\r\n// Computes the CRC16-XModem checksum of `payload` in little-endian order\r\nfunction calculateChecksum(payload) {\r\n  const crcTable = [\r\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108,\r\n    0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210,\r\n    0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b,\r\n    0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\r\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee,\r\n    0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6,\r\n    0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d,\r\n    0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\r\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5,\r\n    0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc,\r\n    0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4,\r\n    0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\r\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13,\r\n    0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a,\r\n    0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e,\r\n    0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\r\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1,\r\n    0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb,\r\n    0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0,\r\n    0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\r\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657,\r\n    0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9,\r\n    0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882,\r\n    0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\r\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e,\r\n    0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07,\r\n    0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d,\r\n    0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\r\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\r\n  ];\r\n\r\n  let crc16 = 0x0;\r\n\r\n  for (let i = 0; i < payload.length; i += 1) {\r\n    const byte = payload[i];\r\n    const lookupIndex = (crc16 >> 8) ^ byte;\r\n    crc16 = (crc16 << 8) ^ crcTable[lookupIndex];\r\n    crc16 &= 0xffff;\r\n  }\r\n  const checksum = new Uint8Array(2);\r\n  checksum[0] = crc16 & 0xff;\r\n  checksum[1] = (crc16 >> 8) & 0xff;\r\n  return checksum;\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { Operation } from './operation';\r\nimport { Memo } from './memo';\r\nimport { TransactionBase } from './transaction_base';\r\nimport {\r\n  extractBaseAddress,\r\n  encodeMuxedAccountToAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Use {@link TransactionBuilder} to build a transaction object. If you have an\r\n * object or base64-encoded string of the transaction envelope XDR, use {@link\r\n * TransactionBuilder.fromXDR}.\r\n *\r\n * Once a Transaction has been created, its attributes and operations should not\r\n * be changed. You should only add signatures (using {@link Transaction#sign})\r\n * to a Transaction object before submitting to the network or forwarding on to\r\n * additional signers.\r\n *\r\n * @constructor\r\n *\r\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\r\n *     object or base64 encoded string\r\n * @param {string}  [networkPassphrase] - passphrase of the target stellar\r\n *     network (e.g. \"Public Global Stellar Network ; September 2015\")\r\n *\r\n * @extends TransactionBase\r\n */\r\nexport class Transaction extends TransactionBase {\r\n  constructor(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      const buffer = Buffer.from(envelope, 'base64');\r\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\r\n    }\r\n\r\n    const envelopeType = envelope.switch();\r\n    if (\r\n      !(\r\n        envelopeType === xdr.EnvelopeType.envelopeTypeTxV0() ||\r\n        envelopeType === xdr.EnvelopeType.envelopeTypeTx()\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${envelopeType.name}.`\r\n      );\r\n    }\r\n\r\n    const txEnvelope = envelope.value();\r\n    const tx = txEnvelope.tx();\r\n    const fee = tx.fee().toString();\r\n    const signatures = (txEnvelope.signatures() || []).slice();\r\n\r\n    super(tx, signatures, fee, networkPassphrase);\r\n\r\n    this._envelopeType = envelopeType;\r\n    this._memo = tx.memo();\r\n    this._sequence = tx.seqNum().toString();\r\n\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        this._source = StrKey.encodeEd25519PublicKey(\r\n          this.tx.sourceAccountEd25519()\r\n        );\r\n        break;\r\n      default:\r\n        this._source = encodeMuxedAccountToAddress(this.tx.sourceAccount());\r\n        break;\r\n    }\r\n\r\n    let cond = null;\r\n    let timeBounds = null;\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        timeBounds = tx.timeBounds();\r\n        break;\r\n\r\n      case xdr.EnvelopeType.envelopeTypeTx():\r\n        switch (tx.cond().switch()) {\r\n          case xdr.PreconditionType.precondTime():\r\n            timeBounds = tx.cond().timeBounds();\r\n            break;\r\n\r\n          case xdr.PreconditionType.precondV2():\r\n            cond = tx.cond().v2();\r\n            timeBounds = cond.timeBounds();\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (timeBounds) {\r\n      this._timeBounds = {\r\n        minTime: timeBounds.minTime().toString(),\r\n        maxTime: timeBounds.maxTime().toString()\r\n      };\r\n    }\r\n\r\n    if (cond) {\r\n      const ledgerBounds = cond.ledgerBounds();\r\n      if (ledgerBounds) {\r\n        this._ledgerBounds = {\r\n          minLedger: ledgerBounds.minLedger(),\r\n          maxLedger: ledgerBounds.maxLedger()\r\n        };\r\n      }\r\n\r\n      const minSeq = cond.minSeqNum();\r\n      if (minSeq) {\r\n        this._minAccountSequence = minSeq.toString();\r\n      }\r\n\r\n      this._minAccountSequenceAge = cond.minSeqAge();\r\n      this._minAccountSequenceLedgerGap = cond.minSeqLedgerGap();\r\n      this._extraSigners = cond.extraSigners();\r\n    }\r\n\r\n    const operations = tx.operations() || [];\r\n    this._operations = operations.map((op) => Operation.fromXDRObject(op));\r\n  }\r\n\r\n  /**\r\n   * @type {object}\r\n   * @property {string} 64 bit unix timestamp\r\n   * @property {string} 64 bit unix timestamp\r\n   * @readonly\r\n   */\r\n  get timeBounds() {\r\n    return this._timeBounds;\r\n  }\r\n  set timeBounds(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {object}\r\n   * @property {number} minLedger - smallest ledger bound (uint32)\r\n   * @property {number} maxLedger - largest ledger bound (or 0 for inf)\r\n   * @readonly\r\n   */\r\n  get ledgerBounds() {\r\n    return this._ledgerBounds;\r\n  }\r\n  set ledgerBounds(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 64 bit account sequence\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get minAccountSequence() {\r\n    return this._minAccountSequence;\r\n  }\r\n  set minAccountSequence(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 64 bit number of seconds\r\n   * @type {number}\r\n   * @readonly\r\n   */\r\n  get minAccountSequenceAge() {\r\n    return this._minAccountSequenceAge;\r\n  }\r\n  set minAccountSequenceAge(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 32 bit number of ledgers\r\n   * @type {number}\r\n   * @readonly\r\n   */\r\n  get minAccountSequenceLedgerGap() {\r\n    return this._minAccountSequenceLedgerGap;\r\n  }\r\n  set minAccountSequenceLedgerGap(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * array of extra signers ({@link StrKey}s)\r\n   * @type {string[]}\r\n   * @readonly\r\n   */\r\n  get extraSigners() {\r\n    return this._extraSigners;\r\n  }\r\n  set extraSigners(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get sequence() {\r\n    return this._sequence;\r\n  }\r\n  set sequence(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get source() {\r\n    return this._source;\r\n  }\r\n  set source(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {Array.<xdr.Operation>}\r\n   * @readonly\r\n   */\r\n  get operations() {\r\n    return this._operations;\r\n  }\r\n  set operations(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get memo() {\r\n    return Memo.fromXDRObject(this._memo);\r\n  }\r\n  set memo(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * Returns the \"signature base\" of this transaction, which is the value\r\n   * that, when hashed, should be signed to create a signature that\r\n   * validators on the Stellar Network will accept.\r\n   *\r\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\r\n   * of this transaction.\r\n   * @returns {Buffer}\r\n   */\r\n  signatureBase() {\r\n    let tx = this.tx;\r\n\r\n    // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n    // we need a Transaction to generate the signature base\r\n    if (this._envelopeType === xdr.EnvelopeType.envelopeTypeTxV0()) {\r\n      tx = xdr.Transaction.fromXDR(\r\n        Buffer.concat([\r\n          // TransactionV0 is a transaction with the AccountID discriminant\r\n          // stripped off, we need to put it back to build a valid transaction\r\n          // which we can use to build a TransactionSignaturePayloadTaggedTransaction\r\n          xdr.PublicKeyType.publicKeyTypeEd25519().toXDR(),\r\n          tx.toXDR()\r\n        ])\r\n      );\r\n    }\r\n\r\n    const taggedTransaction =\r\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(tx);\r\n\r\n    const txSignature = new xdr.TransactionSignaturePayload({\r\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\r\n      taggedTransaction\r\n    });\r\n\r\n    return txSignature.toXDR();\r\n  }\r\n\r\n  /**\r\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\r\n   * @returns {xdr.TransactionEnvelope}\r\n   */\r\n  toEnvelope() {\r\n    const rawTx = this.tx.toXDR();\r\n    const signatures = this.signatures.slice(); // make a copy of the signatures\r\n\r\n    let envelope;\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTxV0(\r\n          new xdr.TransactionV0Envelope({\r\n            tx: xdr.TransactionV0.fromXDR(rawTx), // make a copy of tx\r\n            signatures\r\n          })\r\n        );\r\n        break;\r\n      case xdr.EnvelopeType.envelopeTypeTx():\r\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n          new xdr.TransactionV1Envelope({\r\n            tx: xdr.Transaction.fromXDR(rawTx), // make a copy of tx\r\n            signatures\r\n          })\r\n        );\r\n        break;\r\n      default:\r\n        throw new Error(\r\n          `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${this._envelopeType.name}.`\r\n        );\r\n    }\r\n\r\n    return envelope;\r\n  }\r\n\r\n  /**\r\n   * Calculate the claimable balance ID for an operation within the transaction.\r\n   *\r\n   * @param   {integer}  opIndex   the index of the CreateClaimableBalance op\r\n   * @returns {string}   a hex string representing the claimable balance ID\r\n   *\r\n   * @throws {RangeError}   for invalid `opIndex` value\r\n   * @throws {TypeError}    if op at `opIndex` is not `CreateClaimableBalance`\r\n   * @throws for general XDR un/marshalling failures\r\n   *\r\n   * @see https://github.com/stellar/go/blob/d712346e61e288d450b0c08038c158f8848cc3e4/txnbuild/transaction.go#L392-L435\r\n   *\r\n   */\r\n  getClaimableBalanceId(opIndex) {\r\n    // Validate and then extract the operation from the transaction.\r\n    if (\r\n      !Number.isInteger(opIndex) ||\r\n      opIndex < 0 ||\r\n      opIndex >= this.operations.length\r\n    ) {\r\n      throw new RangeError('invalid operation index');\r\n    }\r\n\r\n    let op = this.operations[opIndex];\r\n    try {\r\n      op = Operation.createClaimableBalance(op);\r\n    } catch (err) {\r\n      throw new TypeError(\r\n        `expected createClaimableBalance, got ${op.type}: ${err}`\r\n      );\r\n    }\r\n\r\n    // Always use the transaction's *unmuxed* source.\r\n    const account = StrKey.decodeEd25519PublicKey(\r\n      extractBaseAddress(this.source)\r\n    );\r\n    const operationId = xdr.HashIdPreimage.envelopeTypeOpId(\r\n      new xdr.HashIdPreimageOperationId({\r\n        sourceAccount: xdr.AccountId.publicKeyTypeEd25519(account),\r\n        seqNum: xdr.SequenceNumber.fromString(this.sequence),\r\n        opNum: opIndex\r\n      })\r\n    );\r\n\r\n    const opIdHash = hash(operationId.toXDR('raw'));\r\n    const balanceId = xdr.ClaimableBalanceId.claimableBalanceIdTypeV0(opIdHash);\r\n    return balanceId.toXDR('hex');\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\nimport { Keypair } from './keypair';\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class TransactionBase {\r\n  constructor(tx, signatures, fee, networkPassphrase) {\r\n    if (typeof networkPassphrase !== 'string') {\r\n      throw new Error(\r\n        `Invalid passphrase provided to Transaction: expected a string but got a ${typeof networkPassphrase}`\r\n      );\r\n    }\r\n\r\n    this._networkPassphrase = networkPassphrase;\r\n    this._tx = tx;\r\n    this._signatures = signatures;\r\n    this._fee = fee;\r\n  }\r\n\r\n  /**\r\n   * @type {Array.<xdr.DecoratedSignature>}\r\n   * @readonly\r\n   */\r\n  get signatures() {\r\n    return this._signatures;\r\n  }\r\n\r\n  set signatures(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  get tx() {\r\n    return this._tx;\r\n  }\r\n\r\n  set tx(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get fee() {\r\n    return this._fee;\r\n  }\r\n\r\n  set fee(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get networkPassphrase() {\r\n    return this._networkPassphrase;\r\n  }\r\n\r\n  set networkPassphrase(networkPassphrase) {\r\n    this._networkPassphrase = networkPassphrase;\r\n  }\r\n\r\n  /**\r\n   * Signs the transaction with the given {@link Keypair}.\r\n   * @param {...Keypair} keypairs Keypairs of signers\r\n   * @returns {void}\r\n   */\r\n  sign(...keypairs) {\r\n    const txHash = this.hash();\r\n    keypairs.forEach((kp) => {\r\n      const sig = kp.signDecorated(txHash);\r\n      this.signatures.push(sig);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Signs a transaction with the given {@link Keypair}. Useful if someone sends\r\n   * you a transaction XDR for you to sign and return (see\r\n   * [addSignature](#addSignature) for more information).\r\n   *\r\n   * When you get a transaction XDR to sign....\r\n   * - Instantiate a `Transaction` object with the XDR\r\n   * - Use {@link Keypair} to generate a keypair object for your Stellar seed.\r\n   * - Run `getKeypairSignature` with that keypair\r\n   * - Send back the signature along with your publicKey (not your secret seed!)\r\n   *\r\n   * Example:\r\n   * ```javascript\r\n   * // `transactionXDR` is a string from the person generating the transaction\r\n   * const transaction = new Transaction(transactionXDR, networkPassphrase);\r\n   * const keypair = Keypair.fromSecret(myStellarSeed);\r\n   * return transaction.getKeypairSignature(keypair);\r\n   * ```\r\n   *\r\n   * @param {Keypair} keypair Keypair of signer\r\n   * @returns {string} Signature string\r\n   */\r\n  getKeypairSignature(keypair) {\r\n    return keypair.sign(this.hash()).toString('base64');\r\n  }\r\n\r\n  /**\r\n   * Add a signature to the transaction. Useful when a party wants to pre-sign\r\n   * a transaction but doesn't want to give access to their secret keys.\r\n   * This will also verify whether the signature is valid.\r\n   *\r\n   * Here's how you would use this feature to solicit multiple signatures.\r\n   * - Use `TransactionBuilder` to build a new transaction.\r\n   * - Make sure to set a long enough timeout on that transaction to give your\r\n   * signers enough time to sign!\r\n   * - Once you build the transaction, use `transaction.toXDR()` to get the\r\n   * base64-encoded XDR string.\r\n   * - _Warning!_ Once you've built this transaction, don't submit any other\r\n   * transactions onto your account! Doing so will invalidate this pre-compiled\r\n   * transaction!\r\n   * - Send this XDR string to your other parties. They can use the instructions\r\n   * for [getKeypairSignature](#getKeypairSignature) to sign the transaction.\r\n   * - They should send you back their `publicKey` and the `signature` string\r\n   * from [getKeypairSignature](#getKeypairSignature), both of which you pass to\r\n   * this function.\r\n   *\r\n   * @param {string} publicKey The public key of the signer\r\n   * @param {string} signature The base64 value of the signature XDR\r\n   * @returns {void}\r\n   */\r\n  addSignature(publicKey = '', signature = '') {\r\n    if (!signature || typeof signature !== 'string') {\r\n      throw new Error('Invalid signature');\r\n    }\r\n\r\n    if (!publicKey || typeof publicKey !== 'string') {\r\n      throw new Error('Invalid publicKey');\r\n    }\r\n\r\n    let keypair;\r\n    let hint;\r\n    const signatureBuffer = Buffer.from(signature, 'base64');\r\n\r\n    try {\r\n      keypair = Keypair.fromPublicKey(publicKey);\r\n      hint = keypair.signatureHint();\r\n    } catch (e) {\r\n      throw new Error('Invalid publicKey');\r\n    }\r\n\r\n    if (!keypair.verify(this.hash(), signatureBuffer)) {\r\n      throw new Error('Invalid signature');\r\n    }\r\n\r\n    this.signatures.push(\r\n      new xdr.DecoratedSignature({\r\n        hint,\r\n        signature: signatureBuffer\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a decorated signature directly to the transaction envelope.\r\n   *\r\n   * @param {xdr.DecoratedSignature} signature    raw signature to add\r\n   * @returns {void}\r\n   *\r\n   * @see Keypair.signDecorated\r\n   * @see Keypair.signPayloadDecorated\r\n   */\r\n  addDecoratedSignature(signature) {\r\n    this.signatures.push(signature);\r\n  }\r\n\r\n  /**\r\n   * Add `hashX` signer preimage as signature.\r\n   * @param {Buffer|String} preimage Preimage of hash used as signer\r\n   * @returns {void}\r\n   */\r\n  signHashX(preimage) {\r\n    if (typeof preimage === 'string') {\r\n      preimage = Buffer.from(preimage, 'hex');\r\n    }\r\n\r\n    if (preimage.length > 64) {\r\n      throw new Error('preimage cannnot be longer than 64 bytes');\r\n    }\r\n\r\n    const signature = preimage;\r\n    const hashX = hash(preimage);\r\n    const hint = hashX.slice(hashX.length - 4);\r\n    this.signatures.push(new xdr.DecoratedSignature({ hint, signature }));\r\n  }\r\n\r\n  /**\r\n   * Returns a hash for this transaction, suitable for signing.\r\n   * @returns {Buffer}\r\n   */\r\n  hash() {\r\n    return hash(this.signatureBase());\r\n  }\r\n\r\n  signatureBase() {\r\n    throw new Error('Implement in subclass');\r\n  }\r\n\r\n  toEnvelope() {\r\n    throw new Error('Implement in subclass');\r\n  }\r\n\r\n  /**\r\n   * Get the transaction envelope as a base64-encoded string\r\n   * @returns {string} XDR string\r\n   */\r\n  toXDR() {\r\n    return this.toEnvelope().toXDR().toString('base64');\r\n  }\r\n}\r\n","import { UnsignedHyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\n\r\nimport xdr from './xdr';\r\n\r\nimport { Account } from './account';\r\nimport { MuxedAccount } from './muxed_account';\r\nimport { decodeAddressToMuxedAccount } from './util/decode_encode_muxed_account';\r\n\r\nimport { Transaction } from './transaction';\r\nimport { FeeBumpTransaction } from './fee_bump_transaction';\r\nimport { SorobanDataBuilder } from './sorobandata_builder';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { SignerKey } from './signerkey';\r\nimport { Memo } from './memo';\r\n\r\n/**\r\n * Minimum base fee for transactions. If this fee is below the network\r\n * minimum, the transaction will fail. The more operations in the\r\n * transaction, the greater the required fee. Use {@link\r\n * Server#fetchBaseFee} to get an accurate value of minimum transaction\r\n * fee on the network.\r\n *\r\n * @constant\r\n * @see [Fees](https://developers.stellar.org/docs/glossary/fees/)\r\n */\r\nexport const BASE_FEE = '100'; // Stroops\r\n\r\n/**\r\n * @constant\r\n * @see {@link TransactionBuilder#setTimeout}\r\n * @see [Timeout](https://developers.stellar.org/api/resources/transactions/post/)\r\n */\r\nexport const TimeoutInfinite = 0;\r\n\r\n/**\r\n * <p>Transaction builder helps constructs a new `{@link Transaction}` using the\r\n * given {@link Account} as the transaction's \"source account\". The transaction\r\n * will use the current sequence number of the given account as its sequence\r\n * number and increment the given account's sequence number by one. The given\r\n * source account must include a private key for signing the transaction or an\r\n * error will be thrown.</p>\r\n *\r\n * <p>Operations can be added to the transaction via their corresponding builder\r\n * methods, and each returns the TransactionBuilder object so they can be\r\n * chained together. After adding the desired operations, call the `build()`\r\n * method on the `TransactionBuilder` to return a fully constructed `{@link\r\n * Transaction}` that can be signed. The returned transaction will contain the\r\n * sequence number of the source account and include the signature from the\r\n * source account.</p>\r\n *\r\n * <p><strong>Be careful about unsubmitted transactions!</strong> When you build\r\n * a transaction, `stellar-sdk` automatically increments the source account's\r\n * sequence number. If you end up not submitting this transaction and submitting\r\n * another one instead, it'll fail due to the sequence number being wrong. So if\r\n * you decide not to use a built transaction, make sure to update the source\r\n * account's sequence number with\r\n * [Server.loadAccount](https://stellar.github.io/js-stellar-sdk/Server.html#loadAccount)\r\n * before creating another transaction.</p>\r\n *\r\n * <p>The following code example creates a new transaction with {@link\r\n * Operation.createAccount} and {@link Operation.payment} operations. The\r\n * Transaction's source account first funds `destinationA`, then sends a payment\r\n * to `destinationB`. The built transaction is then signed by\r\n * `sourceKeypair`.</p>\r\n *\r\n * ```\r\n * var transaction = new TransactionBuilder(source, { fee, networkPassphrase: Networks.TESTNET })\r\n * .addOperation(Operation.createAccount({\r\n *     destination: destinationA,\r\n *     startingBalance: \"20\"\r\n * })) // <- funds and creates destinationA\r\n * .addOperation(Operation.payment({\r\n *     destination: destinationB,\r\n *     amount: \"100\",\r\n *     asset: Asset.native()\r\n * })) // <- sends 100 XLM to destinationB\r\n * .setTimeout(30)\r\n * .build();\r\n *\r\n * transaction.sign(sourceKeypair);\r\n * ```\r\n *\r\n * @constructor\r\n *\r\n * @param {Account} sourceAccount - source account for this transaction\r\n * @param {object}  opts          - Options object\r\n * @param {string}  opts.fee      - max fee you're willing to pay per\r\n *     operation in this transaction (**in stroops**)\r\n *\r\n * @param {object}              [opts.timebounds] - timebounds for the\r\n *     validity of this transaction\r\n * @param {number|string|Date}  [opts.timebounds.minTime] - 64-bit UNIX\r\n *     timestamp or Date object\r\n * @param {number|string|Date}  [opts.timebounds.maxTime] - 64-bit UNIX\r\n *     timestamp or Date object\r\n * @param {object}              [opts.ledgerbounds] - ledger bounds for the\r\n *     validity of this transaction\r\n * @param {number}              [opts.ledgerbounds.minLedger] - number of the minimum\r\n *     ledger sequence\r\n * @param {number}              [opts.ledgerbounds.maxLedger] - number of the maximum\r\n *     ledger sequence\r\n * @param {string}              [opts.minAccountSequence] - number for\r\n *     the minimum account sequence\r\n * @param {number}              [opts.minAccountSequenceAge] - number of\r\n *     seconds for the minimum account sequence age\r\n * @param {number}              [opts.minAccountSequenceLedgerGap] - number of\r\n *     ledgers for the minimum account sequence ledger gap\r\n * @param {string[]}            [opts.extraSigners] - list of the extra signers\r\n *     required for this transaction\r\n * @param {Memo}                [opts.memo] - memo for the transaction\r\n * @param {string}              [opts.networkPassphrase] passphrase of the\r\n *     target Stellar network (e.g. \"Public Global Stellar Network ; September\r\n *     2015\" for the pubnet)\r\n * @param {xdr.SorobanTransactionData | string}  [opts.sorobanData] - an\r\n *     optional instance of {@link xdr.SorobanTransactionData} to be set as the\r\n *     internal `Transaction.Ext.SorobanData` field (either the xdr object or a\r\n *     base64 string). In the case of Soroban transactions, this can be obtained\r\n *     from a prior simulation of the transaction with a contract invocation and\r\n *     provides necessary resource estimations. You can also use\r\n *     {@link SorobanDataBuilder} to construct complicated combinations of\r\n *     parameters without mucking with XDR directly. **Note:** For\r\n *     non-contract(non-Soroban) transactions, this has no effect.\r\n */\r\nexport class TransactionBuilder {\r\n  constructor(sourceAccount, opts = {}) {\r\n    if (!sourceAccount) {\r\n      throw new Error('must specify source account for the transaction');\r\n    }\r\n\r\n    if (opts.fee === undefined) {\r\n      throw new Error('must specify fee for the transaction (in stroops)');\r\n    }\r\n\r\n    this.source = sourceAccount;\r\n    this.operations = [];\r\n\r\n    this.baseFee = opts.fee;\r\n    this.timebounds = opts.timebounds ? { ...opts.timebounds } : null;\r\n    this.ledgerbounds = opts.ledgerbounds ? { ...opts.ledgerbounds } : null;\r\n    this.minAccountSequence = opts.minAccountSequence || null;\r\n    this.minAccountSequenceAge = opts.minAccountSequenceAge || null;\r\n    this.minAccountSequenceLedgerGap = opts.minAccountSequenceLedgerGap || null;\r\n    this.extraSigners = opts.extraSigners ? [...opts.extraSigners] : null;\r\n    this.memo = opts.memo || Memo.none();\r\n    this.networkPassphrase = opts.networkPassphrase || null;\r\n\r\n    this.sorobanData = opts.sorobanData\r\n      ? new SorobanDataBuilder(opts.sorobanData).build()\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Creates a builder instance using an existing {@link Transaction} as a\r\n   * template, ignoring any existing envelope signatures.\r\n   *\r\n   * Note that the sequence number WILL be cloned, so EITHER this transaction or\r\n   * the one it was cloned from will be valid. This is useful in situations\r\n   * where you are constructing a transaction in pieces and need to make\r\n   * adjustments as you go (for example, when filling out Soroban resource\r\n   * information).\r\n   *\r\n   * @param {Transaction} tx  a \"template\" transaction to clone exactly\r\n   * @param {object} [opts]   additional options to override the clone, e.g.\r\n   *    {fee: '1000'} will override the existing base fee derived from `tx` (see\r\n   *    the {@link TransactionBuilder} constructor for detailed options)\r\n   *\r\n   * @returns {TransactionBuilder} a \"prepared\" builder instance with the same\r\n   *    configuration and operations as the given transaction\r\n   *\r\n   * @warning This does not clone the transaction's\r\n   *    {@link xdr.SorobanTransactionData} (if applicable), use\r\n   *    {@link SorobanDataBuilder} and {@link TransactionBuilder.setSorobanData}\r\n   *    as needed, instead..\r\n   *\r\n   * @todo This cannot clone {@link FeeBumpTransaction}s, yet.\r\n   */\r\n  static cloneFrom(tx, opts = {}) {\r\n    if (!(tx instanceof Transaction)) {\r\n      throw new TypeError(`expected a 'Transaction', got: ${tx}`);\r\n    }\r\n\r\n    const sequenceNum = (BigInt(tx.sequence) - 1n).toString();\r\n\r\n    let source;\r\n    // rebuild the source account based on the strkey\r\n    if (StrKey.isValidMed25519PublicKey(tx.source)) {\r\n      source = MuxedAccount.fromAddress(tx.source, sequenceNum);\r\n    } else if (StrKey.isValidEd25519PublicKey(tx.source)) {\r\n      source = new Account(tx.source, sequenceNum);\r\n    } else {\r\n      throw new TypeError(`unsupported tx source account: ${tx.source}`);\r\n    }\r\n\r\n    // the initial fee passed to the builder gets scaled up based on the number\r\n    // of operations at the end, so we have to down-scale first\r\n    const unscaledFee = parseInt(tx.fee, 10) / tx.operations.length;\r\n\r\n    const builder = new TransactionBuilder(source, {\r\n      fee: (unscaledFee || BASE_FEE).toString(),\r\n      memo: tx.memo,\r\n      networkPassphrase: tx.networkPassphrase,\r\n      timebounds: tx.timeBounds,\r\n      ledgerbounds: tx.ledgerBounds,\r\n      minAccountSequence: tx.minAccountSequence,\r\n      minAccountSequenceAge: tx.minAccountSequenceAge,\r\n      minAccountSequenceLedgerGap: tx.minAccountSequenceLedgerGap,\r\n      extraSigners: tx.extraSigners,\r\n      ...opts\r\n    });\r\n\r\n    tx._tx.operations().forEach((op) => builder.addOperation(op));\r\n\r\n    return builder;\r\n  }\r\n\r\n  /**\r\n   * Adds an operation to the transaction.\r\n   *\r\n   * @param {xdr.Operation} operation   The xdr operation object, use {@link\r\n   *     Operation} static methods.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  addOperation(operation) {\r\n    this.operations.push(operation);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the operations from the builder (useful when cloning).\r\n   * @returns {TransactionBuilder} this builder instance\r\n   */\r\n  clearOperations() {\r\n    this.operations = [];\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a memo to the transaction.\r\n   * @param {Memo} memo {@link Memo} object\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  addMemo(memo) {\r\n    this.memo = memo;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets a timeout precondition on the transaction.\r\n   *\r\n   *  Because of the distributed nature of the Stellar network it is possible\r\n   *  that the status of your transaction will be determined after a long time\r\n   *  if the network is highly congested. If you want to be sure to receive the\r\n   *  status of the transaction within a given period you should set the {@link\r\n   *  TimeBounds} with `maxTime` on the transaction (this is what `setTimeout`\r\n   *  does internally; if there's `minTime` set but no `maxTime` it will be\r\n   *  added).\r\n   *\r\n   *  A call to `TransactionBuilder.setTimeout` is **required** if Transaction\r\n   *  does not have `max_time` set. If you don't want to set timeout, use\r\n   *  `{@link TimeoutInfinite}`. In general you should set `{@link\r\n   *  TimeoutInfinite}` only in smart contracts.\r\n   *\r\n   *  Please note that Horizon may still return <code>504 Gateway Timeout</code>\r\n   *  error, even for short timeouts. In such case you need to resubmit the same\r\n   *  transaction again without making any changes to receive a status. This\r\n   *  method is using the machine system time (UTC), make sure it is set\r\n   *  correctly.\r\n   *\r\n   * @param {number} timeoutSeconds   Number of seconds the transaction is good.\r\n   *     Can't be negative. If the value is {@link TimeoutInfinite}, the\r\n   *     transaction is good indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   *\r\n   * @see {@link TimeoutInfinite}\r\n   * @see https://developers.stellar.org/docs/tutorials/handling-errors/\r\n   */\r\n  setTimeout(timeoutSeconds) {\r\n    if (this.timebounds !== null && this.timebounds.maxTime > 0) {\r\n      throw new Error(\r\n        'TimeBounds.max_time has been already set - setting timeout would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (timeoutSeconds < 0) {\r\n      throw new Error('timeout cannot be negative');\r\n    }\r\n\r\n    if (timeoutSeconds > 0) {\r\n      const timeoutTimestamp = Math.floor(Date.now() / 1000) + timeoutSeconds;\r\n      if (this.timebounds === null) {\r\n        this.timebounds = { minTime: 0, maxTime: timeoutTimestamp };\r\n      } else {\r\n        this.timebounds = {\r\n          minTime: this.timebounds.minTime,\r\n          maxTime: timeoutTimestamp\r\n        };\r\n      }\r\n    } else {\r\n      this.timebounds = {\r\n        minTime: 0,\r\n        maxTime: 0\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will become valid at some point\r\n   * in the future, or be invalid after some time, you can set a timebounds\r\n   * precondition. Internally this will set the `minTime`, and `maxTime`\r\n   * preconditions. Conflicts with `setTimeout`, so use one or the other.\r\n   *\r\n   * @param {Date|number} minEpochOrDate  Either a JS Date object, or a number\r\n   *     of UNIX epoch seconds. The transaction is valid after this timestamp.\r\n   *     Can't be negative. If the value is `0`, the transaction is valid\r\n   *     immediately.\r\n   * @param {Date|number} maxEpochOrDate  Either a JS Date object, or a number\r\n   *     of UNIX epoch seconds. The transaction is valid until this timestamp.\r\n   *     Can't be negative. If the value is `0`, the transaction is valid\r\n   *     indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setTimebounds(minEpochOrDate, maxEpochOrDate) {\r\n    // Force it to a date type\r\n    if (typeof minEpochOrDate === 'number') {\r\n      minEpochOrDate = new Date(minEpochOrDate * 1000);\r\n    }\r\n    if (typeof maxEpochOrDate === 'number') {\r\n      maxEpochOrDate = new Date(maxEpochOrDate * 1000);\r\n    }\r\n\r\n    if (this.timebounds !== null) {\r\n      throw new Error(\r\n        'TimeBounds has been already set - setting timebounds would overwrite it.'\r\n      );\r\n    }\r\n\r\n    // Convert that date to the epoch seconds\r\n    const minTime = Math.floor(minEpochOrDate.valueOf() / 1000);\r\n    const maxTime = Math.floor(maxEpochOrDate.valueOf() / 1000);\r\n    if (minTime < 0) {\r\n      throw new Error('min_time cannot be negative');\r\n    }\r\n    if (maxTime < 0) {\r\n      throw new Error('max_time cannot be negative');\r\n    }\r\n    if (maxTime > 0 && minTime > maxTime) {\r\n      throw new Error('min_time cannot be greater than max_time');\r\n    }\r\n\r\n    this.timebounds = { minTime, maxTime };\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will only be valid within some\r\n   * range of ledgers, you can set a ledgerbounds precondition.\r\n   * Internally this will set the `minLedger` and `maxLedger` preconditions.\r\n   *\r\n   * @param {number} minLedger  The minimum ledger this transaction is valid at\r\n   *     or after. Cannot be negative. If the value is `0` (the default), the\r\n   *     transaction is valid immediately.\r\n   *\r\n   * @param {number} maxLedger  The maximum ledger this transaction is valid\r\n   *     before. Cannot be negative. If the value is `0`, the transaction is\r\n   *     valid indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setLedgerbounds(minLedger, maxLedger) {\r\n    if (this.ledgerbounds !== null) {\r\n      throw new Error(\r\n        'LedgerBounds has been already set - setting ledgerbounds would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (minLedger < 0) {\r\n      throw new Error('min_ledger cannot be negative');\r\n    }\r\n    if (maxLedger < 0) {\r\n      throw new Error('max_ledger cannot be negative');\r\n    }\r\n    if (maxLedger > 0 && minLedger > maxLedger) {\r\n      throw new Error('min_ledger cannot be greater than max_ledger');\r\n    }\r\n\r\n    this.ledgerbounds = { minLedger, maxLedger };\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will be valid only while the\r\n   * account sequence number is\r\n   *\r\n   *     minAccountSequence <= sourceAccountSequence < tx.seqNum\r\n   *\r\n   * Note that after execution the account's sequence number is always raised to\r\n   * `tx.seqNum`. Internally this will set the `minAccountSequence`\r\n   * precondition.\r\n   *\r\n   * @param {string} minAccountSequence   The minimum source account sequence\r\n   *     number this transaction is valid for. If the value is `0` (the\r\n   *     default), the transaction is valid when `sourceAccount's sequence\r\n   *     number == tx.seqNum- 1`.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequence(minAccountSequence) {\r\n    if (this.minAccountSequence !== null) {\r\n      throw new Error(\r\n        'min_account_sequence has been already set - setting min_account_sequence would overwrite it.'\r\n      );\r\n    }\r\n\r\n    this.minAccountSequence = minAccountSequence;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, the current ledger time must be at least\r\n   * `minAccountSequenceAge` greater than sourceAccount's `sequenceTime`.\r\n   * Internally this will set the `minAccountSequenceAge` precondition.\r\n   *\r\n   * @param {number} durationInSeconds  The minimum amount of time between\r\n   *     source account sequence time and the ledger time when this transaction\r\n   *     will become valid. If the value is `0`, the transaction is unrestricted\r\n   *     by the account sequence age. Cannot be negative.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequenceAge(durationInSeconds) {\r\n    if (typeof durationInSeconds !== 'number') {\r\n      throw new Error('min_account_sequence_age must be a number');\r\n    }\r\n    if (this.minAccountSequenceAge !== null) {\r\n      throw new Error(\r\n        'min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (durationInSeconds < 0) {\r\n      throw new Error('min_account_sequence_age cannot be negative');\r\n    }\r\n\r\n    this.minAccountSequenceAge = durationInSeconds;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, the current ledger number must be at least\r\n   * `minAccountSequenceLedgerGap` greater than sourceAccount's ledger sequence.\r\n   * Internally this will set the `minAccountSequenceLedgerGap` precondition.\r\n   *\r\n   * @param {number} gap  The minimum number of ledgers between source account\r\n   *     sequence and the ledger number when this transaction will become valid.\r\n   *     If the value is `0`, the transaction is unrestricted by the account\r\n   *     sequence ledger. Cannot be negative.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequenceLedgerGap(gap) {\r\n    if (this.minAccountSequenceLedgerGap !== null) {\r\n      throw new Error(\r\n        'min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (gap < 0) {\r\n      throw new Error('min_account_sequence_ledger_gap cannot be negative');\r\n    }\r\n\r\n    this.minAccountSequenceLedgerGap = gap;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, there must be a signature corresponding to\r\n   * every Signer in this array, even if the signature is not otherwise required\r\n   * by the sourceAccount or operations. Internally this will set the\r\n   * `extraSigners` precondition.\r\n   *\r\n   * @param {string[]} extraSigners   required extra signers (as {@link StrKey}s)\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setExtraSigners(extraSigners) {\r\n    if (!Array.isArray(extraSigners)) {\r\n      throw new Error('extra_signers must be an array of strings.');\r\n    }\r\n\r\n    if (this.extraSigners !== null) {\r\n      throw new Error(\r\n        'extra_signers has been already set - setting extra_signers would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (extraSigners.length > 2) {\r\n      throw new Error('extra_signers cannot be longer than 2 elements.');\r\n    }\r\n\r\n    this.extraSigners = [...extraSigners];\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set network nassphrase for the Transaction that will be built.\r\n   *\r\n   * @param {string} networkPassphrase    passphrase of the target Stellar\r\n   *     network (e.g. \"Public Global Stellar Network ; September 2015\").\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setNetworkPassphrase(networkPassphrase) {\r\n    this.networkPassphrase = networkPassphrase;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction's internal Soroban transaction data (resources,\r\n   * footprint, etc.).\r\n   *\r\n   * For non-contract(non-Soroban) transactions, this setting has no effect. In\r\n   * the case of Soroban transactions, this is either an instance of\r\n   * {@link xdr.SorobanTransactionData} or a base64-encoded string of said\r\n   * structure. This is usually obtained from the simulation response based on a\r\n   * transaction with a Soroban operation (e.g.\r\n   * {@link Operation.invokeHostFunction}, providing necessary resource\r\n   * and storage footprint estimations for contract invocation.\r\n   *\r\n   * @param {xdr.SorobanTransactionData | string} sorobanData    the\r\n   *    {@link xdr.SorobanTransactionData} as a raw xdr object or a base64\r\n   *    string to be decoded\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   * @see {SorobanDataBuilder}\r\n   */\r\n  setSorobanData(sorobanData) {\r\n    this.sorobanData = new SorobanDataBuilder(sorobanData).build();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * This will build the transaction.\r\n   * It will also increment the source account's sequence number by 1.\r\n   * @returns {Transaction} This method will return the built {@link Transaction}.\r\n   */\r\n  build() {\r\n    const sequenceNumber = new BigNumber(this.source.sequenceNumber()).plus(1);\r\n    const fee = new BigNumber(this.baseFee)\r\n      .times(this.operations.length)\r\n      .toNumber();\r\n    const attrs = {\r\n      fee,\r\n      seqNum: xdr.SequenceNumber.fromString(sequenceNumber.toString()),\r\n      memo: this.memo ? this.memo.toXDRObject() : null\r\n    };\r\n\r\n    if (\r\n      this.timebounds === null ||\r\n      typeof this.timebounds.minTime === 'undefined' ||\r\n      typeof this.timebounds.maxTime === 'undefined'\r\n    ) {\r\n      throw new Error(\r\n        'TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).'\r\n      );\r\n    }\r\n\r\n    if (isValidDate(this.timebounds.minTime)) {\r\n      this.timebounds.minTime = this.timebounds.minTime.getTime() / 1000;\r\n    }\r\n    if (isValidDate(this.timebounds.maxTime)) {\r\n      this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1000;\r\n    }\r\n\r\n    this.timebounds.minTime = UnsignedHyper.fromString(\r\n      this.timebounds.minTime.toString()\r\n    );\r\n    this.timebounds.maxTime = UnsignedHyper.fromString(\r\n      this.timebounds.maxTime.toString()\r\n    );\r\n\r\n    const timeBounds = new xdr.TimeBounds(this.timebounds);\r\n\r\n    if (this.hasV2Preconditions()) {\r\n      let ledgerBounds = null;\r\n      if (this.ledgerbounds !== null) {\r\n        ledgerBounds = new xdr.LedgerBounds(this.ledgerbounds);\r\n      }\r\n\r\n      let minSeqNum = this.minAccountSequence || '0';\r\n      minSeqNum = xdr.SequenceNumber.fromString(minSeqNum);\r\n\r\n      const minSeqAge = UnsignedHyper.fromString(\r\n        this.minAccountSequenceAge !== null\r\n          ? this.minAccountSequenceAge.toString()\r\n          : '0'\r\n      );\r\n\r\n      const minSeqLedgerGap = this.minAccountSequenceLedgerGap || 0;\r\n\r\n      const extraSigners =\r\n        this.extraSigners !== null\r\n          ? this.extraSigners.map(SignerKey.decodeAddress)\r\n          : [];\r\n\r\n      attrs.cond = xdr.Preconditions.precondV2(\r\n        new xdr.PreconditionsV2({\r\n          timeBounds,\r\n          ledgerBounds,\r\n          minSeqNum,\r\n          minSeqAge,\r\n          minSeqLedgerGap,\r\n          extraSigners\r\n        })\r\n      );\r\n    } else {\r\n      attrs.cond = xdr.Preconditions.precondTime(timeBounds);\r\n    }\r\n\r\n    attrs.sourceAccount = decodeAddressToMuxedAccount(this.source.accountId());\r\n\r\n    // TODO - remove this workaround for TransactionExt ts constructor\r\n    //       and use the typescript generated static factory method once fixed\r\n    //       https://github.com/stellar/dts-xdr/issues/5\r\n    if (this.sorobanData) {\r\n      // @ts-ignore\r\n      attrs.ext = new xdr.TransactionExt(1, this.sorobanData);\r\n    } else {\r\n      // @ts-ignore\r\n      attrs.ext = new xdr.TransactionExt(0, xdr.Void);\r\n    }\r\n\r\n    const xtx = new xdr.Transaction(attrs);\r\n    xtx.operations(this.operations);\r\n    const txEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n      new xdr.TransactionV1Envelope({ tx: xtx })\r\n    );\r\n\r\n    const tx = new Transaction(txEnvelope, this.networkPassphrase);\r\n\r\n    this.source.incrementSequenceNumber();\r\n\r\n    return tx;\r\n  }\r\n\r\n  hasV2Preconditions() {\r\n    return (\r\n      this.ledgerbounds !== null ||\r\n      this.minAccountSequence !== null ||\r\n      this.minAccountSequenceAge !== null ||\r\n      this.minAccountSequenceLedgerGap !== null ||\r\n      (this.extraSigners !== null && this.extraSigners.length > 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Builds a {@link FeeBumpTransaction}, enabling you to resubmit an existing\r\n   * transaction with a higher fee.\r\n   *\r\n   * @param {Keypair|string}  feeSource - account paying for the transaction,\r\n   *     in the form of either a Keypair (only the public key is used) or\r\n   *     an account ID (in G... or M... form, but refer to `withMuxing`)\r\n   * @param {string}          baseFee   - max fee willing to pay per operation\r\n   *     in inner transaction (**in stroops**)\r\n   * @param {Transaction}     innerTx   - {@link Transaction} to be bumped by\r\n   *     the fee bump transaction\r\n   * @param {string}          networkPassphrase - passphrase of the target\r\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September 2015\",\r\n   *     see {@link Networks})\r\n   *\r\n   * @todo Alongside the next major version bump, this type signature can be\r\n   *       changed to be less awkward: accept a MuxedAccount as the `feeSource`\r\n   *       rather than a keypair or string.\r\n   *\r\n   * @note Your fee-bump amount should be >= 10x the original fee.\r\n   * @see  https://developers.stellar.org/docs/glossary/fee-bumps/#replace-by-fee\r\n   *\r\n   * @returns {FeeBumpTransaction}\r\n   */\r\n  static buildFeeBumpTransaction(\r\n    feeSource,\r\n    baseFee,\r\n    innerTx,\r\n    networkPassphrase\r\n  ) {\r\n    const innerOps = innerTx.operations.length;\r\n    const innerBaseFeeRate = new BigNumber(innerTx.fee).div(innerOps);\r\n    const base = new BigNumber(baseFee);\r\n\r\n    // The fee rate for fee bump is at least the fee rate of the inner transaction\r\n    if (base.lt(innerBaseFeeRate)) {\r\n      throw new Error(\r\n        `Invalid baseFee, it should be at least ${innerBaseFeeRate} stroops.`\r\n      );\r\n    }\r\n\r\n    const minBaseFee = new BigNumber(BASE_FEE);\r\n\r\n    // The fee rate is at least the minimum fee\r\n    if (base.lt(minBaseFee)) {\r\n      throw new Error(\r\n        `Invalid baseFee, it should be at least ${minBaseFee} stroops.`\r\n      );\r\n    }\r\n\r\n    let innerTxEnvelope = innerTx.toEnvelope();\r\n    if (innerTxEnvelope.switch() === xdr.EnvelopeType.envelopeTypeTxV0()) {\r\n      const v0Tx = innerTxEnvelope.v0().tx();\r\n      const v1Tx = new xdr.Transaction({\r\n        sourceAccount: new xdr.MuxedAccount.keyTypeEd25519(\r\n          v0Tx.sourceAccountEd25519()\r\n        ),\r\n        fee: v0Tx.fee(),\r\n        seqNum: v0Tx.seqNum(),\r\n        cond: xdr.Preconditions.precondTime(v0Tx.timeBounds()),\r\n        memo: v0Tx.memo(),\r\n        operations: v0Tx.operations(),\r\n        ext: new xdr.TransactionExt(0)\r\n      });\r\n      innerTxEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n        new xdr.TransactionV1Envelope({\r\n          tx: v1Tx,\r\n          signatures: innerTxEnvelope.v0().signatures()\r\n        })\r\n      );\r\n    }\r\n\r\n    let feeSourceAccount;\r\n    if (typeof feeSource === 'string') {\r\n      feeSourceAccount = decodeAddressToMuxedAccount(feeSource);\r\n    } else {\r\n      feeSourceAccount = feeSource.xdrMuxedAccount();\r\n    }\r\n\r\n    const tx = new xdr.FeeBumpTransaction({\r\n      feeSource: feeSourceAccount,\r\n      fee: xdr.Int64.fromString(base.times(innerOps + 1).toString()),\r\n      innerTx: xdr.FeeBumpTransactionInnerTx.envelopeTypeTx(\r\n        innerTxEnvelope.v1()\r\n      ),\r\n      ext: new xdr.FeeBumpTransactionExt(0)\r\n    });\r\n    const feeBumpTxEnvelope = new xdr.FeeBumpTransactionEnvelope({\r\n      tx,\r\n      signatures: []\r\n    });\r\n    const envelope = new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(\r\n      feeBumpTxEnvelope\r\n    );\r\n\r\n    return new FeeBumpTransaction(envelope, networkPassphrase);\r\n  }\r\n\r\n  /**\r\n   * Build a {@link Transaction} or {@link FeeBumpTransaction} from an\r\n   * xdr.TransactionEnvelope.\r\n   *\r\n   * @param {string|xdr.TransactionEnvelope} envelope - The transaction envelope\r\n   *     object or base64 encoded string.\r\n   * @param {string} networkPassphrase - The network passphrase of the target\r\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September\r\n   *     2015\"), see {@link Networks}.\r\n   *\r\n   * @returns {Transaction|FeeBumpTransaction}\r\n   */\r\n  static fromXDR(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      envelope = xdr.TransactionEnvelope.fromXDR(envelope, 'base64');\r\n    }\r\n\r\n    if (envelope.switch() === xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\r\n      return new FeeBumpTransaction(envelope, networkPassphrase);\r\n    }\r\n\r\n    return new Transaction(envelope, networkPassphrase);\r\n  }\r\n}\r\n\r\n/**\r\n * Checks whether a provided object is a valid Date.\r\n * @argument {Date} d date object\r\n * @returns {boolean}\r\n */\r\nexport function isValidDate(d) {\r\n  // isnan is okay here because it correctly checks for invalid date objects\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return d instanceof Date && !isNaN(d);\r\n}\r\n","import OriginBigNumber from 'bignumber.js';\r\n\r\nconst BigNumber = OriginBigNumber.clone();\r\n\r\nBigNumber.DEBUG = true; // gives us exceptions on bad constructor values\r\n\r\nexport default BigNumber;\r\n","export function verifyChecksum(expected, actual) {\r\n  if (expected.length !== actual.length) {\r\n    return false;\r\n  }\r\n\r\n  if (expected.length === 0) {\r\n    return true;\r\n  }\r\n\r\n  for (let i = 0; i < expected.length; i += 1) {\r\n    if (expected[i] !== actual[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import BigNumber from './bignumber';\r\n\r\n// eslint-disable-next-line no-bitwise\r\nconst MAX_INT = ((1 << 31) >>> 0) - 1;\r\n\r\n/**\r\n * Calculates and returns the best rational approximation of the given real number.\r\n * @private\r\n * @param {string|number|BigNumber} rawNumber Real number\r\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\r\n * @returns {array} first element is n (numerator), second element is d (denominator)\r\n */\r\nexport function best_r(rawNumber) {\r\n  let number = new BigNumber(rawNumber);\r\n  let a;\r\n  let f;\r\n  const fractions = [\r\n    [new BigNumber(0), new BigNumber(1)],\r\n    [new BigNumber(1), new BigNumber(0)]\r\n  ];\r\n  let i = 2;\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    if (number.gt(MAX_INT)) {\r\n      break;\r\n    }\r\n    a = number.integerValue(BigNumber.ROUND_FLOOR);\r\n    f = number.minus(a);\r\n    const h = a.times(fractions[i - 1][0]).plus(fractions[i - 2][0]);\r\n    const k = a.times(fractions[i - 1][1]).plus(fractions[i - 2][1]);\r\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\r\n      break;\r\n    }\r\n    fractions.push([h, k]);\r\n    if (f.eq(0)) {\r\n      break;\r\n    }\r\n    number = new BigNumber(1).div(f);\r\n    i += 1;\r\n  }\r\n  const [n, d] = fractions[fractions.length - 1];\r\n\r\n  if (n.isZero() || d.isZero()) {\r\n    throw new Error(\"Couldn't find approximation\");\r\n  }\r\n\r\n  return [n.toNumber(), d.toNumber()];\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * Converts a Stellar address (in G... or M... form) to an `xdr.MuxedAccount`\r\n * structure, using the ed25519 representation when possible.\r\n *\r\n * This supports full muxed accounts, where an `M...` address will resolve to\r\n * both its underlying `G...` address and an integer ID.\r\n *\r\n * @param   {string}  address   G... or M... address to encode into XDR\r\n * @returns {xdr.MuxedAccount}  a muxed account object for this address string\r\n */\r\nexport function decodeAddressToMuxedAccount(address) {\r\n  if (StrKey.isValidMed25519PublicKey(address)) {\r\n    return _decodeAddressFullyToMuxedAccount(address);\r\n  }\r\n\r\n  return xdr.MuxedAccount.keyTypeEd25519(\r\n    StrKey.decodeEd25519PublicKey(address)\r\n  );\r\n}\r\n\r\n/**\r\n * Converts an xdr.MuxedAccount to its StrKey representation.\r\n *\r\n * This returns its \"M...\" string representation if there is a muxing ID within\r\n * the object and returns the \"G...\" representation otherwise.\r\n *\r\n * @param   {xdr.MuxedAccount} muxedAccount   Raw account to stringify\r\n * @returns {string} Stringified G... (corresponding to the underlying pubkey)\r\n *     or M... address (corresponding to both the key and the muxed ID)\r\n *\r\n * @see https://stellar.org/protocol/sep-23\r\n */\r\nexport function encodeMuxedAccountToAddress(muxedAccount) {\r\n  if (\r\n    muxedAccount.switch().value ===\r\n    xdr.CryptoKeyType.keyTypeMuxedEd25519().value\r\n  ) {\r\n    return _encodeMuxedAccountFullyToAddress(muxedAccount);\r\n  }\r\n\r\n  return StrKey.encodeEd25519PublicKey(muxedAccount.ed25519());\r\n}\r\n\r\n/**\r\n * Transform a Stellar address (G...) and an ID into its XDR representation.\r\n *\r\n * @param  {string} address   - a Stellar G... address\r\n * @param  {string} id        - a Uint64 ID represented as a string\r\n *\r\n * @return {xdr.MuxedAccount} - XDR representation of the above muxed account\r\n */\r\nexport function encodeMuxedAccount(address, id) {\r\n  if (!StrKey.isValidEd25519PublicKey(address)) {\r\n    throw new Error('address should be a Stellar account ID (G...)');\r\n  }\r\n  if (typeof id !== 'string') {\r\n    throw new Error('id should be a string representing a number (uint64)');\r\n  }\r\n\r\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n    new xdr.MuxedAccountMed25519({\r\n      id: xdr.Uint64.fromString(id),\r\n      ed25519: StrKey.decodeEd25519PublicKey(address)\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Extracts the underlying base (G...) address from an M-address.\r\n * @param  {string} address   an account address (either M... or G...)\r\n * @return {string} a Stellar public key address (G...)\r\n */\r\nexport function extractBaseAddress(address) {\r\n  if (StrKey.isValidEd25519PublicKey(address)) {\r\n    return address;\r\n  }\r\n\r\n  if (!StrKey.isValidMed25519PublicKey(address)) {\r\n    throw new TypeError(`expected muxed account (M...), got ${address}`);\r\n  }\r\n\r\n  const muxedAccount = decodeAddressToMuxedAccount(address);\r\n  return StrKey.encodeEd25519PublicKey(muxedAccount.med25519().ed25519());\r\n}\r\n\r\n// Decodes an \"M...\" account ID into its MuxedAccount object representation.\r\nfunction _decodeAddressFullyToMuxedAccount(address) {\r\n  const rawBytes = StrKey.decodeMed25519PublicKey(address);\r\n\r\n  // Decoding M... addresses cannot be done through a simple\r\n  // MuxedAccountMed25519.fromXDR() call, because the definition is:\r\n  //\r\n  //    constructor(attributes: { id: Uint64; ed25519: Buffer });\r\n  //\r\n  // Note the ID is the first attribute. However, the ID comes *last* in the\r\n  // stringified (base32-encoded) address itself (it's the last 8-byte suffix).\r\n  // The `fromXDR()` method interprets bytes in order, so we need to parse out\r\n  // the raw binary into its requisite parts, i.e. use the MuxedAccountMed25519\r\n  // constructor directly.\r\n  //\r\n  // Refer to https://github.com/stellar/go/blob/master/xdr/muxed_account.go#L26\r\n  // for the Golang implementation of the M... parsing.\r\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n    new xdr.MuxedAccountMed25519({\r\n      id: xdr.Uint64.fromXDR(rawBytes.subarray(-8)),\r\n      ed25519: rawBytes.subarray(0, -8)\r\n    })\r\n  );\r\n}\r\n\r\n// Converts an xdr.MuxedAccount into its *true* \"M...\" string representation.\r\nfunction _encodeMuxedAccountFullyToAddress(muxedAccount) {\r\n  if (muxedAccount.switch() === xdr.CryptoKeyType.keyTypeEd25519()) {\r\n    return encodeMuxedAccountToAddress(muxedAccount);\r\n  }\r\n\r\n  const muxed = muxedAccount.med25519();\r\n  return StrKey.encodeMed25519PublicKey(\r\n    Buffer.concat([muxed.ed25519(), muxed.id().toXDR('raw')])\r\n  );\r\n}\r\n","export const trimEnd = (input, char) => {\r\n  const isNumber = typeof input === 'number';\r\n  let str = String(input);\r\n\r\n  while (str.endsWith(char)) {\r\n    str = str.slice(0, -1);\r\n  }\r\n\r\n  return isNumber ? Number(str) : str;\r\n};\r\n","import xdr from './generated/curr_generated';\r\n\r\nexport default xdr;\r\n","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","/* (ignored) */","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n",""],"names":["cov_118vcxxaru","actualCoverage","Buffer","s","alloc","subarray","b","prototype","start","end","f","result","Uint8Array","call","Object","setPrototypeOf","cov_18pn2le279","_typeof","o","Symbol","iterator","constructor","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","String","Number","BigNumber","StrKey","Account","accountId","sequence","isValidMed25519PublicKey","Error","isValidEd25519PublicKey","_accountId","value","sequenceNumber","toString","incrementSequenceNumber","plus","cov_dbktpdr9u","xdr","Address","address","_type","_key","decodeEd25519PublicKey","isValidContract","decodeContract","encodeEd25519PublicKey","encodeContract","toScVal","ScVal","scvAddress","toScAddress","ScAddress","scAddressTypeAccount","PublicKey","publicKeyTypeEd25519","scAddressTypeContract","toBuffer","fromString","account","buffer","contract","fromScVal","scVal","fromScAddress","scAddress","ScAddressType","ed25519","contractId","cov_1uiuefwhy4","trimEnd","Keypair","hash","Asset","code","issuer","test","toLowerCase","toXDRObject","_toXDRObject","toChangeTrustXDRObject","ChangeTrustAsset","toTrustLineXDRObject","TrustLineAsset","networkPassphrase","networkId","from","preimage","HashIdPreimage","envelopeTypeContractId","HashIdPreimageContractId","contractIdPreimage","ContractIdPreimage","contractIdPreimageFromAsset","toXDR","xdrAsset","arguments","undefined","isNative","assetTypeNative","xdrType","xdrTypeString","AlphaNum4","AlphaNum12","padLength","paddedCode","padEnd","assetType","assetCode","fromPublicKey","xdrAccountId","getCode","getIssuer","getAssetType","getRawAssetType","AssetType","assetTypeCreditAlphanum4","assetTypeCreditAlphanum12","equals","asset","concat","native","fromOperation","assetXdr","anum","alphaNum4","alphaNum12","name","compare","assetA","assetB","xdrAtype","xdrBtype","asciiCompare","cov_1c5kk0th4g","_regeneratorRuntime","hasOwnProperty","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","apply","_next","_throw","Networks","nativeToScVal","authorizeEntry","_x","_x2","_x3","_authorizeEntry","_callee","entry","signer","validUntilLedgerSeq","clone","addrAuth","payload","signature","publicKey","sigScVal","_args","_callee$","_context","FUTURENET","credentials","SorobanCredentialsType","sorobanCredentialsAddress","SorobanAuthorizationEntry","fromXDR","signatureExpirationLedger","envelopeTypeSorobanAuthorization","HashIdPreimageSorobanAuthorization","nonce","invocation","rootInvocation","t0","t1","sign","verify","public_key","scvVec","authorizeInvocation","kp","random","rawPublicKey","Int64","bytesToInt64","pk","SorobanCredentials","SorobanAddressCredentials","bytes","reduce","accum","cov_1o8vdir191","Claimant","destination","predicate","_destination","_predicate","ClaimPredicate","claimPredicateUnconditional","claimant","ClaimantV0","claimantTypeV0","get","set","predicateUnconditional","predicateAnd","left","right","claimPredicateAnd","predicateOr","claimPredicateOr","predicateNot","claimPredicateNot","predicateBeforeAbsoluteTime","absBefore","claimPredicateBeforeAbsoluteTime","predicateBeforeRelativeTime","seconds","claimPredicateBeforeRelativeTime","claimantXdr","ClaimantType","v0","cov_jjeqefjz5","Operation","Contract","_id","_","_len","params","Array","invokeContractFunction","args","getFootprint","LedgerKey","contractData","LedgerKeyContractData","scvLedgerKeyContractInstance","durability","ContractDataDurability","persistent","cov_lvy0u2wm1","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","scValToNative","humanizeEvents","events","map","DiagnosticEvent","extractEvent","event","topics","body","data","cov_18cpdxq0jo","_callSuper","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","Boolean","valueOf","bind","_inherits","_setPrototypeOf","Transaction","TransactionBase","encodeMuxedAccountToAddress","FeeBumpTransaction","_TransactionBase","envelope","_this","TransactionEnvelope","envelopeType","EnvelopeType","envelopeTypeTxFeeBump","txEnvelope","tx","fee","signatures","innerTxEnvelope","envelopeTypeTx","innerTx","v1","_feeSource","feeSource","_innerTransaction","operations","signatureBase","taggedTransaction","TransactionSignaturePayloadTaggedTransaction","txSignature","TransactionSignaturePayload","Hash","toEnvelope","FeeBumpTransactionEnvelope","cov_bjfnf6oex","XDR","types","config","SCSYMBOL_LIMIT","SC_SPEC_DOC_LIMIT","typedef","varOpaque","struct","lookup","scpStPrepare","scpStConfirm","scpStExternalize","scpStNominate","varArray","option","union","switchOn","switchName","switches","arms","prepare","confirm","externalize","nominate","opaque","string","assetTypePoolShare","assetCode4","assetCode12","thresholdMasterWeight","thresholdLow","thresholdMed","thresholdHigh","trustline","offer","claimableBalance","liquidityPool","contractCode","configSetting","ttl","authRequiredFlag","authRevocableFlag","authImmutableFlag","authClawbackEnabledFlag","v3","v2","authorizedFlag","authorizedToMaintainLiabilitiesFlag","trustlineClawbackEnabledFlag","liquidityPoolConstantProduct","liquidityPoolId","passiveFlag","andPredicates","orPredicates","notPredicate","relBefore","claimableBalanceIdTypeV0","claimableBalanceClawbackEnabledFlag","constantProduct","temporary","trustLine","envelopeTypeTxV0","envelopeTypeScp","envelopeTypeAuth","envelopeTypeScpvalue","envelopeTypeOpId","envelopeTypePoolRevokeOpId","stellarValueBasic","stellarValueSigned","lcValueSignature","disableLiquidityPoolTradingFlag","disableLiquidityPoolDepositFlag","disableLiquidityPoolWithdrawalFlag","array","ledgerUpgradeVersion","ledgerUpgradeBaseFee","ledgerUpgradeMaxTxSetSize","ledgerUpgradeBaseReserve","ledgerUpgradeFlags","ledgerUpgradeConfig","ledgerUpgradeMaxSorobanTxSetSize","newLedgerVersion","newBaseFee","newMaxTxSetSize","newBaseReserve","newFlags","newConfig","newMaxSorobanTxSetSize","metaentry","liveentry","deadentry","initentry","liveEntry","deadEntry","metaEntry","txsetCompTxsMaybeDiscountedFee","txsMaybeDiscountedFee","v0Components","v1TxSet","generalizedTxSet","ledgerEntryCreated","ledgerEntryUpdated","ledgerEntryRemoved","ledgerEntryState","created","updated","removed","state","system","diagnostic","bool","errMisc","errData","errConf","errAuth","errLoad","iPv4","iPv6","ipv4","ipv6","errorMsg","auth","dontHave","getPeers","peers","getTxSet","txSet","transaction","getScpQuorumset","scpQuorumset","scpMessage","getScpState","hello","surveyRequest","surveyResponse","sendMore","sendMoreExtended","floodAdvert","floodDemand","surveyTopology","surveyTopologyResponseV0","surveyTopologyResponseV1","topologyResponseBodyV0","topologyResponseBodyV1","error","txSetHash","signedSurveyRequestMessage","signedSurveyResponseMessage","qSetHash","qSet","getScpLedgerSeq","sendMoreMessage","sendMoreExtendedMessage","med25519","createAccount","payment","pathPaymentStrictReceive","manageSellOffer","createPassiveSellOffer","setOptions","changeTrust","allowTrust","accountMerge","inflation","manageData","bumpSequence","manageBuyOffer","pathPaymentStrictSend","createClaimableBalance","claimClaimableBalance","beginSponsoringFutureReserves","endSponsoringFutureReserves","revokeSponsorship","clawback","clawbackClaimableBalance","setTrustLineFlags","liquidityPoolDeposit","liquidityPoolWithdraw","invokeHostFunction","extendFootprintTtl","restoreFootprint","revokeSponsorshipLedgerEntry","revokeSponsorshipSigner","ledgerKey","hostFunctionTypeInvokeContract","hostFunctionTypeCreateContract","hostFunctionTypeUploadContractWasm","contractIdPreimageFromAddress","fromAddress","fromAsset","invokeContract","createContract","wasm","sorobanAuthorizedFunctionTypeContractFn","sorobanAuthorizedFunctionTypeCreateContractHostFn","contractFn","createContractHostFn","sorobanCredentialsSourceAccount","createAccountOp","paymentOp","pathPaymentStrictReceiveOp","manageSellOfferOp","createPassiveSellOfferOp","setOptionsOp","changeTrustOp","allowTrustOp","manageDataOp","bumpSequenceOp","manageBuyOfferOp","pathPaymentStrictSendOp","createClaimableBalanceOp","claimClaimableBalanceOp","beginSponsoringFutureReservesOp","revokeSponsorshipOp","clawbackOp","clawbackClaimableBalanceOp","setTrustLineFlagsOp","liquidityPoolDepositOp","liquidityPoolWithdrawOp","invokeHostFunctionOp","extendFootprintTtlOp","restoreFootprintOp","operationId","revokeId","sorobanAuthorization","memoNone","memoText","memoId","memoHash","memoReturn","text","id","retHash","precondNone","precondTime","precondV2","timeBounds","sorobanData","feeBump","claimAtomTypeV0","claimAtomTypeOrderBook","claimAtomTypeLiquidityPool","orderBook","createAccountSuccess","createAccountMalformed","createAccountUnderfunded","createAccountLowReserve","createAccountAlreadyExist","paymentSuccess","paymentMalformed","paymentUnderfunded","paymentSrcNoTrust","paymentSrcNotAuthorized","paymentNoDestination","paymentNoTrust","paymentNotAuthorized","paymentLineFull","paymentNoIssuer","pathPaymentStrictReceiveSuccess","pathPaymentStrictReceiveMalformed","pathPaymentStrictReceiveUnderfunded","pathPaymentStrictReceiveSrcNoTrust","pathPaymentStrictReceiveSrcNotAuthorized","pathPaymentStrictReceiveNoDestination","pathPaymentStrictReceiveNoTrust","pathPaymentStrictReceiveNotAuthorized","pathPaymentStrictReceiveLineFull","pathPaymentStrictReceiveNoIssuer","pathPaymentStrictReceiveTooFewOffers","pathPaymentStrictReceiveOfferCrossSelf","pathPaymentStrictReceiveOverSendmax","success","noIssuer","pathPaymentStrictSendSuccess","pathPaymentStrictSendMalformed","pathPaymentStrictSendUnderfunded","pathPaymentStrictSendSrcNoTrust","pathPaymentStrictSendSrcNotAuthorized","pathPaymentStrictSendNoDestination","pathPaymentStrictSendNoTrust","pathPaymentStrictSendNotAuthorized","pathPaymentStrictSendLineFull","pathPaymentStrictSendNoIssuer","pathPaymentStrictSendTooFewOffers","pathPaymentStrictSendOfferCrossSelf","pathPaymentStrictSendUnderDestmin","manageSellOfferSuccess","manageSellOfferMalformed","manageSellOfferSellNoTrust","manageSellOfferBuyNoTrust","manageSellOfferSellNotAuthorized","manageSellOfferBuyNotAuthorized","manageSellOfferLineFull","manageSellOfferUnderfunded","manageSellOfferCrossSelf","manageSellOfferSellNoIssuer","manageSellOfferBuyNoIssuer","manageSellOfferNotFound","manageSellOfferLowReserve","manageOfferCreated","manageOfferUpdated","manageOfferDeleted","manageBuyOfferSuccess","manageBuyOfferMalformed","manageBuyOfferSellNoTrust","manageBuyOfferBuyNoTrust","manageBuyOfferSellNotAuthorized","manageBuyOfferBuyNotAuthorized","manageBuyOfferLineFull","manageBuyOfferUnderfunded","manageBuyOfferCrossSelf","manageBuyOfferSellNoIssuer","manageBuyOfferBuyNoIssuer","manageBuyOfferNotFound","manageBuyOfferLowReserve","setOptionsSuccess","setOptionsLowReserve","setOptionsTooManySigners","setOptionsBadFlags","setOptionsInvalidInflation","setOptionsCantChange","setOptionsUnknownFlag","setOptionsThresholdOutOfRange","setOptionsBadSigner","setOptionsInvalidHomeDomain","setOptionsAuthRevocableRequired","changeTrustSuccess","changeTrustMalformed","changeTrustNoIssuer","changeTrustInvalidLimit","changeTrustLowReserve","changeTrustSelfNotAllowed","changeTrustTrustLineMissing","changeTrustCannotDelete","changeTrustNotAuthMaintainLiabilities","allowTrustSuccess","allowTrustMalformed","allowTrustNoTrustLine","allowTrustTrustNotRequired","allowTrustCantRevoke","allowTrustSelfNotAllowed","allowTrustLowReserve","accountMergeSuccess","accountMergeMalformed","accountMergeNoAccount","accountMergeImmutableSet","accountMergeHasSubEntries","accountMergeSeqnumTooFar","accountMergeDestFull","accountMergeIsSponsor","sourceAccountBalance","inflationSuccess","inflationNotTime","payouts","manageDataSuccess","manageDataNotSupportedYet","manageDataNameNotFound","manageDataLowReserve","manageDataInvalidName","bumpSequenceSuccess","bumpSequenceBadSeq","createClaimableBalanceSuccess","createClaimableBalanceMalformed","createClaimableBalanceLowReserve","createClaimableBalanceNoTrust","createClaimableBalanceNotAuthorized","createClaimableBalanceUnderfunded","balanceId","claimClaimableBalanceSuccess","claimClaimableBalanceDoesNotExist","claimClaimableBalanceCannotClaim","claimClaimableBalanceLineFull","claimClaimableBalanceNoTrust","claimClaimableBalanceNotAuthorized","beginSponsoringFutureReservesSuccess","beginSponsoringFutureReservesMalformed","beginSponsoringFutureReservesAlreadySponsored","beginSponsoringFutureReservesRecursive","endSponsoringFutureReservesSuccess","endSponsoringFutureReservesNotSponsored","revokeSponsorshipSuccess","revokeSponsorshipDoesNotExist","revokeSponsorshipNotSponsor","revokeSponsorshipLowReserve","revokeSponsorshipOnlyTransferable","revokeSponsorshipMalformed","clawbackSuccess","clawbackMalformed","clawbackNotClawbackEnabled","clawbackNoTrust","clawbackUnderfunded","clawbackClaimableBalanceSuccess","clawbackClaimableBalanceDoesNotExist","clawbackClaimableBalanceNotIssuer","clawbackClaimableBalanceNotClawbackEnabled","setTrustLineFlagsSuccess","setTrustLineFlagsMalformed","setTrustLineFlagsNoTrustLine","setTrustLineFlagsCantRevoke","setTrustLineFlagsInvalidState","setTrustLineFlagsLowReserve","liquidityPoolDepositSuccess","liquidityPoolDepositMalformed","liquidityPoolDepositNoTrust","liquidityPoolDepositNotAuthorized","liquidityPoolDepositUnderfunded","liquidityPoolDepositLineFull","liquidityPoolDepositBadPrice","liquidityPoolDepositPoolFull","liquidityPoolWithdrawSuccess","liquidityPoolWithdrawMalformed","liquidityPoolWithdrawNoTrust","liquidityPoolWithdrawUnderfunded","liquidityPoolWithdrawLineFull","liquidityPoolWithdrawUnderMinimum","invokeHostFunctionSuccess","invokeHostFunctionMalformed","invokeHostFunctionTrapped","invokeHostFunctionResourceLimitExceeded","invokeHostFunctionEntryArchived","invokeHostFunctionInsufficientRefundableFee","extendFootprintTtlSuccess","extendFootprintTtlMalformed","extendFootprintTtlResourceLimitExceeded","extendFootprintTtlInsufficientRefundableFee","restoreFootprintSuccess","restoreFootprintMalformed","restoreFootprintResourceLimitExceeded","restoreFootprintInsufficientRefundableFee","opInner","opBadAuth","opNoAccount","opNotSupported","opTooManySubentries","opExceededWorkLimit","opTooManySponsoring","createAccountResult","paymentResult","pathPaymentStrictReceiveResult","manageSellOfferResult","createPassiveSellOfferResult","setOptionsResult","changeTrustResult","allowTrustResult","accountMergeResult","inflationResult","manageDataResult","bumpSeqResult","manageBuyOfferResult","pathPaymentStrictSendResult","createClaimableBalanceResult","claimClaimableBalanceResult","beginSponsoringFutureReservesResult","endSponsoringFutureReservesResult","revokeSponsorshipResult","clawbackResult","clawbackClaimableBalanceResult","setTrustLineFlagsResult","liquidityPoolDepositResult","liquidityPoolWithdrawResult","invokeHostFunctionResult","extendFootprintTtlResult","restoreFootprintResult","tr","txFeeBumpInnerSuccess","txSuccess","txFailed","txTooEarly","txTooLate","txMissingOperation","txBadSeq","txBadAuth","txInsufficientBalance","txNoAccount","txInsufficientFee","txBadAuthExtra","txInternalError","txNotSupported","txFeeBumpInnerFailed","txBadSponsorship","txBadMinSeqAgeOrGap","txMalformed","txSorobanInvalid","results","innerResultPair","uint","uhyper","hyper","keyTypeEd25519","keyTypePreAuthTx","keyTypeHashX","keyTypeEd25519SignedPayload","keyTypeMuxedEd25519","signerKeyTypeEd25519","signerKeyTypePreAuthTx","signerKeyTypeHashX","signerKeyTypeEd25519SignedPayload","preAuthTx","hashX","ed25519SignedPayload","scvBool","scvVoid","scvError","scvU32","scvI32","scvU64","scvI64","scvTimepoint","scvDuration","scvU128","scvI128","scvU256","scvI256","scvBytes","scvString","scvSymbol","scvMap","scvContractInstance","scvLedgerKeyNonce","sceContract","sceWasmVm","sceContext","sceStorage","sceObject","sceCrypto","sceEvents","sceBudget","sceValue","sceAuth","scecArithDomain","scecIndexBounds","scecInvalidInput","scecMissingValue","scecExistingValue","scecExceededLimit","scecInvalidAction","scecInternalError","scecUnexpectedType","scecUnexpectedSize","contractExecutableWasm","contractExecutableStellarAsset","wasmHash","u32","i32","u64","i64","timepoint","duration","u128","i128","u256","i256","str","sym","vec","nonceKey","instance","scEnvMetaKindInterfaceVersion","interfaceVersion","scMetaV0","scSpecTypeVal","scSpecTypeBool","scSpecTypeVoid","scSpecTypeError","scSpecTypeU32","scSpecTypeI32","scSpecTypeU64","scSpecTypeI64","scSpecTypeTimepoint","scSpecTypeDuration","scSpecTypeU128","scSpecTypeI128","scSpecTypeU256","scSpecTypeI256","scSpecTypeBytes","scSpecTypeString","scSpecTypeSymbol","scSpecTypeAddress","scSpecTypeOption","scSpecTypeResult","scSpecTypeVec","scSpecTypeMap","scSpecTypeTuple","scSpecTypeBytesN","scSpecTypeUdt","tuple","bytesN","udt","scSpecUdtUnionCaseVoidV0","scSpecUdtUnionCaseTupleV0","voidCase","tupleCase","scSpecEntryFunctionV0","scSpecEntryUdtStructV0","scSpecEntryUdtUnionV0","scSpecEntryUdtEnumV0","scSpecEntryUdtErrorEnumV0","functionV0","udtStructV0","udtUnionV0","udtEnumV0","udtErrorEnumV0","wasmInsnExec","memAlloc","memCpy","memCmp","dispatchHostFunction","visitObject","valSer","valDeser","computeSha256Hash","computeEd25519PubKey","verifyEd25519Sig","vmInstantiation","vmCachedInstantiation","invokeVmFunction","computeKeccak256Hash","decodeEcdsaCurve256Sig","recoverEcdsaSecp256k1Key","int256AddSub","int256Mul","int256Div","int256Pow","int256Shift","chaCha20DrawBytes","parseWasmInstructions","parseWasmFunctions","parseWasmGlobals","parseWasmTableEntries","parseWasmTypes","parseWasmDataSegments","parseWasmElemSegments","parseWasmImports","parseWasmExports","parseWasmDataSegmentBytes","instantiateWasmInstructions","instantiateWasmFunctions","instantiateWasmGlobals","instantiateWasmTableEntries","instantiateWasmTypes","instantiateWasmDataSegments","instantiateWasmElemSegments","instantiateWasmImports","instantiateWasmExports","instantiateWasmDataSegmentBytes","sec1DecodePointUncompressed","verifyEcdsaSecp256r1Sig","configSettingContractMaxSizeBytes","configSettingContractComputeV0","configSettingContractLedgerCostV0","configSettingContractHistoricalDataV0","configSettingContractEventsV0","configSettingContractBandwidthV0","configSettingContractCostParamsCpuInstructions","configSettingContractCostParamsMemoryBytes","configSettingContractDataKeySizeBytes","configSettingContractDataEntrySizeBytes","configSettingStateArchival","configSettingContractExecutionLanes","configSettingBucketlistSizeWindow","configSettingEvictionIterator","contractMaxSizeBytes","contractCompute","contractLedgerCost","contractHistoricalData","contractEvents","contractBandwidth","contractCostParamsCpuInsns","contractCostParamsMemBytes","contractDataKeySizeBytes","contractDataEntrySizeBytes","stateArchivalSettings","contractExecutionLanes","bucketListSizeWindow","evictionIterator","cov_7g2na1tuy","LiquidityPoolFeeV18","getLiquidityPoolId","liquidityPoolType","liquidityPoolParameters","_ref","lpTypeData","LiquidityPoolType","lpParamsData","LiquidityPoolConstantProductParameters","cov_1kcgdhumip","sha256","hasher","update","digest","cov_3xzh2p1lr","cereal","FastSigning","UnsignedHyper","Hyper","TransactionBuilder","TimeoutInfinite","BASE_FEE","LiquidityPoolAsset","LiquidityPoolId","AuthRequiredFlag","AuthRevocableFlag","AuthImmutableFlag","AuthClawbackEnabledFlag","MuxedAccount","SignerKey","Soroban","decodeAddressToMuxedAccount","extractBaseAddress","encodeMuxedAccount","module","exports","cov_et36hksgm","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","isArray","buildInvocationTree","root","fn","output","inner","source","contractAddress","functionName","executable","_ref2","exec","JSON","stringify","details","salt","invocations","subInvocations","walkInvocationTree","callback","walkHelper","node","depth","parent","cov_1kizel6wp","XdrWriter","XdrReader","cov_1s5vdn3x62","nacl","generate","secretKey","_secretSeed","_publicKey","_secretKey","AccountId","xdrPublicKey","xdrMuxedAccount","MuxedAccountMed25519","Uint64","signatureHint","secret","encodeEd25519SecretSeed","rawSecretKey","canSign","signDecorated","hint","DecoratedSignature","signPayloadDecorated","keyHint","byte","fromSecret","rawSecret","decodeEd25519SecretSeed","fromRawEd25519Seed","rawSeed","master","randomBytes","cov_1jj1aoa787","lpConstantProductParamsXdr","lpParamsXdr","LiquidityPoolParameters","getLiquidityPoolParameters","other","poolId","ctAssetXdr","cov_2qna3qnfvt","xdrPoolId","PoolId","tlAssetXdr","cov_12we4ny8ps","MemoNone","MemoID","MemoText","MemoHash","MemoReturn","Memo","_value","_validateIdValue","_validateTextValue","_validateHashValue","number","isFinite","armTypeForArm","isValid","valueBuffer","isBuffer","none","_return","fromXDRObject","object","arm","cov_vn5e1dkey","baseAccount","_muxedXdr","_mAddress","setId","otherMuxedAccount","mAddress","sequenceNum","muxedAccount","gAddress","cov_5cjos4ncd","PUBLIC","TESTNET","SANDBOX","STANDALONE","cov_1us86969q3","XdrLargeInt","Uint128","Uint256","Int128","Int256","ScInt","scValToBigInt","scv","scIntType","getType","BigInt","toBigInt","lo","hi","loLo","loHi","hiLo","hiHi","cov_1ued0cj9tt","LargeInt","_LargeInt","defineIntBoundaries","cov_2nfdupichx","cov_10avdhrpuy","_XdrLargeInt","opts","signed","startsWith","bitlen","nearestBigIntSize","RangeError","bigI","find","len","cov_8t7gecsj1","cov_s4w0hg7pz","cov_2l9nsosvg5","toNumber","bi","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","toI64","_sizeCheck","asIntN","toU64","asUintN","toI128","hi64","lo64","Int128Parts","toU128","UInt128Parts","toI256","hiHi64","hiLo64","loHi64","loLo64","Int256Parts","toU256","UInt256Parts","toJSON","bits","size","isType","scvType","cov_u89el4qoz","best_r","ops","ONE","MAX_INT64","setSourceAccount","opAttributes","sourceAccount","operation","attrs","operationName","accountIdtoAddress","startingBalance","_fromXDRAmount","amount","sendAsset","sendMax","destAsset","destAmount","path","pathKey","sendAmount","destMin","line","limit","trustor","authorize","inflationDest","clearFlags","setFlags","masterWeight","lowThreshold","medThreshold","highThreshold","homeDomain","ed25519PublicKey","sha256Hash","signedPayload","encodeSignedPayload","weight","selling","buying","price","_fromXDRPrice","offerId","buyAmount","dataName","dataValue","bumpTo","claimants","sponsoredId","extractRevokeSponshipDetails","clears","sets","mapping","authorized","TrustLineFlags","authorizedToMaintainLiabilities","clawbackEnabled","getFlagValue","bit","flags","flagName","maxAmountA","maxAmountB","minPrice","maxPrice","minAmountA","minAmountB","func","hostFunction","extendTo","isValidAmount","allowZero","isZero","isNegative","times","gt","decimalPlaces","constructAmountRequirementsError","_checkUnsignedIntValue","isValidFunction","parseFloat","_toXDRAmount","div","toFixed","_toXDRPrice","xdrObject","Price","approx","parseInt","LedgerEntryType","seller","sellerId","convertXDRSignerKeyToObject","signerKey","SignerKeyType","revokeAccountSponsorship","revokeTrustlineSponsorship","revokeOfferSponsorship","revokeDataSponsorship","revokeClaimableBalanceSponsorship","revokeLiquidityPoolSponsorship","revokeSignerSponsorship","createStellarAssetContract","createCustomContract","uploadContractWasm","cov_2dgenyishd","OperationBody","cov_vv23ghe1m","attributes","AssetCode","AllowTrustOp","cov_29nkvby3u5","op","BeginSponsoringFutureReservesOp","cov_1q4oslf4h","BumpSequenceOp","cov_2muzzqmip2","masterKeypair","changeTrustOP","ChangeTrustOp","cov_a76b269gy","validateClaimableBalanceId","ClaimableBalanceId","ClaimClaimableBalanceOp","cov_14y3xl1qn","ClawbackOp","cov_27hkzhvxf6","ClawbackClaimableBalanceOp","cov_19q42h5994","CreateAccountOp","cov_1q2uwrebg4","CreateClaimableBalanceOp","cov_flm1seqbm","CreatePassiveSellOfferOp","cov_93qkp190r","cov_25diyezq4h","extendFootprintOp","ExtendFootprintTtlOp","ext","ExtensionPoint","cov_1ln42usqgn","cov_1oa50f4q2z","cov_imvjqvfp1","InvokeHostFunctionOp","HostFunction","InvokeContractArgs","getSalty","CreateContractArgs","ContractExecutable","ContractIdPreimageFromAddress","split","cov_1by9byefag","LiquidityPoolDepositOp","cov_2rl2112yea","LiquidityPoolWithdrawOp","cov_8uya2potr","ManageBuyOfferOp","cov_2rh5klwqq0","ManageDataOp","cov_1jpk3rcxkh","ManageSellOfferOp","cov_2pawkfmgrq","x","PathPaymentStrictReceiveOp","cov_1fpc3lwsy5","PathPaymentStrictSendOp","cov_15out076lz","PaymentOp","cov_1vyt557do1","RestoreFootprintOp","cov_nme4nrudl","LedgerKeyAccount","RevokeSponsorshipOp","LedgerKeyTrustLine","LedgerKeyOffer","LedgerKeyData","LedgerKeyClaimableBalance","LedgerKeyLiquidityPool","rawKey","RevokeSponsorshipOpSigner","cov_2jznwxgx9j","weightCheckFunction","setValues","isValidSignedPayload","decodeSignedPayload","signedPayloadXdr","SignerKeyEd25519SignedPayload","Signer","SetOptionsOp","cov_2a4ra6orjp","clearFlag","setFlag","flagValue","SetTrustLineFlagsOp","cov_em5kw5dhe","val","_val$constructor","copy","some","join","_val$constructor2","entries","_ref3","_ref7","_ref8","_ref4","k","_ref5","_ref6","keyType","valType","keyOpts","valOpts","ScMapEntry","_ref9","optType","_ref10","_ref11","ScValType","fromEntries","ArrayBuffer","isView","TextDecoder","decode","ScErrorType","err","cov_mdialdew2","encodeCheck","decodeCheck","decodeAddress","signerKeyMap","vb","getVersionByteForPrefix","encoder","raw","encodeSignerKey","strkeyType","cov_vt1opgbqi","actualMethods","checkFastSigning","window","checkFastSigningNode","checkFastSigningBrowser","sodium","require","crypto_sign_PUBLICKEYBYTES","sk","crypto_sign_SECRETKEYBYTES","crypto_sign_seed_keypair","crypto_sign_BYTES","crypto_sign_detached","crypto_sign_verify_detached","secretKeyUint8","naclKeys","keyPair","fromSeed","detached","cov_2c07tdahuc","_toArray","_iterableToArray","formatTokenAmount","decimals","includes","formatted","padStart","replace","parseTokenAmount","whole","fraction","rest","shifted","repeat","cov_jf3v2z1o0","SorobanDataBuilder","SorobanTransactionData","resources","SorobanResources","footprint","LedgerFootprint","readOnly","readWrite","instructions","readBytes","writeBytes","resourceFee","_data","setResourceFee","setResources","cpuInstrs","appendFootprint","setFootprint","getReadOnly","getReadWrite","setReadOnly","setReadWrite","build","cov_sqew50tpm","base32","verifyChecksum","versionBytes","ed25519SecretSeed","med25519PublicKey","strkeyTypes","G","S","M","T","X","P","C","isValidEd25519SecretSeed","seed","encodeMed25519PublicKey","decodeMed25519PublicKey","encodePreAuthTx","decodePreAuthTx","encodeSha256Hash","decodeSha256Hash","versionByteName","encoded","decoded","versionByte","checksum","encode","expectedVersion","expectedChecksum","calculateChecksum","versionBuffer","unencoded","crcTable","crc16","lookupIndex","cov_1le2dk4qq7","_envelopeType","_memo","memo","_sequence","seqNum","_source","sourceAccountEd25519","cond","PreconditionType","_timeBounds","minTime","maxTime","ledgerBounds","_ledgerBounds","minLedger","maxLedger","minSeq","minSeqNum","_minAccountSequence","_minAccountSequenceAge","minSeqAge","_minAccountSequenceLedgerGap","minSeqLedgerGap","_extraSigners","extraSigners","_operations","PublicKeyType","rawTx","TransactionV0Envelope","TransactionV0","TransactionV1Envelope","getClaimableBalanceId","opIndex","isInteger","HashIdPreimageOperationId","SequenceNumber","opNum","opIdHash","cov_tgdykq0vi","_networkPassphrase","_tx","_signatures","_fee","txHash","keypairs","sig","getKeypairSignature","keypair","addSignature","signatureBuffer","addDecoratedSignature","signHashX","cov_2ppqragv4s","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","baseFee","timebounds","ledgerbounds","minAccountSequence","minAccountSequenceAge","minAccountSequenceLedgerGap","addOperation","clearOperations","addMemo","setTimeout","timeoutSeconds","timeoutTimestamp","Math","floor","Date","now","setTimebounds","minEpochOrDate","maxEpochOrDate","setLedgerbounds","setMinAccountSequence","setMinAccountSequenceAge","durationInSeconds","setMinAccountSequenceLedgerGap","gap","setExtraSigners","setNetworkPassphrase","setSorobanData","isValidDate","getTime","TimeBounds","hasV2Preconditions","LedgerBounds","Preconditions","PreconditionsV2","TransactionExt","Void","xtx","cloneFrom","unscaledFee","builder","buildFeeBumpTransaction","innerOps","innerBaseFeeRate","base","lt","minBaseFee","v0Tx","v1Tx","feeSourceAccount","FeeBumpTransactionInnerTx","FeeBumpTransactionExt","feeBumpTxEnvelope","cov_29up3qbrjn","OriginBigNumber","DEBUG","cov_1nl30284m1","expected","actual","cov_1jndmq8a95","MAX_INT","rawNumber","fractions","integerValue","ROUND_FLOOR","minus","eq","cov_1cdeamnr9x","_decodeAddressFullyToMuxedAccount","CryptoKeyType","_encodeMuxedAccountFullyToAddress","rawBytes","muxed","cov_1x5lzwvct0","input","char","isNumber","endsWith","cov_23jfgoqflx"],"sourceRoot":""}