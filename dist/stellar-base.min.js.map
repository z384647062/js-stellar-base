{"version":3,"file":"stellar-base.min.js","mappings":";8FACYA,oDAAAA,EAAoL,IAAK,MAAM,IAAIC,EAAE,CAAC,IAAI,CAACA,EAAED,EAAEE,KAAK,aAAaA,EAAEC,EAAEH,EAAE,CAACI,EAAE,IAAIC,IAAI,IAAIC,EAAEJ,EAAE,KAAKI,EAAEC,GAAGC,MAAM,GAAGC,SAAS,EAAE,aAAaH,EAAEC,KAAKD,EAAEC,GAAGG,UAAUD,SAAS,SAASR,EAAED,GAAG,MAAME,EAAES,WAAWD,UAAUD,SAASG,KAAKC,KAAKZ,EAAED,GAAG,OAAOc,OAAOC,eAAeb,EAAEI,EAAEC,GAAGG,WAAWR,CAAC,GAAG,MAAMG,EAAEC,EAAEC,IAAI,IAAI,CAACN,EAAED,EAAEE,KAAK,MAAMI,EAAEJ,EAAE,KAAKD,EAAEe,QAAQV,GAAG,IAAI,CAACL,EAAED,EAAEE,KAAK,aAAaA,EAAEA,EAAEF,GAAGE,EAAEC,EAAEH,EAAE,CAACiB,MAAM,IAAIC,EAAEC,KAAK,IAAIC,EAAEC,OAAO,IAAIC,EAAEC,KAAK,IAAIC,EAAEC,MAAM,IAAIC,EAAEC,MAAM,IAAIC,EAAEC,IAAI,IAAIC,EAAEC,SAAS,IAAI3B,EAAE4B,OAAO,IAAIC,EAAEC,OAAO,IAAIC,EAAEC,UAAU,IAAIC,EAAEC,UAAU,IAAIC,EAAEC,OAAO,IAAIC,EAAEC,OAAO,IAAIC,EAAEC,MAAM,IAAIC,EAAEC,cAAc,IAAIC,EAAEC,YAAY,IAAIC,EAAEC,SAAS,IAAIC,EAAEC,UAAU,IAAIC,EAAEC,KAAK,IAAIC,EAAEC,UAAU,IAAIC,EAAEC,UAAU,IAAIC,EAAEC,OAAO,IAAIC,KAAK,MAAMvD,UAAUwD,UAAU,WAAAC,CAAY9D,GAAG+D,MAAM,oBAAoB/D,IAAI,EAAE,MAAMI,UAAUyD,UAAU,WAAAC,CAAY9D,GAAG+D,MAAM,mBAAmB/D,IAAI,EAAE,MAAMgE,UAAUH,UAAU,WAAAC,CAAY9D,GAAG+D,MAAM,8BAA8B/D,IAAI,EAAE,MAAMiE,UAAUD,EAAE,WAAAF,GAAcC,MAAM,2EAA2E,EAAE,IAAIG,EAAEjE,EAAE,KAAKE,EAAE,MAAMqD,EAAE,WAAAM,CAAY9D,GAAG,IAAIkE,EAAEC,SAASnE,GAAG,CAAC,KAAKA,aAAagB,OAAOA,MAAMoD,QAAQpE,IAAIqE,YAAYC,OAAOtE,IAAI,MAAM,IAAII,EAAE,mBAAmBJ,KAAKA,EAAEkE,EAAEK,KAAKvE,EAAE,CAACY,KAAK4D,QAAQxE,EAAEY,KAAK6D,QAAQzE,EAAE0E,OAAO9D,KAAK+D,OAAO,CAAC,CAACH,QAAQC,QAAQE,OAAO,OAAIC,GAAM,OAAOhE,KAAK+D,SAAS/D,KAAK6D,OAAO,CAAC,OAAAI,CAAQ7E,GAAG,MAAMD,EAAEa,KAAK+D,OAAO,GAAG/D,KAAK+D,QAAQ3E,EAAEY,KAAK6D,QAAQ7D,KAAK+D,OAAO,MAAM,IAAIvE,EAAE,sDAAsD,MAAMH,EAAE,GAAGD,EAAE,GAAG,GAAG,GAAGC,EAAE,EAAE,CAAC,IAAI,IAAID,EAAE,EAAEA,EAAEC,EAAED,IAAI,GAAG,IAAIY,KAAK4D,QAAQ5D,KAAK+D,OAAO3E,GAAG,MAAM,IAAII,EAAE,mBAAmBQ,KAAK+D,QAAQ1E,CAAC,CAAC,OAAOF,CAAC,CAAC,MAAA+E,GAASlE,KAAK+D,OAAO,CAAC,CAAC,IAAAI,CAAK/E,GAAG,MAAMD,EAAEa,KAAKiE,QAAQ7E,GAAG,OAAOY,KAAK4D,QAAQhE,SAAST,EAAEA,EAAEC,EAAE,CAAC,WAAAgF,GAAc,OAAOpE,KAAK4D,QAAQQ,YAAYpE,KAAKiE,QAAQ,GAAG,CAAC,YAAAI,GAAe,OAAOrE,KAAK4D,QAAQS,aAAarE,KAAKiE,QAAQ,GAAG,CAAC,cAAAK,GAAiB,OAAOtE,KAAK4D,QAAQU,eAAetE,KAAKiE,QAAQ,GAAG,CAAC,eAAAM,GAAkB,OAAOvE,KAAK4D,QAAQW,gBAAgBvE,KAAKiE,QAAQ,GAAG,CAAC,WAAAO,GAAc,OAAOxE,KAAK4D,QAAQY,YAAYxE,KAAKiE,QAAQ,GAAG,CAAC,YAAAQ,GAAe,OAAOzE,KAAK4D,QAAQa,aAAazE,KAAKiE,QAAQ,GAAG,CAAC,mBAAAS,GAAsB,GAAG1E,KAAK+D,SAAS/D,KAAK6D,QAAQ,MAAM,IAAIrE,EAAE,sEAAsE,EAAE,IAAImF,EAAEtF,EAAE,KAAKE,EAAE,MAAMqF,EAAE,KAAK,MAAM9B,EAAE,WAAAI,CAAY9D,GAAG,iBAAiBA,EAAEA,EAAEuF,EAAEE,YAAYzF,GAAGA,aAAauF,IAAIvF,EAAEuF,EAAEE,YAAYD,IAAI5E,KAAK4D,QAAQxE,EAAEY,KAAK6D,QAAQzE,EAAE0E,MAAM,CAACF,QAAQC,QAAQE,OAAO,EAAE,KAAApE,CAAMP,GAAG,MAAMD,EAAEa,KAAK+D,OAAO,OAAO/D,KAAK+D,QAAQ3E,EAAEY,KAAK6D,QAAQ7D,KAAK+D,QAAQ/D,KAAK8E,OAAO9E,KAAK+D,QAAQ5E,CAAC,CAAC,MAAA2F,CAAO1F,GAAG,MAAMD,EAAE4F,KAAKC,KAAK5F,EAAEwF,GAAGA,EAAEvF,EAAEsF,EAAEE,YAAY1F,GAAGa,KAAK4D,QAAQqB,KAAK5F,EAAE,EAAE,EAAEW,KAAK6D,SAAS7D,KAAK4D,QAAQvE,EAAEW,KAAK6D,QAAQ1E,CAAC,CAAC,QAAA+F,GAAW,OAAOlF,KAAK4D,QAAQhE,SAAS,EAAEI,KAAK+D,OAAO,CAAC,OAAAoB,GAAU,MAAM,IAAInF,KAAKkF,WAAW,CAAC,KAAAE,CAAMhG,EAAED,GAAG,GAAG,iBAAiBC,EAAE,CAAC,MAAMC,EAAEW,KAAKL,MAAMR,GAAGa,KAAK4D,QAAQwB,MAAMhG,EAAEC,EAAE,OAAO,KAAK,CAACD,aAAauF,IAAIvF,EAAEuF,EAAEhB,KAAKvE,IAAI,MAAMC,EAAEW,KAAKL,MAAMR,GAAGC,EAAE6F,KAAKjF,KAAK4D,QAAQvE,EAAE,EAAEF,EAAE,CAAC,MAAME,EAAE,GAAGF,EAAE,GAAG,GAAG,GAAGE,EAAE,EAAE,CAAC,MAAMD,EAAEY,KAAKL,MAAMN,GAAGW,KAAK4D,QAAQyB,KAAK,EAAEjG,EAAEY,KAAK+D,OAAO,CAAC,CAAC,YAAAuB,CAAalG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ0B,aAAalG,EAAED,EAAE,CAAC,aAAAoG,CAAcnG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ2B,cAAcnG,EAAED,EAAE,CAAC,eAAAqG,CAAgBpG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ4B,gBAAgBpG,EAAED,EAAE,CAAC,gBAAAsG,CAAiBrG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ6B,iBAAiBrG,EAAED,EAAE,CAAC,YAAAuG,CAAatG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ8B,aAAatG,EAAED,EAAE,CAAC,aAAAwG,CAAcvG,GAAG,MAAMD,EAAEa,KAAKL,MAAM,GAAGK,KAAK4D,QAAQ+B,cAAcvG,EAAED,EAAE,CAACyG,uBAAuBhB,EAAE,IAAIiB,EAAExG,EAAE,KAAKE,EAAE,MAAMuG,EAAE,KAAAC,CAAM3G,EAAE,OAAO,IAAIY,KAAKoF,MAAM,OAAOpF,KAAKkD,YAAY6C,MAAM/F,KAAKZ,GAAG,MAAMD,EAAE,IAAI2D,EAAE,OAAO9C,KAAKoF,MAAMpF,KAAKb,GAAG6G,EAAE7G,EAAE+F,WAAW9F,EAAE,CAAC,OAAA6G,CAAQ7G,EAAED,EAAE,OAAO,IAAIa,KAAKmE,KAAK,OAAOnE,KAAKkD,YAAY+C,QAAQ7G,EAAED,GAAG,MAAME,EAAE,IAAIuD,EAAEsD,EAAE9G,EAAED,IAAIM,EAAEO,KAAKmE,KAAK9E,GAAG,OAAOA,EAAEqF,sBAAsBjF,CAAC,CAAC,WAAA0G,CAAY/G,EAAED,EAAE,OAAO,IAAI,OAAOa,KAAKiG,QAAQ7G,EAAED,IAAG,CAAE,CAAC,MAAMC,GAAG,OAAM,CAAE,CAAC,CAAC,YAAO2G,CAAM3G,EAAED,EAAE,OAAO,MAAME,EAAE,IAAIyD,EAAE,OAAO9C,KAAKoF,MAAMhG,EAAEC,GAAG2G,EAAE3G,EAAE6F,WAAW/F,EAAE,CAAC,cAAO8G,CAAQ7G,EAAED,EAAE,OAAO,MAAME,EAAE,IAAIuD,EAAEsD,EAAE9G,EAAED,IAAIM,EAAEO,KAAKmE,KAAK9E,GAAG,OAAOA,EAAEqF,sBAAsBjF,CAAC,CAAC,kBAAO0G,CAAY/G,EAAED,EAAE,OAAO,IAAI,OAAOa,KAAKiG,QAAQ7G,EAAED,IAAG,CAAE,CAAC,MAAMC,GAAG,OAAM,CAAE,CAAC,EAAE,MAAME,UAAUwG,EAAE,WAAO3B,CAAK/E,GAAG,MAAM,IAAIiE,CAAC,CAAC,YAAO+B,CAAMhG,EAAED,GAAG,MAAM,IAAIkE,CAAC,CAAC,cAAO+C,CAAQhH,GAAG,OAAM,CAAE,EAAE,MAAMiH,UAAUP,EAAE,OAAAM,CAAQhH,GAAG,OAAM,CAAE,EAAE,MAAMkH,UAAUrD,UAAU,WAAAC,CAAY9D,GAAG+D,MAAM,kBAAkB/D,2CAA2C,EAAE,SAAS4G,EAAE5G,EAAED,GAAG,OAAOA,GAAG,IAAI,MAAM,OAAOC,EAAE,IAAI,MAAM,OAAOA,EAAEmH,SAAS,OAAO,IAAI,SAAS,OAAOnH,EAAEmH,SAAS,UAAU,QAAQ,MAAM,IAAID,EAAEnH,GAAG,CAAC,SAAS+G,EAAE9G,EAAED,GAAG,OAAOA,GAAG,IAAI,MAAM,OAAOC,EAAE,IAAI,MAAM,OAAOyG,EAAElC,KAAKvE,EAAE,OAAO,IAAI,SAAS,OAAOyG,EAAElC,KAAKvE,EAAE,UAAU,QAAQ,MAAM,IAAIkH,EAAEnH,GAAG,CAAC,MAAMqH,EAAE,WAAyB,MAAMvF,UAAU3B,EAAE,WAAO6E,CAAK/E,GAAG,OAAOA,EAAEgF,aAAa,CAAC,YAAOgB,CAAMhG,EAAED,GAAG,GAAG,iBAAiBC,EAAE,MAAM,IAAIK,EAAE,gBAAgB,IAAI,EAAEL,KAAKA,EAAE,MAAM,IAAIK,EAAE,qBAAqBN,EAAEmG,aAAalG,EAAE,CAAC,cAAOgH,CAAQhH,GAAG,MAAM,iBAAiBA,IAAI,EAAEA,KAAKA,GAAIA,IAAhQ,YAAsQA,GAAGoH,CAAE,EAAE,SAASC,EAAErH,EAAED,EAAEE,GAAG,GAAG,iBAAiBD,EAAE,MAAM,IAAI6D,UAAU,uCAAuC7D,GAAG,MAAMK,EAAEN,EAAEE,EAAE,GAAG,IAAII,EAAE,MAAM,CAACL,GAAG,GAAGC,EAAE,IAAIA,EAAE,KAAK,IAAII,GAAG,IAAIA,GAAG,IAAIA,EAAE,MAAM,IAAIwD,UAAU,mBAAmB7D,sBAAsBD,QAAQE,kBAAkB,MAAMG,EAAEkH,OAAOrH,GAAG+D,EAAE,IAAIhD,MAAMX,GAAG,IAAI,IAAIN,EAAE,EAAEA,EAAEM,EAAEN,IAAIiE,EAAEjE,GAAGuH,OAAOC,OAAOtH,EAAED,GAAGA,IAAII,EAAE,OAAO4D,CAAC,CAAC,SAASwD,EAAExH,EAAED,GAAG,GAAGA,EAAE,MAAM,CAAC,IAAI,IAAIuH,OAAOtH,IAAI,IAAI,MAAMC,EAAE,IAAIqH,OAAOtH,EAAE,GAAG,MAAM,CAAC,GAAGC,EAAEA,EAAE,GAAG,CAAC4B,EAAE4F,UAAUL,EAAEvF,EAAE6F,UAAU,WAAW,MAAMvH,UAAUD,EAAE,WAAA4D,CAAY9D,GAAG+D,QAAQnD,KAAK+G,OAAO,SAAS3H,EAAED,EAAEE,GAAGD,aAAagB,MAAMhB,EAAE0E,QAAQ1E,EAAE,aAAagB,QAAQhB,EAAEA,EAAE,IAAIA,EAAE,CAACA,GAAG,MAAMK,EAAEN,EAAEC,EAAE0E,OAAO,OAAOrE,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,KAAK,IAAI,MAAM,QAAQ,MAAM,IAAIuH,WAAW,qDAAqD5H,KAAK,IAAI,IAAI,IAAID,EAAE,EAAEA,EAAEC,EAAE0E,OAAO3E,IAAI,iBAAiBC,EAAED,KAAKC,EAAED,GAAGuH,OAAOtH,EAAED,GAAG8H,WAAW,CAAC,MAAM9H,GAAG,MAAM,IAAI8D,UAAU,qCAAqC7D,MAAMD,KAAK,CAAC,GAAGE,GAAG,IAAID,EAAE0E,QAAQ1E,EAAE,GAAG,GAAG,MAAM,IAAI4H,WAAW,mCAAmC5H,KAAK,IAAII,EAAEkH,OAAOQ,QAAQzH,EAAEL,EAAE,IAAI,IAAI,IAAID,EAAE,EAAEA,EAAEC,EAAE0E,OAAO3E,IAAIK,GAAGkH,OAAOQ,QAAQzH,EAAEL,EAAED,KAAKuH,OAAOvH,EAAEM,GAAGJ,IAAIG,EAAEkH,OAAOC,OAAOxH,EAAEK,IAAI,MAAM4D,EAAEC,GAAGuD,EAAEzH,EAAEE,GAAG,GAAGG,GAAG4D,GAAG5D,GAAG6D,EAAE,OAAO7D,EAAE,MAAM,IAAIyD,UAAU,kBAAkB7D,UAAU,SAASA,EAAED,GAAG,MAAM,GAAGA,EAAE,IAAI,MAAMC,GAAG,CAAtC,CAAwCD,EAAEE,oBAAoB+D,MAAMC,OAAO7D,IAAI,CAA1wB,CAA4wBJ,EAAEY,KAAKmH,KAAKnH,KAAKoH,SAAS,CAAC,YAAIA,GAAW,MAAM,IAAI/D,CAAC,CAAC,QAAI8D,GAAO,MAAM,IAAI9D,CAAC,CAAC,KAAAgE,CAAMjI,GAAG,OAAOqH,EAAEzG,KAAK+G,OAAO/G,KAAKmH,KAAK/H,EAAE,CAAC,QAAAmH,GAAW,OAAOvG,KAAK+G,OAAOR,UAAU,CAAC,MAAAe,GAAS,MAAM,CAACP,OAAO/G,KAAK+G,OAAOR,WAAW,CAAC,QAAAgB,GAAW,OAAOb,OAAO1G,KAAK+G,OAAO,CAAC,WAAO5C,CAAK/E,GAAG,MAAM+H,KAAKhI,GAAGa,KAAKH,UAAU,OAAO,KAAKV,EAAE,IAAIa,KAAKZ,EAAEmF,mBAAmB,IAAIvE,QAAQI,MAAMuD,KAAK,CAACG,OAAO3E,EAAE,KAAI,IAAKC,EAAEmF,oBAAoBiD,UAAU,CAAC,YAAOpC,CAAMhG,EAAED,GAAG,GAAGC,aAAaY,KAAKZ,EAAEA,EAAE2H,YAAY,GAAG,iBAAiB3H,GAAGA,EAAEY,KAAK6G,WAAWzH,EAAEY,KAAK8G,UAAU,MAAM,IAAIrH,EAAE,GAAGL,cAAcY,KAAKyH,QAAQ,MAAML,SAAS/H,EAAE8H,KAAK3H,GAAGQ,KAAKH,UAAU,GAAG,KAAKL,EAAEH,EAAEF,EAAEsG,iBAAiBrG,GAAGD,EAAEqG,gBAAgBpG,QAAQ,IAAI,MAAMK,KAAKgH,EAAErH,EAAEI,EAAE,IAAIgI,UAAUnI,EAAEF,EAAEsG,iBAAiBhG,GAAGN,EAAEqG,gBAAgB/F,EAAE,CAAC,cAAO2G,CAAQhH,GAAG,MAAM,iBAAiBA,GAAGA,aAAaY,IAAI,CAAC,iBAAO0H,CAAWtI,GAAG,OAAO,IAAIY,KAAKZ,EAAE,CAACwG,iBAAiB,GAAGA,iBAAiB,GAAG,0BAAO+B,GAAsB,MAAMvI,EAAED,GAAGyH,EAAE5G,KAAKH,UAAUsH,KAAKnH,KAAKH,UAAUuH,UAAUpH,KAAK8G,UAAU1H,EAAEY,KAAK6G,UAAU1H,CAAC,EAAE,MAAM4B,UAAUxB,EAAE,WAAA2D,IAAe9D,GAAG+D,MAAM/D,EAAE,CAAC,OAAIwI,GAAM,OAAwC,EAAjCC,OAAO,YAAY7H,KAAK+G,OAAU,CAAC,QAAIe,GAAO,OAAiC,EAA1BD,OAAO7H,KAAK+G,QAAQ,IAAO,CAAC,QAAII,GAAO,OAAO,EAAE,CAAC,YAAIC,GAAW,OAAM,CAAE,CAAC,eAAOW,CAAS3I,EAAED,GAAG,OAAO,IAAIa,KAAKZ,EAAED,EAAE,EAAE4B,EAAE4G,sBAAsB,MAAMK,EAAE,WAAW,MAAM5F,UAAU9C,EAAE,WAAO6E,CAAK/E,GAAG,OAAOA,EAAEiF,cAAc,CAAC,YAAOe,CAAMhG,EAAED,GAAG,GAAG,iBAAiBC,KAAKA,GAAG,GAAGA,GAAG4I,IAAI5I,EAAE,GAAG,EAAE,MAAM,IAAIK,EAAE,qBAAqBN,EAAEoG,cAAcnG,EAAE,CAAC,cAAOgH,CAAQhH,GAAG,MAAM,iBAAiBA,GAAGA,EAAE,GAAG,GAAIA,GAAG,GAAGA,GAAG4I,CAAE,EAAE5F,EAAEyE,UAAUmB,EAAE5F,EAAE0E,UAAU,EAAE,MAAM5E,UAAU3C,EAAE,WAAA2D,IAAe9D,GAAG+D,MAAM/D,EAAE,CAAC,OAAIwI,GAAM,OAAwC,EAAjCC,OAAO,YAAY7H,KAAK+G,OAAU,CAAC,QAAIe,GAAO,OAAiC,EAA1BD,OAAO7H,KAAK+G,QAAQ,IAAO,CAAC,QAAII,GAAO,OAAO,EAAE,CAAC,YAAIC,GAAW,OAAM,CAAE,CAAC,eAAOW,CAAS3I,EAAED,GAAG,OAAO,IAAIa,KAAKZ,EAAED,EAAE,EAAE+C,EAAEyF,sBAAsB,MAAM9G,UAAUvB,EAAE,WAAO6E,CAAK/E,GAAG,OAAOA,EAAEoF,aAAa,CAAC,YAAOY,CAAMhG,EAAED,GAAG,GAAG,iBAAiBC,EAAE,MAAM,IAAIK,EAAE,gBAAgBN,EAAEuG,aAAatG,EAAE,CAAC,cAAOgH,CAAQhH,GAAG,MAAM,iBAAiBA,CAAC,EAAE,MAAMqB,UAAUnB,EAAE,WAAO6E,CAAK/E,GAAG,OAAOA,EAAEqF,cAAc,CAAC,YAAOW,CAAMhG,EAAED,GAAG,GAAG,iBAAiBC,EAAE,MAAM,IAAIK,EAAE,gBAAgBN,EAAEwG,cAAcvG,EAAE,CAAC,cAAOgH,CAAQhH,GAAG,MAAM,iBAAiBA,CAAC,EAAE,MAAMoC,UAAUlC,EAAE,WAAO6E,GAAO,MAAM,IAAIf,EAAE,0BAA0B,CAAC,YAAOgC,GAAQ,MAAM,IAAIhC,EAAE,0BAA0B,CAAC,cAAOgD,GAAU,OAAM,CAAE,EAAE,MAAM7F,UAAUjB,EAAE,WAAO6E,CAAK/E,GAAG,MAAMD,EAAE8B,EAAEkD,KAAK/E,GAAG,OAAOD,GAAG,KAAK,EAAE,OAAM,EAAG,KAAK,EAAE,OAAM,EAAG,QAAQ,MAAM,IAAIK,EAAE,OAAOL,gCAAgC,CAAC,YAAOiG,CAAMhG,EAAED,GAAG,MAAME,EAAED,EAAE,EAAE,EAAE6B,EAAEmE,MAAM/F,EAAEF,EAAE,CAAC,cAAOiH,CAAQhH,GAAG,MAAM,kBAAkBA,CAAC,EAAE,IAAI6I,EAAE5I,EAAE,KAAKE,EAAE,MAAMqC,UAAUyE,EAAE,WAAAnD,CAAY9D,EAAEgD,EAAEyE,WAAW1D,QAAQnD,KAAKkI,WAAW9I,CAAC,CAAC,IAAA+E,CAAK/E,GAAG,MAAMD,EAAEiD,EAAE+B,KAAK/E,GAAG,GAAGD,EAAEa,KAAKkI,WAAW,MAAM,IAAI1I,EAAE,OAAOL,mCAAmCa,KAAKkI,cAAc,OAAO9I,EAAE+E,KAAKhF,EAAE,CAAC,UAAAgJ,CAAW/I,GAAG,OAAOY,KAAKmE,KAAK/E,GAAGmH,SAAS,OAAO,CAAC,KAAAnB,CAAMhG,EAAED,GAAG,MAAME,EAAE,iBAAiBD,EAAE6I,EAAEG,WAAWhJ,EAAE,QAAQA,EAAE0E,OAAO,GAAGzE,EAAEW,KAAKkI,WAAW,MAAM,IAAIzI,EAAE,OAAOL,EAAE0E,gCAAgC9D,KAAKkI,cAAc9F,EAAEgD,MAAM/F,EAAEF,GAAGA,EAAEiG,MAAMhG,EAAEC,EAAE,CAAC,OAAA+G,CAAQhH,GAAG,MAAM,iBAAiBA,EAAE6I,EAAEG,WAAWhJ,EAAE,SAASY,KAAKkI,cAAc9I,aAAagB,OAAO6H,EAAE1E,SAASnE,KAAKA,EAAE0E,QAAQ9D,KAAKkI,UAAU,EAAE,IAAIG,EAAEhJ,EAAE,KAAKE,EAAE,MAAM6B,UAAUiF,EAAE,WAAAnD,CAAY9D,GAAG+D,QAAQnD,KAAK6D,QAAQzE,CAAC,CAAC,IAAA+E,CAAK/E,GAAG,OAAOA,EAAE+E,KAAKnE,KAAK6D,QAAQ,CAAC,KAAAuB,CAAMhG,EAAED,GAAG,MAAM2E,OAAOzE,GAAGD,EAAE,GAAGC,IAAIW,KAAK6D,QAAQ,MAAM,IAAIpE,EAAE,OAAOL,EAAE0E,0BAA0B9D,KAAK6D,WAAW1E,EAAEiG,MAAMhG,EAAEC,EAAE,CAAC,OAAA+G,CAAQhH,GAAG,OAAOiJ,EAAE9E,SAASnE,IAAIA,EAAE0E,SAAS9D,KAAK6D,OAAO,EAAE,IAAIyE,EAAEjJ,EAAE,KAAKE,EAAE,MAAMiD,UAAU6D,EAAE,WAAAnD,CAAY9D,EAAEgD,EAAEyE,WAAW1D,QAAQnD,KAAKkI,WAAW9I,CAAC,CAAC,IAAA+E,CAAK/E,GAAG,MAAMD,EAAEiD,EAAE+B,KAAK/E,GAAG,GAAGD,EAAEa,KAAKkI,WAAW,MAAM,IAAI1I,EAAE,OAAOL,sCAAsCa,KAAKkI,cAAc,OAAO9I,EAAE+E,KAAKhF,EAAE,CAAC,KAAAiG,CAAMhG,EAAED,GAAG,MAAM2E,OAAOzE,GAAGD,EAAE,GAAGA,EAAE0E,OAAO9D,KAAKkI,WAAW,MAAM,IAAIzI,EAAE,OAAOL,EAAE0E,gCAAgC9D,KAAKkI,cAAc9F,EAAEgD,MAAM/F,EAAEF,GAAGA,EAAEiG,MAAMhG,EAAEC,EAAE,CAAC,OAAA+G,CAAQhH,GAAG,OAAOkJ,EAAE/E,SAASnE,IAAIA,EAAE0E,QAAQ9D,KAAKkI,UAAU,EAAE,MAAM7H,UAAUgG,EAAE,WAAAnD,CAAY9D,EAAED,GAAGgE,QAAQnD,KAAKuI,WAAWnJ,EAAEY,KAAK6D,QAAQ1E,CAAC,CAAC,IAAAgF,CAAK/E,GAAG,MAAMD,EAAE,IAAIE,EAAEgH,EAAEjG,MAAMJ,KAAK6D,SAAS,IAAI,IAAIxE,EAAE,EAAEA,EAAEW,KAAK6D,QAAQxE,IAAIF,EAAEE,GAAGW,KAAKuI,WAAWpE,KAAK/E,GAAG,OAAOD,CAAC,CAAC,KAAAiG,CAAMhG,EAAED,GAAG,KAAKC,aAAaC,EAAEgH,EAAEjG,OAAO,MAAM,IAAIX,EAAE,sBAAsB,GAAGL,EAAE0E,SAAS9D,KAAK6D,QAAQ,MAAM,IAAIpE,EAAE,qBAAqBL,EAAE0E,oBAAoB9D,KAAK6D,WAAW,IAAI,MAAMxE,KAAKD,EAAEY,KAAKuI,WAAWnD,MAAM/F,EAAEF,EAAE,CAAC,OAAAiH,CAAQhH,GAAG,KAAKA,aAAaC,EAAEgH,EAAEjG,QAAQhB,EAAE0E,SAAS9D,KAAK6D,QAAQ,OAAM,EAAG,IAAI,MAAM1E,KAAKC,EAAE,IAAIY,KAAKuI,WAAWnC,QAAQjH,GAAG,OAAM,EAAG,OAAM,CAAE,EAAE,MAAMmD,UAAU+D,EAAE,WAAAnD,CAAY9D,EAAED,EAAEiD,EAAEyE,WAAW1D,QAAQnD,KAAKuI,WAAWnJ,EAAEY,KAAKkI,WAAW/I,CAAC,CAAC,IAAAgF,CAAK/E,GAAG,MAAMD,EAAEiD,EAAE+B,KAAK/E,GAAG,GAAGD,EAAEa,KAAKkI,WAAW,MAAM,IAAI1I,EAAE,OAAOL,qCAAqCa,KAAKkI,cAAc,MAAM7I,EAAE,IAAIe,MAAMjB,GAAG,IAAI,IAAIM,EAAE,EAAEA,EAAEN,EAAEM,IAAIJ,EAAEI,GAAGO,KAAKuI,WAAWpE,KAAK/E,GAAG,OAAOC,CAAC,CAAC,KAAA+F,CAAMhG,EAAED,GAAG,KAAKC,aAAagB,OAAO,MAAM,IAAIX,EAAE,sBAAsB,GAAGL,EAAE0E,OAAO9D,KAAKkI,WAAW,MAAM,IAAIzI,EAAE,qBAAqBL,EAAE0E,0BAA0B9D,KAAKkI,cAAc9F,EAAEgD,MAAMhG,EAAE0E,OAAO3E,GAAG,IAAI,MAAME,KAAKD,EAAEY,KAAKuI,WAAWnD,MAAM/F,EAAEF,EAAE,CAAC,OAAAiH,CAAQhH,GAAG,KAAKA,aAAagB,QAAQhB,EAAE0E,OAAO9D,KAAKkI,WAAW,OAAM,EAAG,IAAI,MAAM/I,KAAKC,EAAE,IAAIY,KAAKuI,WAAWnC,QAAQjH,GAAG,OAAM,EAAG,OAAM,CAAE,EAAE,MAAMmC,UAAUhC,EAAE,WAAA4D,CAAY9D,GAAG+D,QAAQnD,KAAKuI,WAAWnJ,CAAC,CAAC,IAAA+E,CAAK/E,GAAG,GAAGmB,EAAE4D,KAAK/E,GAAG,OAAOY,KAAKuI,WAAWpE,KAAK/E,EAAE,CAAC,KAAAgG,CAAMhG,EAAED,GAAG,MAAME,EAAE,MAAMD,EAAEmB,EAAE6E,MAAM/F,EAAEF,GAAGE,GAAGW,KAAKuI,WAAWnD,MAAMhG,EAAED,EAAE,CAAC,OAAAiH,CAAQhH,GAAG,OAAO,MAAMA,GAAGY,KAAKuI,WAAWnC,QAAQhH,EAAE,EAAE,MAAMsD,UAAUpD,EAAE,WAAO6E,GAAO,CAAC,YAAOiB,CAAMhG,GAAG,QAAG,IAASA,EAAE,MAAM,IAAIK,EAAE,uCAAuC,CAAC,cAAO2G,CAAQhH,GAAG,YAAO,IAASA,CAAC,EAAE,MAAMuB,UAAUrB,EAAE,WAAA4D,CAAY9D,EAAED,GAAGgE,QAAQnD,KAAKyH,KAAKrI,EAAEY,KAAKwI,MAAMrJ,CAAC,CAAC,WAAOgF,CAAK/E,GAAG,MAAMD,EAAE8B,EAAEkD,KAAK/E,GAAGC,EAAEW,KAAKyI,SAAStJ,GAAG,QAAG,IAASE,EAAE,MAAM,IAAIG,EAAE,WAAWQ,KAAK0I,6BAA6BvJ,KAAK,OAAOE,CAAC,CAAC,YAAO+F,CAAMhG,EAAED,GAAG,KAAKC,aAAaY,MAAM,MAAM,IAAIP,EAAE,WAAWL,cAAcY,KAAK0I,YAAYzH,EAAEmE,MAAMhG,EAAEoJ,MAAMrJ,EAAE,CAAC,cAAOiH,CAAQhH,GAAG,OAAOA,aAAaY,IAAI,CAAC,cAAO2I,GAAU,OAAO3I,KAAK4I,QAAQ,CAAC,aAAOC,GAAS,OAAO5I,OAAO4I,OAAO7I,KAAK4I,SAAS,CAAC,eAAOE,CAAS1J,GAAG,MAAMD,EAAEa,KAAK4I,SAASxJ,GAAG,IAAID,EAAE,MAAM,IAAI8D,UAAU,GAAG7D,wBAAwBY,KAAK0I,YAAY,OAAOvJ,CAAC,CAAC,gBAAO4J,CAAU3J,GAAG,MAAMD,EAAEa,KAAKyI,SAASrJ,GAAG,QAAG,IAASD,EAAE,MAAM,IAAI8D,UAAU,GAAG7D,qCAAqCY,KAAK0I,YAAY,OAAOvJ,CAAC,CAAC,aAAO6J,CAAO5J,EAAED,EAAEE,GAAG,MAAMI,EAAE,cAAckB,IAAIlB,EAAEiJ,SAASvJ,EAAEC,EAAE6J,QAAQ9J,GAAGM,EAAEA,EAAEmJ,SAAS,CAAC,EAAEnJ,EAAEgJ,SAAS,CAAC,EAAE,IAAI,MAAMrJ,EAAED,KAAKc,OAAOiJ,QAAQ7J,GAAG,CAAC,MAAMA,EAAE,IAAII,EAAEL,EAAED,GAAGM,EAAEmJ,SAASxJ,GAAGC,EAAEI,EAAEgJ,SAAStJ,GAAGE,EAAEI,EAAEL,GAAG,IAAIC,CAAC,CAAC,OAAOI,CAAC,EAAE,MAAMiC,UAAUpC,EAAE,OAAA6J,GAAU,MAAM,IAAI/F,EAAE,iEAAiE,EAAE,MAAMtB,UAAUxC,EAAE,WAAA4D,CAAY9D,GAAG+D,QAAQnD,KAAKoJ,YAAYhK,GAAG,CAAC,CAAC,CAAC,WAAO+E,CAAK/E,GAAG,MAAMD,EAAE,CAAC,EAAE,IAAI,MAAME,EAAEI,KAAKO,KAAKqJ,QAAQlK,EAAEE,GAAGI,EAAE0E,KAAK/E,GAAG,OAAO,IAAIY,KAAKb,EAAE,CAAC,YAAOiG,CAAMhG,EAAED,GAAG,KAAKC,aAAaY,MAAM,MAAM,IAAIP,EAAE,GAAGL,cAAcY,KAAKsJ,cAAc,IAAI,MAAMjK,EAAEI,KAAKO,KAAKqJ,QAAQ,CAAC,MAAM7J,EAAEJ,EAAEgK,YAAY/J,GAAGI,EAAE2F,MAAM5F,EAAEL,EAAE,CAAC,CAAC,cAAOiH,CAAQhH,GAAG,OAAOA,aAAaY,IAAI,CAAC,aAAOgJ,CAAO5J,EAAED,EAAEE,GAAG,MAAMI,EAAE,cAAcqC,IAAIrC,EAAE6J,WAAWnK,EAAEC,EAAE6J,QAAQ9J,GAAGM,EAAE,MAAMD,EAAE,IAAIY,MAAMf,EAAEyE,QAAQ,IAAI,IAAI3E,EAAE,EAAEA,EAAEE,EAAEyE,OAAO3E,IAAI,CAAC,MAAMiE,EAAE/D,EAAEF,GAAGkE,EAAED,EAAE,GAAG,IAAIE,EAAEF,EAAE,GAAGE,aAAa5B,IAAI4B,EAAEA,EAAE6F,QAAQ/J,IAAII,EAAEL,GAAG,CAACkE,EAAEC,GAAG7D,EAAEI,UAAUwD,GAAGkG,EAAElG,EAAE,CAAC,OAAO5D,EAAE4J,QAAQ7J,EAAEC,CAAC,EAAE,SAAS8J,EAAEnK,GAAG,OAAO,SAASD,GAAG,YAAO,IAASA,IAAIa,KAAKoJ,YAAYhK,GAAGD,GAAGa,KAAKoJ,YAAYhK,EAAE,CAAC,CAAC,MAAM4C,UAAUqE,EAAE,WAAAnD,CAAY9D,EAAED,GAAGgE,QAAQnD,KAAKwJ,IAAIpK,EAAED,EAAE,CAAC,GAAAqK,CAAIpK,EAAED,GAAG,iBAAiBC,IAAIA,EAAEY,KAAKkD,YAAYuG,UAAUX,SAAS1J,IAAIY,KAAK0J,QAAQtK,EAAE,MAAMC,EAAEW,KAAKkD,YAAYyG,aAAa3J,KAAK0J,SAAS1J,KAAK4J,KAAKvK,EAAEW,KAAK6J,SAASxK,IAAIqD,EAAEA,EAAE1C,KAAKkD,YAAY4G,MAAMzK,GAAGW,KAAK+G,OAAO5H,CAAC,CAAC,GAAA4K,CAAI3K,EAAEY,KAAK4J,MAAM,GAAG5J,KAAK4J,OAAOlH,GAAG1C,KAAK4J,OAAOxK,EAAE,MAAM,IAAI6D,UAAU,GAAG7D,aAAa,OAAOY,KAAK+G,MAAM,CAAC,SAAS,OAAO/G,KAAK0J,OAAO,CAAC,GAAAM,GAAM,OAAOhK,KAAK4J,IAAI,CAAC,OAAAK,GAAU,OAAOjK,KAAK6J,QAAQ,CAAC,KAAArB,GAAQ,OAAOxI,KAAK+G,MAAM,CAAC,mBAAO4C,CAAavK,GAAG,MAAMD,EAAEa,KAAKkK,UAAUH,IAAI3K,GAAG,QAAG,IAASD,EAAE,OAAOA,EAAE,GAAGa,KAAKmK,YAAY,OAAOnK,KAAKmK,YAAY,MAAM,IAAIlH,UAAU,qBAAqB7D,IAAI,CAAC,oBAAOgL,CAAchL,GAAG,OAAOA,IAAIsD,EAAEA,EAAE1C,KAAK8J,MAAM1K,EAAE,CAAC,WAAO+E,CAAK/E,GAAG,MAAMD,EAAEa,KAAKyJ,UAAUtF,KAAK/E,GAAGC,EAAEW,KAAK2J,aAAaxK,GAAGM,EAAEJ,IAAIqD,EAAEA,EAAE1C,KAAK8J,MAAMzK,GAAG,IAAIG,EAAE,OAAOA,OAAE,IAASC,EAAEA,EAAE0E,KAAK/E,GAAGC,EAAE8E,KAAK/E,GAAG,IAAIY,KAAKb,EAAEK,EAAE,CAAC,YAAO4F,CAAMhG,EAAED,GAAG,KAAKC,aAAaY,MAAM,MAAM,IAAIP,EAAE,GAAGL,cAAcY,KAAKqK,aAAarK,KAAKyJ,UAAUrE,MAAMhG,EAAEkL,SAASnL,GAAGC,EAAE6K,UAAU7E,MAAMhG,EAAEoJ,QAAQrJ,EAAE,CAAC,cAAOiH,CAAQhH,GAAG,OAAOA,aAAaY,IAAI,CAAC,aAAOgJ,CAAO5J,EAAED,EAAEE,GAAG,MAAMI,EAAE,cAAcuC,IAAIvC,EAAE4K,UAAUlL,EAAEC,EAAE6J,QAAQ9J,GAAGM,EAAEJ,EAAEkL,oBAAoB7I,EAAEjC,EAAEgK,UAAUpK,EAAEkL,SAASpB,QAAQ/J,GAAGK,EAAEgK,UAAUpK,EAAEkL,SAAS9K,EAAEyK,UAAU,IAAIM,IAAI/K,EAAEqK,MAAM,CAAC,EAAE,IAAItK,EAAEH,EAAEoL,WAAWjL,aAAakC,IAAIlC,EAAEA,EAAE2J,QAAQ/J,IAAIK,EAAE0K,YAAY3K,EAAE,IAAI,MAAMJ,EAAED,KAAKE,EAAEqL,SAAS,CAAC,MAAMrL,EAAE,iBAAiBD,EAAEK,EAAEgK,UAAUX,SAAS1J,GAAGA,EAAEK,EAAEyK,UAAUV,IAAInK,EAAEF,EAAE,CAAC,QAAG,IAASM,EAAEgK,UAAUZ,OAAO,IAAI,MAAMzJ,KAAKK,EAAEgK,UAAUZ,SAASpJ,EAAEL,EAAEqI,MAAM,SAAStI,GAAG,OAAO,IAAIM,EAAEL,EAAED,EAAE,EAAEM,EAAEI,UAAUT,EAAEqI,MAAM,SAAStI,GAAG,OAAOa,KAAKwJ,IAAIpK,EAAED,EAAE,EAAE,GAAGE,EAAEsL,KAAK,IAAI,MAAMxL,EAAEK,KAAKS,OAAOiJ,QAAQ7J,EAAEsL,MAAMlL,EAAEqK,MAAM3K,GAAGK,aAAakC,EAAElC,EAAE2J,QAAQ/J,GAAGI,EAAEA,IAAIkD,IAAIjD,EAAEI,UAAUV,GAAG,WAAW,OAAOa,KAAK+J,IAAI5K,EAAE,GAAG,OAAOM,CAAC,EAAE,MAAMmL,UAAUlJ,EAAE,WAAAwB,CAAY9D,GAAG+D,QAAQnD,KAAKyH,KAAKrI,CAAC,CAAC,OAAA+J,CAAQ/J,GAAG,OAAOA,EAAEyL,YAAY7K,KAAKyH,MAAM0B,QAAQ/J,EAAE,EAAE,MAAM0L,UAAUpJ,EAAE,WAAAwB,CAAY9D,EAAED,EAAEE,GAAE,GAAI8D,QAAQnD,KAAK+K,eAAe3L,EAAEY,KAAK8D,OAAO3E,EAAEa,KAAKgL,SAAS3L,CAAC,CAAC,OAAA8J,CAAQ/J,GAAG,IAAID,EAAEa,KAAK+K,eAAe1L,EAAEW,KAAK8D,OAAO,OAAO3E,aAAauC,IAAIvC,EAAEA,EAAEgK,QAAQ/J,IAAIC,aAAaqC,IAAIrC,EAAEA,EAAE8J,QAAQ/J,IAAIY,KAAKgL,SAAS,IAAI1I,EAAEnD,EAAEE,GAAG,IAAIgB,EAAElB,EAAEE,EAAE,EAAE,MAAM4L,UAAUvJ,EAAE,WAAAwB,CAAY9D,GAAG+D,QAAQnD,KAAK+K,eAAe3L,EAAEY,KAAKyH,KAAKrI,EAAEqI,IAAI,CAAC,OAAA0B,CAAQ/J,GAAG,IAAID,EAAEa,KAAK+K,eAAe,OAAO5L,aAAauC,IAAIvC,EAAEA,EAAEgK,QAAQ/J,IAAI,IAAIkC,EAAEnC,EAAE,EAAE,MAAM+L,UAAUxJ,EAAE,WAAAwB,CAAY9D,EAAED,GAAGgE,QAAQnD,KAAKmL,UAAU/L,EAAEY,KAAK8D,OAAO3E,CAAC,CAAC,OAAAgK,CAAQ/J,GAAG,IAAID,EAAEa,KAAK8D,OAAO,OAAO3E,aAAauC,IAAIvC,EAAEA,EAAEgK,QAAQ/J,IAAI,IAAIY,KAAKmL,UAAUhM,EAAE,EAAE,MAAMiM,EAAE,WAAAlI,CAAY9D,EAAED,EAAEE,GAAGW,KAAKkD,YAAY9D,EAAEY,KAAKyH,KAAKtI,EAAEa,KAAK+C,OAAO1D,CAAC,CAAC,OAAA8J,CAAQ/J,GAAG,OAAOY,KAAKyH,QAAQrI,EAAE6J,QAAQ7J,EAAE6J,QAAQjJ,KAAKyH,MAAMzH,KAAKkD,YAAY9D,EAAEY,KAAKyH,KAAKzH,KAAK+C,OAAO,EAAE,SAASsI,EAAEjM,EAAED,EAAEE,GAAG,OAAOA,aAAaqC,IAAIrC,EAAEA,EAAE8J,QAAQ/J,IAAIA,EAAE6J,QAAQ9J,GAAGE,EAAEA,CAAC,CAAC,SAASiM,EAAGlM,EAAED,EAAEE,GAAG,OAAOD,EAAE6J,QAAQ9J,GAAGE,EAAEA,CAAC,CAAC,MAAMkM,GAAG,WAAArI,CAAY9D,GAAGY,KAAKwL,aAAapM,EAAEY,KAAKyL,aAAa,CAAC,CAAC,CAAC,IAAAC,CAAKtM,EAAED,GAAG,MAAME,EAAE,IAAI+L,EAAEzK,EAAEqI,OAAO5J,EAAED,GAAGa,KAAK2L,OAAOvM,EAAEC,EAAE,CAAC,MAAAuM,CAAOxM,EAAED,GAAG,MAAME,EAAE,IAAI+L,EAAEtJ,EAAEkH,OAAO5J,EAAED,GAAGa,KAAK2L,OAAOvM,EAAEC,EAAE,CAAC,KAAAwM,CAAMzM,EAAED,GAAG,MAAME,EAAE,IAAI+L,EAAEpJ,EAAEgH,OAAO5J,EAAED,GAAGa,KAAK2L,OAAOvM,EAAEC,EAAE,CAAC,OAAAyM,CAAQ1M,EAAED,GAAG,MAAME,EAAE,IAAI+L,EAAEC,EAAEjM,EAAED,GAAGa,KAAK2L,OAAOvM,EAAEC,EAAE,CAAC,MAAMD,EAAED,GAAG,MAAME,EAAE,IAAI+L,EAAEE,EAAGlM,EAAED,GAAGa,KAAK2L,OAAOvM,EAAEC,EAAE,CAAC,OAAO,OAAOqD,CAAC,CAAC,IAAAqJ,GAAO,OAAOxL,CAAC,CAAC,GAAAyL,GAAM,OAAO/K,CAAC,CAAC,KAAAgL,GAAQ,OAAOlL,CAAC,CAAC,IAAAmL,GAAO,OAAO9J,CAAC,CAAC,MAAA+J,GAAS,OAAOjK,CAAC,CAAC,KAAAkK,GAAQ,OAAOvL,CAAC,CAAC,MAAAwL,GAAS,OAAO5L,CAAC,CAAC,SAAA6L,GAAY,OAAO9K,CAAC,CAAC,MAAA+K,CAAOnN,GAAG,OAAO,IAAI8L,EAAEtJ,EAAExC,EAAE,CAAC,MAAAoN,CAAOpN,GAAG,OAAO,IAAI8L,EAAE9J,EAAEhC,EAAE,CAAC,SAAAqN,CAAUrN,GAAG,OAAO,IAAI8L,EAAE1I,EAAEpD,EAAE,CAAC,KAAAsN,CAAMtN,EAAED,GAAG,OAAO,IAAI2L,EAAE1L,EAAED,EAAE,CAAC,QAAAwN,CAASvN,EAAED,GAAG,OAAO,IAAI2L,EAAE1L,EAAED,GAAE,EAAG,CAAC,MAAAyN,CAAOxN,GAAG,OAAO,IAAI6L,EAAE7L,EAAE,CAAC,MAAAuM,CAAOvM,EAAED,GAAG,QAAG,IAASa,KAAKwL,aAAapM,GAAG,MAAM,IAAIgE,EAAE,GAAGhE,wBAAwBY,KAAKyL,aAAarM,GAAGD,CAAC,CAAC,MAAA0N,CAAOzN,GAAG,OAAO,IAAIwL,EAAExL,EAAE,CAAC,OAAA+J,GAAU,IAAI,MAAM/J,KAAKa,OAAO4I,OAAO7I,KAAKyL,cAAcrM,EAAE+J,QAAQ,CAAC0B,YAAY7K,KAAKyL,aAAaxC,QAAQjJ,KAAKwL,cAAc,EAAE,SAASxI,GAAG5D,EAAED,EAAE,CAAC,GAAG,GAAGC,EAAE,CAAC,MAAMC,EAAE,IAAIkM,GAAGpM,GAAGC,EAAEC,GAAGA,EAAE8J,SAAS,CAAC,OAAOhK,CAAC,GAAG,IAAI,CAACC,EAAED,KAAK,aAAaA,EAAEiJ,WAAW,SAAShJ,GAAG,IAAID,EAAEmE,EAAElE,GAAGC,EAAEF,EAAE,GAAGM,EAAEN,EAAE,GAAG,OAAO,GAAGE,EAAEI,GAAG,EAAEA,CAAC,EAAEN,EAAE2N,YAAY,SAAS1N,GAAG,IAAID,EAAEE,EAAE+D,EAAEE,EAAElE,GAAGiE,EAAED,EAAE,GAAGR,EAAEQ,EAAE,GAAGuB,EAAE,IAAInF,EAAE,SAASJ,EAAED,EAAEE,GAAG,OAAO,GAAGF,EAAEE,GAAG,EAAEA,CAAC,CAAlC,CAAoC,EAAEgE,EAAET,IAAIgC,EAAE,EAAE9B,EAAEF,EAAE,EAAES,EAAE,EAAEA,EAAE,IAAIhE,EAAE,EAAEA,EAAEyD,EAAEzD,GAAG,EAAEF,EAAEM,EAAEL,EAAE2N,WAAW1N,KAAK,GAAGI,EAAEL,EAAE2N,WAAW1N,EAAE,KAAK,GAAGI,EAAEL,EAAE2N,WAAW1N,EAAE,KAAK,EAAEI,EAAEL,EAAE2N,WAAW1N,EAAE,IAAIsF,EAAEC,KAAKzF,GAAG,GAAG,IAAIwF,EAAEC,KAAKzF,GAAG,EAAE,IAAIwF,EAAEC,KAAK,IAAIzF,EAAuL,OAArL,IAAIyD,IAAIzD,EAAEM,EAAEL,EAAE2N,WAAW1N,KAAK,EAAEI,EAAEL,EAAE2N,WAAW1N,EAAE,KAAK,EAAEsF,EAAEC,KAAK,IAAIzF,GAAG,IAAIyD,IAAIzD,EAAEM,EAAEL,EAAE2N,WAAW1N,KAAK,GAAGI,EAAEL,EAAE2N,WAAW1N,EAAE,KAAK,EAAEI,EAAEL,EAAE2N,WAAW1N,EAAE,KAAK,EAAEsF,EAAEC,KAAKzF,GAAG,EAAE,IAAIwF,EAAEC,KAAK,IAAIzF,GAAUwF,CAAC,EAAExF,EAAE6N,cAAc,SAAS5N,GAAG,IAAI,IAAID,EAAEM,EAAEL,EAAE0E,OAAOtE,EAAEC,EAAE,EAAE2D,EAAE,GAAGC,EAAE,MAAMC,EAAE,EAAEqB,EAAElF,EAAED,EAAE8D,EAAEqB,EAAErB,GAAGD,EAAED,EAAE6J,KAAKrK,EAAExD,EAAEkE,EAAEA,EAAED,EAAEsB,EAAEA,EAAErB,EAAED,IAA8H,OAA1H,IAAI7D,GAAGL,EAAEC,EAAEK,EAAE,GAAG2D,EAAE6J,KAAK5N,EAAEF,GAAG,GAAGE,EAAEF,GAAG,EAAE,IAAI,OAAO,IAAIK,IAAIL,GAAGC,EAAEK,EAAE,IAAI,GAAGL,EAAEK,EAAE,GAAG2D,EAAE6J,KAAK5N,EAAEF,GAAG,IAAIE,EAAEF,GAAG,EAAE,IAAIE,EAAEF,GAAG,EAAE,IAAI,MAAaiE,EAAE8J,KAAK,GAAG,EAAE,IAAI,IAAI7N,EAAE,GAAGI,EAAE,GAAGD,EAAE,oBAAoBM,WAAWA,WAAWM,MAAMgD,EAAE,mEAAmEC,EAAE,EAAEA,EAAE,KAAKA,EAAEhE,EAAEgE,GAAGD,EAAEC,GAAG5D,EAAE2D,EAAE2J,WAAW1J,IAAIA,EAAE,SAASC,EAAElE,GAAG,IAAID,EAAEC,EAAE0E,OAAO,GAAG3E,EAAE,EAAE,EAAE,MAAM,IAAIgO,MAAM,kDAAkD,IAAI9N,EAAED,EAAEgO,QAAQ,KAAK,OAAO,IAAI/N,IAAIA,EAAEF,GAAG,CAACE,EAAEA,IAAIF,EAAE,EAAE,EAAEE,EAAE,EAAE,CAAC,SAASuD,EAAExD,EAAED,EAAEM,GAAG,IAAI,IAAID,EAAE4D,EAAEC,EAAE,GAAGC,EAAEnE,EAAEmE,EAAE7D,EAAE6D,GAAG,EAAE9D,GAAGJ,EAAEkE,IAAI,GAAG,WAAWlE,EAAEkE,EAAE,IAAI,EAAE,QAAQ,IAAIlE,EAAEkE,EAAE,IAAID,EAAE4J,KAAK5N,GAAG+D,EAAE5D,IAAI,GAAG,IAAIH,EAAE+D,GAAG,GAAG,IAAI/D,EAAE+D,GAAG,EAAE,IAAI/D,EAAE,GAAG+D,IAAI,OAAOC,EAAE6J,KAAK,GAAG,CAACzN,EAAE,IAAIsN,WAAW,IAAI,GAAGtN,EAAE,IAAIsN,WAAW,IAAI,IAAI,IAAI,CAAC3N,EAAED,EAAEE,KAAK,aAAa,MAAMI,EAAEJ,EAAE,KAAKG,EAAEH,EAAE,KAAK+D,EAAE,mBAAmBiK,QAAQ,mBAAmBA,OAAOC,IAAID,OAAOC,IAAI,8BAA8B,KAAKnO,EAAEO,GAAGkD,EAAEzD,EAAEoO,GAAG,GAAG,MAAMlK,EAAE,WAAW,SAASC,EAAElE,GAAG,GAAGA,EAAEiE,EAAE,MAAM,IAAI2D,WAAW,cAAc5H,EAAE,kCAAkC,MAAMD,EAAE,IAAIW,WAAWV,GAAG,OAAOa,OAAOC,eAAef,EAAEyD,EAAE/C,WAAWV,CAAC,CAAC,SAASyD,EAAExD,EAAED,EAAEE,GAAG,GAAG,iBAAiBD,EAAE,CAAC,GAAG,iBAAiBD,EAAE,MAAM,IAAI8D,UAAU,sEAAsE,OAAOH,EAAE1D,EAAE,CAAC,OAAOuF,EAAEvF,EAAED,EAAEE,EAAE,CAAC,SAASsF,EAAEvF,EAAED,EAAEE,GAAG,GAAG,iBAAiBD,EAAE,OAAO,SAASA,EAAED,GAA0C,GAAvC,iBAAiBA,GAAG,KAAKA,IAAIA,EAAE,SAAYyD,EAAE4K,WAAWrO,GAAG,MAAM,IAAI8D,UAAU,qBAAqB9D,GAAG,MAAME,EAAE,EAAEgH,EAAEjH,EAAED,GAAG,IAAIM,EAAE6D,EAAEjE,GAAG,MAAMG,EAAEC,EAAE2F,MAAMhG,EAAED,GAA2B,OAAxBK,IAAIH,IAAII,EAAEA,EAAE4H,MAAM,EAAE7H,IAAWC,CAAC,CAAtM,CAAwML,EAAED,GAAG,GAAGsE,YAAYC,OAAOtE,GAAG,OAAO,SAASA,GAAG,GAAG0L,EAAE1L,EAAEU,YAAY,CAAC,MAAMX,EAAE,IAAIW,WAAWV,GAAG,OAAO0G,EAAE3G,EAAEsO,OAAOtO,EAAEuO,WAAWvO,EAAEiJ,WAAW,CAAC,OAAOvC,EAAEzG,EAAE,CAAlH,CAAoHA,GAAG,GAAG,MAAMA,EAAE,MAAM,IAAI6D,UAAU,yHAAyH7D,GAAG,GAAG0L,EAAE1L,EAAEqE,cAAcrE,GAAG0L,EAAE1L,EAAEqO,OAAOhK,aAAa,OAAOqC,EAAE1G,EAAED,EAAEE,GAAG,GAAG,oBAAoBsO,oBAAoB7C,EAAE1L,EAAEuO,oBAAoBvO,GAAG0L,EAAE1L,EAAEqO,OAAOE,oBAAoB,OAAO7H,EAAE1G,EAAED,EAAEE,GAAG,GAAG,iBAAiBD,EAAE,MAAM,IAAI6D,UAAU,yEAAyE,MAAMxD,EAAEL,EAAE6H,SAAS7H,EAAE6H,UAAU,GAAG,MAAMxH,GAAGA,IAAIL,EAAE,OAAOwD,EAAEe,KAAKlE,EAAEN,EAAEE,GAAG,MAAMG,EAAE,SAASJ,GAAG,GAAGwD,EAAEW,SAASnE,GAAG,CAAC,MAAMD,EAAE,EAAEG,EAAEF,EAAE0E,QAAQzE,EAAEiE,EAAEnE,GAAG,OAAO,IAAIE,EAAEyE,QAAQ1E,EAAE6F,KAAK5F,EAAE,EAAE,EAAEF,GAAGE,CAAC,CAAC,YAAG,IAASD,EAAE0E,OAAa,iBAAiB1E,EAAE0E,QAAQmH,EAAE7L,EAAE0E,QAAQR,EAAE,GAAGuC,EAAEzG,GAAM,WAAWA,EAAEwO,MAAMxN,MAAMoD,QAAQpE,EAAEyO,MAAahI,EAAEzG,EAAEyO,WAAvD,CAA4D,CAA1O,CAA4OzO,GAAG,GAAGI,EAAE,OAAOA,EAAE,GAAG,oBAAoB6N,QAAQ,MAAMA,OAAOS,aAAa,mBAAmB1O,EAAEiO,OAAOS,aAAa,OAAOlL,EAAEe,KAAKvE,EAAEiO,OAAOS,aAAa,UAAU3O,EAAEE,GAAG,MAAM,IAAI4D,UAAU,yHAAyH7D,EAAE,CAAC,SAASwF,EAAExF,GAAG,GAAG,iBAAiBA,EAAE,MAAM,IAAI6D,UAAU,0CAA0C,GAAG7D,EAAE,EAAE,MAAM,IAAI4H,WAAW,cAAc5H,EAAE,iCAAiC,CAAC,SAAS0D,EAAE1D,GAAG,OAAOwF,EAAExF,GAAGkE,EAAElE,EAAE,EAAE,EAAE,EAAEE,EAAEF,GAAG,CAAC,SAASyG,EAAEzG,GAAG,MAAMD,EAAEC,EAAE0E,OAAO,EAAE,EAAE,EAAExE,EAAEF,EAAE0E,QAAQzE,EAAEiE,EAAEnE,GAAG,IAAI,IAAIM,EAAE,EAAEA,EAAEN,EAAEM,GAAG,EAAEJ,EAAEI,GAAG,IAAIL,EAAEK,GAAG,OAAOJ,CAAC,CAAC,SAASyG,EAAE1G,EAAED,EAAEE,GAAG,GAAGF,EAAE,GAAGC,EAAEgJ,WAAWjJ,EAAE,MAAM,IAAI6H,WAAW,wCAAwC,GAAG5H,EAAEgJ,WAAWjJ,GAAGE,GAAG,GAAG,MAAM,IAAI2H,WAAW,wCAAwC,IAAIvH,EAAE,OAAOA,OAAE,IAASN,QAAG,IAASE,EAAE,IAAIS,WAAWV,QAAG,IAASC,EAAE,IAAIS,WAAWV,EAAED,GAAG,IAAIW,WAAWV,EAAED,EAAEE,GAAGY,OAAOC,eAAeT,EAAEmD,EAAE/C,WAAWJ,CAAC,CAAC,SAASH,EAAEF,GAAG,GAAGA,GAAGiE,EAAE,MAAM,IAAI2D,WAAW,0DAA0D3D,EAAEkD,SAAS,IAAI,UAAU,OAAO,EAAEnH,CAAC,CAAC,SAASiH,EAAEjH,EAAED,GAAG,GAAGyD,EAAEW,SAASnE,GAAG,OAAOA,EAAE0E,OAAO,GAAGL,YAAYC,OAAOtE,IAAI0L,EAAE1L,EAAEqE,aAAa,OAAOrE,EAAEgJ,WAAW,GAAG,iBAAiBhJ,EAAE,MAAM,IAAI6D,UAAU,kGAAkG7D,GAAG,MAAMC,EAAED,EAAE0E,OAAOrE,EAAEsO,UAAUjK,OAAO,IAAG,IAAKiK,UAAU,GAAG,IAAItO,GAAG,IAAIJ,EAAE,OAAO,EAAE,IAAIG,GAAE,EAAG,OAAO,OAAOL,GAAG,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,OAAOE,EAAE,IAAI,OAAO,IAAI,QAAQ,OAAOkK,EAAEnK,GAAG0E,OAAO,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,OAAO,EAAEzE,EAAE,IAAI,MAAM,OAAOA,IAAI,EAAE,IAAI,SAAS,OAAO2C,EAAE5C,GAAG0E,OAAO,QAAQ,GAAGtE,EAAE,OAAOC,GAAG,EAAE8J,EAAEnK,GAAG0E,OAAO3E,GAAG,GAAGA,GAAG6O,cAAcxO,GAAE,EAAG,CAAC,SAAS8G,EAAElH,EAAED,EAAEE,GAAG,IAAII,GAAE,EAAG,SAAI,IAASN,GAAGA,EAAE,KAAKA,EAAE,GAAGA,EAAEa,KAAK8D,OAAO,MAAM,GAAG,SAAI,IAASzE,GAAGA,EAAEW,KAAK8D,UAAUzE,EAAEW,KAAK8D,QAAQzE,GAAG,EAAE,MAAM,GAAG,IAAIA,KAAK,KAAKF,KAAK,GAAG,MAAM,GAAG,IAAIC,IAAIA,EAAE,UAAU,OAAOA,GAAG,IAAI,MAAM,OAAOqB,EAAET,KAAKb,EAAEE,GAAG,IAAI,OAAO,IAAI,QAAQ,OAAO2I,EAAEhI,KAAKb,EAAEE,GAAG,IAAI,QAAQ,OAAO6C,EAAElC,KAAKb,EAAEE,GAAG,IAAI,SAAS,IAAI,SAAS,OAAOwB,EAAEb,KAAKb,EAAEE,GAAG,IAAI,SAAS,OAAO0B,EAAEf,KAAKb,EAAEE,GAAG,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,OAAOmC,EAAExB,KAAKb,EAAEE,GAAG,QAAQ,GAAGI,EAAE,MAAM,IAAIwD,UAAU,qBAAqB7D,GAAGA,GAAGA,EAAE,IAAI4O,cAAcvO,GAAE,EAAG,CAAC,SAASuG,EAAE5G,EAAED,EAAEE,GAAG,MAAMI,EAAEL,EAAED,GAAGC,EAAED,GAAGC,EAAEC,GAAGD,EAAEC,GAAGI,CAAC,CAAC,SAASyG,EAAE9G,EAAED,EAAEE,EAAEI,EAAED,GAAG,GAAG,IAAIJ,EAAE0E,OAAO,OAAO,EAAE,GAAG,iBAAiBzE,GAAGI,EAAEJ,EAAEA,EAAE,GAAGA,EAAE,WAAWA,EAAE,WAAWA,GAAG,aAAaA,GAAG,YAAY4L,EAAE5L,GAAGA,KAAKA,EAAEG,EAAE,EAAEJ,EAAE0E,OAAO,GAAGzE,EAAE,IAAIA,EAAED,EAAE0E,OAAOzE,GAAGA,GAAGD,EAAE0E,OAAO,CAAC,GAAGtE,EAAE,OAAO,EAAEH,EAAED,EAAE0E,OAAO,CAAC,MAAM,GAAGzE,EAAE,EAAE,CAAC,IAAIG,EAAE,OAAO,EAAEH,EAAE,CAAC,CAAC,GAAG,iBAAiBF,IAAIA,EAAEyD,EAAEe,KAAKxE,EAAEM,IAAImD,EAAEW,SAASpE,GAAG,OAAO,IAAIA,EAAE2E,QAAQ,EAAE0C,EAAEpH,EAAED,EAAEE,EAAEI,EAAED,GAAG,GAAG,iBAAiBL,EAAE,OAAOA,GAAG,IAAI,mBAAmBW,WAAWD,UAAUuN,QAAQ5N,EAAEM,WAAWD,UAAUuN,QAAQrN,KAAKX,EAAED,EAAEE,GAAGS,WAAWD,UAAUoO,YAAYlO,KAAKX,EAAED,EAAEE,GAAGmH,EAAEpH,EAAE,CAACD,GAAGE,EAAEI,EAAED,GAAG,MAAM,IAAIyD,UAAU,uCAAuC,CAAC,SAASuD,EAAEpH,EAAED,EAAEE,EAAEI,EAAED,GAAG,IAAI4D,EAAEC,EAAE,EAAEC,EAAElE,EAAE0E,OAAOlB,EAAEzD,EAAE2E,OAAO,QAAG,IAASrE,IAAI,UAAUA,EAAEkC,OAAOlC,GAAGuO,gBAAgB,UAAUvO,GAAG,YAAYA,GAAG,aAAaA,GAAG,CAAC,GAAGL,EAAE0E,OAAO,GAAG3E,EAAE2E,OAAO,EAAE,OAAO,EAAET,EAAE,EAAEC,GAAG,EAAEV,GAAG,EAAEvD,GAAG,CAAC,CAAC,SAASsF,EAAEvF,EAAED,GAAG,OAAO,IAAIkE,EAAEjE,EAAED,GAAGC,EAAE8O,aAAa/O,EAAEkE,EAAE,CAAC,GAAG7D,EAAE,CAAC,IAAIC,GAAG,EAAE,IAAI2D,EAAE/D,EAAE+D,EAAEE,EAAEF,IAAI,GAAGuB,EAAEvF,EAAEgE,KAAKuB,EAAExF,GAAG,IAAIM,EAAE,EAAE2D,EAAE3D,IAAI,IAAI,IAAIA,IAAIA,EAAE2D,GAAGA,EAAE3D,EAAE,IAAImD,EAAE,OAAOnD,EAAE4D,OAAO,IAAI5D,IAAI2D,GAAGA,EAAE3D,GAAGA,GAAG,CAAC,MAAM,IAAIJ,EAAEuD,EAAEU,IAAIjE,EAAEiE,EAAEV,GAAGQ,EAAE/D,EAAE+D,GAAG,EAAEA,IAAI,CAAC,IAAI/D,GAAE,EAAG,IAAI,IAAII,EAAE,EAAEA,EAAEmD,EAAEnD,IAAI,GAAGkF,EAAEvF,EAAEgE,EAAE3D,KAAKkF,EAAExF,EAAEM,GAAG,CAACJ,GAAE,EAAG,KAAK,CAAC,GAAGA,EAAE,OAAO+D,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS+K,EAAE/O,EAAED,EAAEE,EAAEI,GAAGJ,EAAEwI,OAAOxI,IAAI,EAAE,MAAMG,EAAEJ,EAAE0E,OAAOzE,EAAEI,GAAGA,EAAEoI,OAAOpI,IAAID,IAAIC,EAAED,GAAGC,EAAED,EAAE,MAAM4D,EAAEjE,EAAE2E,OAAO,IAAIT,EAAE,IAAI5D,EAAE2D,EAAE,IAAI3D,EAAE2D,EAAE,GAAGC,EAAE,EAAEA,EAAE5D,IAAI4D,EAAE,CAAC,MAAM5D,EAAE2O,SAASjP,EAAEkP,OAAO,EAAEhL,EAAE,GAAG,IAAI,GAAG4H,EAAExL,GAAG,OAAO4D,EAAEjE,EAAEC,EAAEgE,GAAG5D,CAAC,CAAC,OAAO4D,CAAC,CAAC,SAASpC,EAAE7B,EAAED,EAAEE,EAAEI,GAAG,OAAOmL,EAAErB,EAAEpK,EAAEC,EAAE0E,OAAOzE,GAAGD,EAAEC,EAAEI,EAAE,CAAC,SAASgH,EAAErH,EAAED,EAAEE,EAAEI,GAAG,OAAOmL,EAAE,SAASxL,GAAG,MAAMD,EAAE,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAED,EAAE0E,SAASzE,EAAEF,EAAE8N,KAAK,IAAI7N,EAAE2N,WAAW1N,IAAI,OAAOF,CAAC,CAAtF,CAAwFA,GAAGC,EAAEC,EAAEI,EAAE,CAAC,SAASmH,EAAExH,EAAED,EAAEE,EAAEI,GAAG,OAAOmL,EAAE5I,EAAE7C,GAAGC,EAAEC,EAAEI,EAAE,CAAC,SAASF,EAAEH,EAAED,EAAEE,EAAEI,GAAG,OAAOmL,EAAE,SAASxL,EAAED,GAAG,IAAIE,EAAEI,EAAED,EAAE,MAAM4D,EAAE,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAEjE,EAAE0E,WAAW3E,GAAG,GAAG,KAAKkE,EAAEhE,EAAED,EAAE2N,WAAW1J,GAAG5D,EAAEJ,GAAG,EAAEG,EAAEH,EAAE,IAAI+D,EAAE6J,KAAKzN,GAAG4D,EAAE6J,KAAKxN,GAAG,OAAO2D,CAAC,CAAxI,CAA0IjE,EAAEC,EAAE0E,OAAOzE,GAAGD,EAAEC,EAAEI,EAAE,CAAC,SAASsB,EAAE3B,EAAED,EAAEE,GAAG,OAAO,IAAIF,GAAGE,IAAID,EAAE0E,OAAOrE,EAAEuN,cAAc5N,GAAGK,EAAEuN,cAAc5N,EAAEiI,MAAMlI,EAAEE,GAAG,CAAC,SAAS2I,EAAE5I,EAAED,EAAEE,GAAGA,EAAE0F,KAAKuJ,IAAIlP,EAAE0E,OAAOzE,GAAG,MAAMI,EAAE,GAAG,IAAID,EAAEL,EAAE,KAAKK,EAAEH,GAAG,CAAC,MAAMF,EAAEC,EAAEI,GAAG,IAAI4D,EAAE,KAAKC,EAAElE,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAEA,EAAE,IAAI,EAAE,EAAE,GAAGK,EAAE6D,GAAGhE,EAAE,CAAC,IAAIA,EAAEI,EAAE6D,EAAEV,EAAE,OAAOS,GAAG,KAAK,EAAElE,EAAE,MAAMiE,EAAEjE,GAAG,MAAM,KAAK,EAAEE,EAAED,EAAEI,EAAE,GAAG,MAAM,IAAIH,KAAKuD,GAAG,GAAGzD,IAAI,EAAE,GAAGE,EAAEuD,EAAE,MAAMQ,EAAER,IAAI,MAAM,KAAK,EAAEvD,EAAED,EAAEI,EAAE,GAAGC,EAAEL,EAAEI,EAAE,GAAG,MAAM,IAAIH,IAAI,MAAM,IAAII,KAAKmD,GAAG,GAAGzD,IAAI,IAAI,GAAGE,IAAI,EAAE,GAAGI,EAAEmD,EAAE,OAAOA,EAAE,OAAOA,EAAE,SAASQ,EAAER,IAAI,MAAM,KAAK,EAAEvD,EAAED,EAAEI,EAAE,GAAGC,EAAEL,EAAEI,EAAE,GAAG8D,EAAElE,EAAEI,EAAE,GAAG,MAAM,IAAIH,IAAI,MAAM,IAAII,IAAI,MAAM,IAAI6D,KAAKV,GAAG,GAAGzD,IAAI,IAAI,GAAGE,IAAI,IAAI,GAAGI,IAAI,EAAE,GAAG6D,EAAEV,EAAE,OAAOA,EAAE,UAAUQ,EAAER,IAAI,CAAC,OAAOQ,GAAGA,EAAE,MAAMC,EAAE,GAAGD,EAAE,QAAQA,GAAG,MAAM3D,EAAEwN,KAAK7J,IAAI,GAAG,KAAK,OAAOA,EAAE,MAAM,KAAKA,GAAG3D,EAAEwN,KAAK7J,GAAG5D,GAAG6D,CAAC,CAAC,OAAO,SAASjE,GAAG,MAAMD,EAAEC,EAAE0E,OAAO,GAAG3E,GAAGiD,EAAE,OAAOT,OAAO4M,aAAaC,MAAM7M,OAAOvC,GAAG,IAAIC,EAAE,GAAGI,EAAE,EAAE,KAAKA,EAAEN,GAAGE,GAAGsC,OAAO4M,aAAaC,MAAM7M,OAAOvC,EAAEiI,MAAM5H,EAAEA,GAAG2C,IAAI,OAAO/C,CAAC,CAApK,CAAsKI,EAAE,CAACmD,EAAE6L,oBAAoB,WAAW,IAAI,MAAMrP,EAAE,IAAIU,WAAW,GAAGX,EAAE,CAACuP,IAAI,WAAW,OAAO,EAAE,GAAG,OAAOzO,OAAOC,eAAef,EAAEW,WAAWD,WAAWI,OAAOC,eAAed,EAAED,GAAG,KAAKC,EAAEsP,KAAK,CAAC,MAAMtP,GAAG,OAAM,CAAE,CAAC,CAAtL,GAA0LwD,EAAE6L,0BAAqB,IAAoBE,GAAS,mBAAmBA,EAAQC,OAAOD,EAAQC,MAAM,iJAAiJ3O,OAAO4O,eAAejM,EAAE/C,UAAU,SAAS,CAACiP,YAAW,EAAG/E,IAAI,WAAW,GAAGnH,EAAEW,SAASvD,MAAM,OAAOA,KAAKyN,MAAM,IAAIxN,OAAO4O,eAAejM,EAAE/C,UAAU,SAAS,CAACiP,YAAW,EAAG/E,IAAI,WAAW,GAAGnH,EAAEW,SAASvD,MAAM,OAAOA,KAAK0N,UAAU,IAAI9K,EAAEmM,SAAS,KAAKnM,EAAEe,KAAK,SAASvE,EAAED,EAAEE,GAAG,OAAOsF,EAAEvF,EAAED,EAAEE,EAAE,EAAEY,OAAOC,eAAe0C,EAAE/C,UAAUC,WAAWD,WAAWI,OAAOC,eAAe0C,EAAE9C,YAAY8C,EAAEjD,MAAM,SAASP,EAAED,EAAEE,GAAG,OAAO,SAASD,EAAED,EAAEE,GAAG,OAAOuF,EAAExF,GAAGA,GAAG,EAAEkE,EAAElE,QAAG,IAASD,EAAE,iBAAiBE,EAAEiE,EAAElE,GAAGiG,KAAKlG,EAAEE,GAAGiE,EAAElE,GAAGiG,KAAKlG,GAAGmE,EAAElE,EAAE,CAApG,CAAsGA,EAAED,EAAEE,EAAE,EAAEuD,EAAEiC,YAAY,SAASzF,GAAG,OAAO0D,EAAE1D,EAAE,EAAEwD,EAAEoM,gBAAgB,SAAS5P,GAAG,OAAO0D,EAAE1D,EAAE,EAAEwD,EAAEW,SAAS,SAASnE,GAAG,OAAO,MAAMA,IAAG,IAAKA,EAAE6P,WAAW7P,IAAIwD,EAAE/C,SAAS,EAAE+C,EAAEsM,QAAQ,SAAS9P,EAAED,GAAG,GAAG2L,EAAE1L,EAAEU,cAAcV,EAAEwD,EAAEe,KAAKvE,EAAEA,EAAE+P,OAAO/P,EAAEgJ,aAAa0C,EAAE3L,EAAEW,cAAcX,EAAEyD,EAAEe,KAAKxE,EAAEA,EAAEgQ,OAAOhQ,EAAEiJ,cAAcxF,EAAEW,SAASnE,KAAKwD,EAAEW,SAASpE,GAAG,MAAM,IAAI8D,UAAU,yEAAyE,GAAG7D,IAAID,EAAE,OAAO,EAAE,IAAIE,EAAED,EAAE0E,OAAOrE,EAAEN,EAAE2E,OAAO,IAAI,IAAItE,EAAE,EAAE4D,EAAE2B,KAAKuJ,IAAIjP,EAAEI,GAAGD,EAAE4D,IAAI5D,EAAE,GAAGJ,EAAEI,KAAKL,EAAEK,GAAG,CAACH,EAAED,EAAEI,GAAGC,EAAEN,EAAEK,GAAG,KAAK,CAAC,OAAOH,EAAEI,GAAG,EAAEA,EAAEJ,EAAE,EAAE,CAAC,EAAEuD,EAAE4K,WAAW,SAASpO,GAAG,OAAOuC,OAAOvC,GAAG4O,eAAe,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,OAAM,EAAG,QAAQ,OAAM,EAAG,EAAEpL,EAAEwM,OAAO,SAAShQ,EAAED,GAAG,IAAIiB,MAAMoD,QAAQpE,GAAG,MAAM,IAAI6D,UAAU,+CAA+C,GAAG,IAAI7D,EAAE0E,OAAO,OAAOlB,EAAEjD,MAAM,GAAG,IAAIN,EAAE,QAAG,IAASF,EAAE,IAAIA,EAAE,EAAEE,EAAE,EAAEA,EAAED,EAAE0E,SAASzE,EAAEF,GAAGC,EAAEC,GAAGyE,OAAO,MAAMrE,EAAEmD,EAAEiC,YAAY1F,GAAG,IAAIK,EAAE,EAAE,IAAIH,EAAE,EAAEA,EAAED,EAAE0E,SAASzE,EAAE,CAAC,IAAIF,EAAEC,EAAEC,GAAG,GAAGyL,EAAE3L,EAAEW,YAAYN,EAAEL,EAAE2E,OAAOrE,EAAEqE,QAAQlB,EAAEW,SAASpE,KAAKA,EAAEyD,EAAEe,KAAKxE,IAAIA,EAAE8F,KAAKxF,EAAED,IAAIM,WAAWD,UAAU2J,IAAIzJ,KAAKN,EAAEN,EAAEK,OAAO,CAAC,IAAIoD,EAAEW,SAASpE,GAAG,MAAM,IAAI8D,UAAU,+CAA+C9D,EAAE8F,KAAKxF,EAAED,EAAE,CAACA,GAAGL,EAAE2E,MAAM,CAAC,OAAOrE,CAAC,EAAEmD,EAAEwF,WAAW/B,EAAEzD,EAAE/C,UAAUoP,WAAU,EAAGrM,EAAE/C,UAAUwP,OAAO,WAAW,MAAMjQ,EAAEY,KAAK8D,OAAO,GAAG1E,EAAE,GAAG,EAAE,MAAM,IAAI4H,WAAW,6CAA6C,IAAI,IAAI7H,EAAE,EAAEA,EAAEC,EAAED,GAAG,EAAE6G,EAAEhG,KAAKb,EAAEA,EAAE,GAAG,OAAOa,IAAI,EAAE4C,EAAE/C,UAAUyP,OAAO,WAAW,MAAMlQ,EAAEY,KAAK8D,OAAO,GAAG1E,EAAE,GAAG,EAAE,MAAM,IAAI4H,WAAW,6CAA6C,IAAI,IAAI7H,EAAE,EAAEA,EAAEC,EAAED,GAAG,EAAE6G,EAAEhG,KAAKb,EAAEA,EAAE,GAAG6G,EAAEhG,KAAKb,EAAE,EAAEA,EAAE,GAAG,OAAOa,IAAI,EAAE4C,EAAE/C,UAAU0P,OAAO,WAAW,MAAMnQ,EAAEY,KAAK8D,OAAO,GAAG1E,EAAE,GAAG,EAAE,MAAM,IAAI4H,WAAW,6CAA6C,IAAI,IAAI7H,EAAE,EAAEA,EAAEC,EAAED,GAAG,EAAE6G,EAAEhG,KAAKb,EAAEA,EAAE,GAAG6G,EAAEhG,KAAKb,EAAE,EAAEA,EAAE,GAAG6G,EAAEhG,KAAKb,EAAE,EAAEA,EAAE,GAAG6G,EAAEhG,KAAKb,EAAE,EAAEA,EAAE,GAAG,OAAOa,IAAI,EAAE4C,EAAE/C,UAAU0G,SAAS,WAAW,MAAMnH,EAAEY,KAAK8D,OAAO,OAAO,IAAI1E,EAAE,GAAG,IAAI2O,UAAUjK,OAAOkE,EAAEhI,KAAK,EAAEZ,GAAGkH,EAAEkI,MAAMxO,KAAK+N,UAAU,EAAEnL,EAAE/C,UAAU2P,eAAe5M,EAAE/C,UAAU0G,SAAS3D,EAAE/C,UAAU4P,OAAO,SAASrQ,GAAG,IAAIwD,EAAEW,SAASnE,GAAG,MAAM,IAAI6D,UAAU,6BAA6B,OAAOjD,OAAOZ,GAAG,IAAIwD,EAAEsM,QAAQlP,KAAKZ,EAAE,EAAEwD,EAAE/C,UAAU6P,QAAQ,WAAW,IAAItQ,EAAE,GAAG,MAAMC,EAAEF,EAAEoO,GAAG,OAAOnO,EAAEY,KAAKuG,SAAS,MAAM,EAAElH,GAAGsQ,QAAQ,UAAU,OAAOC,OAAO5P,KAAK8D,OAAOzE,IAAID,GAAG,SAAS,WAAWA,EAAE,GAAG,EAAEgE,IAAIR,EAAE/C,UAAUuD,GAAGR,EAAE/C,UAAU6P,SAAS9M,EAAE/C,UAAUqP,QAAQ,SAAS9P,EAAED,EAAEE,EAAEI,EAAED,GAAG,GAAGsL,EAAE1L,EAAEU,cAAcV,EAAEwD,EAAEe,KAAKvE,EAAEA,EAAE+P,OAAO/P,EAAEgJ,cAAcxF,EAAEW,SAASnE,GAAG,MAAM,IAAI6D,UAAU,wFAAwF7D,GAAG,QAAG,IAASD,IAAIA,EAAE,QAAG,IAASE,IAAIA,EAAED,EAAEA,EAAE0E,OAAO,QAAG,IAASrE,IAAIA,EAAE,QAAG,IAASD,IAAIA,EAAEQ,KAAK8D,QAAQ3E,EAAE,GAAGE,EAAED,EAAE0E,QAAQrE,EAAE,GAAGD,EAAEQ,KAAK8D,OAAO,MAAM,IAAIkD,WAAW,sBAAsB,GAAGvH,GAAGD,GAAGL,GAAGE,EAAE,OAAO,EAAE,GAAGI,GAAGD,EAAE,OAAO,EAAE,GAAGL,GAAGE,EAAE,OAAO,EAAE,GAAGW,OAAOZ,EAAE,OAAO,EAAE,IAAIgE,GAAG5D,KAAK,IAAIC,KAAK,GAAG4D,GAAGhE,KAAK,IAAIF,KAAK,GAAG,MAAMmE,EAAEyB,KAAKuJ,IAAIlL,EAAEC,GAAGsB,EAAE3E,KAAKqH,MAAM5H,EAAED,GAAGoF,EAAExF,EAAEiI,MAAMlI,EAAEE,GAAG,IAAI,IAAID,EAAE,EAAEA,EAAEkE,IAAIlE,EAAE,GAAGuF,EAAEvF,KAAKwF,EAAExF,GAAG,CAACgE,EAAEuB,EAAEvF,GAAGiE,EAAEuB,EAAExF,GAAG,KAAK,CAAC,OAAOgE,EAAEC,GAAG,EAAEA,EAAED,EAAE,EAAE,CAAC,EAAER,EAAE/C,UAAUgQ,SAAS,SAASzQ,EAAED,EAAEE,GAAG,OAAO,IAAIW,KAAKoN,QAAQhO,EAAED,EAAEE,EAAE,EAAEuD,EAAE/C,UAAUuN,QAAQ,SAAShO,EAAED,EAAEE,GAAG,OAAO6G,EAAElG,KAAKZ,EAAED,EAAEE,GAAE,EAAG,EAAEuD,EAAE/C,UAAUoO,YAAY,SAAS7O,EAAED,EAAEE,GAAG,OAAO6G,EAAElG,KAAKZ,EAAED,EAAEE,GAAE,EAAG,EAAEuD,EAAE/C,UAAUuF,MAAM,SAAShG,EAAED,EAAEE,EAAEI,GAAG,QAAG,IAASN,EAAEM,EAAE,OAAOJ,EAAEW,KAAK8D,OAAO3E,EAAE,OAAO,QAAG,IAASE,GAAG,iBAAiBF,EAAEM,EAAEN,EAAEE,EAAEW,KAAK8D,OAAO3E,EAAE,MAAM,CAAC,IAAI2Q,SAAS3Q,GAAG,MAAM,IAAIgO,MAAM,2EAA2EhO,KAAK,EAAE2Q,SAASzQ,IAAIA,KAAK,OAAE,IAASI,IAAIA,EAAE,UAAUA,EAAEJ,EAAEA,OAAE,EAAO,CAAC,MAAMG,EAAEQ,KAAK8D,OAAO3E,EAAE,SAAI,IAASE,GAAGA,EAAEG,KAAKH,EAAEG,GAAGJ,EAAE0E,OAAO,IAAIzE,EAAE,GAAGF,EAAE,IAAIA,EAAEa,KAAK8D,OAAO,MAAM,IAAIkD,WAAW,0CAA0CvH,IAAIA,EAAE,QAAQ,IAAI2D,GAAE,EAAG,OAAO,OAAO3D,GAAG,IAAI,MAAM,OAAO0O,EAAEnO,KAAKZ,EAAED,EAAEE,GAAG,IAAI,OAAO,IAAI,QAAQ,OAAO4B,EAAEjB,KAAKZ,EAAED,EAAEE,GAAG,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,OAAOoH,EAAEzG,KAAKZ,EAAED,EAAEE,GAAG,IAAI,SAAS,OAAOuH,EAAE5G,KAAKZ,EAAED,EAAEE,GAAG,IAAI,OAAO,IAAI,QAAQ,IAAI,UAAU,IAAI,WAAW,OAAOE,EAAES,KAAKZ,EAAED,EAAEE,GAAG,QAAQ,GAAG+D,EAAE,MAAM,IAAIH,UAAU,qBAAqBxD,GAAGA,GAAG,GAAGA,GAAGuO,cAAc5K,GAAE,EAAG,EAAER,EAAE/C,UAAUyH,OAAO,WAAW,MAAM,CAACsG,KAAK,SAASC,KAAKzN,MAAMP,UAAUwH,MAAMtH,KAAKC,KAAK+P,MAAM/P,KAAK,GAAG,EAAE,MAAMoC,EAAE,KAAK,SAASF,EAAE9C,EAAED,EAAEE,GAAG,IAAII,EAAE,GAAGJ,EAAE0F,KAAKuJ,IAAIlP,EAAE0E,OAAOzE,GAAG,IAAI,IAAIG,EAAEL,EAAEK,EAAEH,IAAIG,EAAEC,GAAGkC,OAAO4M,aAAa,IAAInP,EAAEI,IAAI,OAAOC,CAAC,CAAC,SAASoB,EAAEzB,EAAED,EAAEE,GAAG,IAAII,EAAE,GAAGJ,EAAE0F,KAAKuJ,IAAIlP,EAAE0E,OAAOzE,GAAG,IAAI,IAAIG,EAAEL,EAAEK,EAAEH,IAAIG,EAAEC,GAAGkC,OAAO4M,aAAanP,EAAEI,IAAI,OAAOC,CAAC,CAAC,SAASgB,EAAErB,EAAED,EAAEE,GAAG,MAAMI,EAAEL,EAAE0E,SAAS3E,GAAGA,EAAE,KAAKA,EAAE,KAAKE,GAAGA,EAAE,GAAGA,EAAEI,KAAKJ,EAAEI,GAAG,IAAID,EAAE,GAAG,IAAI,IAAIC,EAAEN,EAAEM,EAAEJ,IAAII,EAAED,GAAG0L,EAAE9L,EAAEK,IAAI,OAAOD,CAAC,CAAC,SAASgC,EAAEpC,EAAED,EAAEE,GAAG,MAAMI,EAAEL,EAAEiI,MAAMlI,EAAEE,GAAG,IAAIG,EAAE,GAAG,IAAI,IAAIJ,EAAE,EAAEA,EAAEK,EAAEqE,OAAO,EAAE1E,GAAG,EAAEI,GAAGmC,OAAO4M,aAAa9O,EAAEL,GAAG,IAAIK,EAAEL,EAAE,IAAI,OAAOI,CAAC,CAAC,SAASe,EAAEnB,EAAED,EAAEE,GAAG,GAAGD,EAAE,GAAG,GAAGA,EAAE,EAAE,MAAM,IAAI4H,WAAW,sBAAsB,GAAG5H,EAAED,EAAEE,EAAE,MAAM,IAAI2H,WAAW,wCAAwC,CAAC,SAASiB,EAAE7I,EAAED,EAAEE,EAAEI,EAAED,EAAE4D,GAAG,IAAIR,EAAEW,SAASnE,GAAG,MAAM,IAAI6D,UAAU,+CAA+C,GAAG9D,EAAEK,GAAGL,EAAEiE,EAAE,MAAM,IAAI4D,WAAW,qCAAqC,GAAG3H,EAAEI,EAAEL,EAAE0E,OAAO,MAAM,IAAIkD,WAAW,qBAAqB,CAAC,SAASpF,EAAExC,EAAED,EAAEE,EAAEI,EAAED,GAAGkD,EAAEvD,EAAEM,EAAED,EAAEJ,EAAEC,EAAE,GAAG,IAAI+D,EAAEyE,OAAO1I,EAAEuH,OAAO,aAAatH,EAAEC,KAAK+D,EAAEA,IAAI,EAAEhE,EAAEC,KAAK+D,EAAEA,IAAI,EAAEhE,EAAEC,KAAK+D,EAAEA,IAAI,EAAEhE,EAAEC,KAAK+D,EAAE,IAAIC,EAAEwE,OAAO1I,GAAGuH,OAAO,IAAIA,OAAO,aAAa,OAAOtH,EAAEC,KAAKgE,EAAEA,IAAI,EAAEjE,EAAEC,KAAKgE,EAAEA,IAAI,EAAEjE,EAAEC,KAAKgE,EAAEA,IAAI,EAAEjE,EAAEC,KAAKgE,EAAEhE,CAAC,CAAC,SAASgJ,EAAEjJ,EAAED,EAAEE,EAAEI,EAAED,GAAGkD,EAAEvD,EAAEM,EAAED,EAAEJ,EAAEC,EAAE,GAAG,IAAI+D,EAAEyE,OAAO1I,EAAEuH,OAAO,aAAatH,EAAEC,EAAE,GAAG+D,EAAEA,IAAI,EAAEhE,EAAEC,EAAE,GAAG+D,EAAEA,IAAI,EAAEhE,EAAEC,EAAE,GAAG+D,EAAEA,IAAI,EAAEhE,EAAEC,EAAE,GAAG+D,EAAE,IAAIC,EAAEwE,OAAO1I,GAAGuH,OAAO,IAAIA,OAAO,aAAa,OAAOtH,EAAEC,EAAE,GAAGgE,EAAEA,IAAI,EAAEjE,EAAEC,EAAE,GAAGgE,EAAEA,IAAI,EAAEjE,EAAEC,EAAE,GAAGgE,EAAEA,IAAI,EAAEjE,EAAEC,GAAGgE,EAAEhE,EAAE,CAAC,CAAC,SAAS+B,EAAEhC,EAAED,EAAEE,EAAEI,EAAED,EAAE4D,GAAG,GAAG/D,EAAEI,EAAEL,EAAE0E,OAAO,MAAM,IAAIkD,WAAW,sBAAsB,GAAG3H,EAAE,EAAE,MAAM,IAAI2H,WAAW,qBAAqB,CAAC,SAASsB,EAAElJ,EAAED,EAAEE,EAAEI,EAAE2D,GAAG,OAAOjE,GAAGA,EAAEE,KAAK,EAAE+D,GAAGhC,EAAEhC,EAAE,EAAEC,EAAE,GAAGG,EAAE4F,MAAMhG,EAAED,EAAEE,EAAEI,EAAE,GAAG,GAAGJ,EAAE,CAAC,CAAC,SAASmD,EAAEpD,EAAED,EAAEE,EAAEI,EAAE2D,GAAG,OAAOjE,GAAGA,EAAEE,KAAK,EAAE+D,GAAGhC,EAAEhC,EAAE,EAAEC,EAAE,GAAGG,EAAE4F,MAAMhG,EAAED,EAAEE,EAAEI,EAAE,GAAG,GAAGJ,EAAE,CAAC,CAACuD,EAAE/C,UAAUwH,MAAM,SAASjI,EAAED,GAAG,MAAME,EAAEW,KAAK8D,QAAQ1E,IAAIA,GAAG,GAAGA,GAAGC,GAAG,IAAID,EAAE,GAAGA,EAAEC,IAAID,EAAEC,IAAIF,OAAE,IAASA,EAAEE,IAAIF,GAAG,GAAGA,GAAGE,GAAG,IAAIF,EAAE,GAAGA,EAAEE,IAAIF,EAAEE,GAAGF,EAAEC,IAAID,EAAEC,GAAG,MAAMK,EAAEO,KAAKJ,SAASR,EAAED,GAAG,OAAOc,OAAOC,eAAeT,EAAEmD,EAAE/C,WAAWJ,CAAC,EAAEmD,EAAE/C,UAAUmQ,WAAWpN,EAAE/C,UAAUoQ,WAAW,SAAS7Q,EAAED,EAAEE,GAAGD,KAAK,EAAED,KAAK,EAAEE,GAAGkB,EAAEnB,EAAED,EAAEa,KAAK8D,QAAQ,IAAIrE,EAAEO,KAAKZ,GAAGI,EAAE,EAAE4D,EAAE,EAAE,OAAOA,EAAEjE,IAAIK,GAAG,MAAMC,GAAGO,KAAKZ,EAAEgE,GAAG5D,EAAE,OAAOC,CAAC,EAAEmD,EAAE/C,UAAUqQ,WAAWtN,EAAE/C,UAAUsQ,WAAW,SAAS/Q,EAAED,EAAEE,GAAGD,KAAK,EAAED,KAAK,EAAEE,GAAGkB,EAAEnB,EAAED,EAAEa,KAAK8D,QAAQ,IAAIrE,EAAEO,KAAKZ,IAAID,GAAGK,EAAE,EAAE,KAAKL,EAAE,IAAIK,GAAG,MAAMC,GAAGO,KAAKZ,IAAID,GAAGK,EAAE,OAAOC,CAAC,EAAEmD,EAAE/C,UAAUuQ,UAAUxN,EAAE/C,UAAUwQ,UAAU,SAASjR,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ9D,KAAKZ,EAAE,EAAEwD,EAAE/C,UAAUyQ,aAAa1N,EAAE/C,UAAU0Q,aAAa,SAASnR,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ9D,KAAKZ,GAAGY,KAAKZ,EAAE,IAAI,CAAC,EAAEwD,EAAE/C,UAAU2Q,aAAa5N,EAAE/C,UAAUqO,aAAa,SAAS9O,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ9D,KAAKZ,IAAI,EAAEY,KAAKZ,EAAE,EAAE,EAAEwD,EAAE/C,UAAU4Q,aAAa7N,EAAE/C,UAAU6Q,aAAa,SAAStR,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,SAAS9D,KAAKZ,GAAGY,KAAKZ,EAAE,IAAI,EAAEY,KAAKZ,EAAE,IAAI,IAAI,SAASY,KAAKZ,EAAE,EAAE,EAAEwD,EAAE/C,UAAU8Q,aAAa/N,EAAE/C,UAAUwE,aAAa,SAASjF,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ,SAAS9D,KAAKZ,IAAIY,KAAKZ,EAAE,IAAI,GAAGY,KAAKZ,EAAE,IAAI,EAAEY,KAAKZ,EAAE,GAAG,EAAEwD,EAAE/C,UAAU+Q,gBAAgBxF,GAAE,SAAUhM,GAAGuB,EAAEvB,KAAK,EAAE,UAAU,MAAMD,EAAEa,KAAKZ,GAAGC,EAAEW,KAAKZ,EAAE,QAAG,IAASD,QAAG,IAASE,GAAGqC,EAAEtC,EAAEY,KAAK8D,OAAO,GAAG,MAAMrE,EAAEN,EAAE,IAAIa,OAAOZ,GAAG,MAAMY,OAAOZ,GAAGY,OAAOZ,GAAG,GAAG,GAAGI,EAAEQ,OAAOZ,GAAG,IAAIY,OAAOZ,GAAG,MAAMY,OAAOZ,GAAGC,EAAE,GAAG,GAAG,OAAOqH,OAAOjH,IAAIiH,OAAOlH,IAAIkH,OAAO,IAAK,IAAG9D,EAAE/C,UAAU0E,gBAAgB6G,GAAE,SAAUhM,GAAGuB,EAAEvB,KAAK,EAAE,UAAU,MAAMD,EAAEa,KAAKZ,GAAGC,EAAEW,KAAKZ,EAAE,QAAG,IAASD,QAAG,IAASE,GAAGqC,EAAEtC,EAAEY,KAAK8D,OAAO,GAAG,MAAMrE,EAAEN,EAAE,GAAG,GAAG,MAAMa,OAAOZ,GAAG,IAAIY,OAAOZ,GAAGY,OAAOZ,GAAGI,EAAEQ,OAAOZ,GAAG,GAAG,GAAG,MAAMY,OAAOZ,GAAG,IAAIY,OAAOZ,GAAGC,EAAE,OAAOqH,OAAOjH,IAAIiH,OAAO,KAAKA,OAAOlH,EAAG,IAAGoD,EAAE/C,UAAUgR,UAAU,SAASzR,EAAED,EAAEE,GAAGD,KAAK,EAAED,KAAK,EAAEE,GAAGkB,EAAEnB,EAAED,EAAEa,KAAK8D,QAAQ,IAAIrE,EAAEO,KAAKZ,GAAGI,EAAE,EAAE4D,EAAE,EAAE,OAAOA,EAAEjE,IAAIK,GAAG,MAAMC,GAAGO,KAAKZ,EAAEgE,GAAG5D,EAAE,OAAOA,GAAG,IAAIC,GAAGD,IAAIC,GAAGsF,KAAK+L,IAAI,EAAE,EAAE3R,IAAIM,CAAC,EAAEmD,EAAE/C,UAAUkR,UAAU,SAAS3R,EAAED,EAAEE,GAAGD,KAAK,EAAED,KAAK,EAAEE,GAAGkB,EAAEnB,EAAED,EAAEa,KAAK8D,QAAQ,IAAIrE,EAAEN,EAAEK,EAAE,EAAE4D,EAAEpD,KAAKZ,IAAIK,GAAG,KAAKA,EAAE,IAAID,GAAG,MAAM4D,GAAGpD,KAAKZ,IAAIK,GAAGD,EAAE,OAAOA,GAAG,IAAI4D,GAAG5D,IAAI4D,GAAG2B,KAAK+L,IAAI,EAAE,EAAE3R,IAAIiE,CAAC,EAAER,EAAE/C,UAAUmR,SAAS,SAAS5R,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ,IAAI9D,KAAKZ,IAAI,GAAG,IAAIY,KAAKZ,GAAG,GAAGY,KAAKZ,EAAE,EAAEwD,EAAE/C,UAAUoR,YAAY,SAAS7R,EAAED,GAAGC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ,MAAMzE,EAAEW,KAAKZ,GAAGY,KAAKZ,EAAE,IAAI,EAAE,OAAO,MAAMC,EAAE,WAAWA,EAAEA,CAAC,EAAEuD,EAAE/C,UAAUqR,YAAY,SAAS9R,EAAED,GAAGC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ,MAAMzE,EAAEW,KAAKZ,EAAE,GAAGY,KAAKZ,IAAI,EAAE,OAAO,MAAMC,EAAE,WAAWA,EAAEA,CAAC,EAAEuD,EAAE/C,UAAUsR,YAAY,SAAS/R,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ9D,KAAKZ,GAAGY,KAAKZ,EAAE,IAAI,EAAEY,KAAKZ,EAAE,IAAI,GAAGY,KAAKZ,EAAE,IAAI,EAAE,EAAEwD,EAAE/C,UAAUuE,YAAY,SAAShF,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQ9D,KAAKZ,IAAI,GAAGY,KAAKZ,EAAE,IAAI,GAAGY,KAAKZ,EAAE,IAAI,EAAEY,KAAKZ,EAAE,EAAE,EAAEwD,EAAE/C,UAAUuR,eAAehG,GAAE,SAAUhM,GAAGuB,EAAEvB,KAAK,EAAE,UAAU,MAAMD,EAAEa,KAAKZ,GAAGC,EAAEW,KAAKZ,EAAE,QAAG,IAASD,QAAG,IAASE,GAAGqC,EAAEtC,EAAEY,KAAK8D,OAAO,GAAG,MAAMrE,EAAEO,KAAKZ,EAAE,GAAG,IAAIY,KAAKZ,EAAE,GAAG,MAAMY,KAAKZ,EAAE,IAAIC,GAAG,IAAI,OAAOqH,OAAOjH,IAAIiH,OAAO,KAAKA,OAAOvH,EAAE,IAAIa,OAAOZ,GAAG,MAAMY,OAAOZ,GAAGY,OAAOZ,GAAG,GAAG,GAAI,IAAGwD,EAAE/C,UAAUyE,eAAe8G,GAAE,SAAUhM,GAAGuB,EAAEvB,KAAK,EAAE,UAAU,MAAMD,EAAEa,KAAKZ,GAAGC,EAAEW,KAAKZ,EAAE,QAAG,IAASD,QAAG,IAASE,GAAGqC,EAAEtC,EAAEY,KAAK8D,OAAO,GAAG,MAAMrE,GAAGN,GAAG,IAAI,MAAMa,OAAOZ,GAAG,IAAIY,OAAOZ,GAAGY,OAAOZ,GAAG,OAAOsH,OAAOjH,IAAIiH,OAAO,KAAKA,OAAO1G,OAAOZ,GAAG,GAAG,GAAG,MAAMY,OAAOZ,GAAG,IAAIY,OAAOZ,GAAGC,EAAG,IAAGuD,EAAE/C,UAAUwR,YAAY,SAASjS,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQtE,EAAE2E,KAAKnE,KAAKZ,GAAE,EAAG,GAAG,EAAE,EAAEwD,EAAE/C,UAAU2E,YAAY,SAASpF,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQtE,EAAE2E,KAAKnE,KAAKZ,GAAE,EAAG,GAAG,EAAE,EAAEwD,EAAE/C,UAAUyR,aAAa,SAASlS,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQtE,EAAE2E,KAAKnE,KAAKZ,GAAE,EAAG,GAAG,EAAE,EAAEwD,EAAE/C,UAAU4E,aAAa,SAASrF,EAAED,GAAG,OAAOC,KAAK,EAAED,GAAGoB,EAAEnB,EAAE,EAAEY,KAAK8D,QAAQtE,EAAE2E,KAAKnE,KAAKZ,GAAE,EAAG,GAAG,EAAE,EAAEwD,EAAE/C,UAAU0R,YAAY3O,EAAE/C,UAAU2R,YAAY,SAASpS,EAAED,EAAEE,EAAEI,GAAML,GAAGA,EAAED,KAAK,EAAEE,KAAK,EAAGI,GAAGwI,EAAEjI,KAAKZ,EAAED,EAAEE,EAAE0F,KAAK+L,IAAI,EAAE,EAAEzR,GAAG,EAAE,GAAG,IAAIG,EAAE,EAAE4D,EAAE,EAAE,IAAIpD,KAAKb,GAAG,IAAIC,IAAIgE,EAAE/D,IAAIG,GAAG,MAAMQ,KAAKb,EAAEiE,GAAGhE,EAAEI,EAAE,IAAI,OAAOL,EAAEE,CAAC,EAAEuD,EAAE/C,UAAU4R,YAAY7O,EAAE/C,UAAU6R,YAAY,SAAStS,EAAED,EAAEE,EAAEI,GAAML,GAAGA,EAAED,KAAK,EAAEE,KAAK,EAAGI,GAAGwI,EAAEjI,KAAKZ,EAAED,EAAEE,EAAE0F,KAAK+L,IAAI,EAAE,EAAEzR,GAAG,EAAE,GAAG,IAAIG,EAAEH,EAAE,EAAE+D,EAAE,EAAE,IAAIpD,KAAKb,EAAEK,GAAG,IAAIJ,IAAII,GAAG,IAAI4D,GAAG,MAAMpD,KAAKb,EAAEK,GAAGJ,EAAEgE,EAAE,IAAI,OAAOjE,EAAEE,CAAC,EAAEuD,EAAE/C,UAAU8R,WAAW/O,EAAE/C,UAAU+R,WAAW,SAASxS,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,IAAI,GAAGa,KAAKb,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAUgS,cAAcjP,EAAE/C,UAAUiS,cAAc,SAAS1S,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,MAAM,GAAGa,KAAKb,GAAG,IAAIC,EAAEY,KAAKb,EAAE,GAAGC,IAAI,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAUkS,cAAcnP,EAAE/C,UAAUmS,cAAc,SAAS5S,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,MAAM,GAAGa,KAAKb,GAAGC,IAAI,EAAEY,KAAKb,EAAE,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAUoS,cAAcrP,EAAE/C,UAAUqS,cAAc,SAAS9S,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,WAAW,GAAGa,KAAKb,EAAE,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,EAAEY,KAAKb,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAUsS,cAAcvP,EAAE/C,UAAU0F,cAAc,SAASnG,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,WAAW,GAAGa,KAAKb,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,EAAEY,KAAKb,EAAE,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAUuS,iBAAiBhH,GAAE,SAAUhM,EAAED,EAAE,GAAG,OAAOyC,EAAE5B,KAAKZ,EAAED,EAAEuH,OAAO,GAAGA,OAAO,sBAAuB,IAAG9D,EAAE/C,UAAU4F,iBAAiB2F,GAAE,SAAUhM,EAAED,EAAE,GAAG,OAAOkJ,EAAErI,KAAKZ,EAAED,EAAEuH,OAAO,GAAGA,OAAO,sBAAuB,IAAG9D,EAAE/C,UAAUwS,WAAW,SAASjT,EAAED,EAAEE,EAAEI,GAAG,GAAGL,GAAGA,EAAED,KAAK,GAAGM,EAAE,CAAC,MAAMA,EAAEsF,KAAK+L,IAAI,EAAE,EAAEzR,EAAE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAEE,EAAEI,EAAE,GAAGA,EAAE,CAAC,IAAID,EAAE,EAAE4D,EAAE,EAAEC,EAAE,EAAE,IAAIrD,KAAKb,GAAG,IAAIC,IAAII,EAAEH,IAAI+D,GAAG,MAAMhE,EAAE,GAAG,IAAIiE,GAAG,IAAIrD,KAAKb,EAAEK,EAAE,KAAK6D,EAAE,GAAGrD,KAAKb,EAAEK,IAAIJ,EAAEgE,EAAG,GAAGC,EAAE,IAAI,OAAOlE,EAAEE,CAAC,EAAEuD,EAAE/C,UAAUyS,WAAW,SAASlT,EAAED,EAAEE,EAAEI,GAAG,GAAGL,GAAGA,EAAED,KAAK,GAAGM,EAAE,CAAC,MAAMA,EAAEsF,KAAK+L,IAAI,EAAE,EAAEzR,EAAE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAEE,EAAEI,EAAE,GAAGA,EAAE,CAAC,IAAID,EAAEH,EAAE,EAAE+D,EAAE,EAAEC,EAAE,EAAE,IAAIrD,KAAKb,EAAEK,GAAG,IAAIJ,IAAII,GAAG,IAAI4D,GAAG,MAAMhE,EAAE,GAAG,IAAIiE,GAAG,IAAIrD,KAAKb,EAAEK,EAAE,KAAK6D,EAAE,GAAGrD,KAAKb,EAAEK,IAAIJ,EAAEgE,EAAG,GAAGC,EAAE,IAAI,OAAOlE,EAAEE,CAAC,EAAEuD,EAAE/C,UAAU0S,UAAU,SAASnT,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,KAAK,KAAKC,EAAE,IAAIA,EAAE,IAAIA,EAAE,GAAGY,KAAKb,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAU2S,aAAa,SAASpT,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,OAAO,OAAOa,KAAKb,GAAG,IAAIC,EAAEY,KAAKb,EAAE,GAAGC,IAAI,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAU4S,aAAa,SAASrT,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,OAAO,OAAOa,KAAKb,GAAGC,IAAI,EAAEY,KAAKb,EAAE,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAU6S,aAAa,SAAStT,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,YAAY,YAAYa,KAAKb,GAAG,IAAIC,EAAEY,KAAKb,EAAE,GAAGC,IAAI,EAAEY,KAAKb,EAAE,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,GAAGD,EAAE,CAAC,EAAEyD,EAAE/C,UAAUyF,aAAa,SAASlG,EAAED,EAAEE,GAAG,OAAOD,GAAGA,EAAED,KAAK,EAAEE,GAAG4I,EAAEjI,KAAKZ,EAAED,EAAE,EAAE,YAAY,YAAYC,EAAE,IAAIA,EAAE,WAAWA,EAAE,GAAGY,KAAKb,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,GAAGY,KAAKb,EAAE,GAAGC,IAAI,EAAEY,KAAKb,EAAE,GAAG,IAAIC,EAAED,EAAE,CAAC,EAAEyD,EAAE/C,UAAU8S,gBAAgBvH,GAAE,SAAUhM,EAAED,EAAE,GAAG,OAAOyC,EAAE5B,KAAKZ,EAAED,GAAGuH,OAAO,sBAAsBA,OAAO,sBAAuB,IAAG9D,EAAE/C,UAAU2F,gBAAgB4F,GAAE,SAAUhM,EAAED,EAAE,GAAG,OAAOkJ,EAAErI,KAAKZ,EAAED,GAAGuH,OAAO,sBAAsBA,OAAO,sBAAuB,IAAG9D,EAAE/C,UAAU+S,aAAa,SAASxT,EAAED,EAAEE,GAAG,OAAOiJ,EAAEtI,KAAKZ,EAAED,GAAE,EAAGE,EAAE,EAAEuD,EAAE/C,UAAU6F,aAAa,SAAStG,EAAED,EAAEE,GAAG,OAAOiJ,EAAEtI,KAAKZ,EAAED,GAAE,EAAGE,EAAE,EAAEuD,EAAE/C,UAAUgT,cAAc,SAASzT,EAAED,EAAEE,GAAG,OAAOmD,EAAExC,KAAKZ,EAAED,GAAE,EAAGE,EAAE,EAAEuD,EAAE/C,UAAU8F,cAAc,SAASvG,EAAED,EAAEE,GAAG,OAAOmD,EAAExC,KAAKZ,EAAED,GAAE,EAAGE,EAAE,EAAEuD,EAAE/C,UAAUoF,KAAK,SAAS7F,EAAED,EAAEE,EAAEI,GAAG,IAAImD,EAAEW,SAASnE,GAAG,MAAM,IAAI6D,UAAU,+BAA+B,GAAG5D,IAAIA,EAAE,GAAGI,GAAG,IAAIA,IAAIA,EAAEO,KAAK8D,QAAQ3E,GAAGC,EAAE0E,SAAS3E,EAAEC,EAAE0E,QAAQ3E,IAAIA,EAAE,GAAGM,EAAE,GAAGA,EAAEJ,IAAII,EAAEJ,GAAGI,IAAIJ,EAAE,OAAO,EAAE,GAAG,IAAID,EAAE0E,QAAQ,IAAI9D,KAAK8D,OAAO,OAAO,EAAE,GAAG3E,EAAE,EAAE,MAAM,IAAI6H,WAAW,6BAA6B,GAAG3H,EAAE,GAAGA,GAAGW,KAAK8D,OAAO,MAAM,IAAIkD,WAAW,sBAAsB,GAAGvH,EAAE,EAAE,MAAM,IAAIuH,WAAW,2BAA2BvH,EAAEO,KAAK8D,SAASrE,EAAEO,KAAK8D,QAAQ1E,EAAE0E,OAAO3E,EAAEM,EAAEJ,IAAII,EAAEL,EAAE0E,OAAO3E,EAAEE,GAAG,MAAMG,EAAEC,EAAEJ,EAAE,OAAOW,OAAOZ,GAAG,mBAAmBU,WAAWD,UAAUiT,WAAW9S,KAAK8S,WAAW3T,EAAEE,EAAEI,GAAGK,WAAWD,UAAU2J,IAAIzJ,KAAKX,EAAEY,KAAKJ,SAASP,EAAEI,GAAGN,GAAGK,CAAC,EAAEoD,EAAE/C,UAAUwF,KAAK,SAASjG,EAAED,EAAEE,EAAEI,GAAG,GAAG,iBAAiBL,EAAE,CAAC,GAAG,iBAAiBD,GAAGM,EAAEN,EAAEA,EAAE,EAAEE,EAAEW,KAAK8D,QAAQ,iBAAiBzE,IAAII,EAAEJ,EAAEA,EAAEW,KAAK8D,aAAQ,IAASrE,GAAG,iBAAiBA,EAAE,MAAM,IAAIwD,UAAU,6BAA6B,GAAG,iBAAiBxD,IAAImD,EAAE4K,WAAW/N,GAAG,MAAM,IAAIwD,UAAU,qBAAqBxD,GAAG,GAAG,IAAIL,EAAE0E,OAAO,CAAC,MAAM3E,EAAEC,EAAE2N,WAAW,IAAI,SAAStN,GAAGN,EAAE,KAAK,WAAWM,KAAKL,EAAED,EAAE,CAAC,KAAK,iBAAiBC,EAAEA,GAAG,IAAI,kBAAkBA,IAAIA,EAAEyI,OAAOzI,IAAI,GAAGD,EAAE,GAAGa,KAAK8D,OAAO3E,GAAGa,KAAK8D,OAAOzE,EAAE,MAAM,IAAI2H,WAAW,sBAAsB,GAAG3H,GAAGF,EAAE,OAAOa,KAAK,IAAIR,EAAE,GAAGL,KAAK,EAAEE,OAAE,IAASA,EAAEW,KAAK8D,OAAOzE,IAAI,EAAED,IAAIA,EAAE,GAAG,iBAAiBA,EAAE,IAAII,EAAEL,EAAEK,EAAEH,IAAIG,EAAEQ,KAAKR,GAAGJ,MAAM,CAAC,MAAMgE,EAAER,EAAEW,SAASnE,GAAGA,EAAEwD,EAAEe,KAAKvE,EAAEK,GAAG4D,EAAED,EAAEU,OAAO,GAAG,IAAIT,EAAE,MAAM,IAAIJ,UAAU,cAAc7D,EAAE,qCAAqC,IAAII,EAAE,EAAEA,EAAEH,EAAEF,IAAIK,EAAEQ,KAAKR,EAAEL,GAAGiE,EAAE5D,EAAE6D,EAAE,CAAC,OAAOrD,IAAI,EAAE,MAAMK,EAAE,CAAC,EAAE,SAASiC,EAAElD,EAAED,EAAEE,GAAGgB,EAAEjB,GAAG,cAAcC,EAAE,WAAA6D,GAAcC,QAAQlD,OAAO4O,eAAe7O,KAAK,UAAU,CAACwI,MAAMrJ,EAAEqP,MAAMxO,KAAK+N,WAAWgF,UAAS,EAAGC,cAAa,IAAKhT,KAAKyH,KAAK,GAAGzH,KAAKyH,SAASrI,KAAKY,KAAKiT,aAAajT,KAAKyH,IAAI,CAAC,QAAIyL,GAAO,OAAO9T,CAAC,CAAC,QAAI8T,CAAK9T,GAAGa,OAAO4O,eAAe7O,KAAK,OAAO,CAACgT,cAAa,EAAGlE,YAAW,EAAGtG,MAAMpJ,EAAE2T,UAAS,GAAI,CAAC,QAAAxM,GAAW,MAAM,GAAGvG,KAAKyH,SAASrI,OAAOY,KAAKmT,SAAS,EAAE,CAAC,SAAS7R,EAAElC,GAAG,IAAID,EAAE,GAAGE,EAAED,EAAE0E,OAAO,MAAMrE,EAAE,MAAML,EAAE,GAAG,EAAE,EAAE,KAAKC,GAAGI,EAAE,EAAEJ,GAAG,EAAEF,EAAE,IAAIC,EAAEiI,MAAMhI,EAAE,EAAEA,KAAKF,IAAI,MAAM,GAAGC,EAAEiI,MAAM,EAAEhI,KAAKF,GAAG,CAAC,SAASuD,EAAEtD,EAAED,EAAEE,EAAEI,EAAED,EAAE4D,GAAG,GAAGhE,EAAEC,GAAGD,EAAED,EAAE,CAAC,MAAMM,EAAE,iBAAiBN,EAAE,IAAI,GAAG,IAAIK,EAAE,MAAMA,EAAE4D,EAAE,EAAE,IAAIjE,GAAGA,IAAIuH,OAAO,GAAG,OAAOjH,YAAYA,QAAQ,GAAG2D,EAAE,KAAK3D,IAAI,SAASA,QAAQ,GAAG2D,EAAE,GAAG,IAAI3D,iBAAiB,GAAG2D,EAAE,GAAG,IAAI3D,IAAI,MAAMN,IAAIM,YAAYJ,IAAII,IAAI,IAAIY,EAAE+S,iBAAiB,QAAQ5T,EAAEJ,EAAE,EAAE,SAASA,EAAED,EAAEE,GAAGsB,EAAExB,EAAE,eAAU,IAASC,EAAED,SAAI,IAASC,EAAED,EAAEE,IAAIqC,EAAEvC,EAAEC,EAAE0E,QAAQzE,EAAE,GAAG,CAAjF,CAAmFI,EAAED,EAAE4D,EAAE,CAAC,SAASzC,EAAEvB,EAAED,GAAG,GAAG,iBAAiBC,EAAE,MAAM,IAAIiB,EAAEgT,qBAAqBlU,EAAE,SAASC,EAAE,CAAC,SAASsC,EAAEtC,EAAED,EAAEE,GAAG,GAAG0F,KAAKuO,MAAMlU,KAAKA,EAAE,MAAMuB,EAAEvB,EAAEC,GAAG,IAAIgB,EAAE+S,iBAAiB/T,GAAG,SAAS,aAAaD,GAAG,GAAGD,EAAE,EAAE,MAAM,IAAIkB,EAAEkT,yBAAyB,MAAM,IAAIlT,EAAE+S,iBAAiB/T,GAAG,SAAS,MAAMA,EAAE,EAAE,YAAYF,IAAIC,EAAE,CAACkD,EAAE,4BAA2B,SAAUlD,GAAG,OAAOA,EAAE,GAAGA,gCAAgC,gDAAiD,GAAE4H,YAAY1E,EAAE,wBAAuB,SAAUlD,EAAED,GAAG,MAAM,QAAQC,4DAA4DD,GAAI,GAAE8D,WAAWX,EAAE,oBAAmB,SAAUlD,EAAED,EAAEE,GAAG,IAAII,EAAE,iBAAiBL,sBAAsBI,EAAEH,EAAE,OAAOwI,OAAO2L,UAAUnU,IAAI0F,KAAK0O,IAAIpU,GAAG,GAAG,GAAGG,EAAE8B,EAAEK,OAAOtC,IAAI,iBAAiBA,IAAIG,EAAEmC,OAAOtC,IAAIA,EAAEqH,OAAO,IAAIA,OAAO,KAAKrH,IAAIqH,OAAO,IAAIA,OAAO,QAAQlH,EAAE8B,EAAE9B,IAAIA,GAAG,KAAKC,GAAG,eAAeN,eAAeK,IAAIC,CAAE,GAAEuH,YAAY,MAAMlF,EAAE,oBAAoB,SAASyH,EAAEnK,EAAED,GAAG,IAAIE,EAAEF,EAAEA,GAAG,IAAI,MAAMM,EAAEL,EAAE0E,OAAO,IAAItE,EAAE,KAAK,MAAM4D,EAAE,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAE5D,IAAI4D,EAAE,CAAC,GAAGhE,EAAED,EAAE2N,WAAW1J,GAAGhE,EAAE,OAAOA,EAAE,MAAM,CAAC,IAAIG,EAAE,CAAC,GAAGH,EAAE,MAAM,EAAEF,GAAG,IAAI,GAAGiE,EAAE6J,KAAK,IAAI,IAAI,KAAK,QAAQ,CAAC,GAAG5J,EAAE,IAAI5D,EAAE,EAAEN,GAAG,IAAI,GAAGiE,EAAE6J,KAAK,IAAI,IAAI,KAAK,QAAQ,CAACzN,EAAEH,EAAE,QAAQ,CAAC,GAAGA,EAAE,MAAM,EAAEF,GAAG,IAAI,GAAGiE,EAAE6J,KAAK,IAAI,IAAI,KAAKzN,EAAEH,EAAE,QAAQ,CAACA,EAAE,OAAOG,EAAE,OAAO,GAAGH,EAAE,MAAM,MAAMG,IAAIL,GAAG,IAAI,GAAGiE,EAAE6J,KAAK,IAAI,IAAI,KAAK,GAAGzN,EAAE,KAAKH,EAAE,IAAI,CAAC,IAAIF,GAAG,GAAG,EAAE,MAAMiE,EAAE6J,KAAK5N,EAAE,MAAM,GAAGA,EAAE,KAAK,CAAC,IAAIF,GAAG,GAAG,EAAE,MAAMiE,EAAE6J,KAAK5N,GAAG,EAAE,IAAI,GAAGA,EAAE,IAAI,MAAM,GAAGA,EAAE,MAAM,CAAC,IAAIF,GAAG,GAAG,EAAE,MAAMiE,EAAE6J,KAAK5N,GAAG,GAAG,IAAIA,GAAG,EAAE,GAAG,IAAI,GAAGA,EAAE,IAAI,KAAK,CAAC,KAAKA,EAAE,SAAS,MAAM,IAAI8N,MAAM,sBAAsB,IAAIhO,GAAG,GAAG,EAAE,MAAMiE,EAAE6J,KAAK5N,GAAG,GAAG,IAAIA,GAAG,GAAG,GAAG,IAAIA,GAAG,EAAE,GAAG,IAAI,GAAGA,EAAE,IAAI,CAAC,CAAC,OAAO+D,CAAC,CAAC,SAASpB,EAAE5C,GAAG,OAAOK,EAAEqN,YAAY,SAAS1N,GAAG,IAAIA,GAAGA,EAAEA,EAAEsU,MAAM,KAAK,IAAI9D,OAAOD,QAAQ7N,EAAE,KAAKgC,OAAO,EAAE,MAAM,GAAG,KAAK1E,EAAE0E,OAAO,GAAG,GAAG1E,GAAG,IAAI,OAAOA,CAAC,CAAjH,CAAmHA,GAAG,CAAC,SAASwL,EAAExL,EAAED,EAAEE,EAAEI,GAAG,IAAID,EAAE,IAAIA,EAAE,EAAEA,EAAEC,KAAKD,EAAEH,GAAGF,EAAE2E,QAAQtE,GAAGJ,EAAE0E,UAAUtE,EAAEL,EAAEK,EAAEH,GAAGD,EAAEI,GAAG,OAAOA,CAAC,CAAC,SAASsL,EAAE1L,EAAED,GAAG,OAAOC,aAAaD,GAAG,MAAMC,GAAG,MAAMA,EAAE8D,aAAa,MAAM9D,EAAE8D,YAAYuE,MAAMrI,EAAE8D,YAAYuE,OAAOtI,EAAEsI,IAAI,CAAC,SAASwD,EAAE7L,GAAG,OAAOA,GAAGA,CAAC,CAAC,MAAM8L,EAAE,WAAW,MAAM9L,EAAE,mBAAmBD,EAAE,IAAIiB,MAAM,KAAK,IAAI,IAAIf,EAAE,EAAEA,EAAE,KAAKA,EAAE,CAAC,MAAMI,EAAE,GAAGJ,EAAE,IAAI,IAAIG,EAAE,EAAEA,EAAE,KAAKA,EAAEL,EAAEM,EAAED,GAAGJ,EAAEC,GAAGD,EAAEI,EAAE,CAAC,OAAOL,CAAC,CAAxI,GAA4I,SAASiM,EAAEhM,GAAG,MAAM,oBAAoBsH,OAAO2E,GAAEjM,CAAC,CAAC,SAASiM,KAAI,MAAM,IAAI8B,MAAM,uBAAuB,GAAG,IAAI,CAAC/N,EAAED,KAAKA,EAAEgF,KAAK,SAAS/E,EAAED,EAAEE,EAAEI,EAAED,GAAG,IAAI4D,EAAEC,EAAEC,EAAE,EAAE9D,EAAEC,EAAE,EAAEmD,GAAG,GAAGU,GAAG,EAAEqB,EAAE/B,GAAG,EAAEgC,GAAG,EAAE9B,EAAEzD,EAAEG,EAAE,EAAE,EAAEqG,EAAExG,GAAG,EAAE,EAAEyG,EAAE1G,EAAED,EAAE2D,GAAG,IAAIA,GAAG+C,EAAEzC,EAAE0C,GAAG,IAAIlB,GAAG,EAAEkB,KAAKlB,EAAEA,GAAGtB,EAAEsB,EAAE,EAAExB,EAAE,IAAIA,EAAEhE,EAAED,EAAE2D,GAAGA,GAAG+C,EAAEjB,GAAG,GAAG,IAAIvB,EAAED,GAAG,IAAIwB,GAAG,EAAExB,KAAKwB,EAAEA,GAAGnF,EAAEmF,EAAE,EAAEvB,EAAE,IAAIA,EAAEjE,EAAED,EAAE2D,GAAGA,GAAG+C,EAAEjB,GAAG,GAAG,GAAG,IAAIxB,EAAEA,EAAE,EAAEuB,MAAM,CAAC,GAAGvB,IAAIR,EAAE,OAAOS,EAAEsQ,IAAI,KAAK7N,GAAG,EAAE,GAAGzC,GAAG0B,KAAK+L,IAAI,EAAErR,GAAG2D,GAAGuB,CAAC,CAAC,OAAOmB,GAAG,EAAE,GAAGzC,EAAE0B,KAAK+L,IAAI,EAAE1N,EAAE3D,EAAE,EAAEN,EAAEiG,MAAM,SAAShG,EAAED,EAAEE,EAAEI,EAAED,EAAE4D,GAAG,IAAIC,EAAEC,EAAEV,EAAE+B,EAAE,EAAEvB,EAAE5D,EAAE,EAAEoF,GAAG,GAAGD,GAAG,EAAE7B,EAAE8B,GAAG,EAAEiB,EAAE,KAAKrG,EAAEuF,KAAK+L,IAAI,GAAG,IAAI/L,KAAK+L,IAAI,GAAG,IAAI,EAAEhL,EAAErG,EAAE,EAAE2D,EAAE,EAAE9D,EAAEG,EAAE,GAAG,EAAE4G,EAAElH,EAAE,GAAG,IAAIA,GAAG,EAAEA,EAAE,EAAE,EAAE,EAAE,IAAIA,EAAE4F,KAAK0O,IAAItU,GAAGyU,MAAMzU,IAAIA,IAAI,KAAKmE,EAAEsQ,MAAMzU,GAAG,EAAE,EAAEkE,EAAEuB,IAAIvB,EAAE0B,KAAKuO,MAAMvO,KAAK8O,IAAI1U,GAAG4F,KAAK+O,KAAK3U,GAAGyD,EAAEmC,KAAK+L,IAAI,GAAGzN,IAAI,IAAIA,IAAIT,GAAG,IAAIzD,GAAGkE,EAAEP,GAAG,EAAE+C,EAAEjD,EAAEiD,EAAEd,KAAK+L,IAAI,EAAE,EAAEhO,IAAIF,GAAG,IAAIS,IAAIT,GAAG,GAAGS,EAAEP,GAAG8B,GAAGtB,EAAE,EAAED,EAAEuB,GAAGvB,EAAEP,GAAG,GAAGQ,GAAGnE,EAAEyD,EAAE,GAAGmC,KAAK+L,IAAI,EAAEtR,GAAG6D,GAAGP,IAAIQ,EAAEnE,EAAE4F,KAAK+L,IAAI,EAAEhO,EAAE,GAAGiC,KAAK+L,IAAI,EAAEtR,GAAG6D,EAAE,IAAI7D,GAAG,EAAEJ,EAAEC,EAAEyG,GAAG,IAAIxC,EAAEwC,GAAGxG,EAAEgE,GAAG,IAAI9D,GAAG,GAAG,IAAI6D,EAAEA,GAAG7D,EAAE8D,EAAEqB,GAAGnF,EAAEmF,EAAE,EAAEvF,EAAEC,EAAEyG,GAAG,IAAIzC,EAAEyC,GAAGxG,EAAE+D,GAAG,IAAIsB,GAAG,GAAGvF,EAAEC,EAAEyG,EAAExG,IAAI,IAAI+G,CAAC,IAAIlH,EAAE,CAAC,EAAE,SAASE,EAAEI,GAAG,IAAID,EAAEL,EAAEM,GAAG,QAAG,IAASD,EAAE,OAAOA,EAAEW,QAAQ,IAAIiD,EAAEjE,EAAEM,GAAG,CAACU,QAAQ,CAAC,GAAG,OAAOf,EAAEK,GAAG2D,EAAEA,EAAEjD,QAAQd,GAAG+D,EAAEjD,OAAO,CAAC,OAAOd,EAAEC,EAAE,CAACF,EAAED,KAAK,IAAI,IAAIM,KAAKN,EAAEE,EAAE+D,EAAEjE,EAAEM,KAAKJ,EAAE+D,EAAEhE,EAAEK,IAAIQ,OAAO4O,eAAezP,EAAEK,EAAE,CAACqP,YAAW,EAAG/E,IAAI5K,EAAEM,IAAG,EAAGJ,EAAEgH,EAAE,WAAW,GAAG,iBAAiB0N,WAAW,OAAOA,WAAW,IAAI,OAAO/T,MAAM,IAAIgU,SAAS,cAAb,EAA6B,CAAC,MAAM5U,GAAG,GAAG,iBAAiB6U,OAAO,OAAOA,MAAM,CAAC,CAA7J,GAAiK5U,EAAE+D,EAAE,CAAChE,EAAED,IAAIc,OAAOJ,UAAUqU,eAAenU,KAAKX,EAAED,GAAGE,EAAEA,EAAED,IAAI,oBAAoBiO,QAAQA,OAAO8G,aAAalU,OAAO4O,eAAezP,EAAEiO,OAAO8G,YAAY,CAAC3L,MAAM,WAAWvI,OAAO4O,eAAezP,EAAE,aAAa,CAACoJ,OAAM,GAAG,EAAGnJ,EAAE,IAAK,EAA393C,GAApI+U,EAAOjU,QAAQhB,mKCwBhF,SAASkV,EAAQjR,GAAgC,OAAOiR,EAAU,mBAAqBhH,QAAU,iBAAmBA,OAAOiH,SAAW,SAAUlR,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBiK,QAAUjK,EAAEF,cAAgBmK,QAAUjK,IAAMiK,OAAOxN,UAAY,gBAAkBuD,CAAG,EAAGiR,EAAQjR,EAAI,CAC7T,SAASmR,EAAkBC,EAAQC,GAAS,IAAK,IAAIjV,EAAI,EAAGA,EAAIiV,EAAM3Q,OAAQtE,IAAK,CAAE,IAAIkV,EAAaD,EAAMjV,GAAIkV,EAAW5F,WAAa4F,EAAW5F,aAAc,EAAO4F,EAAW1B,cAAe,EAAU,UAAW0B,IAAYA,EAAW3B,UAAW,GAAM9S,OAAO4O,eAAe2F,GAE7PG,EAFoRD,EAAWE,IAEpRA,WACnC,SAAsBC,EAAOC,GAAQ,GAAuB,WAAnBT,EAAQQ,IAAiC,OAAVA,EAAgB,OAAOA,EAAO,IAAIE,EAAOF,EAAMxH,OAAOS,aAAc,QAAakH,IAATD,EAAoB,CAAE,IAAIE,EAAMF,EAAKhV,KAAK8U,EAAOC,GAAQ,WAAY,GAAqB,WAAjBT,EAAQY,GAAmB,OAAOA,EAAK,MAAM,IAAIhS,UAAU,+CAAiD,CAAE,OAAiB,WAAT6R,EAAoBnT,OAASkG,QAAQgN,EAAQ,CADnVK,CAAaP,EAAK,UAAmC,WAAjBN,EAAQO,GAAoBA,EAAMjT,OAAOiT,IAFuMF,EAAa,CAE1U,IAAwBC,EAAWC,CAFyS,CAC5U,SAASO,EAAaC,EAAaC,EAAYC,GAAyN,OAAtMD,GAAYd,EAAkBa,EAAYvV,UAAWwV,GAAiBC,GAAaf,EAAkBa,EAAaE,GAAcrV,OAAO4O,eAAeuG,EAAa,YAAa,CAAErC,UAAU,IAAiBqC,CAAa,CAI5R,IAiBIG,EACAC,EAjBFC,EADa,EAAQ,kDACKC,MAC1BC,EAAyBF,EAAeE,uBACxCtC,EAAuBoC,EAAepC,qBACtCuC,EAAwBH,EAAeG,sBACvCC,EAA2BJ,EAAeI,yBAC1CC,EAAmBL,EAAeK,iBAChCC,EAAiB,EAAQ,kEAE3BrG,EADc,EAAQ,+BACFA,QAClBsG,EAAiB,uCACnBC,EAAYD,EAAeC,UAC3BC,EAAWF,EAAeE,SACxBC,EAAe,EAAQ,2CAAR,GACfC,EAAW,EAAQ,uCAAR,GACXC,EAAsB,EAAQ,wCAAR,CAA+B,yBACxC,IAAI7L,IAMrB,SAAS8L,IACP,IAAIC,EAAa,EAAQ,4DACzBhB,EAAcgB,EAAWhB,YACzBC,EAAoBe,EAAWf,iBACjC,CAKA,IAKIgB,GAAS,EAMTC,EAASrC,EAAOjU,QAAUuW,EAC1BC,EAAwB,CAAC,EAQ7B,SAASC,EAAUC,GACjB,GAAIA,EAAI1D,mBAAmBhG,MAAO,MAAM0J,EAAI1D,QAC5C,MAAM,IAAI4C,EAAec,EAC3B,CAsCA,SAASC,EAAQC,EAAIC,EAAQxO,EAAO2K,GAClC,IAAK3K,EAAO,CACV,IAAIyO,GAAmB,EACvB,GAAe,IAAXD,EACFC,GAAmB,EACnB9D,EAAU,iDACL,GAAIA,aAAmBhG,MAC5B,MAAMgG,EAER,IAAI+D,EAAM,IAAInB,EAAe,CAC3BoB,OAAQ3O,EACR4O,UAAU,EACVjE,QAASA,EACTkE,SAAU,KACVC,aAAcP,IAGhB,MADAG,EAAID,iBAAmBA,EACjBC,CACR,CACF,CAIA,SAASR,IACP,IAAK,IAAIa,EAAOxJ,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAMmX,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ1J,UAAU0J,GAEzBX,EAAQtI,WAAM,EAAQ,CAACkI,EAAIc,EAAK1T,QAAQsL,OAAOoI,GACjD,CAhCAf,EAAOiB,KAjCP,SAASA,EAAKP,EAAQC,EAAUjE,EAASkE,EAAUC,GACjD,IACIK,EADAC,EAAU7J,UAAUjK,OAExB,GAAgB,IAAZ8T,EACFD,EAAkB,cACb,GAAgB,IAAZC,EACTzE,EAAUgE,EACVA,OAASnC,MACJ,CACL,IAAe,IAAXwB,EACFA,GAAS,GACEqB,EAAQC,YAAcD,EAAQC,YAAcnJ,EAAQoJ,KAAKC,KAAKrJ,IACpE,2HAAiI,qBAAsB,WAE9I,IAAZiJ,IAAeP,EAAW,KAChC,CACA,GAAIlE,aAAmBhG,MAAO,MAAMgG,EACpC,IAAI8E,EAAU,CACZd,OAAQA,EACRC,SAAUA,EACVC,cAAuBrC,IAAbqC,EAAyB,OAASA,EAC5CC,aAAcA,GAAgBI,QAEhB1C,IAAZ7B,IACF8E,EAAQ9E,QAAUA,GAEpB,IAAI+D,EAAM,IAAInB,EAAekC,GAK7B,MAJIN,IACFT,EAAI/D,QAAUwE,EACdT,EAAID,kBAAmB,GAEnBC,CACR,EAIAT,EAAOV,eAAiBA,EA8BxBU,EAAOC,GAAKA,EAIZD,EAAOyB,MAAQ,SAASA,EAAMf,EAAQC,EAAUjE,GAC9C,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,YAGnCqB,GAAUC,GACZR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,KACVC,aAAcY,GAGpB,EAIAzB,EAAO0B,SAAW,SAASA,EAAShB,EAAQC,EAAUjE,GACpD,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,YAGnCqB,GAAUC,GACZR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,KACVC,aAAca,GAGpB,EAGA1B,EAAO2B,UAAY,SAASA,EAAUjB,EAAQC,EAAUjE,GACtD,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,iBAEnBd,IAAhBO,GAA2Be,IAC1Bf,EAAY4B,EAAQC,IACvBR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,YACVC,aAAcc,GAGpB,EAGA3B,EAAO4B,aAAe,SAASA,EAAalB,EAAQC,EAAUjE,GAC5D,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,iBAEnBd,IAAhBO,GAA2Be,IAC3Bf,EAAY4B,EAAQC,IACtBR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,eACVC,aAAce,GAGpB,EAGA5B,EAAO6B,gBAAkB,SAASA,EAAgBnB,EAAQC,EAAUjE,GAClE,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,iBAEnBd,IAAhBO,GAA2Be,IAC1Bd,EAAkB2B,EAAQC,IAC7BR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,kBACVC,aAAcgB,GAGpB,EACA7B,EAAO8B,mBACP,SAASA,EAAmBpB,EAAQC,EAAUjE,GAC5C,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,iBAEnBd,IAAhBO,GAA2Be,IAC3Bd,EAAkB2B,EAAQC,IAC5BR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,qBACVC,aAAciB,GAGpB,EACA9B,EAAO+B,YAAc,SAASA,EAAYrB,EAAQC,EAAUjE,GAC1D,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,YAElCM,EAASe,EAAQC,IACpBR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,cACVC,aAAckB,GAGpB,EACA/B,EAAOgC,eAAiB,SAASA,EAAetB,EAAQC,EAAUjE,GAChE,GAAIpF,UAAUjK,OAAS,EACrB,MAAM,IAAIgS,EAAiB,SAAU,YAEnCM,EAASe,EAAQC,IACnBR,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAU,iBACVC,aAAcmB,GAGpB,EACA,IAAIC,EAA0BvD,GAAa,SAASuD,EAAW7B,EAAK8B,EAAMxB,GACxE,IAAIyB,EAAQ5Y,MA/Pd,SAAyB6Y,EAAUzD,GAAe,KAAMyD,aAAoBzD,GAAgB,MAAM,IAAInS,UAAU,oCAAwC,CAgQtJ6V,CAAgB9Y,KAAM0Y,GACtBC,EAAKI,SAAQ,SAAUnE,GACjBA,KAAOiC,SACM7B,IAAXmC,GAA+C,iBAAhBA,EAAOvC,IAAqBsB,EAASW,EAAIjC,KAASyB,EAAoBQ,EAAIjC,GAAMuC,EAAOvC,IACxHgE,EAAMhE,GAAOuC,EAAOvC,GAEpBgE,EAAMhE,GAAOiC,EAAIjC,GAGvB,GACF,IA2BA,SAASoE,EAAkB7B,EAAQC,EAAU6B,EAAKlC,GAChD,GAAwB,mBAAbK,EAAyB,CAClC,GAAIlB,EAASkB,GAAW,OAAOf,EAAoBe,EAAUD,GAE7D,GAAyB,IAArBpJ,UAAUjK,OACZ,MAAM,IAAIuP,EAAqB,WAAY,CAAC,WAAY,UAAW+D,GAIrE,GAAwB,WAApB/C,EAAQ8C,IAAmC,OAAXA,EAAiB,CACnD,IAAID,EAAM,IAAInB,EAAe,CAC3BoB,OAAQA,EACRC,SAAUA,EACVjE,QAAS8F,EACT5B,SAAU,kBACVC,aAAcP,IAGhB,MADAG,EAAIG,SAAWN,EAAGtP,KACZyP,CACR,CACA,IAAIyB,EAAO1Y,OAAO0Y,KAAKvB,GAGvB,GAAIA,aAAoBjK,MACtBwL,EAAK1L,KAAK,OAAQ,gBACb,GAAoB,IAAhB0L,EAAK7U,OACd,MAAM,IAAI8R,EAAsB,QAASwB,EAAU,8BASrD,YAPoBpC,IAAhBO,GAA2Be,IAC/BqC,EAAKI,SAAQ,SAAUnE,GACM,iBAAhBuC,EAAOvC,IAAqBsB,EAASkB,EAASxC,KAASyB,EAAoBe,EAASxC,GAAMuC,EAAOvC,KAxDlH,SAA6BuC,EAAQC,EAAUxC,EAAKzB,EAASwF,EAAM5B,GACjE,KAAMnC,KAAOuC,KAAY3B,EAAkB2B,EAAOvC,GAAMwC,EAASxC,IAAO,CACtE,IAAKzB,EAAS,CAEZ,IAAIxO,EAAI,IAAI+T,EAAWvB,EAAQwB,GAC3BnS,EAAI,IAAIkS,EAAWtB,EAAUuB,EAAMxB,GACnCD,EAAM,IAAInB,EAAe,CAC3BoB,OAAQxS,EACRyS,SAAU5Q,EACV6Q,SAAU,kBACVC,aAAcP,IAKhB,MAHAG,EAAIC,OAASA,EACbD,EAAIE,SAAWA,EACfF,EAAIG,SAAWN,EAAGtP,KACZyP,CACR,CACAN,EAAU,CACRO,OAAQA,EACRC,SAAUA,EACVjE,QAASA,EACTkE,SAAUN,EAAGtP,KACb6P,aAAcP,GAElB,CACF,CAkCMmC,CAAoB/B,EAAQC,EAAUxC,EAAKqE,EAAKN,EAAM5B,EACxD,KACO,CACT,CAEA,YAA2B/B,IAAvBoC,EAASvX,WAA2BsX,aAAkBC,IAGtDjK,MAAMgM,cAAc/B,KAGa,IAA9BA,EAASrX,KAAK,CAAC,EAAGoX,EAC3B,CACA,SAASiC,EAAUrC,GACjB,GAAkB,mBAAPA,EACT,MAAM,IAAI1D,EAAqB,KAAM,WAAY0D,GAEnD,IACEA,GACF,CAAE,MAAO5X,GACP,OAAOA,CACT,CACA,OAAOwX,CACT,CACA,SAAS0C,EAAexC,GAStB,OAAOZ,EAAUY,IAAgB,OAARA,GAAiC,WAAjBxC,EAAQwC,IAAyC,mBAAbA,EAAIyC,MAA4C,mBAAdzC,EAAI0C,KACrH,CACA,SAASC,EAAcC,GACrB,OAAOC,QAAQvQ,UAAUmQ,MAAK,WAC5B,IAAIK,EACJ,GAAyB,mBAAdF,GAIT,IAAKJ,EAFLM,EAAgBF,KAGd,MAAM,IAAI5D,EAAyB,sBAAuB,YAAa8D,OAEpE,KAAIN,EAAeI,GAGxB,MAAM,IAAIpG,EAAqB,YAAa,CAAC,WAAY,WAAYoG,GAFrEE,EAAgBF,CAGlB,CACA,OAAOC,QAAQvQ,UAAUmQ,MAAK,WAC5B,OAAOK,CACT,IAAGL,MAAK,WACN,OAAO3C,CACT,IAAG4C,OAAM,SAAUpa,GACjB,OAAOA,CACT,GACF,GACF,CACA,SAASya,EAAatC,EAAcH,EAAQvI,EAAOuE,GACjD,GAAqB,iBAAVvE,EAAoB,CAC7B,GAAyB,IAArBb,UAAUjK,OACZ,MAAM,IAAIuP,EAAqB,QAAS,CAAC,SAAU,QAAS,WAAY,UAAWzE,GAErF,GAAwB,WAApByF,EAAQ8C,IAAmC,OAAXA,GAClC,GAAIA,EAAOhE,UAAYvE,EACrB,MAAM,IAAI+G,EAAuB,gBAAiB,sBAAuBvG,OAAO+H,EAAOhE,QAAS,wCAE7F,GAAIgE,IAAWvI,EACpB,MAAM,IAAI+G,EAAuB,gBAAiB,cAAevG,OAAO+H,EAAQ,mCAElFhE,EAAUvE,EACVA,OAAQoG,CACV,MAAO,GAAa,MAATpG,GAAoC,WAAnByF,EAAQzF,IAAwC,mBAAVA,EAChE,MAAM,IAAIyE,EAAqB,QAAS,CAAC,SAAU,QAAS,WAAY,UAAWzE,GAErF,GAAIuI,IAAWR,EAAuB,CACpC,IAAIkD,EAAU,GACVjL,GAASA,EAAMnH,OACjBoS,GAAW,KAAKzK,OAAOR,EAAMnH,KAAM,MAErCoS,GAAW1G,EAAU,KAAK/D,OAAO+D,GAAW,IAC5C,IAAI2G,EAA+B,YAAtBxC,EAAa7P,KAAqB,YAAc,YAC7DmP,EAAU,CACRO,YAAQnC,EACRoC,SAAUxI,EACVyI,SAAUC,EAAa7P,KACvB0L,QAAS,oBAAoB/D,OAAO0K,GAAQ1K,OAAOyK,GACnDvC,aAAcA,GAElB,CACA,GAAI1I,IAAUoK,EAAkB7B,EAAQvI,EAAOuE,EAASmE,GACtD,MAAMH,CAEV,CACA,SAAS4C,EAAezC,EAAcH,EAAQvI,EAAOuE,GACnD,GAAIgE,IAAWR,EAAf,CAKA,GAJqB,iBAAV/H,IACTuE,EAAUvE,EACVA,OAAQoG,IAELpG,GAASoK,EAAkB7B,EAAQvI,GAAQ,CAC9C,IAAIiL,EAAU1G,EAAU,KAAK/D,OAAO+D,GAAW,IAC3C2G,EAA+B,kBAAtBxC,EAAa7P,KAA2B,YAAc,YACnEmP,EAAU,CACRO,OAAQA,EACRC,SAAUxI,EACVyI,SAAUC,EAAa7P,KACvB0L,QAAS,gBAAgB/D,OAAO0K,GAAQ1K,OAAOyK,EAAS,MAAQ,oBAAqBzK,OAAO+H,GAAUA,EAAOhE,QAAS,KACtHmE,aAAcA,GAElB,CACA,MAAMH,CAhBsC,CAiB9C,CA4EA,SAAS6C,EAAczN,EAAQ0N,EAAQ9G,EAAS4D,EAAImD,GAClD,IAAKhE,EAAS+D,GACZ,MAAM,IAAI5G,EAAqB,SAAU,SAAU4G,GAErD,IAAIE,EAAmB,UAAXD,EACZ,GAAsB,iBAAX3N,GAAuB8J,EAAoB4D,EAAQ1N,KAAY4N,EAAO,CAC/E,GAAIhH,aAAmBhG,MACrB,MAAMgG,EAER,IAAI8D,GAAoB9D,EAGxBA,EAAUA,IAA8B,iBAAX5G,EAAsB,+DAAiE,GAAG6C,OAAOiF,EAAQ9H,GAAS,MAAM6C,OAAOM,EAAQnD,GAAS,MAAQ4N,EAAQ,kDAAoD,+DAAiE,GAAG/K,OAAOM,EAAQuK,GAAS,gBAAgB7K,OAAOM,EAAQnD,GAAS,OACrX,IAAI2K,EAAM,IAAInB,EAAe,CAC3BoB,OAAQ5K,EACR6K,SAAU6C,EACV9G,QAASA,EACTkE,SAAU6C,EACV5C,aAAcP,IAGhB,MADAG,EAAID,iBAAmBA,EACjBC,CACR,CACF,CASA,SAASkD,IACP,IAAK,IAAIC,EAAQtM,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAMia,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACpF9C,EAAK8C,GAASvM,UAAUuM,GAE1BxD,EAAQtI,WAAM,EAAQ,CAAC4L,EAAQ5C,EAAK1T,QAAQsL,OAAOoI,GACrD,CAhHAf,EAAO8D,OAAS,SAASA,EAAOd,GAC9B,IAAK,IAAIe,EAAQzM,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAMoa,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACxGjD,EAAKiD,EAAQ,GAAK1M,UAAU0M,GAE9Bb,EAAapL,WAAM,EAAQ,CAAC+L,EAAQnB,EAAUK,IAAYrK,OAAOoI,GACnE,EACAf,EAAOiE,QAAU,SAASA,EAAQjB,GAChC,IAAK,IAAIkB,EAAQ5M,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAMua,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACxGpD,EAAKoD,EAAQ,GAAK7M,UAAU6M,GAE9B,OAAOpB,EAAcC,GAAWH,MAAK,SAAUuB,GAC7C,OAAOjB,EAAapL,WAAM,EAAQ,CAACkM,EAASG,GAAQzL,OAAOoI,GAC7D,GACF,EACAf,EAAOqE,aAAe,SAASA,EAAa/D,GAC1C,IAAK,IAAIgE,EAAQhN,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAM2a,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACxGxD,EAAKwD,EAAQ,GAAKjN,UAAUiN,GAE9BjB,EAAevL,WAAM,EAAQ,CAACsM,EAAc1B,EAAUrC,IAAK3H,OAAOoI,GACpE,EACAf,EAAOwE,cAAgB,SAASA,EAAclE,GAC5C,IAAK,IAAImE,EAAQnN,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAM8a,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACxG3D,EAAK2D,EAAQ,GAAKpN,UAAUoN,GAE9B,OAAO3B,EAAczC,GAAIuC,MAAK,SAAUuB,GACtC,OAAOd,EAAevL,WAAM,EAAQ,CAACyM,EAAeJ,GAAQzL,OAAOoI,GACrE,GACF,EACAf,EAAO2E,QAAU,SAASA,EAAQlE,GAChC,GAAIA,QAAmC,CACrC,IAAI/D,EAAU,mCACO,WAAjBkB,EAAQ6C,IAA4C,iBAAhBA,EAAI/D,QACf,IAAvB+D,EAAI/D,QAAQrP,QAAgBoT,EAAIhU,YAClCiQ,GAAW+D,EAAIhU,YAAYuE,KAE3B0L,GAAW+D,EAAI/D,QAGjBA,GAAWzD,EAAQwH,GAErB,IAAImE,EAAS,IAAItF,EAAe,CAC9BoB,OAAQD,EACRE,SAAU,KACVC,SAAU,UACVlE,QAASA,EACTmE,aAAc8D,IAIZE,EAAYpE,EAAIjE,MACpB,GAAyB,iBAAdqI,EAAwB,CAIjC,IAAIC,EAAOD,EAAU5H,MAAM,MAC3B6H,EAAKC,QAGL,IADA,IAAIC,EAAOJ,EAAOpI,MAAMS,MAAM,MACrBlU,EAAI,EAAGA,EAAI+b,EAAKzX,OAAQtE,IAAK,CAEpC,IAAIkc,EAAMD,EAAKrO,QAAQmO,EAAK/b,IAC5B,IAAa,IAATkc,EAAY,CAEdD,EAAOA,EAAKpU,MAAM,EAAGqU,GACrB,KACF,CACF,CACAL,EAAOpI,MAAQ,GAAG7D,OAAOqM,EAAKvO,KAAK,MAAO,MAAMkC,OAAOmM,EAAKrO,KAAK,MACnE,CACA,MAAMmO,CACR,CACF,EA4BA5E,EAAO0D,MAAQ,SAASA,EAAM5N,EAAQ0N,EAAQ9G,GAC5C6G,EAAczN,EAAQ0N,EAAQ9G,EAASgH,EAAO,QAChD,EACA1D,EAAOkF,aAAe,SAASA,EAAapP,EAAQ0N,EAAQ9G,GAC1D6G,EAAczN,EAAQ0N,EAAQ9G,EAASwI,EAAc,eACvD,EASAlF,EAAO2D,OAASjE,EAAaiE,EAAQ3D,EAAQ,CAC3CyB,MAAOzB,EAAO+B,YACdJ,UAAW3B,EAAO6B,gBAClBH,SAAU1B,EAAOgC,eACjBJ,aAAc5B,EAAO8B,qBAEvB9B,EAAO2D,OAAOA,OAAS3D,EAAO2D,6ICxkB9B,SAASwB,EAAQzc,EAAGE,GAAK,IAAID,EAAIa,OAAO0Y,KAAKxZ,GAAI,GAAIc,OAAO4b,sBAAuB,CAAE,IAAIzY,EAAInD,OAAO4b,sBAAsB1c,GAAIE,IAAM+D,EAAIA,EAAE0Y,QAAO,SAAUzc,GAAK,OAAOY,OAAO8b,yBAAyB5c,EAAGE,GAAGyP,UAAY,KAAK1P,EAAE6N,KAAKuB,MAAMpP,EAAGgE,EAAI,CAAE,OAAOhE,CAAG,CAC9P,SAAS4c,EAAc7c,GAAK,IAAK,IAAIE,EAAI,EAAGA,EAAI0O,UAAUjK,OAAQzE,IAAK,CAAE,IAAID,EAAI,MAAQ2O,UAAU1O,GAAK0O,UAAU1O,GAAK,CAAC,EAAGA,EAAI,EAAIuc,EAAQ3b,OAAOb,IAAI,GAAI2Z,SAAQ,SAAU1Z,GAAK4c,EAAgB9c,EAAGE,EAAGD,EAAEC,GAAK,IAAKY,OAAOic,0BAA4Bjc,OAAOkc,iBAAiBhd,EAAGc,OAAOic,0BAA0B9c,IAAMwc,EAAQ3b,OAAOb,IAAI2Z,SAAQ,SAAU1Z,GAAKY,OAAO4O,eAAe1P,EAAGE,EAAGY,OAAO8b,yBAAyB3c,EAAGC,GAAK,GAAI,CAAE,OAAOF,CAAG,CACtb,SAAS8c,EAAgBpF,EAAKjC,EAAKpM,GAA4L,OAAnLoM,EAAMwH,EAAexH,MAAiBiC,EAAO5W,OAAO4O,eAAegI,EAAKjC,EAAK,CAAEpM,MAAOA,EAAOsG,YAAY,EAAMkE,cAAc,EAAMD,UAAU,IAAkB8D,EAAIjC,GAAOpM,EAAgBqO,CAAK,CAE3O,SAAStC,EAAkBC,EAAQC,GAAS,IAAK,IAAIjV,EAAI,EAAGA,EAAIiV,EAAM3Q,OAAQtE,IAAK,CAAE,IAAIkV,EAAaD,EAAMjV,GAAIkV,EAAW5F,WAAa4F,EAAW5F,aAAc,EAAO4F,EAAW1B,cAAe,EAAU,UAAW0B,IAAYA,EAAW3B,UAAW,GAAM9S,OAAO4O,eAAe2F,EAAQ4H,EAAe1H,EAAWE,KAAMF,EAAa,CAAE,CAE5U,SAAS0H,EAAezH,GAAO,IAAIC,EACnC,SAAsBC,EAAOC,GAAQ,GAAuB,WAAnBT,EAAQQ,IAAiC,OAAVA,EAAgB,OAAOA,EAAO,IAAIE,EAAOF,EAAMxH,OAAOS,aAAc,QAAakH,IAATD,EAAoB,CAAE,IAAIE,EAAMF,EAAKhV,KAAK8U,EAAOC,GAAQ,WAAY,GAAqB,WAAjBT,EAAQY,GAAmB,OAAOA,EAAK,MAAM,IAAIhS,UAAU,+CAAiD,CAAE,OAAiB,WAAT6R,EAAoBnT,OAASkG,QAAQgN,EAAQ,CADnVK,CAAaP,EAAK,UAAW,MAAwB,WAAjBN,EAAQO,GAAoBA,EAAMjT,OAAOiT,EAAM,CAI5H,SAASyH,EAA2BC,EAAMvc,GAAQ,GAAIA,IAA2B,WAAlBsU,EAAQtU,IAAsC,mBAATA,GAAwB,OAAOA,EAAa,QAAa,IAATA,EAAmB,MAAM,IAAIkD,UAAU,4DAA+D,OAAOsZ,EAAuBD,EAAO,CAC/R,SAASC,EAAuBD,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,CAAM,CACrK,SAASG,EAAiBC,GAAS,IAAIC,EAAwB,mBAARnS,IAAqB,IAAIA,SAAQwK,EAA8nB,OAAnnByH,EAAmB,SAA0BC,GAAS,GAAc,OAAVA,IAGlI3F,EAHuK2F,GAGjG,IAAzD1I,SAASzN,SAASxG,KAAKgX,GAAI3J,QAAQ,kBAH+H,OAAOsP,EAGjN,IAA2B3F,EAH6L,GAAqB,mBAAV2F,EAAwB,MAAM,IAAIzZ,UAAU,sDAAyD,QAAsB,IAAX0Z,EAAwB,CAAE,GAAIA,EAAOC,IAAIF,GAAQ,OAAOC,EAAO5S,IAAI2S,GAAQC,EAAOnT,IAAIkT,EAAOG,EAAU,CAAE,SAASA,IAAY,OAAOC,EAAWJ,EAAO3O,UAAWgP,EAAgB/c,MAAMkD,YAAc,CAAkJ,OAAhJ2Z,EAAQhd,UAAYI,OAAO+I,OAAO0T,EAAM7c,UAAW,CAAEqD,YAAa,CAAEsF,MAAOqU,EAAS/N,YAAY,EAAOiE,UAAU,EAAMC,cAAc,KAAkBgK,EAAgBH,EAASH,EAAQ,EAAUD,EAAiBC,EAAQ,CACtvB,SAASI,EAAWG,EAAQzF,EAAMkF,GAA4V,OAAhTI,EAA/BI,IAA4CC,QAAQC,UAAUpF,OAA8B,SAAoBiF,EAAQzF,EAAMkF,GAAS,IAAI/X,EAAI,CAAC,MAAOA,EAAEsI,KAAKuB,MAAM7J,EAAG6S,GAAO,IAAsDqB,EAAW,IAA/C7E,SAASgE,KAAKxJ,MAAMyO,EAAQtY,IAA6F,OAAnD+X,GAAOM,EAAgBnE,EAAU6D,EAAM7c,WAAmBgZ,CAAU,EAAYiE,EAAWtO,MAAM,KAAMT,UAAY,CACxa,SAASmP,IAA8B,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQ1d,UAAUoH,QAAQlH,KAAKod,QAAQC,UAAUG,QAAS,IAAI,WAAa,MAAY,CAAM,CAAE,MAAOpe,GAAK,OAAO,CAAO,CAAE,CAExU,SAAS6d,EAAgB5Z,EAAG0C,GAA6I,OAAxIkX,EAAkB/c,OAAOC,eAAiBD,OAAOC,eAAe8X,OAAS,SAAyB5U,EAAG0C,GAAsB,OAAjB1C,EAAEoa,UAAY1X,EAAU1C,CAAG,EAAU4Z,EAAgB5Z,EAAG0C,EAAI,CACvM,SAASiX,EAAgB3Z,GAA+J,OAA1J2Z,EAAkB9c,OAAOC,eAAiBD,OAAOwd,eAAezF,OAAS,SAAyB5U,GAAK,OAAOA,EAAEoa,WAAavd,OAAOwd,eAAera,EAAI,EAAU2Z,EAAgB3Z,EAAI,CACnN,SAASiR,EAAQjR,GAAgC,OAAOiR,EAAU,mBAAqBhH,QAAU,iBAAmBA,OAAOiH,SAAW,SAAUlR,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBiK,QAAUjK,EAAEF,cAAgBmK,QAAUjK,IAAMiK,OAAOxN,UAAY,gBAAkBuD,CAAG,EAAGiR,EAAQjR,EAAI,CAC7T,IACEsM,EADa,EAAQ,+BACFA,QAEnB2D,EADc,EAAQ,kDACWqC,MAAMrC,qBAGzC,SAASqK,EAASC,EAAKC,EAAQC,GAI7B,YAHiB7I,IAAb6I,GAA0BA,EAAWF,EAAI7Z,UAC3C+Z,EAAWF,EAAI7Z,QAEV6Z,EAAIG,UAAUD,EAAWD,EAAO9Z,OAAQ+Z,KAAcD,CAC/D,CAeA,IAAIG,EAAO,GACPC,EAAQ,GACRC,EAAM,GACNC,EAAQ,GACRC,EAAoB,CACtB7F,gBAAiB,6CACjBE,YAAa,wCACb4F,kBAAmB,yDACnBhG,UAAW,4CACXF,MAAO,uCACPK,mBAAoB,sDACpBE,eAAgB,+CAChB4F,qBAAsB,6DACtBhG,aAAc,qDACdF,SAAU,8CACVmG,aAAc,6CAMhB,SAASC,EAAUC,GACjB,IAAI7F,EAAO1Y,OAAO0Y,KAAK6F,GACnBhK,EAASvU,OAAO+I,OAAO/I,OAAOwd,eAAee,IAOjD,OANA7F,EAAKI,SAAQ,SAAUnE,GACrBJ,EAAOI,GAAO4J,EAAO5J,EACvB,IACA3U,OAAO4O,eAAe2F,EAAQ,UAAW,CACvChM,MAAOgW,EAAOrL,UAETqB,CACT,CACA,SAASiK,EAAaC,GAGpB,OAAOhP,EAAQgP,EAAK,CAClBC,SAAS,EACTC,eAAe,EACfC,MAAO,IACPC,eAAgBC,IAEhBC,YAAY,EAMZC,YAAaF,IAEbG,WAAW,EACXC,QAAQ,EAERC,SAAS,GAEb,CACA,SAASC,EAAclI,EAAQC,EAAUC,GACvC,IAAIiI,EAAQ,GACRrK,EAAM,GACNsK,EAAU,EACVC,EAAM,GACNC,GAAU,EACVC,EAAkBjB,EAAatH,GAC/BwI,EAAcD,EAAgBhM,MAAM,MACpCkM,EAAgBnB,EAAarH,GAAU1D,MAAM,MAC7ClU,EAAI,EACJqgB,EAAY,GAUhB,GANiB,gBAAbxI,GAAkD,WAApBhD,EAAQ8C,IAA8C,WAAtB9C,EAAQ+C,IAAqC,OAAXD,GAAgC,OAAbC,IACrHC,EAAW,qBAKc,IAAvBsI,EAAY7b,QAAyC,IAAzB8b,EAAc9b,QAAgB6b,EAAY,KAAOC,EAAc,GAAI,CACjG,IAAIE,EAAcH,EAAY,GAAG7b,OAAS8b,EAAc,GAAG9b,OAI3D,GAAIgc,GA5Dc,IA6DhB,KAAyB,WAApBzL,EAAQ8C,IAAmC,OAAXA,GAA2C,WAAtB9C,EAAQ+C,IAAuC,OAAbA,GAAkC,IAAXD,GAA6B,IAAbC,GAEjI,MAAO,GAAGhI,OAAO+O,EAAkB9G,GAAW,QAAU,GAAGjI,OAAOuQ,EAAY,GAAI,SAASvQ,OAAOwQ,EAAc,GAAI,WAEjH,GAAiB,sBAAbvI,EAAkC,CAK3C,GAAIyI,GADYjI,EAAQkI,QAAUlI,EAAQkI,OAAOC,MAAQnI,EAAQkI,OAAOE,QAAU,IACrD,CAC3B,KAAON,EAAY,GAAGngB,KAAOogB,EAAc,GAAGpgB,IAC5CA,IAGEA,EAAI,IAGNqgB,EAAY,OAAOzQ,OA9G7B,SAAgBuO,EAAKuC,GAEnB,GADAA,EAAQnb,KAAKuO,MAAM4M,GACD,GAAdvC,EAAI7Z,QAAwB,GAAToc,EAAY,MAAO,GAC1C,IAAIC,EAAWxC,EAAI7Z,OAASoc,EAE5B,IADAA,EAAQnb,KAAKuO,MAAMvO,KAAK8O,IAAIqM,GAASnb,KAAK8O,IAAI,IACvCqM,GACLvC,GAAOA,EACPuC,IAGF,OADAvC,EAAOA,EAAIG,UAAU,EAAGqC,EAAWxC,EAAI7Z,OAEzC,CAmGoCsc,CAAO,IAAK5gB,GAAI,KAC1CA,EAAI,EAER,CACF,CACF,CAMA,IAFA,IAAImF,EAAIgb,EAAYA,EAAY7b,OAAS,GACrC0C,EAAIoZ,EAAcA,EAAc9b,OAAS,GACtCa,IAAM6B,IACPhH,IAAM,EACRggB,EAAM,OAAOpQ,OAAOzK,GAAGyK,OAAOoQ,GAE9BF,EAAQ3a,EAEVgb,EAAYU,MACZT,EAAcS,MACa,IAAvBV,EAAY7b,QAAyC,IAAzB8b,EAAc9b,SAC9Ca,EAAIgb,EAAYA,EAAY7b,OAAS,GACrC0C,EAAIoZ,EAAcA,EAAc9b,OAAS,GAE3C,IAAIwc,EAAWvb,KAAKwb,IAAIZ,EAAY7b,OAAQ8b,EAAc9b,QAG1D,GAAiB,IAAbwc,EAAgB,CAElB,IAAIE,EAAed,EAAgBhM,MAAM,MAIzC,GAAI8M,EAAa1c,OAAS,GAExB,IADA0c,EAAa,IAAM,GAAGpR,OAAO2O,EAAM,OAAO3O,OAAO8O,GAC1CsC,EAAa1c,OAAS,IAC3B0c,EAAaH,MAGjB,MAAO,GAAGjR,OAAO+O,EAAkBG,aAAc,QAAQlP,OAAOoR,EAAatT,KAAK,MAAO,KAC3F,CACI1N,EAAI,IACNggB,EAAM,KAAKpQ,OAAO2O,EAAM,OAAO3O,OAAO8O,GAAO9O,OAAOoQ,GACpDC,GAAU,GAEE,KAAVH,IACFE,EAAM,OAAOpQ,OAAOkQ,GAAOlQ,OAAOoQ,GAClCF,EAAQ,IAEV,IAAImB,EAAe,EACfxH,EAAMkF,EAAkB9G,GAAY,KAAKjI,OAAO4O,EAAO,YAAY5O,OAAO8O,EAAO,KAAK9O,OAAO6O,EAAK,cAAc7O,OAAO8O,GACvHwC,EAAa,IAAItR,OAAO2O,EAAM,OAAO3O,OAAO8O,EAAO,kBACvD,IAAK1e,EAAI,EAAGA,EAAI8gB,EAAU9gB,IAAK,CAE7B,IAAImhB,EAAMnhB,EAAI+f,EACd,GAAII,EAAY7b,OAAStE,EAAI,EAIvBmhB,EAAM,GAAKnhB,EAAI,IACbmhB,EAAM,GACR1L,GAAO,KAAK7F,OAAO2O,EAAM,OAAO3O,OAAO8O,GACvCuB,GAAU,GACDkB,EAAM,IACf1L,GAAO,OAAO7F,OAAOwQ,EAAcpgB,EAAI,IACvCihB,KAEFxL,GAAO,OAAO7F,OAAOwQ,EAAcpgB,EAAI,IACvCihB,KAGFlB,EAAU/f,EAEV8f,GAAS,KAAKlQ,OAAO6O,EAAK,KAAK7O,OAAO8O,EAAO,KAAK9O,OAAOwQ,EAAcpgB,IACvEihB,SAEK,GAAIb,EAAc9b,OAAStE,EAAI,EAIhCmhB,EAAM,GAAKnhB,EAAI,IACbmhB,EAAM,GACR1L,GAAO,KAAK7F,OAAO2O,EAAM,OAAO3O,OAAO8O,GACvCuB,GAAU,GACDkB,EAAM,IACf1L,GAAO,OAAO7F,OAAOuQ,EAAYngB,EAAI,IACrCihB,KAEFxL,GAAO,OAAO7F,OAAOuQ,EAAYngB,EAAI,IACrCihB,KAGFlB,EAAU/f,EAEVyV,GAAO,KAAK7F,OAAO4O,EAAO,KAAK5O,OAAO8O,EAAO,KAAK9O,OAAOuQ,EAAYngB,IACrEihB,QAEK,CACL,IAAIG,EAAehB,EAAcpgB,GAC7BqhB,EAAalB,EAAYngB,GAIzBshB,EAAiBD,IAAeD,KAAkBlD,EAASmD,EAAY,MAAQA,EAAWxZ,MAAM,GAAI,KAAOuZ,GAU3GE,GAAkBpD,EAASkD,EAAc,MAAQA,EAAavZ,MAAM,GAAI,KAAOwZ,IACjFC,GAAiB,EACjBD,GAAc,KAEZC,GAIEH,EAAM,GAAKnhB,EAAI,IACbmhB,EAAM,GACR1L,GAAO,KAAK7F,OAAO2O,EAAM,OAAO3O,OAAO8O,GACvCuB,GAAU,GACDkB,EAAM,IACf1L,GAAO,OAAO7F,OAAOuQ,EAAYngB,EAAI,IACrCihB,KAEFxL,GAAO,OAAO7F,OAAOuQ,EAAYngB,EAAI,IACrCihB,KAGFlB,EAAU/f,EAGVyV,GAAO,KAAK7F,OAAO4O,EAAO,KAAK5O,OAAO8O,EAAO,KAAK9O,OAAOyR,GACzDvB,GAAS,KAAKlQ,OAAO6O,EAAK,KAAK7O,OAAO8O,EAAO,KAAK9O,OAAOwR,GACzDH,GAAgB,IAKhBxL,GAAOqK,EACPA,EAAQ,GAGI,IAARqB,GAAmB,IAANnhB,IACfyV,GAAO,OAAO7F,OAAOyR,GACrBJ,KAGN,CAEA,GAAIA,EAAe,IAAMjhB,EAAI8gB,EAAW,EACtC,MAAO,GAAGlR,OAAO6J,GAAK7J,OAAOsR,EAAY,MAAMtR,OAAO6F,EAAK,MAAM7F,OAAO2O,EAAM,OAAO3O,OAAO8O,GAAO9O,OAAOkQ,EAAO,MAAQ,GAAGlQ,OAAO2O,EAAM,OAAO3O,OAAO8O,EAE3J,CACA,MAAO,GAAG9O,OAAO6J,GAAK7J,OAAOqQ,EAAUiB,EAAa,GAAI,MAAMtR,OAAO6F,GAAK7F,OAAOkQ,GAAOlQ,OAAOoQ,GAAKpQ,OAAOyQ,EAC7G,CACA,IAAI9J,EAA8B,SAAUgL,EAAQC,IAtSpD,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIje,UAAU,sDAAyDge,EAASphB,UAAYI,OAAO+I,OAAOkY,GAAcA,EAAWrhB,UAAW,CAAEqD,YAAa,CAAEsF,MAAOyY,EAAUlO,UAAU,EAAMC,cAAc,KAAW/S,OAAO4O,eAAeoS,EAAU,YAAa,CAAElO,UAAU,IAAcmO,GAAYlE,EAAgBiE,EAAUC,EAAa,CAuSjcC,CAAUpL,EAAgBgL,GAC1B,IAvSoBK,EAAeC,EAJfjM,EAAaC,EAAYC,EA2SzCgM,GAvSgBF,EAuSMrL,EAvSSsL,EAA4BnE,IAAoC,WAAkC,IAAsCrC,EAAlC0G,EAAQxE,EAAgBqE,GAAkB,GAAIC,EAA2B,CAAE,IAAIG,EAAYzE,EAAgB/c,MAAMkD,YAAa2X,EAASsC,QAAQC,UAAUmE,EAAOxT,UAAWyT,EAAY,MAAS3G,EAAS0G,EAAM/S,MAAMxO,KAAM+N,WAAc,OAAOsO,EAA2Brc,KAAM6a,EAAS,GAwSna,SAAS9E,EAAe0L,GACtB,IAAI7I,EAEJ,GAjTJ,SAAyBC,EAAUzD,GAAe,KAAMyD,aAAoBzD,GAAgB,MAAM,IAAInS,UAAU,oCAAwC,CAgTpJ6V,CAAgB9Y,KAAM+V,GACG,WAArB1B,EAAQoN,IAAqC,OAAZA,EACnC,MAAM,IAAIpO,EAAqB,UAAW,SAAUoO,GAEtD,IAAItO,EAAUsO,EAAQtO,QACpBkE,EAAWoK,EAAQpK,SACnBC,EAAemK,EAAQnK,aACrBH,EAASsK,EAAQtK,OACnBC,EAAWqK,EAAQrK,SACjBsK,EAAQvU,MAAMwU,gBAElB,GADAxU,MAAMwU,gBAAkB,EACT,MAAXxO,EACFyF,EAAQ0I,EAAOvhB,KAAKC,KAAM2B,OAAOwR,SAwBjC,GAtBI0E,EAAQkI,QAAUlI,EAAQkI,OAAOC,QAG/BnI,EAAQkI,QAAUlI,EAAQkI,OAAO6B,eAAoD,IAAnC/J,EAAQkI,OAAO6B,iBACnE7D,EAAO,WACPC,EAAQ,WACRE,EAAQ,WACRD,EAAM,aAENF,EAAO,GACPC,EAAQ,GACRE,EAAQ,GACRD,EAAM,KAMc,WAApB5J,EAAQ8C,IAAmC,OAAXA,GAAyC,WAAtB9C,EAAQ+C,IAAuC,OAAbA,GAAqB,UAAWD,GAAUA,aAAkBhK,OAAS,UAAWiK,GAAYA,aAAoBjK,QACvMgK,EAASoH,EAAUpH,GACnBC,EAAWmH,EAAUnH,IAEN,oBAAbC,GAA+C,gBAAbA,EACpCuB,EAAQ0I,EAAOvhB,KAAKC,KAAMqf,EAAclI,EAAQC,EAAUC,SACrD,GAAiB,uBAAbA,GAAkD,mBAAbA,EAA+B,CAG7E,IAAIwK,EAAO1D,EAAkB9G,GACzBpC,EAAMwJ,EAAatH,GAAQzD,MAAM,MASrC,GANiB,mBAAb2D,GAAqD,WAApBhD,EAAQ8C,IAAmC,OAAXA,IACnE0K,EAAO1D,EAAkBE,sBAKvBpJ,EAAInR,OAAS,GAEf,IADAmR,EAAI,IAAM,GAAG7F,OAAO2O,EAAM,OAAO3O,OAAO8O,GACjCjJ,EAAInR,OAAS,IAClBmR,EAAIoL,MAMNzH,EADiB,IAAf3D,EAAInR,OACEwd,EAAOvhB,KAAKC,KAAM,GAAGoP,OAAOyS,EAAM,KAAKzS,OAAO6F,EAAI,KAElDqM,EAAOvhB,KAAKC,KAAM,GAAGoP,OAAOyS,EAAM,QAAQzS,OAAO6F,EAAI/H,KAAK,MAAO,MAE7E,KAAO,CACL,IAAI4U,EAAOrD,EAAatH,GACpBmI,EAAQ,GACRyC,EAAiB5D,EAAkB9G,GACtB,iBAAbA,GAA4C,aAAbA,GACjCyK,EAAO,GAAG1S,OAAO+O,EAAkB9G,GAAW,QAAQjI,OAAO0S,IACpDhe,OAAS,OAChBge,EAAO,GAAG1S,OAAO0S,EAAKza,MAAM,EAAG,MAAO,SAGxCiY,EAAQ,GAAGlQ,OAAOqP,EAAarH,IAC3B0K,EAAKhe,OAAS,MAChBge,EAAO,GAAG1S,OAAO0S,EAAKza,MAAM,EAAG,KAAM,QAEnCiY,EAAMxb,OAAS,MACjBwb,EAAQ,GAAGlQ,OAAOkQ,EAAMjY,MAAM,EAAG,KAAM,QAExB,cAAbgQ,GAAyC,UAAbA,EAC9ByK,EAAO,GAAG1S,OAAO2S,EAAgB,QAAQ3S,OAAO0S,EAAM,wBAEtDxC,EAAQ,IAAIlQ,OAAOiI,EAAU,KAAKjI,OAAOkQ,IAG7C1G,EAAQ0I,EAAOvhB,KAAKC,KAAM,GAAGoP,OAAO0S,GAAM1S,OAAOkQ,GACnD,CAsBF,OApBAnS,MAAMwU,gBAAkBD,EACxB9I,EAAM3B,kBAAoB9D,EAC1BlT,OAAO4O,eAAe0N,EAAuB3D,GAAQ,OAAQ,CAC3DpQ,MAAO,iCACPsG,YAAY,EACZiE,UAAU,EACVC,cAAc,IAEhB4F,EAAM1F,KAAO,gBACb0F,EAAMzB,OAASA,EACfyB,EAAMxB,SAAWA,EACjBwB,EAAMvB,SAAWA,EACblK,MAAM6U,mBAER7U,MAAM6U,kBAAkBzF,EAAuB3D,GAAQtB,GAGzDsB,EAAM3F,MAEN2F,EAAMnR,KAAO,iBACN4U,EAA2BzD,EACpC,CAmBA,OAhboBxD,EA8ZPW,GA9ZoBV,EA8ZJ,CAAC,CAC5BT,IAAK,WACLpM,MAAO,WACL,MAAO,GAAG4G,OAAOpP,KAAKyH,KAAM,MAAM2H,OAAOpP,KAAKkT,KAAM,OAAO9D,OAAOpP,KAAKmT,QACzE,GACC,CACDyB,IAAKoM,EACLxY,MAAO,SAAeyZ,EAAcC,GAKlC,OAAOxS,EAAQ1P,KAAMgc,EAAcA,EAAc,CAAC,EAAGkG,GAAM,CAAC,EAAG,CAC7DtD,eAAe,EACfC,MAAO,IAEX,MA9a0EtK,EAAkBa,EAAYvV,UAAWwV,GAAiBC,GAAaf,EAAkBa,EAAaE,GAAcrV,OAAO4O,eAAeuG,EAAa,YAAa,CAAErC,UAAU,IAgbrPgD,CACT,CAxIkC,CAwIlB0G,EAAiBtP,OAAQuC,EAAQyS,QACjD/N,EAAOjU,QAAU4V,2EC9ajB,SAAS1B,EAAQjR,GAAgC,OAAOiR,EAAU,mBAAqBhH,QAAU,iBAAmBA,OAAOiH,SAAW,SAAUlR,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBiK,QAAUjK,EAAEF,cAAgBmK,QAAUjK,IAAMiK,OAAOxN,UAAY,gBAAkBuD,CAAG,EAAGiR,EAAQjR,EAAI,CAC7T,SAASmR,EAAkBC,EAAQC,GAAS,IAAK,IAAIjV,EAAI,EAAGA,EAAIiV,EAAM3Q,OAAQtE,IAAK,CAAE,IAAIkV,EAAaD,EAAMjV,GAAIkV,EAAW5F,WAAa4F,EAAW5F,aAAc,EAAO4F,EAAW1B,cAAe,EAAU,UAAW0B,IAAYA,EAAW3B,UAAW,GAAM9S,OAAO4O,eAAe2F,GAE7PG,EAFoRD,EAAWE,IAEpRA,WACnC,SAAsBC,EAAOC,GAAQ,GAAuB,WAAnBT,EAAQQ,IAAiC,OAAVA,EAAgB,OAAOA,EAAO,IAAIE,EAAOF,EAAMxH,OAAOS,aAAc,QAAakH,IAATD,EAAoB,CAAE,IAAIE,EAAMF,EAAKhV,KAAK8U,EAAOC,GAAQ,WAAY,GAAqB,WAAjBT,EAAQY,GAAmB,OAAOA,EAAK,MAAM,IAAIhS,UAAU,+CAAiD,CAAE,OAAiB,WAAT6R,EAAoBnT,OAASkG,QAAQgN,EAAQ,CADnVK,CAAaP,EAAK,UAAmC,WAAjBN,EAAQO,GAAoBA,EAAMjT,OAAOiT,IAFuMF,EAAa,CAE1U,IAAwBC,EAAWC,CAFyS,CAM5U,SAASoI,EAAgB5Z,EAAG0C,GAA6I,OAAxIkX,EAAkB/c,OAAOC,eAAiBD,OAAOC,eAAe8X,OAAS,SAAyB5U,EAAG0C,GAAsB,OAAjB1C,EAAEoa,UAAY1X,EAAU1C,CAAG,EAAU4Z,EAAgB5Z,EAAG0C,EAAI,CACvM,SAASsc,EAAahB,GAAW,IAAIC,EAGrC,WAAuC,GAAuB,oBAAZlE,UAA4BA,QAAQC,UAAW,OAAO,EAAO,GAAID,QAAQC,UAAUC,KAAM,OAAO,EAAO,GAAqB,mBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFC,QAAQ1d,UAAUoH,QAAQlH,KAAKod,QAAQC,UAAUG,QAAS,IAAI,WAAa,MAAY,CAAM,CAAE,MAAOpe,GAAK,OAAO,CAAO,CAAE,CAHvQ+d,GAA6B,OAAO,WAAkC,IAAsCrC,EAAlC0G,EAAQxE,EAAgBqE,GAAkB,GAAIC,EAA2B,CAAE,IAAIG,EAAYzE,EAAgB/c,MAAMkD,YAAa2X,EAASsC,QAAQC,UAAUmE,EAAOxT,UAAWyT,EAAY,MAAS3G,EAAS0G,EAAM/S,MAAMxO,KAAM+N,WAAc,OACpX,SAAoCuO,EAAMvc,GAAQ,GAAIA,IAA2B,WAAlBsU,EAAQtU,IAAsC,mBAATA,GAAwB,OAAOA,EAAa,QAAa,IAATA,EAAmB,MAAM,IAAIkD,UAAU,4DAA+D,OAC1P,SAAgCqZ,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIE,eAAe,6DAAgE,OAAOF,CAAM,CAD4FC,CAAuBD,EAAO,CAD4FD,CAA2Brc,KAAM6a,EAAS,CAAG,CAIxa,SAASkC,EAAgB3Z,GAA+J,OAA1J2Z,EAAkB9c,OAAOC,eAAiBD,OAAOwd,eAAezF,OAAS,SAAyB5U,GAAK,OAAOA,EAAEoa,WAAavd,OAAOwd,eAAera,EAAI,EAAU2Z,EAAgB3Z,EAAI,CACnN,IAGIqT,EACA4L,EAJA3M,EAAQ,CAAC,EAKb,SAAS4M,EAAgBpP,EAAMC,EAASoP,GACjCA,IACHA,EAAOpV,OAST,IAAIqV,EAAyB,SAAUC,IAvBzC,SAAmBxB,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIje,UAAU,sDAAyDge,EAASphB,UAAYI,OAAO+I,OAAOkY,GAAcA,EAAWrhB,UAAW,CAAEqD,YAAa,CAAEsF,MAAOyY,EAAUlO,UAAU,EAAMC,cAAc,KAAW/S,OAAO4O,eAAeoS,EAAU,YAAa,CAAElO,UAAU,IAAcmO,GAAYlE,EAAgBiE,EAAUC,EAAa,CAwB/bC,CAAUqB,EAAWC,GACrB,IA7BkBrN,EAAaC,EAAYC,EA6BvCgM,EAASc,EAAaI,GAC1B,SAASA,EAAUE,EAAMC,EAAMC,GAC7B,IAAIhK,EAIJ,OAhCN,SAAyBC,EAAUzD,GAAe,KAAMyD,aAAoBzD,GAAgB,MAAM,IAAInS,UAAU,oCAAwC,CA6BlJ6V,CAAgB9Y,KAAMwiB,GACtB5J,EAAQ0I,EAAOvhB,KAAKC,KAbxB,SAAoB0iB,EAAMC,EAAMC,GAC9B,MAAuB,iBAAZzP,EACFA,EAEAA,EAAQuP,EAAMC,EAAMC,EAE/B,CAO8BC,CAAWH,EAAMC,EAAMC,IACjDhK,EAAM1F,KAAOA,EACN0F,CACT,CACA,OArCkBxD,EAqCEoN,EArC0CnN,GAAYd,EAAkBa,EAAYvV,UAAWwV,GAAiBC,GAAaf,EAAkBa,EAAaE,GAAcrV,OAAO4O,eAAeuG,EAAa,YAAa,CAAErC,UAAU,IAAiBqC,CAsC7Q,CAX6B,CAW3BmN,GACF7M,EAAMxC,GAAQsP,CAChB,CAGA,SAASM,EAAM1L,EAAU2L,GACvB,GAAI3iB,MAAMoD,QAAQ4T,GAAW,CAC3B,IAAI4L,EAAM5L,EAAStT,OAInB,OAHAsT,EAAWA,EAAS6L,KAAI,SAAUzjB,GAChC,OAAOmC,OAAOnC,EAChB,IACIwjB,EAAM,EACD,UAAU5T,OAAO2T,EAAO,KAAK3T,OAAOgI,EAAS/P,MAAM,EAAG2b,EAAM,GAAG9V,KAAK,MAAO,SAAWkK,EAAS4L,EAAM,GAC3F,IAARA,EACF,UAAU5T,OAAO2T,EAAO,KAAK3T,OAAOgI,EAAS,GAAI,QAAQhI,OAAOgI,EAAS,IAEzE,MAAMhI,OAAO2T,EAAO,KAAK3T,OAAOgI,EAAS,GAEpD,CACE,MAAO,MAAMhI,OAAO2T,EAAO,KAAK3T,OAAOzN,OAAOyV,GAElD,CA0BAkL,EAAgB,yBAA0B,qCAAsCrf,WAChFqf,EAAgB,wBAAwB,SAAU7a,EAAM2P,EAAUD,GAKhE,IAAI+L,EA7BmBtF,EAAQlC,EAoC3BzC,EACJ,QAZejE,IAAXyB,IAAsBA,EAAS,EAAQ,0CAC3CA,EAAuB,iBAAThP,EAAmB,2BAIT,iBAAb2P,IA9BYwG,EA8BkC,OAAVxG,EA7BpC/I,QAAQqN,GAAOA,EAAM,EAAI,GAAKA,EAAKkC,EAAO9Z,UAAY8Z,IA8B/DsF,EAAa,cACb9L,EAAWA,EAASzH,QAAQ,QAAS,KAErCuT,EAAa,UA7BjB,SAAkBvF,EAAKC,EAAQC,GAI7B,YAHiB7I,IAAb6I,GAA0BA,EAAWF,EAAI7Z,UAC3C+Z,EAAWF,EAAI7Z,QAEV6Z,EAAIG,UAAUD,EAAWD,EAAO9Z,OAAQ+Z,KAAcD,CAC/D,CA2BMF,CAASjW,EAAM,aAEjBwR,EAAM,OAAO7J,OAAO3H,EAAM,KAAK2H,OAAO8T,EAAY,KAAK9T,OAAO0T,EAAM1L,EAAU,aACzE,CACL,IAAIxJ,EA5BR,SAAkB+P,EAAKC,EAAQuF,GAI7B,MAHqB,iBAAVA,IACTA,EAAQ,KAENA,EAAQvF,EAAO9Z,OAAS6Z,EAAI7Z,UAGS,IAAhC6Z,EAAIvQ,QAAQwQ,EAAQuF,EAE/B,CAmBetT,CAASpI,EAAM,KAAO,WAAa,WAC9CwR,EAAM,QAAS7J,OAAO3H,EAAM,MAAO2H,OAAOxB,EAAM,KAAKwB,OAAO8T,EAAY,KAAK9T,OAAO0T,EAAM1L,EAAU,QACtG,CAIA,OADA6B,GAAO,mBAAmB7J,OAAOiF,EAAQ8C,GAE3C,GAAGlU,WACHqf,EAAgB,yBAAyB,SAAU7a,EAAMe,GACvD,IAAI4a,EAASrV,UAAUjK,OAAS,QAAsBkR,IAAjBjH,UAAU,GAAmBA,UAAU,GAAK,kBACpEiH,IAATqN,IAAoBA,EAAO,EAAQ,gCACvC,IAAIgB,EAAYhB,EAAK3S,QAAQlH,GAI7B,OAHI6a,EAAUvf,OAAS,MACrBuf,EAAY,GAAGjU,OAAOiU,EAAUhc,MAAM,EAAG,KAAM,QAE1C,iBAAiB+H,OAAO3H,EAAM,MAAM2H,OAAOgU,EAAQ,eAAehU,OAAOiU,EAClF,GAAGpgB,UAAW+D,YACdsb,EAAgB,4BAA4B,SAAUzN,EAAOpN,EAAMe,GACjE,IAAIoF,EAMJ,OAJEA,EADEpF,GAASA,EAAMtF,aAAesF,EAAMtF,YAAYuE,KAC3C,eAAe2H,OAAO5G,EAAMtF,YAAYuE,MAExC,QAAQ2H,OAAOiF,EAAQ7L,IAEzB,YAAY4G,OAAOyF,EAAO,8BAA+BzF,OAAO3H,EAAM,KAAQ,qBAAqB2H,OAAOxB,EAAM,IACzH,GAAG3K,WACHqf,EAAgB,oBAAoB,WAClC,IAAK,IAAI/K,EAAOxJ,UAAUjK,OAAQ0T,EAAO,IAAIpX,MAAMmX,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,GAAQ1J,UAAU0J,QAEVzC,IAAXyB,IAAsBA,EAAS,EAAQ,0CAC3CA,EAAOe,EAAK1T,OAAS,EAAG,0CACxB,IAAImV,EAAM,OACN+J,EAAMxL,EAAK1T,OAIf,OAHA0T,EAAOA,EAAKyL,KAAI,SAAUte,GACxB,MAAO,IAAKyK,OAAOzK,EAAG,IACxB,IACQqe,GACN,KAAK,EACH/J,GAAO,GAAG7J,OAAOoI,EAAK,GAAI,aAC1B,MACF,KAAK,EACHyB,GAAO,GAAG7J,OAAOoI,EAAK,GAAI,SAASpI,OAAOoI,EAAK,GAAI,cACnD,MACF,QACEyB,GAAOzB,EAAKnQ,MAAM,EAAG2b,EAAM,GAAG9V,KAAK,MACnC+L,GAAO,SAAS7J,OAAOoI,EAAKwL,EAAM,GAAI,cAG1C,MAAO,GAAG5T,OAAO6J,EAAK,qBACxB,GAAGhW,WACHmR,EAAOjU,QAAQuV,MAAQA,qFCrKvB,SAAS4N,EAAeC,EAAK/jB,GAAK,OAKlC,SAAyB+jB,GAAO,GAAInjB,MAAMoD,QAAQ+f,GAAM,OAAOA,CAAK,CAL3BC,CAAgBD,IAIzD,SAA+BlkB,EAAGwG,GAAK,IAAIzG,EAAI,MAAQC,EAAI,KAAO,oBAAsBgO,QAAUhO,EAAEgO,OAAOiH,WAAajV,EAAE,cAAe,GAAI,MAAQD,EAAG,CAAE,IAAID,EAAGM,EAAGD,EAAGoD,EAAG+B,EAAI,GAAIrB,GAAI,EAAIF,GAAI,EAAI,IAAM,GAAI5D,GAAKJ,EAAIA,EAAEW,KAAKV,IAAIokB,KAAM,IAAM5d,EAAG,CAAE,GAAI5F,OAAOb,KAAOA,EAAG,OAAQkE,GAAI,CAAI,MAAO,OAASA,GAAKnE,EAAIK,EAAEO,KAAKX,IAAIskB,QAAU/e,EAAEsI,KAAK9N,EAAEqJ,OAAQ7D,EAAEb,SAAW+B,GAAIvC,GAAI,GAAK,CAAE,MAAOjE,GAAK+D,GAAI,EAAI3D,EAAIJ,CAAG,CAAE,QAAU,IAAM,IAAKiE,GAAK,MAAQlE,EAAEukB,SAAW/gB,EAAIxD,EAAEukB,SAAU1jB,OAAO2C,KAAOA,GAAI,MAAQ,CAAE,QAAU,GAAIQ,EAAG,MAAM3D,CAAG,CAAE,CAAE,OAAOkF,CAAG,CAAE,CAJldif,CAAsBL,EAAK/jB,IAE5F,SAAqC4D,EAAGygB,GAAU,IAAKzgB,EAAG,OAAQ,GAAiB,iBAANA,EAAgB,OAAO0gB,EAAkB1gB,EAAGygB,GAAS,IAAIpkB,EAAIQ,OAAOJ,UAAU0G,SAASxG,KAAKqD,GAAGiE,MAAM,GAAI,GAAc,WAAN5H,GAAkB2D,EAAEF,cAAazD,EAAI2D,EAAEF,YAAYuE,MAAM,GAAU,QAANhI,GAAqB,QAANA,EAAa,OAAOW,MAAMuD,KAAKP,GAAI,GAAU,cAAN3D,GAAqB,2CAA2CskB,KAAKtkB,GAAI,OAAOqkB,EAAkB1gB,EAAGygB,EAAS,CAF7TG,CAA4BT,EAAK/jB,IACnI,WAA8B,MAAM,IAAIyD,UAAU,4IAA8I,CADvDghB,EAAoB,CAG7J,SAASH,EAAkBP,EAAKP,IAAkB,MAAPA,GAAeA,EAAMO,EAAIzf,UAAQkf,EAAMO,EAAIzf,QAAQ,IAAK,IAAItE,EAAI,EAAG0kB,EAAO,IAAI9jB,MAAM4iB,GAAMxjB,EAAIwjB,EAAKxjB,IAAK0kB,EAAK1kB,GAAK+jB,EAAI/jB,GAAI,OAAO0kB,CAAM,CAGlL,SAAS7P,EAAQjR,GAAgC,OAAOiR,EAAU,mBAAqBhH,QAAU,iBAAmBA,OAAOiH,SAAW,SAAUlR,GAAK,cAAcA,CAAG,EAAI,SAAUA,GAAK,OAAOA,GAAK,mBAAqBiK,QAAUjK,EAAEF,cAAgBmK,QAAUjK,IAAMiK,OAAOxN,UAAY,gBAAkBuD,CAAG,EAAGiR,EAAQjR,EAAI,CAC7T,IAAI+gB,OAAqCnP,IAAf,KAAKoP,MAC3BC,EAAe,SAAsB7a,GACvC,IAAIkD,EAAQ,GAIZ,OAHAlD,EAAIuP,SAAQ,SAAUvQ,GACpB,OAAOkE,EAAMO,KAAKzE,EACpB,IACOkE,CACT,EACI4X,EAAe,SAAsBrB,GACvC,IAAIvW,EAAQ,GAIZ,OAHAuW,EAAIlK,SAAQ,SAAUvQ,EAAOoM,GAC3B,OAAOlI,EAAMO,KAAK,CAAC2H,EAAKpM,GAC1B,IACOkE,CACT,EACI0J,EAAWnW,OAAOskB,GAAKtkB,OAAOskB,GAAK,EAAQ,qCAC3CC,EAA8BvkB,OAAO4b,sBAAwB5b,OAAO4b,sBAAwB,WAC9F,MAAO,EACT,EACI4I,EAAc5c,OAAO+L,MAAQ/L,OAAO+L,MAAQ,EAAQ,kCACxD,SAAS8Q,EAAYphB,GACnB,OAAOA,EAAEvD,KAAKiY,KAAK1U,EACrB,CACA,IAAI4Q,EAAiBwQ,EAAYzkB,OAAOJ,UAAUqU,gBAC9CyQ,EAAuBD,EAAYzkB,OAAOJ,UAAU8kB,sBACpDC,EAAiBF,EAAYzkB,OAAOJ,UAAU0G,UAC9CyP,EAAiB,uCACnB6O,EAAmB7O,EAAe6O,iBAClCC,EAAoB9O,EAAe8O,kBACnCC,EAAS/O,EAAe+O,OACxBC,EAAQhP,EAAegP,MACvB9O,EAAWF,EAAeE,SAC1B+O,EAAQjP,EAAeiP,MACvBC,EAAgBlP,EAAekP,cAC/BC,EAAmBnP,EAAemP,iBAClCC,EAAiBpP,EAAeoP,eAChCC,EAAiBrP,EAAeqP,eAChCC,EAAkBtP,EAAesP,gBACjCC,EAAiBvP,EAAeuP,eAChCC,EAAiBxP,EAAewP,eAChCC,EAAiBzP,EAAeyP,eAChCC,EAAiB1P,EAAe0P,eAClC,SAASC,EAAW/Q,GAClB,GAAmB,IAAfA,EAAI9Q,QAAgB8Q,EAAI9Q,OAAS,GAAI,OAAO,EAChD,IAAK,IAAItE,EAAI,EAAGA,EAAIoV,EAAI9Q,OAAQtE,IAAK,CACnC,IAAI0T,EAAO0B,EAAI7H,WAAWvN,GAC1B,GAAI0T,EAAO,IAAMA,EAAO,GAAI,OAAO,CACrC,CAEA,OAAsB,KAAf0B,EAAI9Q,QAAiB8Q,GAAO7P,KAAK+L,IAAI,EAAG,GACjD,CACA,SAAS8U,EAAyBpd,GAChC,OAAOvI,OAAO0Y,KAAKnQ,GAAOsT,OAAO6J,GAAYvW,OAAOoV,EAA4Bhc,GAAOsT,OAAO7b,OAAOJ,UAAU8kB,qBAAqB3M,KAAKxP,IAC3I,CAUA,SAAS0G,EAAQvK,EAAG6B,GAClB,GAAI7B,IAAM6B,EACR,OAAO,EAIT,IAFA,IAAIwB,EAAIrD,EAAEb,OACNkC,EAAIQ,EAAE1C,OACDtE,EAAI,EAAGwjB,EAAMje,KAAKuJ,IAAItG,EAAGhC,GAAIxG,EAAIwjB,IAAOxjB,EAC/C,GAAImF,EAAEnF,KAAOgH,EAAEhH,GAAI,CACjBwI,EAAIrD,EAAEnF,GACNwG,EAAIQ,EAAEhH,GACN,KACF,CAEF,OAAIwI,EAAIhC,GACE,EAENA,EAAIgC,EACC,EAEF,CACT,CACA,IAGI6d,EAAc,EACdC,EAAW,EACXC,EAAS,EACTC,EAAS,EA6Db,SAASC,EAAeC,EAAMC,EAAM/L,EAAQgM,GAE1C,GAAIF,IAASC,EACX,OAAa,IAATD,KACG9L,GAAShE,EAAS8P,EAAMC,IAIjC,GAAI/L,EAAQ,CACV,GAAsB,WAAlB/F,EAAQ6R,GACV,MAAuB,iBAATA,GAAqBzB,EAAYyB,IAASzB,EAAY0B,GAEtE,GAAsB,WAAlB9R,EAAQ8R,IAA+B,OAATD,GAA0B,OAATC,EACjD,OAAO,EAET,GAAIlmB,OAAOwd,eAAeyI,KAAUjmB,OAAOwd,eAAe0I,GACxD,OAAO,CAEX,KAAO,CACL,GAAa,OAATD,GAAmC,WAAlB7R,EAAQ6R,GAC3B,OAAa,OAATC,GAAmC,WAAlB9R,EAAQ8R,KAEpBD,GAAQC,EAInB,GAAa,OAATA,GAAmC,WAAlB9R,EAAQ8R,GAC3B,OAAO,CAEX,CACA,IApE4BE,EAAMC,EApBT3hB,EAAG6B,EAwFxB+f,EAAU3B,EAAesB,GAE7B,GAAIK,IADU3B,EAAeuB,GAE3B,OAAO,EAET,GAAI/lB,MAAMoD,QAAQ0iB,GAAO,CAEvB,GAAIA,EAAKpiB,SAAWqiB,EAAKriB,OACvB,OAAO,EAET,IAAI0iB,EAAQZ,EAAyBM,GACjCO,EAAQb,EAAyBO,GACrC,OAAIK,EAAM1iB,SAAW2iB,EAAM3iB,QAGpB4iB,EAASR,EAAMC,EAAM/L,EAAQgM,EAAON,EAAUU,EACvD,CAIA,GAAgB,oBAAZD,KAEGvB,EAAMkB,IAASlB,EAAMmB,KAAUlB,EAAMiB,IAASjB,EAAMkB,IACvD,OAAO,EAGX,GAAIpB,EAAOmB,IACT,IAAKnB,EAAOoB,IAASQ,KAAK9mB,UAAU+mB,QAAQ7mB,KAAKmmB,KAAUS,KAAK9mB,UAAU+mB,QAAQ7mB,KAAKomB,GACrF,OAAO,OAEJ,GAAIjQ,EAASgQ,IAClB,IAAKhQ,EAASiQ,KAvHSxhB,EAuHmBuhB,EAvHhB1f,EAuHsB2f,IAtH3ChC,EAAsBxf,EAAE6Z,SAAWhY,EAAEgY,QAAU7Z,EAAEyf,QAAU5d,EAAE4d,MAAQyC,OAAOhnB,UAAU0G,SAASxG,KAAK4E,KAAOkiB,OAAOhnB,UAAU0G,SAASxG,KAAKyG,KAuH7I,OAAO,OAEJ,GAAI0e,EAAcgB,IAASA,aAAgB/Y,OAGhD,GAAI+Y,EAAK/S,UAAYgT,EAAKhT,SAAW+S,EAAKze,OAAS0e,EAAK1e,KACtD,OAAO,MAEJ,IAAIqd,EAAkBoB,GAAO,CAClC,GAAK9L,IAAWqL,EAAeS,KAASR,EAAeQ,IAIhD,IAvHX,SAA+BvhB,EAAG6B,GAChC,OAAI7B,EAAEyD,aAAe5B,EAAE4B,YAGwG,IAAxH8G,EAAQ,IAAIpP,WAAW6E,EAAE8I,OAAQ9I,EAAE+I,WAAY/I,EAAEyD,YAAa,IAAItI,WAAW0G,EAAEiH,OAAQjH,EAAEkH,WAAYlH,EAAE4B,YAChH,CAkHgB0e,CAAsBZ,EAAMC,GACtC,OAAO,OAJP,IA/HN,SAA+BxhB,EAAG6B,GAChC,GAAI7B,EAAEyD,aAAe5B,EAAE4B,WACrB,OAAO,EAET,IAAK,IAAI+G,EAAS,EAAGA,EAASxK,EAAEyD,WAAY+G,IAC1C,GAAIxK,EAAEwK,KAAY3I,EAAE2I,GAClB,OAAO,EAGX,OAAO,CACT,CAqHW4X,CAAsBb,EAAMC,GAC/B,OAAO,EAQX,IAAIa,EAAQpB,EAAyBM,GACjCe,EAASrB,EAAyBO,GACtC,OAAIa,EAAMljB,SAAWmjB,EAAOnjB,QAGrB4iB,EAASR,EAAMC,EAAM/L,EAAQgM,EAAOP,EAAamB,EAC1D,CAAO,GAAI/B,EAAMiB,GACf,SAAKjB,EAAMkB,IAASD,EAAK/e,OAASgf,EAAKhf,OAGhCuf,EAASR,EAAMC,EAAM/L,EAAQgM,EAAOL,GACtC,GAAIf,EAAMkB,GACf,SAAKlB,EAAMmB,IAASD,EAAK/e,OAASgf,EAAKhf,OAGhCuf,EAASR,EAAMC,EAAM/L,EAAQgM,EAAOJ,GACtC,GAAInB,EAAiBqB,IAC1B,GAxIgCI,EAwIAH,GAxINE,EAwIAH,GAvIhB9d,aAAeke,EAAKle,YAAsE,IAAxD8G,EAAQ,IAAIpP,WAAWumB,GAAO,IAAIvmB,WAAWwmB,IAwIvF,OAAO,OAEJ,GAAInB,EAAiBe,KAxI9B,SAA+BA,EAAMC,GACnC,OAAIf,EAAec,GACVd,EAAee,IAAS/P,EAASvO,OAAOhI,UAAUoH,QAAQlH,KAAKmmB,GAAOre,OAAOhI,UAAUoH,QAAQlH,KAAKomB,IAEzGd,EAAea,GACVb,EAAec,IAASxkB,OAAO9B,UAAUoH,QAAQlH,KAAKmmB,KAAUvkB,OAAO9B,UAAUoH,QAAQlH,KAAKomB,GAEnGb,EAAgBY,GACXZ,EAAgBa,IAAS5I,QAAQ1d,UAAUoH,QAAQlH,KAAKmmB,KAAU3I,QAAQ1d,UAAUoH,QAAQlH,KAAKomB,GAEtGZ,EAAeW,GACVX,EAAeY,IAASzf,OAAO7G,UAAUoH,QAAQlH,KAAKmmB,KAAUxf,OAAO7G,UAAUoH,QAAQlH,KAAKomB,GAEhGX,EAAeW,IAAS9Y,OAAOxN,UAAUoH,QAAQlH,KAAKmmB,KAAU7Y,OAAOxN,UAAUoH,QAAQlH,KAAKomB,EACvG,CA0HwCe,CAAsBhB,EAAMC,GAChE,OAAO,CACT,CACA,OAAOO,EAASR,EAAMC,EAAM/L,EAAQgM,EAAOP,EAC7C,CACA,SAASsB,EAAezI,EAAK/F,GAC3B,OAAOA,EAAKmD,QAAO,SAAUpa,GAC3B,OAAOijB,EAAqBjG,EAAKhd,EACnC,GACF,CACA,SAASglB,EAASR,EAAMC,EAAM/L,EAAQgM,EAAOgB,EAAeC,GAQ1D,GAAyB,IAArBtZ,UAAUjK,OAAc,CAC1BujB,EAAQpnB,OAAO0Y,KAAKuN,GACpB,IAAIoB,EAAQrnB,OAAO0Y,KAAKwN,GAGxB,GAAIkB,EAAMvjB,SAAWwjB,EAAMxjB,OACzB,OAAO,CAEX,CAIA,IADA,IAAItE,EAAI,EACDA,EAAI6nB,EAAMvjB,OAAQtE,IACvB,IAAK0U,EAAeiS,EAAMkB,EAAM7nB,IAC9B,OAAO,EAGX,GAAI4a,GAA+B,IAArBrM,UAAUjK,OAAc,CACpC,IAAIyjB,EAAc/C,EAA4B0B,GAC9C,GAA2B,IAAvBqB,EAAYzjB,OAAc,CAC5B,IAAIoc,EAAQ,EACZ,IAAK1gB,EAAI,EAAGA,EAAI+nB,EAAYzjB,OAAQtE,IAAK,CACvC,IAAIoV,EAAM2S,EAAY/nB,GACtB,GAAImlB,EAAqBuB,EAAMtR,GAAM,CACnC,IAAK+P,EAAqBwB,EAAMvR,GAC9B,OAAO,EAETyS,EAAMpa,KAAK2H,GACXsL,GACF,MAAO,GAAIyE,EAAqBwB,EAAMvR,GACpC,OAAO,CAEX,CACA,IAAI4S,EAAchD,EAA4B2B,GAC9C,GAAIoB,EAAYzjB,SAAW0jB,EAAY1jB,QAAUqjB,EAAehB,EAAMqB,GAAa1jB,SAAWoc,EAC5F,OAAO,CAEX,KAAO,CACL,IAAIuH,EAAejD,EAA4B2B,GAC/C,GAA4B,IAAxBsB,EAAa3jB,QAA8D,IAA9CqjB,EAAehB,EAAMsB,GAAc3jB,OAClE,OAAO,CAEX,CACF,CACA,GAAqB,IAAjBujB,EAAMvjB,SAAiBsjB,IAAkBvB,GAAeuB,IAAkBtB,GAA4B,IAAhBI,EAAKpiB,QAA8B,IAAdoiB,EAAK/e,MAClH,OAAO,EAIT,QAAc6N,IAAVoR,EACFA,EAAQ,CACNF,KAAM,IAAI1b,IACV2b,KAAM,IAAI3b,IACVkd,SAAU,OAEP,CAIL,IAAIC,EAAYvB,EAAMF,KAAKnc,IAAImc,GAC/B,QAAkBlR,IAAd2S,EAAyB,CAC3B,IAAIC,EAAYxB,EAAMD,KAAKpc,IAAIoc,GAC/B,QAAkBnR,IAAd4S,EACF,OAAOD,IAAcC,CAEzB,CACAxB,EAAMsB,UACR,CACAtB,EAAMF,KAAK1c,IAAI0c,EAAME,EAAMsB,UAC3BtB,EAAMD,KAAK3c,IAAI2c,EAAMC,EAAMsB,UAC3B,IAAIG,EAsKN,SAAkBljB,EAAG6B,EAAG4T,EAAQzB,EAAMyN,EAAOgB,GAG3C,IAAI5nB,EAAI,EACR,GAAI4nB,IAAkBrB,GACpB,IA/GJ,SAAkBphB,EAAG6B,EAAG4T,EAAQ0N,GAK9B,IAFA,IAAIte,EAAM,KACNue,EAAU1D,EAAa1f,GAClBnF,EAAI,EAAGA,EAAIuoB,EAAQjkB,OAAQtE,IAAK,CACvC,IAAIkf,EAAMqJ,EAAQvoB,GAIlB,GAAqB,WAAjB6U,EAAQqK,IAA6B,OAARA,EACnB,OAARlV,IACFA,EAAM,IAAIwe,KAMZxe,EAAIye,IAAIvJ,QACH,IAAKlY,EAAEoW,IAAI8B,GAAM,CACtB,GAAItE,EAAQ,OAAO,EAGnB,IAAK8N,EAAsBvjB,EAAG6B,EAAGkY,GAC/B,OAAO,EAEG,OAARlV,IACFA,EAAM,IAAIwe,KAEZxe,EAAIye,IAAIvJ,EACV,CACF,CACA,GAAY,OAARlV,EAAc,CAEhB,IADA,IAAI2e,EAAU9D,EAAa7d,GAClB4hB,EAAK,EAAGA,EAAKD,EAAQrkB,OAAQskB,IAAM,CAC1C,IAAIC,EAAOF,EAAQC,GAGnB,GAAsB,WAAlB/T,EAAQgU,IAA+B,OAATA,GAChC,IAAKC,EAAmB9e,EAAK6e,EAAMjO,EAAQ0N,GAAO,OAAO,OACpD,IAAK1N,IAAWzV,EAAEiY,IAAIyL,KAAUC,EAAmB9e,EAAK6e,EAAMjO,EAAQ0N,GAC3E,OAAO,CAEX,CACA,OAAoB,IAAbte,EAAIrC,IACb,CACA,OAAO,CACT,CAgESohB,CAAS5jB,EAAG6B,EAAG4T,EAAQgM,GAC1B,OAAO,OAEJ,GAAIgB,IAAkBpB,GAC3B,IArDJ,SAAkBrhB,EAAG6B,EAAG4T,EAAQ0N,GAG9B,IAFA,IAAIte,EAAM,KACNgf,EAAWlE,EAAa3f,GACnBnF,EAAI,EAAGA,EAAIgpB,EAAS1kB,OAAQtE,IAAK,CACxC,IAAIipB,EAAcnF,EAAekF,EAAShpB,GAAI,GAC5CoV,EAAM6T,EAAY,GAClBC,EAAQD,EAAY,GACtB,GAAqB,WAAjBpU,EAAQO,IAA6B,OAARA,EACnB,OAARpL,IACFA,EAAM,IAAIwe,KAEZxe,EAAIye,IAAIrT,OACH,CAGL,IAAI+T,EAAQniB,EAAEuD,IAAI6K,GAClB,QAAcI,IAAV2T,IAAwBniB,EAAEoW,IAAIhI,KAASqR,EAAeyC,EAAOC,EAAOvO,EAAQ0N,GAAO,CACrF,GAAI1N,EAAQ,OAAO,EAGnB,IAAKwO,EAAsBjkB,EAAG6B,EAAGoO,EAAK8T,EAAOZ,GAAO,OAAO,EAC/C,OAARte,IACFA,EAAM,IAAIwe,KAEZxe,EAAIye,IAAIrT,EACV,CACF,CACF,CACA,GAAY,OAARpL,EAAc,CAEhB,IADA,IAAIqf,EAAWvE,EAAa9d,GACnBsiB,EAAM,EAAGA,EAAMD,EAAS/kB,OAAQglB,IAAO,CAC9C,IAAIC,EAAezF,EAAeuF,EAASC,GAAM,GAC/CrR,EAAOsR,EAAa,GACpBC,EAAOD,EAAa,GACtB,GAAsB,WAAlB1U,EAAQoD,IAA+B,OAATA,GAChC,IAAKwR,EAAiBzf,EAAK7E,EAAG8S,EAAMuR,EAAM5O,EAAQ0N,GAAO,OAAO,OAC3D,KAAK1N,GAAYzV,EAAEiY,IAAInF,IAAUwO,EAAethB,EAAEoF,IAAI0N,GAAOuR,GAAM,EAAOlB,IAAWmB,EAAiBzf,EAAK7E,EAAG8S,EAAMuR,GAAM,EAAOlB,IACtI,OAAO,CAEX,CACA,OAAoB,IAAbte,EAAIrC,IACb,CACA,OAAO,CACT,CAUS+hB,CAASvkB,EAAG6B,EAAG4T,EAAQgM,GAC1B,OAAO,OAEJ,GAAIgB,IAAkBtB,EAC3B,KAAOtmB,EAAImF,EAAEb,OAAQtE,IAAK,CACxB,IAAI0U,EAAevP,EAAGnF,GAIf,IAAI0U,EAAe1N,EAAGhH,GAC3B,OAAO,EAIP,IADA,IAAI2pB,EAAQlpB,OAAO0Y,KAAKhU,GACjBnF,EAAI2pB,EAAMrlB,OAAQtE,IAAK,CAC5B,IAAIoV,EAAMuU,EAAM3pB,GAChB,IAAK0U,EAAe1N,EAAGoO,KAASqR,EAAethB,EAAEiQ,GAAMpO,EAAEoO,GAAMwF,EAAQgM,GACrE,OAAO,CAEX,CACA,OAAI+C,EAAMrlB,SAAW7D,OAAO0Y,KAAKnS,GAAG1C,MAItC,CAlBE,IAAKoQ,EAAe1N,EAAGhH,KAAOymB,EAAethB,EAAEnF,GAAIgH,EAAEhH,GAAI4a,EAAQgM,GAC/D,OAAO,CAkBb,CAKF,IAAK5mB,EAAI,EAAGA,EAAImZ,EAAK7U,OAAQtE,IAAK,CAChC,IAAIib,EAAQ9B,EAAKnZ,GACjB,IAAKymB,EAAethB,EAAE8V,GAAQjU,EAAEiU,GAAQL,EAAQgM,GAC9C,OAAO,CAEX,CACA,OAAO,CACT,CApNcgD,CAASlD,EAAMC,EAAM/L,EAAQiN,EAAOjB,EAAOgB,GAGvD,OAFAhB,EAAMF,KAAKmD,OAAOnD,GAClBE,EAAMD,KAAKkD,OAAOlD,GACX0B,CACT,CACA,SAASS,EAAmB9e,EAAK0c,EAAM9L,EAAQ0N,GAG7C,IADA,IAAIwB,EAAYjF,EAAa7a,GACpBhK,EAAI,EAAGA,EAAI8pB,EAAUxlB,OAAQtE,IAAK,CACzC,IAAI2mB,EAAOmD,EAAU9pB,GACrB,GAAIymB,EAAeC,EAAMC,EAAM/L,EAAQ0N,GAGrC,OADAte,EAAI6f,OAAOlD,IACJ,CAEX,CACA,OAAO,CACT,CAMA,SAASoD,EAA4BxU,GACnC,OAAQV,EAAQU,IACd,IAAK,YACH,OAAO,KACT,IAAK,SAEH,OACF,IAAK,SACH,OAAO,EACT,IAAK,SACHA,GAAQA,EAIV,IAAK,SACH,GAAI0P,EAAY1P,GACd,OAAO,EAGb,OAAO,CACT,CACA,SAASmT,EAAsBvjB,EAAG6B,EAAGuO,GACnC,IAAIyU,EAAWD,EAA4BxU,GAC3C,OAAgB,MAAZyU,EAAyBA,EACtBhjB,EAAEoW,IAAI4M,KAAc7kB,EAAEiY,IAAI4M,EACnC,CACA,SAASZ,EAAsBjkB,EAAG6B,EAAGuO,EAAMiU,EAAMlB,GAC/C,IAAI0B,EAAWD,EAA4BxU,GAC3C,GAAgB,MAAZyU,EACF,OAAOA,EAET,IAAIC,EAAOjjB,EAAEuD,IAAIyf,GACjB,aAAaxU,IAATyU,IAAuBjjB,EAAEoW,IAAI4M,KAAcvD,EAAe+C,EAAMS,GAAM,EAAO3B,OAGzEnjB,EAAEiY,IAAI4M,IAAavD,EAAe+C,EAAMS,GAAM,EAAO3B,GAC/D,CAiDA,SAASmB,EAAiBzf,EAAKyZ,EAAKyG,EAAMhB,EAAOtO,EAAQ0N,GAKvD,IADA,IAAIwB,EAAYjF,EAAa7a,GACpBhK,EAAI,EAAGA,EAAI8pB,EAAUxlB,OAAQtE,IAAK,CACzC,IAAImqB,EAAOL,EAAU9pB,GACrB,GAAIymB,EAAeyD,EAAMC,EAAMvP,EAAQ0N,IAAS7B,EAAeyC,EAAOzF,EAAIlZ,IAAI4f,GAAOvP,EAAQ0N,GAE3F,OADAte,EAAI6f,OAAOM,IACJ,CAEX,CACA,OAAO,CACT,CAkGAvV,EAAOjU,QAAU,CACfoV,YAPF,SAAqB2Q,EAAMC,GACzB,OAAOF,EAAeC,EAAMC,EApdjB,MAqdb,EAME3Q,kBALF,SAA2B0Q,EAAMC,GAC/B,OAAOF,EAAeC,EAAMC,EAxdhB,KAydd,4pCC3iBY,OAAAyD,EAAA,kBAAAC,CAAA,EAAAA,CAAA,CAAAD,IAdoBA,IAAAvmB,EAAA,KAE1BymB,EAAAA,OAAOnqB,MAAM,GAAGC,SAAS,EAAG,aAAckqB,EAAAA,OAM/CF,IAAApjB,EAAA,SANwDojB,IAAApjB,EAAA,QAAAojB,IAAAvmB,EAAA,KACvDymB,EAAAA,OAAOjqB,UAAUD,SAAW,SAAkBujB,EAAO3D,GAAKoK,IAAAtmB,EAAA,KACxD,IAAMuX,GAAM+O,IAAAvmB,EAAA,KAAGvD,WAAWD,UAAUD,SAASG,KAAKC,KAAMmjB,EAAO3D,IAE/D,OAFoEoK,IAAAvmB,EAAA,KACpEpD,OAAOC,eAAe2a,EAAQiP,EAAAA,OAAOjqB,WAAW+pB,IAAAvmB,EAAA,KACzCwX,CACT,GAGF,QAAeiP,EAAM,y3ECIT,OAAAC,EAAA,kBAAAF,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAuqB,IAML,IAAMC,EAAO,WAiBlB,OAvBU7qB,EAOV,SAAA6qB,EAAYC,EAAWC,GACrB,GARQ,SAAAvlB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAOuB6V,CAAA,KAAAkR,GAAAD,IAAAzmB,EAAA,KAAAymB,IAAA1mB,EAAA,KAC3B8mB,EAAAA,OAAOC,yBAAyBH,GAClC,MAD8CF,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,KACxC,IAAI8J,MAAM,uDAGlB,GAFC4c,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,MAEI8mB,EAAAA,OAAOE,wBAAwBJ,GAClC,MAD8CF,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,KACxC,IAAI8J,MAAM,wBAElB,GADC4c,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,KACyB,iBAAb6mB,EACX,MADmCH,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,KAC7B,IAAI8J,MAAM,mCACjB4c,IAAAvjB,EAAA,QAAAujB,IAAA1mB,EAAA,KAEDrD,KAAKsqB,WAAaL,EAAUF,IAAA1mB,EAAA,KAC5BrD,KAAKkqB,SAAW,IAAIK,EAAAA,QAAUL,EAChC,GArBU7qB,EAuBV,EAAAuV,IAAA,YAAApM,MAKA,WACE,OADUuhB,IAAAzmB,EAAA,KAAAymB,IAAA1mB,EAAA,KACHrD,KAAKsqB,UACd,GAEA,CAAA1V,IAAA,iBAAApM,MAGA,WACE,OADeuhB,IAAAzmB,EAAA,KAAAymB,IAAA1mB,EAAA,KACRrD,KAAKkqB,SAAS3jB,UACvB,GAEA,CAAAqO,IAAA,0BAAApM,MAIA,WAA0BuhB,IAAAzmB,EAAA,KAAAymB,IAAA1mB,EAAA,MACxBrD,KAAKkqB,SAAWlqB,KAAKkqB,SAASM,KAAK,EACrC,MA7CUjW,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CA6CT,CAvCiB,+jJCNR,OAAAqrB,EAAA,kBAAAZ,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAirB,IACL,IAAMC,EAAO,WAClB,SAAAA,EAAYC,GACV,GAHQ,SAAAhmB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAEW6V,CAAA,KAAA4R,GAAAD,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,KACf8mB,EAAAA,OAAOE,wBAAwBM,GAAUF,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,KAC3CrD,KAAK4qB,MAAQ,UAAUH,IAAApnB,EAAA,KACvBrD,KAAKyX,KAAO0S,EAAAA,OAAOU,uBAAuBF,OACrC,IAAAF,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MAAI8mB,EAAAA,OAAOW,gBAAgBH,GAIhC,MADKF,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,KACC,IAAI8J,MAAM,4BAJ0Bsd,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,KAC1CrD,KAAK4qB,MAAQ,WAAWH,IAAApnB,EAAA,KACxBrD,KAAKyX,KAAO0S,EAAAA,OAAOY,eAAeJ,EAGpC,CACF,CAEA,OAdUxrB,EAcVurB,EAdUtrB,EAyHT,EAAAwV,IAAA,aAAApM,MArGD,SAAkBmiB,GAChB,OADyBF,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,KAClB,IAAIqnB,EAAQC,EACrB,GAEA,CAAA/V,IAAA,UAAApM,MAMA,SAAeiF,GACb,OADqBgd,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,KACd,IAAIqnB,EAAQP,EAAAA,OAAOa,uBAAuBvd,GACnD,GAEA,CAAAmH,IAAA,WAAApM,MAMA,SAAgBiF,GACd,OADsBgd,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,KACf,IAAIqnB,EAAQP,EAAAA,OAAOc,eAAexd,GAC3C,GAEA,CAAAmH,IAAA,YAAApM,MAMA,SAAiB0iB,GACf,OADsBT,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACfqnB,EAAQS,cAAcD,EAAMP,UACrC,GAEA,CAAA/V,IAAA,gBAAApM,MAMA,SAAqB4iB,GACnB,OAD8BX,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACtB+nB,EAAS,UACf,KAAKC,EAAAA,QAAIC,cAAcC,uBACrB,OAD2Cd,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACpCqnB,EAAQc,QAAQJ,EAAUnB,YAAYwB,WAC/C,KAAKJ,EAAAA,QAAIC,cAAcI,wBACrB,OAD4CjB,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACrCqnB,EAAQiB,SAASP,EAAUQ,cACpC,QACE,MADFnB,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACQ,IAAI8J,MAAM,4BAEtB,KArEU9N,EAcV,EAAAuV,IAAA,WAAApM,MA8DA,WACE,OADSiiB,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACDrD,KAAK4qB,OACX,IAAK,UACH,OADYH,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACL8mB,EAAAA,OAAOa,uBAAuBhrB,KAAKyX,MAC5C,IAAK,WACH,OADagT,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACN8mB,EAAAA,OAAOc,eAAejrB,KAAKyX,MACpC,QACE,MADFgT,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACQ,IAAI8J,MAAM,4BAEtB,GAEA,CAAAyH,IAAA,UAAApM,MAKA,WACE,OADQiiB,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACDgoB,EAAAA,QAAIQ,MAAMC,WAAW9rB,KAAK+rB,cACnC,GAEA,CAAAnX,IAAA,cAAApM,MAKA,WACE,OADYiiB,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACJrD,KAAK4qB,OACX,IAAK,UACH,OADYH,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACLgoB,EAAAA,QAAIW,UAAUT,qBACnBF,EAAAA,QAAIY,UAAUC,qBAAqBlsB,KAAKyX,OAE5C,IAAK,WACH,OADagT,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACNgoB,EAAAA,QAAIW,UAAUN,sBAAsB1rB,KAAKyX,MAClD,QACE,MADFgT,IAAAjkB,EAAA,QAAAikB,IAAApnB,EAAA,MACQ,IAAI8J,MAAM,4BAEtB,GAEA,CAAAyH,IAAA,WAAApM,MAKA,WACE,OADSiiB,IAAAnnB,EAAA,KAAAmnB,IAAApnB,EAAA,MACFrD,KAAKyX,IACd,MAzHUlD,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAqET,CApEiB,ytaCDR,OAAA+sB,EAAA,kBAAAtC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA2sB,IAEL,IAAMC,EAAK,WAChB,SAAAA,EAAYlZ,EAAMmZ,GAChB,GAJQ,SAAA1nB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAGgB6V,CAAA,KAAAsT,GAAAD,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MACnB,sBAAsB0gB,KAAK7Q,GAC9B,MADqCiZ,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KAC/B,IAAI8J,MACR,sEAGJ,GADCgf,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KACG8oB,IAAA3lB,EAAA,QAA+B,QAA/B7E,OAAOuR,GAAMlF,gBAAuBme,IAAA3lB,EAAA,SAAK6lB,GAC3C,MADmDF,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KAC7C,IAAI8J,MAAM,yBAElB,GADCgf,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KACG8oB,IAAA3lB,EAAA,QAAA6lB,IAAMF,IAAA3lB,EAAA,SAAK2jB,EAAAA,OAAOE,wBAAwBgC,IAC5C,MADqDF,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KAC/C,IAAI8J,MAAM,qBACjBgf,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KAEkC,QAA/B1B,OAAOuR,GAAMlF,eAAyBme,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KAExCrD,KAAKkT,KAAO,QACPiZ,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,KACLrD,KAAKkT,KAAOA,GACbiZ,IAAA9oB,EAAA,KAEDrD,KAAKqsB,OAASA,CAChB,CAEA,OA1BUltB,EA0BVitB,EA1BU/sB,EA0BV,EAAAuV,IAAA,cAAApM,MAqCA,WACE,OADY2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MACLrD,KAAKssB,aAAajB,EAAAA,QAAIe,MAC/B,GAEA,CAAAxX,IAAA,yBAAApM,MAIA,WACE,OADuB2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MAChBrD,KAAKssB,aAAajB,EAAAA,QAAIkB,iBAC/B,GAEA,CAAA3X,IAAA,uBAAApM,MAIA,WACE,OADqB2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MACdrD,KAAKssB,aAAajB,EAAAA,QAAImB,eAC/B,GAEA,CAAA5X,IAAA,aAAApM,MAYA,SAAWikB,GAAmBN,IAAA7oB,EAAA,KAC5B,IAAMopB,GAASP,IAAA9oB,EAAA,OAAGspB,EAAAA,EAAAA,MAAK7C,EAAOnmB,KAAK8oB,KAC7BG,GAAQT,IAAA9oB,EAAA,MAAGgoB,EAAAA,QAAIwB,eAAeC,uBAClC,IAAIzB,EAAAA,QAAI0B,yBAAyB,CAC/BL,UAAAA,EACAM,mBAAoB3B,EAAAA,QAAI4B,mBAAmBC,4BACzCltB,KAAKmtB,mBAKX,OAFEhB,IAAA9oB,EAAA,MAEK8mB,EAAAA,OAAOc,gBAAe0B,EAAAA,EAAAA,MAAKC,EAAS7mB,SAC7C,GAEA,CAAA6O,IAAA,eAAApM,MAKA,WAAmC,IAK7B4kB,EACAC,EANOC,EAAQvf,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAoe,IAAA3lB,EAAA,QAAG6kB,EAAAA,QAAIe,OAC1B,GAD+BD,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MAC3BrD,KAAKutB,WACP,OADmBpB,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,MACZiqB,EAASE,kBACjBrB,IAAA3lB,EAAA,QAGiB2lB,IAAA9oB,EAAA,MACdrD,KAAKkT,KAAKpP,QAAU,GAAGqoB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACzB+pB,EAAU/B,EAAAA,QAAIoC,UAAUtB,IAAA9oB,EAAA,MACxBgqB,EAAgB,6BACXlB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACL+pB,EAAU/B,EAAAA,QAAIqC,WAAWvB,IAAA9oB,EAAA,MACzBgqB,EAAgB,6BAIlB,IAAMM,GAASxB,IAAA9oB,EAAA,MAAGrD,KAAKkT,KAAKpP,QAAU,GAACqoB,IAAA3lB,EAAA,SAAG,IAAC2lB,IAAA3lB,EAAA,SAAG,KACxConB,GAAUzB,IAAA9oB,EAAA,MAAGrD,KAAKkT,KAAK2a,OAAOF,EAAW,OAGzCG,GAAS3B,IAAA9oB,EAAA,MAAG,IAAI+pB,EAAQ,CAC5BW,UAAWH,EACXvB,OAAQ2B,EAAAA,QAAQC,cAAcjuB,KAAKqsB,QAAQ6B,kBAG7C,OAFG/B,IAAA9oB,EAAA,MAEI,IAAIiqB,EAASD,EAAeS,EACrC,GAEA,CAAAlZ,IAAA,UAAApM,MAGA,WACE,OADQ2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,WACU2R,IAAdhV,KAAKkT,MAAoBiZ,IAAA3lB,EAAA,cAAA2lB,IAAA9oB,EAAA,QAE5B8oB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACM1B,OAAO3B,KAAKkT,MACrB,GAEA,CAAA0B,IAAA,YAAApM,MAGA,WACE,OADU2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,WACU2R,IAAhBhV,KAAKqsB,QAAsBF,IAAA3lB,EAAA,cAAA2lB,IAAA9oB,EAAA,QAE9B8oB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACM1B,OAAO3B,KAAKqsB,QACrB,GAEA,CAAAzX,IAAA,eAAApM,MASA,WACE,OADa2jB,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACLrD,KAAKmuB,mBACX,KAAK9C,EAAAA,QAAI+C,UAAUZ,kBACjB,OADkCrB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAC3B,SACT,KAAKgoB,EAAAA,QAAI+C,UAAUC,2BACjB,OAD2ClC,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACpC,mBACT,KAAKgoB,EAAAA,QAAI+C,UAAUE,4BACjB,OAD4CnC,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACrC,oBACT,QACE,OADF8oB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACS,UAEb,GAEA,CAAAuR,IAAA,kBAAApM,MAGA,WACE,OADgB2jB,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACZrD,KAAKutB,YAAYpB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACZgoB,EAAAA,QAAI+C,UAAUZ,oBACtBrB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAEGrD,KAAKkT,KAAKpP,QAAU,GAAGqoB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAClBgoB,EAAAA,QAAI+C,UAAUC,6BACtBlC,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAEMgoB,EAAAA,QAAI+C,UAAUE,6BACvB,GAEA,CAAA1Z,IAAA,WAAApM,MAGA,WACE,OADS2jB,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,OACDrD,KAAKqsB,MACf,GAEA,CAAAzX,IAAA,SAAApM,MAIA,SAAO+lB,GACL,OADYpC,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACL8oB,IAAA3lB,EAAA,SAAAxG,KAAKkT,OAASqb,EAAMC,YAASrC,IAAA3lB,EAAA,SAAIxG,KAAKqsB,SAAWkC,EAAME,YAChE,GAAC,CAAA7Z,IAAA,WAAApM,MAED,WACE,OADS2jB,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACLrD,KAAKutB,YAAYpB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACZ,WACR8oB,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAEM,GAAP+L,OAAUpP,KAAKwuB,UAAS,KAAApf,OAAIpP,KAAKyuB,aACnC,IA5NUrvB,EA8NV,EAAAwV,IAAA,SAAApM,MAhMA,WACE,OADc2jB,IAAA7oB,EAAA,KAAA6oB,IAAA9oB,EAAA,MACP,IAAI+oB,EAAM,MACnB,GAEA,CAAAxX,IAAA,gBAAApM,MAKA,SAAqBkmB,GACnB,IAAIC,EACAzb,EACAmZ,EACJ,OAJ6BF,IAAA7oB,EAAA,KAGlB6oB,IAAA9oB,EAAA,MACHqrB,EAAQ,UACd,KAAKrD,EAAAA,QAAI+C,UAAUZ,kBACjB,OADkCrB,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,MAC3BrD,KAAI,SACb,KAAKqrB,EAAAA,QAAI+C,UAAUC,2BAA0BlC,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,MAC3CsrB,EAAOD,EAASE,YAElB,KAAKvD,EAAAA,QAAI+C,UAAUE,4BAIjB,OAJ4CnC,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,MACrC8oB,IAAA3lB,EAAA,QAAPmoB,EAAOA,IAAIxC,IAAA3lB,EAAA,QAAIkoB,EAASG,cAAa1C,IAAA9oB,EAAA,MACrCgpB,EAASlC,EAAAA,OAAOa,uBAAuB2D,EAAKtC,SAASZ,WAAWU,IAAA9oB,EAAA,MAChE6P,GAAO4b,EAAAA,EAAAA,SAAQH,EAAKZ,YAAa,MAAM5B,IAAA9oB,EAAA,MAChC,IAAIrD,KAAKkT,EAAMmZ,GACxB,QACE,MADFF,IAAA3lB,EAAA,QAAA2lB,IAAA9oB,EAAA,MACQ,IAAI8J,MAAM,uBAADiC,OAAwBsf,EAAQ,SAAUjnB,OAE/D,GAAC,CAAAmN,IAAA,UAAApM,MAmLD,SAAeumB,EAAQC,GACrB,GAD6B7C,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACzB8oB,IAAA3lB,EAAA,WAACuoB,IAAM5C,IAAA3lB,EAAA,SAAMuoB,aAAkB3C,IACjC,MADyCD,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACnC,IAAI8J,MAAM,qBAElB,GADCgf,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACG8oB,IAAA3lB,EAAA,WAACwoB,IAAM7C,IAAA3lB,EAAA,SAAMwoB,aAAkB5C,IACjC,MADyCD,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACnC,IAAI8J,MAAM,qBAGlB,GAFCgf,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAEG0rB,EAAOtf,OAAOuf,GAChB,OADyB7C,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAClB,EACR8oB,IAAA3lB,EAAA,SAGD,IAAMyoB,GAAQ9C,IAAA9oB,EAAA,MAAG0rB,EAAOZ,kBAAkB3lB,OACpC0mB,GAAQ/C,IAAA9oB,EAAA,MAAG2rB,EAAOb,kBAAkB3lB,OAC1C,GADgD2jB,IAAA9oB,EAAA,MAC5C4rB,IAAaC,EACf,OADyB/C,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MAClB4rB,EAAWC,GAAQ/C,IAAA3lB,EAAA,UAAI,IAAC2lB,IAAA3lB,EAAA,SAAG,GACnC2lB,IAAA3lB,EAAA,SAGD,IAAMqU,GAAMsR,IAAA9oB,EAAA,MAAG8rB,EAAaJ,EAAOP,UAAWQ,EAAOR,YACrD,OADgErC,IAAA9oB,EAAA,MACjD,IAAXwX,GAAcsR,IAAA3lB,EAAA,SAAA2lB,IAAA9oB,EAAA,MACTwX,IACRsR,IAAA3lB,EAAA,SAED2lB,IAAA9oB,EAAA,MACO8rB,EAAaJ,EAAON,YAAaO,EAAOP,aACjD,IAvQUpvB,GAAAkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAuQT,CArQe,GAkRlB,SAAS+vB,EAAaxqB,EAAG6B,GACvB,OAD0B2lB,IAAA7oB,EAAA,MAAA6oB,IAAA9oB,EAAA,MACnBymB,EAAO5a,QAAQ4a,EAAOnmB,KAAKgB,EAAG,SAAUmlB,EAAOnmB,KAAK6C,EAAG,SAChE,i4ICtRY,OAAA4oB,EAAA,kBAAAvF,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAisB,IAdZA,EAAA,kBAAAlwB,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAY,OAAAJ,UAAAJ,EAAAJ,EAAA6U,eAAA9Q,EAAAnD,OAAA4O,gBAAA,SAAAzP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAmJ,KAAA,EAAAhJ,EAAA,mBAAA6N,OAAAA,OAAA,GAAA1I,EAAAnF,EAAA8U,UAAA,aAAAxR,EAAAtD,EAAA8vB,eAAA,kBAAA1sB,EAAApD,EAAA2U,aAAA,yBAAAxI,EAAAvM,EAAAD,EAAAE,GAAA,OAAAY,OAAA4O,eAAAzP,EAAAD,EAAA,CAAAqJ,MAAAnJ,EAAAyP,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA3T,EAAAD,EAAA,KAAAwM,EAAA,aAAAvM,GAAAuM,EAAA,SAAAvM,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAkwB,EAAAnwB,EAAAD,EAAAE,EAAAI,GAAA,IAAAD,EAAAL,GAAAA,EAAAU,qBAAA2vB,EAAArwB,EAAAqwB,EAAA7qB,EAAA1E,OAAA+I,OAAAxJ,EAAAK,WAAAiD,EAAA,IAAA2sB,EAAAhwB,GAAA,WAAA2D,EAAAuB,EAAA,WAAA6D,MAAAknB,EAAAtwB,EAAAC,EAAAyD,KAAA6B,CAAA,UAAAgrB,EAAAvwB,EAAAD,EAAAE,GAAA,WAAAuO,KAAA,SAAA+G,IAAAvV,EAAAW,KAAAZ,EAAAE,GAAA,OAAAD,GAAA,OAAAwO,KAAA,QAAA+G,IAAAvV,EAAA,EAAAD,EAAAowB,KAAAA,EAAA,IAAA3qB,EAAA,iBAAAiB,EAAA,iBAAAvC,EAAA,YAAAD,EAAA,YAAA2C,EAAA,YAAAwpB,IAAA,UAAAI,IAAA,UAAAC,IAAA,KAAA/pB,EAAA,GAAA6F,EAAA7F,EAAAnB,GAAA,8BAAArF,EAAAW,OAAAwd,eAAA7W,EAAAtH,GAAAA,EAAAA,EAAAuJ,EAAA,MAAAjC,GAAAA,IAAAvH,GAAAI,EAAAM,KAAA6G,EAAAjC,KAAAmB,EAAAc,GAAA,IAAAP,EAAAwpB,EAAAhwB,UAAA2vB,EAAA3vB,UAAAI,OAAA+I,OAAAlD,GAAA,SAAAgqB,EAAA1wB,GAAA,0BAAA2Z,SAAA,SAAA5Z,GAAAwM,EAAAvM,EAAAD,GAAA,SAAAC,GAAA,YAAA2wB,QAAA5wB,EAAAC,EAAA,gBAAA4wB,EAAA5wB,EAAAD,GAAA,SAAA8wB,EAAA5wB,EAAA+D,EAAA5D,EAAAmF,GAAA,IAAA7B,EAAA6sB,EAAAvwB,EAAAC,GAAAD,EAAAgE,GAAA,aAAAN,EAAA8K,KAAA,KAAAhL,EAAAE,EAAA6R,IAAA/P,EAAAhC,EAAA4F,MAAA,OAAA5D,GAAA,UAAAyP,EAAAzP,IAAAnF,EAAAM,KAAA6E,EAAA,WAAAzF,EAAAgK,QAAAvE,EAAAsrB,SAAA5W,MAAA,SAAAla,GAAA6wB,EAAA,OAAA7wB,EAAAI,EAAAmF,EAAA,aAAAvF,GAAA6wB,EAAA,QAAA7wB,EAAAI,EAAAmF,EAAA,IAAAxF,EAAAgK,QAAAvE,GAAA0U,MAAA,SAAAla,GAAAwD,EAAA4F,MAAApJ,EAAAI,EAAAoD,EAAA,aAAAxD,GAAA,OAAA6wB,EAAA,QAAA7wB,EAAAI,EAAAmF,EAAA,IAAAA,EAAA7B,EAAA6R,IAAA,KAAAtV,EAAA+D,EAAA,gBAAAoF,MAAA,SAAApJ,EAAAK,GAAA,SAAA0wB,IAAA,WAAAhxB,GAAA,SAAAA,EAAAE,GAAA4wB,EAAA7wB,EAAAK,EAAAN,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAia,KAAA6W,EAAAA,GAAAA,GAAA,aAAAT,EAAAvwB,EAAAE,EAAAI,GAAA,IAAA2D,EAAAwB,EAAA,gBAAApF,EAAAmF,GAAA,GAAAvB,IAAAE,EAAA,MAAA6J,MAAA,mCAAA/J,IAAAC,EAAA,cAAA7D,EAAA,MAAAmF,EAAA,OAAA6D,MAAApJ,EAAAskB,MAAA,OAAAjkB,EAAA2wB,OAAA5wB,EAAAC,EAAAkV,IAAAhQ,IAAA,KAAA7B,EAAArD,EAAA4wB,SAAA,GAAAvtB,EAAA,KAAAF,EAAA0tB,EAAAxtB,EAAArD,GAAA,GAAAmD,EAAA,IAAAA,IAAAoD,EAAA,gBAAApD,CAAA,cAAAnD,EAAA2wB,OAAA3wB,EAAA8wB,KAAA9wB,EAAA+wB,MAAA/wB,EAAAkV,SAAA,aAAAlV,EAAA2wB,OAAA,IAAAhtB,IAAAwB,EAAA,MAAAxB,EAAAC,EAAA5D,EAAAkV,IAAAlV,EAAAgxB,kBAAAhxB,EAAAkV,IAAA,gBAAAlV,EAAA2wB,QAAA3wB,EAAAixB,OAAA,SAAAjxB,EAAAkV,KAAAvR,EAAAE,EAAA,IAAAwC,EAAA6pB,EAAAxwB,EAAAE,EAAAI,GAAA,cAAAqG,EAAA8H,KAAA,IAAAxK,EAAA3D,EAAAikB,KAAArgB,EAAAwC,EAAAC,EAAA6O,MAAA3O,EAAA,gBAAAwC,MAAA1C,EAAA6O,IAAA+O,KAAAjkB,EAAAikB,KAAA,WAAA5d,EAAA8H,OAAAxK,EAAAC,EAAA5D,EAAA2wB,OAAA,QAAA3wB,EAAAkV,IAAA7O,EAAA6O,IAAA,YAAA2b,EAAAnxB,EAAAE,GAAA,IAAAI,EAAAJ,EAAA+wB,OAAAhtB,EAAAjE,EAAAmV,SAAA7U,GAAA,GAAA2D,IAAAhE,EAAA,OAAAC,EAAAgxB,SAAA,eAAA5wB,GAAAN,EAAAmV,SAAA,SAAAjV,EAAA+wB,OAAA,SAAA/wB,EAAAsV,IAAAvV,EAAAkxB,EAAAnxB,EAAAE,GAAA,UAAAA,EAAA+wB,SAAA,WAAA3wB,IAAAJ,EAAA+wB,OAAA,QAAA/wB,EAAAsV,IAAA,IAAA1R,UAAA,oCAAAxD,EAAA,aAAAuG,EAAA,IAAAxG,EAAAmwB,EAAAvsB,EAAAjE,EAAAmV,SAAAjV,EAAAsV,KAAA,aAAAnV,EAAAoO,KAAA,OAAAvO,EAAA+wB,OAAA,QAAA/wB,EAAAsV,IAAAnV,EAAAmV,IAAAtV,EAAAgxB,SAAA,KAAArqB,EAAA,IAAArB,EAAAnF,EAAAmV,IAAA,OAAAhQ,EAAAA,EAAA+e,MAAArkB,EAAAF,EAAAwxB,YAAAhsB,EAAA6D,MAAAnJ,EAAAokB,KAAAtkB,EAAAyxB,QAAA,WAAAvxB,EAAA+wB,SAAA/wB,EAAA+wB,OAAA,OAAA/wB,EAAAsV,IAAAvV,GAAAC,EAAAgxB,SAAA,KAAArqB,GAAArB,GAAAtF,EAAA+wB,OAAA,QAAA/wB,EAAAsV,IAAA,IAAA1R,UAAA,oCAAA5D,EAAAgxB,SAAA,KAAArqB,EAAA,UAAA6qB,EAAAzxB,GAAA,IAAAD,EAAA,CAAA2xB,OAAA1xB,EAAA,SAAAA,IAAAD,EAAA4xB,SAAA3xB,EAAA,SAAAA,IAAAD,EAAA6xB,WAAA5xB,EAAA,GAAAD,EAAA8xB,SAAA7xB,EAAA,SAAA8xB,WAAAjkB,KAAA9N,EAAA,UAAAgyB,EAAA/xB,GAAA,IAAAD,EAAAC,EAAAgyB,YAAA,GAAAjyB,EAAAyO,KAAA,gBAAAzO,EAAAwV,IAAAvV,EAAAgyB,WAAAjyB,CAAA,UAAAswB,EAAArwB,GAAA,KAAA8xB,WAAA,EAAAJ,OAAA,SAAA1xB,EAAA2Z,QAAA8X,EAAA,WAAAQ,OAAA,YAAAxoB,EAAA1J,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAwF,GAAA,GAAAtF,EAAA,OAAAA,EAAAU,KAAAZ,GAAA,sBAAAA,EAAAskB,KAAA,OAAAtkB,EAAA,IAAAyU,MAAAzU,EAAA2E,QAAA,KAAAV,GAAA,EAAA5D,EAAA,SAAAikB,IAAA,OAAArgB,EAAAjE,EAAA2E,QAAA,GAAArE,EAAAM,KAAAZ,EAAAiE,GAAA,OAAAqgB,EAAAjb,MAAArJ,EAAAiE,GAAAqgB,EAAAC,MAAA,EAAAD,EAAA,OAAAA,EAAAjb,MAAApJ,EAAAqkB,EAAAC,MAAA,EAAAD,CAAA,SAAAjkB,EAAAikB,KAAAjkB,CAAA,YAAAyD,UAAAoR,EAAAlV,GAAA,2BAAAywB,EAAA/vB,UAAAgwB,EAAAzsB,EAAAiD,EAAA,eAAAmC,MAAAqnB,EAAA7c,cAAA,IAAA5P,EAAAysB,EAAA,eAAArnB,MAAAonB,EAAA5c,cAAA,IAAA4c,EAAA0B,YAAA3lB,EAAAkkB,EAAAjtB,EAAA,qBAAAzD,EAAAoyB,oBAAA,SAAAnyB,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAA8D,YAAA,QAAA/D,IAAAA,IAAAywB,GAAA,uBAAAzwB,EAAAmyB,aAAAnyB,EAAAsI,MAAA,EAAAtI,EAAAqyB,KAAA,SAAApyB,GAAA,OAAAa,OAAAC,eAAAD,OAAAC,eAAAd,EAAAywB,IAAAzwB,EAAAoe,UAAAqS,EAAAlkB,EAAAvM,EAAAwD,EAAA,sBAAAxD,EAAAS,UAAAI,OAAA+I,OAAA3C,GAAAjH,CAAA,EAAAD,EAAAsyB,MAAA,SAAAryB,GAAA,OAAA8wB,QAAA9wB,EAAA,EAAA0wB,EAAAE,EAAAnwB,WAAA8L,EAAAqkB,EAAAnwB,UAAAiD,GAAA,0BAAA3D,EAAA6wB,cAAAA,EAAA7wB,EAAAuyB,MAAA,SAAAtyB,EAAAC,EAAAI,EAAA2D,EAAA5D,QAAA,IAAAA,IAAAA,EAAAka,SAAA,IAAA/U,EAAA,IAAAqrB,EAAAT,EAAAnwB,EAAAC,EAAAI,EAAA2D,GAAA5D,GAAA,OAAAL,EAAAoyB,oBAAAlyB,GAAAsF,EAAAA,EAAA8e,OAAAnK,MAAA,SAAAla,GAAA,OAAAA,EAAAskB,KAAAtkB,EAAAoJ,MAAA7D,EAAA8e,MAAA,KAAAqM,EAAAzpB,GAAAsF,EAAAtF,EAAAzD,EAAA,aAAA+I,EAAAtF,EAAA1B,GAAA,0BAAAgH,EAAAtF,EAAA,qDAAAlH,EAAAwZ,KAAA,SAAAvZ,GAAA,IAAAD,EAAAc,OAAAb,GAAAC,EAAA,WAAAI,KAAAN,EAAAE,EAAA4N,KAAAxN,GAAA,OAAAJ,EAAAmI,UAAA,SAAAic,IAAA,KAAApkB,EAAAyE,QAAA,KAAA1E,EAAAC,EAAAghB,MAAA,GAAAjhB,KAAAD,EAAA,OAAAskB,EAAAjb,MAAApJ,EAAAqkB,EAAAC,MAAA,EAAAD,CAAA,QAAAA,EAAAC,MAAA,EAAAD,CAAA,GAAAtkB,EAAA0J,OAAAA,EAAA4mB,EAAA5vB,UAAA,CAAAqD,YAAAusB,EAAA4B,MAAA,SAAAlyB,GAAA,QAAAwyB,KAAA,OAAAlO,KAAA,OAAA8M,KAAA,KAAAC,MAAApxB,EAAA,KAAAskB,MAAA,OAAA2M,SAAA,UAAAD,OAAA,YAAAzb,IAAAvV,EAAA,KAAA8xB,WAAAnY,QAAAoY,IAAAhyB,EAAA,QAAAE,KAAA,WAAAA,EAAAuyB,OAAA,IAAAnyB,EAAAM,KAAA,KAAAV,KAAAuU,OAAAvU,EAAAgI,MAAA,WAAAhI,GAAAD,EAAA,EAAAyyB,KAAA,gBAAAnO,MAAA,MAAAtkB,EAAA,KAAA8xB,WAAA,GAAAE,WAAA,aAAAhyB,EAAAwO,KAAA,MAAAxO,EAAAuV,IAAA,YAAAmd,IAAA,EAAArB,kBAAA,SAAAtxB,GAAA,QAAAukB,KAAA,MAAAvkB,EAAA,IAAAE,EAAA,cAAA0yB,EAAAtyB,EAAA2D,GAAA,OAAAuB,EAAAiJ,KAAA,QAAAjJ,EAAAgQ,IAAAxV,EAAAE,EAAAokB,KAAAhkB,EAAA2D,IAAA/D,EAAA+wB,OAAA,OAAA/wB,EAAAsV,IAAAvV,KAAAgE,CAAA,SAAAA,EAAA,KAAA8tB,WAAAptB,OAAA,EAAAV,GAAA,IAAAA,EAAA,KAAA5D,EAAA,KAAA0xB,WAAA9tB,GAAAuB,EAAAnF,EAAA4xB,WAAA,YAAA5xB,EAAAsxB,OAAA,OAAAiB,EAAA,UAAAvyB,EAAAsxB,QAAA,KAAAa,KAAA,KAAA7uB,EAAArD,EAAAM,KAAAP,EAAA,YAAAoD,EAAAnD,EAAAM,KAAAP,EAAA,iBAAAsD,GAAAF,EAAA,SAAA+uB,KAAAnyB,EAAAuxB,SAAA,OAAAgB,EAAAvyB,EAAAuxB,UAAA,WAAAY,KAAAnyB,EAAAwxB,WAAA,OAAAe,EAAAvyB,EAAAwxB,WAAA,SAAAluB,GAAA,QAAA6uB,KAAAnyB,EAAAuxB,SAAA,OAAAgB,EAAAvyB,EAAAuxB,UAAA,YAAAnuB,EAAA,MAAAuK,MAAA,kDAAAwkB,KAAAnyB,EAAAwxB,WAAA,OAAAe,EAAAvyB,EAAAwxB,WAAA,KAAAN,OAAA,SAAAtxB,EAAAD,GAAA,QAAAE,EAAA,KAAA6xB,WAAAptB,OAAA,EAAAzE,GAAA,IAAAA,EAAA,KAAA+D,EAAA,KAAA8tB,WAAA7xB,GAAA,GAAA+D,EAAA0tB,QAAA,KAAAa,MAAAlyB,EAAAM,KAAAqD,EAAA,oBAAAuuB,KAAAvuB,EAAA4tB,WAAA,KAAAxxB,EAAA4D,EAAA,OAAA5D,IAAA,UAAAJ,GAAA,aAAAA,IAAAI,EAAAsxB,QAAA3xB,GAAAA,GAAAK,EAAAwxB,aAAAxxB,EAAA,UAAAmF,EAAAnF,EAAAA,EAAA4xB,WAAA,UAAAzsB,EAAAiJ,KAAAxO,EAAAuF,EAAAgQ,IAAAxV,EAAAK,GAAA,KAAA4wB,OAAA,YAAA3M,KAAAjkB,EAAAwxB,WAAAhrB,GAAA,KAAAgsB,SAAArtB,EAAA,EAAAqtB,SAAA,SAAA5yB,EAAAD,GAAA,aAAAC,EAAAwO,KAAA,MAAAxO,EAAAuV,IAAA,gBAAAvV,EAAAwO,MAAA,aAAAxO,EAAAwO,KAAA,KAAA6V,KAAArkB,EAAAuV,IAAA,WAAAvV,EAAAwO,MAAA,KAAAkkB,KAAA,KAAAnd,IAAAvV,EAAAuV,IAAA,KAAAyb,OAAA,cAAA3M,KAAA,kBAAArkB,EAAAwO,MAAAzO,IAAA,KAAAskB,KAAAtkB,GAAA6G,CAAA,EAAAisB,OAAA,SAAA7yB,GAAA,QAAAD,EAAA,KAAA+xB,WAAAptB,OAAA,EAAA3E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAA6xB,WAAA/xB,GAAA,GAAAE,EAAA2xB,aAAA5xB,EAAA,YAAA4yB,SAAA3yB,EAAA+xB,WAAA/xB,EAAA4xB,UAAAE,EAAA9xB,GAAA2G,CAAA,kBAAA5G,GAAA,QAAAD,EAAA,KAAA+xB,WAAAptB,OAAA,EAAA3E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAA6xB,WAAA/xB,GAAA,GAAAE,EAAAyxB,SAAA1xB,EAAA,KAAAK,EAAAJ,EAAA+xB,WAAA,aAAA3xB,EAAAmO,KAAA,KAAAxK,EAAA3D,EAAAkV,IAAAwc,EAAA9xB,EAAA,QAAA+D,CAAA,QAAA+J,MAAA,0BAAA+kB,cAAA,SAAA/yB,EAAAE,EAAAI,GAAA,YAAA4wB,SAAA,CAAA/b,SAAAzL,EAAA1J,GAAAwxB,WAAAtxB,EAAAuxB,QAAAnxB,GAAA,cAAA2wB,SAAA,KAAAzb,IAAAvV,GAAA4G,CAAA,GAAA7G,CAAA,UAAAgzB,EAAA1yB,EAAAL,EAAAD,EAAAE,EAAA+D,EAAAuB,EAAA7B,GAAA,QAAAtD,EAAAC,EAAAkF,GAAA7B,GAAAF,EAAApD,EAAAgJ,KAAA,OAAA/I,GAAA,YAAAN,EAAAM,EAAA,CAAAD,EAAAkkB,KAAAtkB,EAAAwD,GAAA8W,QAAAvQ,QAAAvG,GAAA0W,KAAAja,EAAA+D,EAAA,CAoGO,SAAegvB,EAAcC,EAAAC,EAAAC,GAAA,OAAAC,EAAAhkB,MAAC,KAADT,UAAA,CAiEpC,SAAAykB,IArKA,IAAA/yB,EAmKC,OAnKDA,EAqKA4vB,IAAAmC,MAjEO,SAAAiB,EACLC,EACAC,EACAC,GAAmB,IAAAnG,EAAAoG,EAAAC,EAAApG,EAAAE,EAAAmG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAplB,UAAA,OAAAshB,IAAAE,MAAA,SAAA6D,GAAA,cAAAA,EAAAzB,KAAAyB,EAAA3P,MAAA,OACmB,GAAtCgJ,EAAiB0G,EAAArvB,OAAA,QAAAkR,IAAAme,EAAA,GAAAA,EAAA,IAAA/D,IAAA5oB,EAAA,QAAG6sB,EAAAA,SAASC,WAASlE,IAAA9rB,EAAA,KAAA8rB,IAAA/rB,EAAA,KAIpCqvB,EAAMa,cAAa,SAAU/qB,QAC7B6iB,EAAAA,QAAImI,uBAAuBC,4BAA4BjrB,MAAK,CAAA4qB,EAAA3P,KAAA,eAAA2L,IAAA5oB,EAAA,QAAA4oB,IAAA/rB,EAAA,KAAA+vB,EAAA1C,OAAA,SAErDgC,GAAK,OAAAtD,IAAA5oB,EAAA,gBAkBwB,GAf3B4oB,IAAA/rB,EAAA,KAALwvB,EAAQxH,EAAAA,QAAIqI,0BAA0BztB,QAAQysB,EAAM3sB,SAG5CqpB,IAAA/rB,EAAA,KAARyvB,EAAWD,EAAMU,cAAc5I,UAASyE,IAAA/rB,EAAA,KAC9CyvB,EAASa,0BAA0Bf,GAEpBxD,IAAA/rB,EAAA,KAATqpB,GAAYC,EAAAA,EAAAA,MAAK7C,EAAOnmB,KAAK8oB,IACrB2C,IAAA/rB,EAAA,KAARupB,EAAWvB,EAAAA,QAAIwB,eAAe+G,iCAClC,IAAIvI,EAAAA,QAAIwI,mCAAmC,CACzCnH,UAAAA,EACAoH,MAAOhB,EAASgB,QAChBC,WAAYlB,EAAMmB,iBAClBL,0BAA2Bb,EAASa,+BAG3BvE,IAAA/rB,EAAA,KAAP0vB,GAAUpG,EAAAA,EAAAA,MAAKC,EAAS7mB,SAAQqpB,IAAA/rB,EAAA,KAGhB,mBAAXsvB,EAAqB,CAAAS,EAAA3P,KAAA,SACZ,OADY2L,IAAA5oB,EAAA,QAAA4oB,IAAA/rB,EAAA,KAAA+vB,EAAAa,GAClBnK,EAAMsJ,EAAA3P,KAAA,GAAYkP,EAAO/F,GAAS,QAAAwG,EAAAc,GAAAd,EAAA7C,KAA9CyC,EAASI,EAAAa,GAAUtwB,KAAI5D,KAAAqzB,EAAAa,GAAAb,EAAAc,IAAAd,EAAA3P,KAAA,iBAAA2L,IAAA5oB,EAAA,QAAA4oB,IAAA/rB,EAAA,MAEvB2vB,EAAYlJ,EAAOnmB,KAAKgvB,EAAOwB,KAAKpB,IAAU,QAEsB,GAAvD3D,IAAA/rB,EAAA,MAAT4vB,EAAYvI,EAAAA,QAAQS,cAAc2H,EAASnI,WAAWpkB,WAAU6oB,IAAA/rB,EAAA,MAEjE2qB,EAAAA,QAAQC,cAAcgF,GAAWmB,OAAOrB,EAASC,GAAY,CAAFI,EAAA3P,KAAA,eAAA2L,IAAA5oB,EAAA,QAAA4oB,IAAA/rB,EAAA,MACxD,IAAI8J,MAAM,mCAAkC,QAAAiiB,IAAA5oB,EAAA,gBAqBH,OAbnC4oB,IAAA/rB,EAAA,MAAR6vB,GAAWmB,EAAAA,EAAAA,eACf,CACEC,WAAYnK,EAAAA,OAAOU,uBAAuBoI,GAC1CD,UAAAA,GAEF,CACEplB,KAAM,CACJ0mB,WAAY,CAAC,SAAU,MACvBtB,UAAW,CAAC,SAAU,SAG3B5D,IAAA/rB,EAAA,MAEDyvB,EAASE,UAAU3H,EAAAA,QAAIQ,MAAM0I,OAAO,CAACrB,KAAY9D,IAAA/rB,EAAA,MAAA+vB,EAAA1C,OAAA,SAC1CmC,GAAK,yBAAAO,EAAAvB,OAAA,GAAAY,EAAA,IAGdD,EArKA,eAAApzB,EAAA,KAAAD,EAAA4O,UAAA,WAAA2L,SAAA,SAAAra,EAAA+D,GAAA,IAAAuB,EAAAlF,EAAA+O,MAAApP,EAAAD,GAAA,SAAAq1B,EAAA/0B,GAAA0yB,EAAAxtB,EAAAtF,EAAA+D,EAAAoxB,EAAAC,EAAA,OAAAh1B,EAAA,UAAAg1B,EAAAh1B,GAAA0yB,EAAAxtB,EAAAtF,EAAA+D,EAAAoxB,EAAAC,EAAA,QAAAh1B,EAAA,CAAA+0B,OAAA,OAmKChC,EAAAhkB,MAAA,KAAAT,UAAA,CAsCM,SAAS2mB,EACd/B,EACAC,EACAmB,GAGA,IAFAd,EAASllB,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAqhB,IAAA5oB,EAAA,QAAG,IACZimB,EAAiB1e,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAqhB,IAAA5oB,EAAA,QAAG6sB,EAAAA,SAASC,WAASlE,IAAA9rB,EAAA,KAKtC,IAuBoBqxB,EAvBdC,GAAExF,IAAA/rB,EAAA,MAAG2qB,EAAAA,QAAQ6G,SAASC,gBACtBhB,GAAK1E,IAAA/rB,EAAA,MAAG,IAAIgoB,EAAAA,QAAI0J,OAsBFJ,EAtBqBC,EAsBdxF,IAAA9rB,EAAA,KAAA8rB,IAAA/rB,EAAA,MAEpBsxB,EAAM/0B,SAAS,EAAG,GAAGo1B,QAAO,SAACC,EAAOzuB,GAAM,OAAA4oB,IAAA9rB,EAAA,KAAA8rB,IAAA/rB,EAAA,MAAC4xB,GAAS,EAAKzuB,CAAA,GAAG,MAtB7D0uB,GAAE9F,IAAA/rB,EAAA,MAAG+rB,IAAA5oB,EAAA,QAAAysB,IAAS7D,IAAA5oB,EAAA,QAAImsB,EAAOM,cAC/B,GAD2C7D,IAAA/rB,EAAA,OACtC6xB,EACH,MADO9F,IAAA5oB,EAAA,QAAA4oB,IAAA/rB,EAAA,MACD,IAAI8J,MAAM,oDACjBiiB,IAAA5oB,EAAA,QAED,IAAMksB,GAAKtD,IAAA/rB,EAAA,MAAG,IAAIgoB,EAAAA,QAAIqI,0BAA0B,CAC9CM,eAAgBD,EAChBR,YAAalI,EAAAA,QAAI8J,mBAAmB1B,0BAClC,IAAIpI,EAAAA,QAAI+J,0BAA0B,CAChCzK,QAAS,IAAID,EAAAA,QAAQwK,GAAInJ,cACzB+H,MAAAA,EACAH,0BAA2B,EAC3BX,UAAW3H,EAAAA,QAAIQ,MAAM0I,OAAO,UAKlC,OAFGnF,IAAA/rB,EAAA,MAEI+uB,EAAeM,EAAOC,EAAQC,EAAqBnG,EAC5D,CA1NY2C,0+MCAA,OAAAiG,EAAA,kBAAAxL,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA61B,IAFL,IAAMC,EAAQ,WAgBnB,OAdUn2B,EADV,SAAAm2B,EAAYC,EAAaC,GACvB,GAAQ,SAAA7wB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAD0B6V,CAAA,KAAAwc,GAAAD,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,KAC9BgyB,IAAA7uB,EAAA,QAAA+uB,IAAWF,IAAA7uB,EAAA,SAAK2jB,EAAAA,OAAOE,wBAAwBkL,IACjD,MAD+DF,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,KACzD,IAAI8J,MAAM,0BAIlB,GAHCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,KACDrD,KAAKwL,aAAe+pB,EAAYF,IAAAhyB,EAAA,KAE3BmyB,EAEE,IAAAH,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,OAAImyB,aAAqBnK,EAAAA,QAAIoK,gBAGlC,MADKJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,KACC,IAAI8J,MAAM,6CAHkCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,KAClDrD,KAAK01B,WAAaF,CAGpB,MANgBH,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,KACdrD,KAAK01B,WAAarK,EAAAA,QAAIoK,eAAeE,6BAMzC,EAZUv2B,EA2JT,EAAAwV,IAAA,yBAAApM,MAzID,WACE,OAD8B6sB,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,KACvBgoB,EAAAA,QAAIoK,eAAeE,6BAC5B,GAEA,CAAA/gB,IAAA,eAAApM,MAMA,SAAoBotB,EAAMC,GACxB,GAD+BR,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,OACzBuyB,aAAgBvK,EAAAA,QAAIoK,gBACxB,MADyCJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACnC,IAAI8J,MAAM,kDAElB,GADCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,QACKwyB,aAAiBxK,EAAAA,QAAIoK,gBACzB,MAD0CJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACpC,IAAI8J,MAAM,mDAGlB,OAFCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MAEMgoB,EAAAA,QAAIoK,eAAeK,kBAAkB,CAACF,EAAMC,GACrD,GAEA,CAAAjhB,IAAA,cAAApM,MAMA,SAAmBotB,EAAMC,GACvB,GAD8BR,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,QACxBuyB,aAAgBvK,EAAAA,QAAIoK,gBACxB,MADyCJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACnC,IAAI8J,MAAM,kDAElB,GADCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,QACKwyB,aAAiBxK,EAAAA,QAAIoK,gBACzB,MAD0CJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACpC,IAAI8J,MAAM,mDAGlB,OAFCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MAEMgoB,EAAAA,QAAIoK,eAAeM,iBAAiB,CAACH,EAAMC,GACpD,GAEA,CAAAjhB,IAAA,eAAApM,MAKA,SAAoBgtB,GAClB,GAD6BH,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,QACvBmyB,aAAqBnK,EAAAA,QAAIoK,gBAC7B,MAD8CJ,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACxC,IAAI8J,MAAM,mDAGlB,OAFCkoB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MAEMgoB,EAAAA,QAAIoK,eAAeO,kBAAkBR,EAC9C,GAEA,CAAA5gB,IAAA,8BAAApM,MAUA,SAAmCytB,GACjC,OAD4CZ,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,MACrCgoB,EAAAA,QAAIoK,eAAeS,iCACxB7K,EAAAA,QAAI0J,MAAMrtB,WAAWuuB,GAEzB,GAEA,CAAArhB,IAAA,8BAAApM,MAUA,SAAmC2tB,GACjC,OAD0Cd,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,MACnCgoB,EAAAA,QAAIoK,eAAeW,iCACxB/K,EAAAA,QAAI0J,MAAMrtB,WAAWyuB,GAEzB,GAEA,CAAAvhB,IAAA,UAAApM,MAKA,SAAe6tB,GACb,IAAI7tB,EACJ,GAF0B6sB,IAAA/xB,EAAA,KAChB+xB,IAAAhyB,EAAA,MACFgzB,EAAW,WACZhL,EAAAA,QAAIiL,aAAaC,iBAEpB,OAFoClB,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACpCmF,EAAQ6tB,EAAYG,KAAKnB,IAAAhyB,EAAA,MAClB,IAAIrD,KACTmqB,EAAAA,OAAOa,uBAAuBxiB,EAAM+sB,cAAc9J,WAClDjjB,EAAMgtB,aAGR,MADFH,IAAA7uB,EAAA,QAAA6uB,IAAAhyB,EAAA,MACQ,IAAI8J,MAAM,0BAADiC,OAA2BinB,EAAW,SAAU5uB,MAErE,KAtHUpI,EAcV,EAAAuV,IAAA,cAAApM,MA8GA,WAAc6sB,IAAA/xB,EAAA,KACZ,IAAMmzB,GAAQpB,IAAAhyB,EAAA,MAAG,IAAIgoB,EAAAA,QAAIqL,WAAW,CAClCnB,YAAavH,EAAAA,QAAQC,cAAcjuB,KAAKwL,cAAc0iB,eACtDsH,UAAWx1B,KAAK01B,cAGlB,OAFGL,IAAAhyB,EAAA,MAEIgoB,EAAAA,QAAIiK,SAASiB,eAAeE,EACrC,GAEA,CAAA7hB,IAAA,cAAA7K,IAIA,WACE,OADgBsrB,IAAA/xB,EAAA,KAAA+xB,IAAAhyB,EAAA,MACTrD,KAAKwL,YACd,EAAChC,IAED,SAAgBhB,GACd,MADqB6sB,IAAA/xB,EAAA,MAAA+xB,IAAAhyB,EAAA,MACf,IAAI8J,MAAM,wBAClB,GAEA,CAAAyH,IAAA,YAAA7K,IAIA,WACE,OADcsrB,IAAA/xB,EAAA,MAAA+xB,IAAAhyB,EAAA,MACPrD,KAAK01B,UACd,EAAClsB,IAED,SAAchB,GACZ,MADmB6sB,IAAA/xB,EAAA,MAAA+xB,IAAAhyB,EAAA,MACb,IAAI8J,MAAM,wBAClB,MA3JUoH,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAsHT,CAxHkB,q5DCET,OAAAu3B,EAAA,kBAAA9M,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAm3B,IAGL,IAAMC,EAAQ,WAUnB,OAbUz3B,EAIV,SAAAy3B,EAAYhL,IAJF,SAAAjnB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAIc6V,CAAA,KAAA8d,GAAAD,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,KACtB,IAAIszB,IAAAtzB,EAAA,KAEFrD,KAAK62B,IAAM1M,EAAAA,OAAOY,eAAea,EACnC,CAAE,MAAOzd,GACP,MADUwoB,IAAAtzB,EAAA,KACJ,IAAI8J,MAAM,wBAADiC,OAAyBwc,GAC1C,CACF,EAXUvsB,EAaV,EAAAuV,IAAA,aAAApM,MAKA,WACE,OADWmuB,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,KACJ8mB,EAAAA,OAAOc,eAAejrB,KAAK62B,IACpC,GAEA,CAAAjiB,IAAA,WAAApM,MACA,WACE,OADSmuB,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,KACFrD,KAAK4rB,YACd,GAEA,CAAAhX,IAAA,UAAApM,MACA,WACE,OADQmuB,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,KACDqnB,EAAAA,QAAQiB,SAAS3rB,KAAK62B,IAC/B,GAEA,CAAAjiB,IAAA,OAAApM,MAeA,SAAK4nB,GAAmBuG,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,aAAAkU,EAAAxJ,UAAAjK,OAARgzB,EAAM,IAAA12B,MAAAmX,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAANqf,EAAMrf,EAAA,GAAA1J,UAAA0J,GACpB,OAAOsf,EAAAA,UAAUC,uBAAuB,CACtCrL,SAAU3rB,KAAK2qB,UAAUpkB,WACzB0wB,SAAU7G,EACV5Y,KAAMsf,GAEV,GAEA,CAAAliB,IAAA,eAAApM,MAOA,WACE,OADamuB,IAAArzB,EAAA,KAAAqzB,IAAAtzB,EAAA,KACNgoB,EAAAA,QAAI6L,UAAUC,aACnB,IAAI9L,EAAAA,QAAI+L,sBAAsB,CAC5BzL,SAAU3rB,KAAK2qB,UAAUoB,cACzBnX,IAAKyW,EAAAA,QAAIQ,MAAMwL,+BACfC,WAAYjM,EAAAA,QAAIkM,uBAAuBC,eAG7C,IAtEUn4B,GAAAkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAsET,CAnEkB,i5DCHT,OAAAq4B,EAAA,kBAAA5N,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAwY,EAAAzc,EAAAE,GAAA,IAAAD,EAAAa,OAAA0Y,KAAAxZ,GAAA,GAAAc,OAAA4b,sBAAA,KAAAzY,EAAAnD,OAAA4b,sBAAA1c,GAAAE,IAAA+D,EAAAA,EAAA0Y,QAAA,SAAAzc,GAAA,OAAAY,OAAA8b,yBAAA5c,EAAAE,GAAAyP,UAAA,KAAA1P,EAAA6N,KAAAuB,MAAApP,EAAAgE,EAAA,QAAAhE,CAAA,UAAA4c,EAAA7c,GAAA,QAAAE,EAAA,EAAAA,EAAA0O,UAAAjK,OAAAzE,IAAA,KAAAD,EAAA,MAAA2O,UAAA1O,GAAA0O,UAAA1O,GAAA,GAAAA,EAAA,EAAAuc,EAAA3b,OAAAb,IAAA,GAAA2Z,SAAA,SAAA1Z,GAAA4c,EAAA9c,EAAAE,EAAAD,EAAAC,GAAA,IAAAY,OAAAic,0BAAAjc,OAAAkc,iBAAAhd,EAAAc,OAAAic,0BAAA9c,IAAAwc,EAAA3b,OAAAb,IAAA2Z,SAAA,SAAA1Z,GAAAY,OAAA4O,eAAA1P,EAAAE,EAAAY,OAAA8b,yBAAA3c,EAAAC,GAAA,WAAAF,CAAA,UAAA8c,EAAA9c,EAAAE,EAAAD,GAAA,OAAAC,EAAA,SAAAD,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA4c,CAAA/c,MAAAF,EAAAc,OAAA4O,eAAA1P,EAAAE,EAAA,CAAAmJ,MAAApJ,EAAA0P,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA5T,EAAAE,GAAAD,EAAAD,CAAA,CAIL,SAASu4B,EAAeC,GAC7B,OADqCF,IAAAn0B,EAAA,KAAAm0B,IAAAp0B,EAAA,KAC9Bs0B,EAAO1U,KAAI,SAAC9jB,GACjB,OADuBs4B,IAAAn0B,EAAA,KAAAm0B,IAAAp0B,EAAA,KACnBlE,aAAaksB,EAAAA,QAAIuM,iBAAiBH,IAAAjxB,EAAA,QAAAixB,IAAAp0B,EAAA,KAC7Bw0B,EAAa14B,EAAE24B,WACvBL,IAAAjxB,EAAA,QAAAixB,IAAAp0B,EAAA,KAEMw0B,EAAa14B,GACtB,GACF,CAEA,SAAS04B,EAAaC,GACpB,OAD2BL,IAAAn0B,EAAA,KAAAm0B,IAAAp0B,EAAA,KAC3B2Y,EAAAA,EAAA,IACMyb,IAAAjxB,EAAA,QAAsB,MAAtBsxB,EAAMlM,eAAoB6L,IAAAjxB,EAAA,QAAI,CAChColB,WAAYzB,EAAAA,OAAOc,eAAe6M,EAAMlM,kBACzC,IACDhe,KAAMkqB,EAAMlqB,OAAOnG,KACnBswB,OAAQD,EACLE,OACAxvB,QACAuvB,SACA9U,KAAI,SAAC7jB,GAAM,OAAAq4B,IAAAn0B,EAAA,KAAAm0B,IAAAp0B,EAAA,MAAA40B,EAAAA,EAAAA,eAAc74B,EAAC,IAC7ByO,MAAMoqB,EAAAA,EAAAA,eAAcH,EAAME,OAAOxvB,QAAQqF,SAE7C,CA3BY4pB,gtHCAA,OAAAS,EAAA,kBAAArO,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAA+4B,IAQL,IAAME,EAAkB,SAAAC,GAC7B,SAAAD,EAAYE,EAAU7L,GAAmB,IAAA7T,EACvC,GAVQ,SAAAjU,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAS+B6V,CAAA,KAAAsf,GAAAF,IAAA50B,EAAA,KAAA40B,IAAA70B,EAAA,KACf,iBAAbi1B,EAAuB,CAAAJ,IAAA1xB,EAAA,QAChC,IAAMiH,GAAMyqB,IAAA70B,EAAA,KAAGymB,EAAOnmB,KAAK20B,EAAU,WAAUJ,IAAA70B,EAAA,KAC/Ci1B,EAAWjN,EAAAA,QAAIkN,oBAAoBtyB,QAAQwH,EAC7C,MAACyqB,IAAA1xB,EAAA,QAED,IAAMgyB,GAAYN,IAAA70B,EAAA,KAAGi1B,EAAQ,UAC7B,GADuCJ,IAAA70B,EAAA,KACnCm1B,IAAiBnN,EAAAA,QAAIoN,aAAaC,wBACpC,MAD6DR,IAAA1xB,EAAA,QAAA0xB,IAAA70B,EAAA,KACvD,IAAI8J,MAAM,kFAADiC,OACqEopB,EAAa/wB,KAAI,MAEtGywB,IAAA1xB,EAAA,QAED,IAAMmyB,GAAUT,IAAA70B,EAAA,KAAGi1B,EAAS9vB,SACtBowB,GAAEV,IAAA70B,EAAA,KAAGs1B,EAAWC,MAChBC,GAAGX,IAAA70B,EAAA,KAAGu1B,EAAGC,MAAMtyB,YAEfuyB,GAAUZ,IAAA70B,EAAA,MAAI60B,IAAA1xB,EAAA,QAAAmyB,EAAWG,eAAYZ,IAAA1xB,EAAA,QAAI,KAAIa,SAAQ6wB,IAAA70B,EAAA,MAE3DuV,EAAAuf,EAAA,KAAAC,EAAA,CAAMQ,EAAIE,EAAYD,EAAKpM,IAE3B,IAAMsM,GAAeb,IAAA70B,EAAA,MAAGgoB,EAAAA,QAAIkN,oBAAoBS,eAC9CJ,EAAGK,UAAUC,OAMb,OALAhB,IAAA70B,EAAA,MACFuV,EAAKugB,YAAaC,EAAAA,EAAAA,6BAA4BxgB,EAAKggB,GAAGS,aAAanB,IAAA70B,EAAA,MACnEuV,EAAK0gB,kBAAoB,IAAIC,EAAAA,YAC3BR,EACAtM,GACA7T,CACJ,CAEA,OAxCU,SAAAxZ,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAwCVgiB,CAAAiX,EAAAC,GAxCUl5B,EAwCVi5B,GAxCU/4B,EAwCV,EAAAuV,IAAA,mBAAA7K,IAIA,WACE,OADqBmuB,IAAA50B,EAAA,KAAA40B,IAAA70B,EAAA,MACdrD,KAAKs5B,iBACd,GAEA,CAAA1kB,IAAA,aAAA7K,IAIA,WACE,OADemuB,IAAA50B,EAAA,KAAA40B,IAAA70B,EAAA,MACRrD,KAAKs5B,kBAAkBE,UAChC,GAEA,CAAA5kB,IAAA,YAAA7K,IAIA,WACE,OADcmuB,IAAA50B,EAAA,KAAA40B,IAAA70B,EAAA,MACPrD,KAAKm5B,UACd,GAEA,CAAAvkB,IAAA,gBAAApM,MASA,WAAgB0vB,IAAA50B,EAAA,KACd,IAAMm2B,GAAiBvB,IAAA70B,EAAA,MACrB,IAAIgoB,EAAAA,QAAIqO,6CAA6ChB,sBACnD14B,KAAK44B,KAGHe,GAAWzB,IAAA70B,EAAA,MAAG,IAAIgoB,EAAAA,QAAIuO,4BAA4B,CACtDlN,UAAWrB,EAAAA,QAAIwO,KAAK5zB,SAAQ0mB,EAAAA,EAAAA,MAAK3sB,KAAKysB,oBACtCgN,kBAAAA,KAGF,OAFGvB,IAAA70B,EAAA,MAEIs2B,EAAY5zB,OACrB,GAEA,CAAA6O,IAAA,aAAApM,MAIA,WAAa0vB,IAAA50B,EAAA,KACX,IAAMg1B,GAAQJ,IAAA70B,EAAA,MAAG,IAAIgoB,EAAAA,QAAIyO,2BAA2B,CAClDlB,GAAIvN,EAAAA,QAAI+M,mBAAmBnyB,QAAQjG,KAAK44B,GAAG7yB,SAC3C+yB,WAAY94B,KAAK84B,WAAWzxB,WAG9B,OAFG6wB,IAAA70B,EAAA,MAEI,IAAIgoB,EAAAA,QAAIkN,oBAAoBG,sBAAsBJ,EAC3D,MAlGU/jB,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAkGT,CA1F4B,CAAS26B,EAAAA,8+3BCR5B,OAAAC,EAAA,kBAAAnQ,CAAA,EAAAA,CAAA,CAAAmQ,IA4xTZ,SAlyTSA,IAAA32B,EAAA,KAAG42B,EAAAA,QAAW,SAAA5O,GAAO2O,IAAA12B,EAAA,KAK9B,IAAM42B,GAAcF,IAAA32B,EAAA,KAAG,IACjB82B,GAAiBH,IAAA32B,EAAA,KAAG,MAM1B22B,IAAA32B,EAAA,KACAgoB,EAAIvf,QAAQ,QAASuf,EAAI5e,aAUzButB,IAAA32B,EAAA,KACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,UAAWyf,EAAIxe,OAAO,WACvB,CAAC,QAASwe,EAAIxe,OAAO,YAavBmtB,IAAA32B,EAAA,KACAgoB,EAAG,KAAM,mBAAoB,CAC3B+O,aAAc,EACdC,aAAc,EACdC,iBAAkB,EAClBC,cAAe,IAYjBP,IAAA32B,EAAA,KACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,gBAAiByf,EAAIxe,OAAO,SAC7B,CAAC,QAASwe,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,aAC5C,CAAC,WAAYwe,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,eAejDmtB,IAAA32B,EAAA,KACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,gBAAiByf,EAAIxe,OAAO,SAC7B,CAAC,SAAUwe,EAAIxe,OAAO,cACtB,CAAC,WAAYwe,EAAIze,OAAOye,EAAIxe,OAAO,eACnC,CAAC,gBAAiBwe,EAAIze,OAAOye,EAAIxe,OAAO,eACxC,CAAC,KAAMwe,EAAIxe,OAAO,WAClB,CAAC,KAAMwe,EAAIxe,OAAO,aAcpBmtB,IAAA32B,EAAA,KACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,SAAUyf,EAAIxe,OAAO,cACtB,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,UAAWwe,EAAIxe,OAAO,WACvB,CAAC,KAAMwe,EAAIxe,OAAO,WAClB,CAAC,gBAAiBwe,EAAIxe,OAAO,WAY/BmtB,IAAA32B,EAAA,KACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,SAAUyf,EAAIxe,OAAO,cACtB,CAAC,KAAMwe,EAAIxe,OAAO,WAClB,CAAC,sBAAuBwe,EAAIxe,OAAO,WAqCrCmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,sBAAuB,CAC/BtB,SAAU8gB,EAAIxe,OAAO,oBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,eAAgB,WACjB,CAAC,eAAgB,WACjB,CAAC,mBAAoB,eACrB,CAAC,gBAAiB,aAEpBC,KAAM,CACJ8vB,QAASpP,EAAIxe,OAAO,uBACpB6tB,QAASrP,EAAIxe,OAAO,uBACpB8tB,YAAatP,EAAIxe,OAAO,2BACxB+tB,SAAUvP,EAAIxe,OAAO,oBA6CzBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,SAAUyf,EAAIxe,OAAO,WACtB,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,UAAWwe,EAAIxe,OAAO,0BAWzBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,YAAayf,EAAIxe,OAAO,iBACzB,CAAC,YAAawe,EAAIxe,OAAO,gBAY3BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,YAAayf,EAAIxe,OAAO,WACzB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,UAAW,aAClD,CAAC,YAAawe,EAAI1e,SAAS0e,EAAIxe,OAAO,gBAAiB,eAOzDmtB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,aAAcuf,EAAI7e,OAAO,IAMrCwtB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,WAAYuf,EAAI9e,OAAO,KAMnCytB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,WAAYuf,EAAI9e,OAAO,KAMnCytB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,iBAAkBuf,EAAIxe,OAAO,UAMzCmtB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,YAAauf,EAAI5e,UAAU,KAMvCutB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,SAAUuf,EAAIxe,OAAO,SAMjCmtB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,aAAcuf,EAAI7e,OAAO,IAMrCwtB,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,cAAeuf,EAAI7e,OAAO,KAYtCwtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,YAAa,CACpBmC,gBAAiB,EACjBa,yBAA0B,EAC1BC,0BAA2B,EAC3BuM,mBAAoB,IAgBtBb,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,aACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B,cAC7B,CAAC,4BAA6B,gBAEhCC,KAAM,CACJmwB,WAAYzP,EAAIxe,OAAO,cACvBkuB,YAAa1P,EAAIxe,OAAO,kBAY5BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,YAAayf,EAAIxe,OAAO,eACzB,CAAC,SAAUwe,EAAIxe,OAAO,gBAWxBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,YAAayf,EAAIxe,OAAO,gBACzB,CAAC,SAAUwe,EAAIxe,OAAO,gBAmBxBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,QAAS,CACjBtB,SAAU8gB,EAAIxe,OAAO,aACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kBAAmB2gB,EAAG,QACvB,CAAC,2BAA4B,aAC7B,CAAC,4BAA6B,eAEhC1gB,KAAM,CACJikB,UAAWvD,EAAIxe,OAAO,aACtBgiB,WAAYxD,EAAIxe,OAAO,iBAY3BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,QAAS,CAClB,CAAC,IAAKyf,EAAIxe,OAAO,UACjB,CAAC,IAAKwe,EAAIxe,OAAO,YAWnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,SAAUyf,EAAIxe,OAAO,UACtB,CAAC,UAAWwe,EAAIxe,OAAO,YAazBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,mBAAoB,CAC3B2P,sBAAuB,EACvBC,aAAc,EACdC,aAAc,EACdC,cAAe,IAmBjBnB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,kBAAmB,CAC1BG,QAAS,EACT4P,UAAW,EACXC,MAAO,EACPxtB,KAAM,EACNytB,iBAAkB,EAClBC,cAAe,EACfpE,aAAc,EACdqE,aAAc,EACdC,cAAe,EACfC,IAAK,IAWP1B,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,SAAU,CACnB,CAAC,MAAOyf,EAAIxe,OAAO,cACnB,CAAC,SAAUwe,EAAIxe,OAAO,aAuBxBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,eAAgB,CACvBsQ,iBAAkB,EAClBC,kBAAmB,EACnBC,kBAAmB,EACnBC,wBAAyB,IAO3B9B,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,qBAAsB,GAMhC2O,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,yBAA0B,IAMpC2O,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,cAAe,IAMzB2O,IAAA32B,EAAA,MACAgoB,EAAIvf,QAAQ,wBAAyBuf,EAAIze,OAAOye,EAAIxe,OAAO,eAiB3DmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,UAAWwe,EAAIxe,OAAO,gBAazBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,6BAA8B,CACtCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJoxB,GAAI1Q,EAAIxe,OAAO,8BAsBnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,eAAgByf,EAAIxe,OAAO,WAC5B,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,sBAAuBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,yBAA0Bwe,EAAIxe,OAAO,iBACrF,CAAC,MAAOwe,EAAIxe,OAAO,iCAarBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,6BAA8B,CACtCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJqxB,GAAI3Q,EAAIxe,OAAO,8BAoBnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,cAAeyf,EAAIxe,OAAO,gBAC3B,CAAC,MAAOwe,EAAIxe,OAAO,iCAarBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,8BAmCnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,SAAUwe,EAAIxe,OAAO,mBACtB,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,gBAAiBwe,EAAIze,OAAOye,EAAIxe,OAAO,eACxC,CAAC,QAASwe,EAAIxe,OAAO,WACrB,CAAC,aAAcwe,EAAIxe,OAAO,aAC1B,CAAC,aAAcwe,EAAIxe,OAAO,eAC1B,CAAC,UAAWwe,EAAI1e,SAAS0e,EAAIxe,OAAO,UAAWwe,EAAIxe,OAAO,iBAC1D,CAAC,MAAOwe,EAAIxe,OAAO,sBAiBrBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,iBAAkB,CACzB4Q,eAAgB,EAChBC,oCAAqC,EACrCC,6BAA8B,IAOhCnC,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,uBAAwB,GAMlC2O,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,2BAA4B,GAMtC2O,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,2BAA4B,GAStC2O,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,oBAAqB,CAC5B+Q,6BAA8B,IAsBhCpC,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,aACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kBAAmB2gB,EAAG,QACvB,CAAC,2BAA4B,aAC7B,CAAC,4BAA6B,cAC9B,CAAC,qBAAsB,oBAEzB1gB,KAAM,CACJikB,UAAWvD,EAAIxe,OAAO,aACtBgiB,WAAYxD,EAAIxe,OAAO,cACvBwvB,gBAAiBhR,EAAIxe,OAAO,aAYhCmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,+BAAgC,CACxCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,wBAAyByf,EAAIxe,OAAO,UACrC,CAAC,MAAOwe,EAAIxe,OAAO,mCAarBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,sBAAuB,CAC/BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJqxB,GAAI3Q,EAAIxe,OAAO,gCAoBnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,cAAeyf,EAAIxe,OAAO,gBAC3B,CAAC,MAAOwe,EAAIxe,OAAO,0BAyBrBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,uBAuCnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,QAASwe,EAAIxe,OAAO,mBACrB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,QAASwe,EAAIxe,OAAO,WACrB,CAAC,MAAOwe,EAAIxe,OAAO,wBAYrBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,kBAAmB,CAC1BiR,YAAa,IAOftC,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,wBAAyB,GAUnC2O,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IA8BFqvB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,WAAYyf,EAAIxe,OAAO,cACxB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,QAASwe,EAAIxe,OAAO,WACrB,CAAC,MAAOwe,EAAIxe,OAAO,oBAWrBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,eAAgB,CACxBtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAoBFqvB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,WAAYwe,EAAIxe,OAAO,aACxB,CAAC,YAAawe,EAAIxe,OAAO,cACzB,CAAC,MAAOwe,EAAIxe,OAAO,mBAerBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,qBAAsB,CAC7BsK,4BAA6B,EAC7BG,kBAAmB,EACnBC,iBAAkB,EAClBC,kBAAmB,EACnBE,iCAAkC,EAClCE,iCAAkC,IAsBpC4D,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,sBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,8BAA+B2gB,EAAG,QACnC,CAAC,oBAAqB,iBACtB,CAAC,mBAAoB,gBACrB,CAAC,oBAAqB,gBACtB,CAAC,mCAAoC,aACrC,CAAC,mCAAoC,cAEvC1gB,KAAM,CACJ4xB,cAAelR,EAAI1e,SAAS0e,EAAIxe,OAAO,kBAAmB,GAC1D2vB,aAAcnR,EAAI1e,SAAS0e,EAAIxe,OAAO,kBAAmB,GACzD4vB,aAAcpR,EAAIze,OAAOye,EAAIxe,OAAO,mBACpCopB,UAAW5K,EAAIxe,OAAO,SACtB6vB,UAAWrR,EAAIxe,OAAO,YAW1BmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,eAAgB,CACvBkL,eAAgB,IAWlByD,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,cAAeyf,EAAIxe,OAAO,cAC3B,CAAC,YAAawe,EAAIxe,OAAO,qBAe3BmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,WAAY,CACpBtB,SAAU8gB,EAAIxe,OAAO,gBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iBAAkB,OAErBC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,iBAWnBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,yBAA0B,CACjCsR,yBAA0B,IAW5B3C,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B,OAE/BC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,WAanBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,wBAAyB,CAChCuR,oCAAqC,IAOvC5C,IAAA32B,EAAA,MACAgoB,EAAG,MAAO,+BAAgC,GAU1C2O,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,sCAAuC,CAC/CtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,mCAAoC,CAC7C,CAAC,MAAOyf,EAAIxe,OAAO,wCACnB,CAAC,QAASwe,EAAIxe,OAAO,aAavBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,2BAA4B,CACpCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,uCA+BnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,YAAayf,EAAIxe,OAAO,uBACzB,CAAC,YAAawe,EAAI1e,SAAS0e,EAAIxe,OAAO,YAAa,KACnD,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,MAAOwe,EAAIxe,OAAO,+BAYrBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,yCAA0C,CACnD,CAAC,SAAUyf,EAAIxe,OAAO,UACtB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,MAAOwe,EAAIxe,OAAO,YAgBrBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,oCAAqC,CAC9C,CAAC,SAAUyf,EAAIxe,OAAO,2CACtB,CAAC,WAAYwe,EAAIxe,OAAO,UACxB,CAAC,WAAYwe,EAAIxe,OAAO,UACxB,CAAC,kBAAmBwe,EAAIxe,OAAO,UAC/B,CAAC,2BAA4Bwe,EAAIxe,OAAO,YAoB1CmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,yBAA0B,CAClCtB,SAAU8gB,EAAIxe,OAAO,qBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC,oBAEnCC,KAAM,CACJkyB,gBAAiBxR,EAAIxe,OAAO,wCA2BhCmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,kBAAmByf,EAAIxe,OAAO,WAC/B,CAAC,OAAQwe,EAAIxe,OAAO,6BAUtBmtB,IAAA32B,EAAA,MACAgoB,EAAG,KAAM,yBAA0B,CACjCyR,UAAW,EACXtF,WAAY,IAcdwC,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,WAAYwe,EAAIxe,OAAO,cACxB,CAAC,MAAOwe,EAAIxe,OAAO,UACnB,CAAC,aAAcwe,EAAIxe,OAAO,2BAC1B,CAAC,MAAOwe,EAAIxe,OAAO,YAmBrBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,aAAcwe,EAAIxe,OAAO,WAC1B,CAAC,WAAYwe,EAAIxe,OAAO,WACxB,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,SAAUwe,EAAIxe,OAAO,WACtB,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,gBAAiBwe,EAAIxe,OAAO,WAC7B,CAAC,WAAYwe,EAAIxe,OAAO,WACxB,CAAC,WAAYwe,EAAIxe,OAAO,WACxB,CAAC,oBAAqBwe,EAAIxe,OAAO,aAWnCmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,aAAcwe,EAAIxe,OAAO,6BAiB5BmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,uBAAwB,CAChCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,0BAuBnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,MAAOyf,EAAIxe,OAAO,yBACnB,CAAC,OAAQwe,EAAIxe,OAAO,SACpB,CAAC,OAAQwe,EAAI5e,eAWfutB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,WAAY,CACrB,CAAC,UAAWyf,EAAIxe,OAAO,SACvB,CAAC,qBAAsBwe,EAAIxe,OAAO,aAWpCmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,eAAgByf,EAAIxe,OAAO,0BAC5B,CAAC,MAAOwe,EAAIxe,OAAO,gCA6BrBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAIxe,OAAO,mBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,UAAW,WACZ,CAAC,YAAa,aACd,CAAC,QAAS,SACV,CAAC,OAAQ,QACT,CAAC,mBAAoB,oBACrB,CAAC,gBAAiB,iBAClB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,gBAAiB,iBAClB,CAAC,MAAO,QAEVC,KAAM,CACJ6gB,QAASH,EAAIxe,OAAO,gBACpBkwB,UAAW1R,EAAIxe,OAAO,kBACtBwuB,MAAOhQ,EAAIxe,OAAO,cAClBgB,KAAMwd,EAAIxe,OAAO,aACjByuB,iBAAkBjQ,EAAIxe,OAAO,yBAC7B0uB,cAAelQ,EAAIxe,OAAO,sBAC1BsqB,aAAc9L,EAAIxe,OAAO,qBACzB2uB,aAAcnQ,EAAIxe,OAAO,qBACzB4uB,cAAepQ,EAAIxe,OAAO,sBAC1B6uB,IAAKrQ,EAAIxe,OAAO,eAcpBmtB,IAAA32B,EAAA,MACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,6BA8CnBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,wBAAyByf,EAAIxe,OAAO,WACrC,CAAC,OAAQwe,EAAIxe,OAAO,oBACpB,CAAC,MAAOwe,EAAIxe,OAAO,qBAUrBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,YAAayf,EAAIxe,OAAO,gBAW3BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,QAASwe,EAAIxe,OAAO,qBAWvBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,WAAYyf,EAAIxe,OAAO,cACxB,CAAC,UAAWwe,EAAIxe,OAAO,YAWzBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,WAAYwe,EAAIxe,OAAO,eAU1BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,YAAayf,EAAIxe,OAAO,yBAU3BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,kBAAmByf,EAAIxe,OAAO,aAYjCmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,WAAYyf,EAAIxe,OAAO,cACxB,CAAC,MAAOwe,EAAIxe,OAAO,UACnB,CAAC,aAAcwe,EAAIxe,OAAO,6BAU5BmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,OAAQyf,EAAIxe,OAAO,WAUtBmtB,IAAA32B,EAAA,MACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,kBAAmByf,EAAIxe,OAAO,sBAWjCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,UAAWyf,EAAIxe,OAAO,WAsEzBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,mBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,UAAW,WACZ,CAAC,YAAa,aACd,CAAC,QAAS,SACV,CAAC,OAAQ,QACT,CAAC,mBAAoB,oBACrB,CAAC,gBAAiB,iBAClB,CAAC,eAAgB,gBACjB,CAAC,eAAgB,gBACjB,CAAC,gBAAiB,iBAClB,CAAC,MAAO,QAEVC,KAAM,CACJ6gB,QAASH,EAAIxe,OAAO,oBACpBkwB,UAAW1R,EAAIxe,OAAO,sBACtBwuB,MAAOhQ,EAAIxe,OAAO,kBAClBgB,KAAMwd,EAAIxe,OAAO,iBACjByuB,iBAAkBjQ,EAAIxe,OAAO,6BAC7B0uB,cAAelQ,EAAIxe,OAAO,0BAC1BsqB,aAAc9L,EAAIxe,OAAO,yBACzB2uB,aAAcnQ,EAAIxe,OAAO,yBACzB4uB,cAAepQ,EAAIxe,OAAO,0BAC1B6uB,IAAKrQ,EAAIxe,OAAO,mBAoBpBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,eAAgB,CACvB2R,iBAAkB,EAClBC,gBAAiB,EACjBjE,eAAgB,EAChBkE,iBAAkB,EAClBC,qBAAsB,EACtBzE,sBAAuB,EACvB0E,iBAAkB,EAClBC,2BAA4B,EAC5BvQ,uBAAwB,EACxB8G,iCAAkC,IAOpCoG,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,cAAeuf,EAAI5e,UAAU,MAUzCutB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,mBAAoB,CAC3BiS,kBAAmB,EACnBC,mBAAoB,IAWtBvD,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,SAAUyf,EAAIxe,OAAO,WACtB,CAAC,YAAawe,EAAIxe,OAAO,gBAa3BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAIxe,OAAO,oBACrB2tB,WAAY,IACZ9vB,SAAU,CACR,CAAC,oBAAqB2gB,EAAG,QACzB,CAAC,qBAAsB,qBAEzB1gB,KAAM,CACJ6yB,iBAAkBnS,EAAIxe,OAAO,gCA6BjCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,YAAayf,EAAIxe,OAAO,SACzB,CAAC,YAAawe,EAAIxe,OAAO,cACzB,CAAC,WAAYwe,EAAI1e,SAAS0e,EAAIxe,OAAO,eAAgB,IACrD,CAAC,MAAOwe,EAAIxe,OAAO,sBAOrBmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,2BAA4B,GAWtC2O,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,oBAAqB,CAC5BoS,gCAAiC,EACjCC,gCAAiC,EACjCC,mCAAoC,IAWtC3D,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,6BAA8B,CACtCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,QAASyf,EAAIxe,OAAO,WACrB,CAAC,MAAOwe,EAAIxe,OAAO,iCAarBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,8BA8CnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,gBAAiByf,EAAIxe,OAAO,WAC7B,CAAC,qBAAsBwe,EAAIxe,OAAO,SAClC,CAAC,WAAYwe,EAAIxe,OAAO,iBACxB,CAAC,kBAAmBwe,EAAIxe,OAAO,SAC/B,CAAC,iBAAkBwe,EAAIxe,OAAO,SAC9B,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,eAAgBwe,EAAIxe,OAAO,WAC5B,CAAC,SAAUwe,EAAIxe,OAAO,WACtB,CAAC,UAAWwe,EAAIxe,OAAO,WACvB,CAAC,cAAewe,EAAIxe,OAAO,WAC3B,CAAC,eAAgBwe,EAAIxe,OAAO,WAC5B,CAAC,WAAYwe,EAAI3e,MAAM2e,EAAIxe,OAAO,QAAS,IAC3C,CAAC,MAAOwe,EAAIxe,OAAO,sBAgBrBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,oBAAqB,CAC5BuS,qBAAsB,EACtBC,qBAAsB,EACtBC,0BAA2B,EAC3BC,yBAA0B,EAC1BC,mBAAoB,EACpBC,oBAAqB,EACrBC,iCAAkC,IAUpClE,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,aAAcyf,EAAIxe,OAAO,SAC1B,CAAC,cAAewe,EAAIxe,OAAO,WA0B7BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,qBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uBAAwB,oBACzB,CAAC,uBAAwB,cACzB,CAAC,4BAA6B,mBAC9B,CAAC,2BAA4B,kBAC7B,CAAC,qBAAsB,YACvB,CAAC,sBAAuB,aACxB,CAAC,mCAAoC,2BAEvCC,KAAM,CACJwzB,iBAAkB9S,EAAIxe,OAAO,UAC7BuxB,WAAY/S,EAAIxe,OAAO,UACvBwxB,gBAAiBhT,EAAIxe,OAAO,UAC5ByxB,eAAgBjT,EAAIxe,OAAO,UAC3B0xB,SAAUlT,EAAIxe,OAAO,UACrB2xB,UAAWnT,EAAIxe,OAAO,uBACtB4xB,uBAAwBpT,EAAIxe,OAAO,aAUvCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,eAAgByf,EAAI1e,SAAS0e,EAAIxe,OAAO,sBAAuB,eAelEmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kBAAmB,CAC1BqT,WAAY,EACZC,UAAW,EACXC,UAAW,EACXC,UAAW,IAWb7E,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAmBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,gBAAiByf,EAAIxe,OAAO,WAC7B,CAAC,MAAOwe,EAAIxe,OAAO,wBAiBrBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,cAAe,CACvBtB,SAAU8gB,EAAIxe,OAAO,mBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,YAAa,aACd,CAAC,YAAa,aACd,CAAC,YAAa,aACd,CAAC,YAAa,cAEhBC,KAAM,CACJm0B,UAAWzT,EAAIxe,OAAO,eACtBkyB,UAAW1T,EAAIxe,OAAO,aACtBmyB,UAAW3T,EAAIxe,OAAO,qBAa1BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,qBAAsB,CAC7B4T,+BAAgC,IAWlCjF,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,sCAAuC,CAChD,CAAC,UAAWyf,EAAIze,OAAOye,EAAIxe,OAAO,WAClC,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,uBAAwB,eAe3DmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,sBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iCAAkC,0BAErCC,KAAM,CACJu0B,sBAAuB7T,EAAIxe,OAAO,0CAYtCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,iBAENC,KAAM,CACJw0B,aAAc9T,EAAI1e,SAAS0e,EAAIxe,OAAO,kBAAmB,eAY7DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,qBAAsByf,EAAIxe,OAAO,SAClC,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,uBAAwB,eAW3DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,qBAAsByf,EAAIxe,OAAO,SAClC,CAAC,SAAUwe,EAAI1e,SAAS0e,EAAIxe,OAAO,oBAAqB,eAY1DmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,YAENC,KAAM,CACJy0B,QAAS/T,EAAIxe,OAAO,uBAYxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,kBAAmByf,EAAIxe,OAAO,SAC/B,CAAC,SAAUwe,EAAIxe,OAAO,wBAUxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,UAAWyf,EAAI1e,SAAS0e,EAAIxe,OAAO,yBAA0B,eAahEmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,6BAA8B,CACtCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,qBAEN1gB,KAAM,CACJ00B,iBAAkBhU,EAAIxe,OAAO,gCAsBjCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,YAAayf,EAAIxe,OAAO,WACzB,CAAC,QAASwe,EAAIxe,OAAO,mBACrB,CAAC,MAAOwe,EAAIxe,OAAO,iCAWrBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mCAAoC,CAC5CtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAmBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gCAAiC,CAC1C,CAAC,YAAayf,EAAIxe,OAAO,WACzB,CAAC,cAAewe,EAAIxe,OAAO,yBAC3B,CAAC,MAAOwe,EAAIxe,OAAO,uCAWrBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,8BAA+B,CACvCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAmBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,OAAQyf,EAAIxe,OAAO,SACpB,CAAC,SAAUwe,EAAIxe,OAAO,iBACtB,CAAC,MAAOwe,EAAIxe,OAAO,kCAWrBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,YAAayf,EAAIxe,OAAO,WACzB,CAAC,WAAYwe,EAAI1e,SAAS0e,EAAIxe,OAAO,eAAgB,eAWvDmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,aAAcyf,EAAI1e,SAAS0e,EAAIxe,OAAO,gBAAiB,aACxD,CAAC,iBAAkBwe,EAAIxe,OAAO,wBAWhCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,OAENC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,wBAcnBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,wBAAyB,CAChCiU,mBAAoB,EACpBC,mBAAoB,EACpBC,mBAAoB,EACpBC,iBAAkB,IAiBpBzF,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAIxe,OAAO,yBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,qBAAsB,WACvB,CAAC,qBAAsB,WACvB,CAAC,qBAAsB,WACvB,CAAC,mBAAoB,UAEvBC,KAAM,CACJ+0B,QAASrU,EAAIxe,OAAO,eACpB8yB,QAAStU,EAAIxe,OAAO,eACpB+yB,QAASvU,EAAIxe,OAAO,aACpBgzB,MAAOxU,EAAIxe,OAAO,kBAQtBmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,qBAAsBuf,EAAI1e,SAAS0e,EAAIxe,OAAO,qBAAsB,aAShFmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,UAAWyf,EAAIxe,OAAO,yBAWzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,YAAayf,EAAIxe,OAAO,uBACzB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,eAc3DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,kBAAmByf,EAAIxe,OAAO,uBAC/B,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,aACzD,CAAC,iBAAkBwe,EAAIxe,OAAO,yBAYhCmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,oBAAqB,CAC5ByU,OAAQ,EACRnU,SAAU,EACVoU,WAAY,IAWd/F,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,SAAUyf,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,aAC7C,CAAC,OAAQwe,EAAIxe,OAAO,YAetBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,OAENC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,sBA2BnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,aAAcwe,EAAIze,OAAOye,EAAIxe,OAAO,UACrC,CAAC,OAAQwe,EAAIxe,OAAO,sBACpB,CAAC,OAAQwe,EAAIxe,OAAO,wBAWtBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,2BAA4Byf,EAAItf,QACjC,CAAC,QAASsf,EAAIxe,OAAO,oBAuCvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,8BAA+B,CACxC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,uCAAwCwe,EAAIxe,OAAO,UACpD,CAAC,oCAAqCwe,EAAIxe,OAAO,UACjD,CAAC,iBAAkBwe,EAAIxe,OAAO,YAahCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,kCAoBnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,MAAOyf,EAAIxe,OAAO,8BACnB,CAAC,SAAUwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,aACrD,CAAC,cAAewe,EAAIxe,OAAO,UAC3B,CAAC,mBAAoBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,eAkBnEmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,kBAAmBwe,EAAIxe,OAAO,uBAC/B,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,aACzD,CAAC,iBAAkBwe,EAAIxe,OAAO,uBAC9B,CAAC,cAAewe,EAAIze,OAAOye,EAAIxe,OAAO,8BAWxCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oCAAqC,CAC9C,CAAC,cAAeyf,EAAIxe,OAAO,UAC3B,CAAC,SAAUwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,eAiBvDmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,cACJ,CAAC,EAAG,MACJ,CAAC,EAAG,MACJ,CAAC,EAAG,OAENC,KAAM,CACJ6uB,WAAYnO,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,YACtDqsB,GAAI7N,EAAIxe,OAAO,qBACfmvB,GAAI3Q,EAAIxe,OAAO,qBACfkvB,GAAI1Q,EAAIxe,OAAO,wBAanBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,SAAUyf,EAAIxe,OAAO,0BACtB,CAAC,gBAAiBwe,EAAIxe,OAAO,uBAC7B,CAAC,oBAAqBwe,EAAIxe,OAAO,sBAWnCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,UAAWyf,EAAIxe,OAAO,kBACvB,CAAC,UAAWwe,EAAIxe,OAAO,yBAuBzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,eAAgByf,EAAIxe,OAAO,6BAC5B,CAAC,QAASwe,EAAIxe,OAAO,mBACrB,CAAC,eAAgBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,yBAA0B,aACnE,CAAC,qBAAsBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,oBAAqB,aACpE,CAAC,UAAWwe,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,eAW1DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,qBAAsBwe,EAAIxe,OAAO,YAapCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,OAEN1gB,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,2BAqCnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,MAAOyf,EAAIxe,OAAO,uBACnB,CAAC,eAAgBwe,EAAIxe,OAAO,6BAC5B,CAAC,QAASwe,EAAIxe,OAAO,8BACrB,CAAC,eAAgBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,yBAA0B,aACnE,CAAC,qBAAsBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,oBAAqB,aACpE,CAAC,UAAWwe,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,aACxD,CAAC,4BAA6Bwe,EAAIxe,OAAO,WACzC,CAAC,6BAA8Bwe,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,aACrE,CAAC,iCAAkCwe,EAAI1e,SAAS0e,EAAIxe,OAAO,eAAgB,eAa7EmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,MACJ,CAAC,EAAG,OAENC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,qBACfqsB,GAAI7N,EAAIxe,OAAO,wBAenBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,YAAa,CACpB2U,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,IAWXpG,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,QAAS,CAClB,CAAC,OAAQyf,EAAIxe,OAAO,cACpB,CAAC,MAAOwe,EAAI9e,OAAO,QAUrBytB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,WAAY,CACrB,CAAC,cAAeyf,EAAIxe,OAAO,aAW7BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,cAAeyf,EAAIxe,OAAO,WAC3B,CAAC,WAAYwe,EAAIxe,OAAO,aAY1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,WAAY,CACrB,CAAC,SAAUyf,EAAIxe,OAAO,qBACtB,CAAC,aAAcwe,EAAIxe,OAAO,WAC1B,CAAC,MAAOwe,EAAIxe,OAAO,gBAkBrBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,QAAS,CAClB,CAAC,gBAAiByf,EAAIxe,OAAO,WAC7B,CAAC,iBAAkBwe,EAAIxe,OAAO,WAC9B,CAAC,oBAAqBwe,EAAIxe,OAAO,WACjC,CAAC,YAAawe,EAAIxe,OAAO,SACzB,CAAC,aAAcwe,EAAI9e,OAAO,MAC1B,CAAC,gBAAiB8e,EAAG,OACrB,CAAC,SAAUA,EAAIxe,OAAO,WACtB,CAAC,OAAQwe,EAAIxe,OAAO,aACpB,CAAC,QAASwe,EAAIxe,OAAO,cAOvBmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,6CAA8C,KASxD2O,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,OAAQ,CACjB,CAAC,QAASyf,EAAG,SAWf2O,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,aAAc,CACrBgV,KAAM,EACNC,KAAM,IAaRtG,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,cACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,OAAQ,QACT,CAAC,OAAQ,SAEXC,KAAM,CACJ41B,KAAMlV,EAAI7e,OAAO,GACjBg0B,KAAMnV,EAAI7e,OAAO,OAoBrBwtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,KAAMyf,EAAIxe,OAAO,kBAClB,CAAC,OAAQwe,EAAIxe,OAAO,WACpB,CAAC,cAAewe,EAAIxe,OAAO,aAuC7BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,cAAe,CACtBoV,SAAU,EACVC,KAAM,EACNC,SAAU,EACVC,SAAU,EACVC,MAAO,EACPC,SAAU,EACVC,MAAO,EACP1B,iBAAkB,GAClB2B,YAAa,EACbC,gBAAiB,EACjBC,aAAc,GACdC,WAAY,GACZC,YAAa,GACbC,MAAO,GACPC,cAAe,GACfC,eAAgB,GAChBC,SAAU,GACVC,iBAAkB,GAClBC,YAAa,GACbC,YAAa,KAWf3H,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,WAAY,CACrB,CAAC,OAAQyf,EAAIxe,OAAO,gBACpB,CAAC,UAAWwe,EAAIxe,OAAO,cAUzBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,2BAA4B,CACnCuW,eAAgB,IAWlB5H,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,4BAA6B,CACpCwW,yBAA0B,EAC1BC,yBAA0B,IAc5B9H,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,iBAAkByf,EAAIxe,OAAO,WAC9B,CAAC,iBAAkBwe,EAAIxe,OAAO,WAC9B,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,gBAAiBwe,EAAIxe,OAAO,qBAC7B,CAAC,cAAewe,EAAIxe,OAAO,+BAW7BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,6BAA8B,CACvC,CAAC,mBAAoByf,EAAIxe,OAAO,cAChC,CAAC,UAAWwe,EAAIxe,OAAO,2BAOzBmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,gBAAiBuf,EAAI5e,UAAU,OAa3CutB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,iBAAkByf,EAAIxe,OAAO,WAC9B,CAAC,iBAAkBwe,EAAIxe,OAAO,WAC9B,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,cAAewe,EAAIxe,OAAO,6BAC3B,CAAC,gBAAiBwe,EAAIxe,OAAO,oBAW/BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,8BAA+B,CACxC,CAAC,oBAAqByf,EAAIxe,OAAO,cACjC,CAAC,WAAYwe,EAAIxe,OAAO,4BA0B1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,KAAMyf,EAAIxe,OAAO,WAClB,CAAC,aAAcwe,EAAI9e,OAAO,MAC1B,CAAC,eAAgB8e,EAAIxe,OAAO,WAC5B,CAAC,kBAAmBwe,EAAIxe,OAAO,WAC/B,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,eAAgBwe,EAAIxe,OAAO,WAC5B,CAAC,mBAAoBwe,EAAIxe,OAAO,WAChC,CAAC,uBAAwBwe,EAAIxe,OAAO,WACpC,CAAC,0BAA2Bwe,EAAIxe,OAAO,WACvC,CAAC,uBAAwBwe,EAAIxe,OAAO,WACpC,CAAC,0BAA2Bwe,EAAIxe,OAAO,WACvC,CAAC,yBAA0Bwe,EAAIxe,OAAO,WACtC,CAAC,4BAA6Bwe,EAAIxe,OAAO,WACzC,CAAC,yBAA0Bwe,EAAIxe,OAAO,WACtC,CAAC,4BAA6Bwe,EAAIxe,OAAO,aAO3CmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,eAAgBuf,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,KAalEmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,eAAgByf,EAAIxe,OAAO,iBAC5B,CAAC,gBAAiBwe,EAAIxe,OAAO,iBAC7B,CAAC,wBAAyBwe,EAAIxe,OAAO,WACrC,CAAC,yBAA0Bwe,EAAIxe,OAAO,aAiBxCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,eAAgByf,EAAIxe,OAAO,iBAC5B,CAAC,gBAAiBwe,EAAIxe,OAAO,iBAC7B,CAAC,wBAAyBwe,EAAIxe,OAAO,WACrC,CAAC,yBAA0Bwe,EAAIxe,OAAO,WACtC,CAAC,sBAAuBwe,EAAIxe,OAAO,WACnC,CAAC,uBAAwBwe,EAAIxe,OAAO,aAatCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,6BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B,0BAC7B,CAAC,2BAA4B,2BAE/BC,KAAM,CACJo3B,uBAAwB1W,EAAIxe,OAAO,0BACnCm1B,uBAAwB3W,EAAIxe,OAAO,6BAQvCmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,4BAA6B,KAMvC2O,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,iBAAkBuf,EAAI1e,SAAS0e,EAAIxe,OAAO,QAASwe,EAAIxe,OAAO,+BAS1EmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,WAAYyf,EAAIxe,OAAO,qBAO1BmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,4BAA6B,KAMvC2O,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,iBAAkBuf,EAAI1e,SAAS0e,EAAIxe,OAAO,QAASwe,EAAIxe,OAAO,+BAS1EmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,WAAYyf,EAAIxe,OAAO,qBAwD1BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,eACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,WAAY,SACb,CAAC,QAAS,SACV,CAAC,OAAQ,QACT,CAAC,WAAY,YACb,CAAC,WAAY2gB,EAAG,QAChB,CAAC,QAAS,SACV,CAAC,WAAY,aACb,CAAC,QAAS,SACV,CAAC,mBAAoB,oBACrB,CAAC,cAAe,eAChB,CAAC,gBAAiB,8BAClB,CAAC,iBAAkB,+BACnB,CAAC,kBAAmB,YACpB,CAAC,eAAgB,QACjB,CAAC,aAAc,YACf,CAAC,cAAe,mBAChB,CAAC,WAAY,mBACb,CAAC,mBAAoB,2BACrB,CAAC,cAAe,eAChB,CAAC,cAAe,gBAElB1gB,KAAM,CACJiE,MAAOyc,EAAIxe,OAAO,SAClBw0B,MAAOhW,EAAIxe,OAAO,SAClB6zB,KAAMrV,EAAIxe,OAAO,QACjB8zB,SAAUtV,EAAIxe,OAAO,YACrBg0B,MAAOxV,EAAI1e,SAAS0e,EAAIxe,OAAO,eAAgB,KAC/Co1B,UAAW5W,EAAIxe,OAAO,WACtBk0B,MAAO1V,EAAIxe,OAAO,kBAClBwyB,iBAAkBhU,EAAIxe,OAAO,6BAC7Bm0B,YAAa3V,EAAIxe,OAAO,uBACxBq1B,2BAA4B7W,EAAIxe,OAAO,8BACvCs1B,4BAA6B9W,EAAIxe,OAAO,+BACxCu1B,SAAU/W,EAAIxe,OAAO,WACrBw1B,KAAMhX,EAAIxe,OAAO,gBACjByrB,SAAUjN,EAAIxe,OAAO,eACrBy1B,gBAAiBjX,EAAIxe,OAAO,UAC5B01B,gBAAiBlX,EAAIxe,OAAO,YAC5B21B,wBAAyBnX,EAAIxe,OAAO,oBACpC60B,YAAarW,EAAIxe,OAAO,eACxB80B,YAAatW,EAAIxe,OAAO,kBAa5BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,WAAYyf,EAAIxe,OAAO,WACxB,CAAC,UAAWwe,EAAIxe,OAAO,mBACvB,CAAC,MAAOwe,EAAIxe,OAAO,oBAgBrBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,uBAAwB,CAChCtB,SAAU8gB,EAAIxe,OAAO,UACrB2tB,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG,OAENC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,6BAQnBmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,iBAAkB,KAU5B2O,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,0BAA2B,CACnCtB,SAAU8gB,EAAIxe,OAAO,qBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC,oBAEnCC,KAAM,CACJkyB,gBAAiBxR,EAAIxe,OAAO,6CAYhCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,KAAMyf,EAAIxe,OAAO,WAClB,CAAC,UAAWwe,EAAIxe,OAAO,cAiBzBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,eAAgB,CACxBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iBAAkB,WACnB,CAAC,sBAAuB,aAE1BC,KAAM,CACJ8gB,QAASJ,EAAIxe,OAAO,WACpB41B,SAAUpX,EAAIxe,OAAO,2BAYzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,OAAQyf,EAAIxe,OAAO,kBACpB,CAAC,YAAawe,EAAIxe,OAAO,gBAoC3BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxBqX,cAAe,EACfC,QAAS,EACTC,yBAA0B,EAC1BC,gBAAiB,EACjBC,uBAAwB,EACxBC,WAAY,EACZC,YAAa,EACbC,WAAY,EACZC,aAAc,EACdC,UAAW,EACXC,WAAY,GACZC,aAAc,GACdC,eAAgB,GAChBC,sBAAuB,GACvBC,uBAAwB,GACxBC,sBAAuB,GACvBC,8BAA+B,GAC/BC,4BAA6B,GAC7BC,kBAAmB,GACnBC,SAAU,GACVC,yBAA0B,GAC1BC,kBAAmB,GACnBC,qBAAsB,GACtBC,sBAAuB,GACvBC,mBAAoB,GACpBC,mBAAoB,GACpBC,iBAAkB,KAWpBpK,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,cAAeyf,EAAIxe,OAAO,cAC3B,CAAC,kBAAmBwe,EAAIxe,OAAO,YAYjCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,cAAeyf,EAAIxe,OAAO,iBAC3B,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,SAAUwe,EAAIxe,OAAO,YAmBxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,6BAA8B,CACvC,CAAC,YAAayf,EAAIxe,OAAO,UACzB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,cAAewe,EAAIxe,OAAO,iBAC3B,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,MAmB7CmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,YAAayf,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,cAAewe,EAAIxe,OAAO,iBAC3B,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,MAgB7CmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,UAAWyf,EAAIxe,OAAO,UACvB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,UAAWwe,EAAIxe,OAAO,YAiBzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,UAAWyf,EAAIxe,OAAO,UACvB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,UAAWwe,EAAIxe,OAAO,YAazBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,UAAWyf,EAAIxe,OAAO,UACvB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,QAASwe,EAAIxe,OAAO,YAyBvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,gBAAiByf,EAAIze,OAAOye,EAAIxe,OAAO,eACxC,CAAC,aAAcwe,EAAIze,OAAOye,EAAIxe,OAAO,YACrC,CAAC,WAAYwe,EAAIze,OAAOye,EAAIxe,OAAO,YACnC,CAAC,eAAgBwe,EAAIze,OAAOye,EAAIxe,OAAO,YACvC,CAAC,eAAgBwe,EAAIze,OAAOye,EAAIxe,OAAO,YACvC,CAAC,eAAgBwe,EAAIze,OAAOye,EAAIxe,OAAO,YACvC,CAAC,gBAAiBwe,EAAIze,OAAOye,EAAIxe,OAAO,YACxC,CAAC,aAAcwe,EAAIze,OAAOye,EAAIxe,OAAO,cACrC,CAAC,SAAUwe,EAAIze,OAAOye,EAAIxe,OAAO,cAsBnCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAIxe,OAAO,aACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kBAAmB2gB,EAAG,QACvB,CAAC,2BAA4B,aAC7B,CAAC,4BAA6B,cAC9B,CAAC,qBAAsB,kBAEzB1gB,KAAM,CACJikB,UAAWvD,EAAIxe,OAAO,aACtBgiB,WAAYxD,EAAIxe,OAAO,cACvB0uB,cAAelQ,EAAIxe,OAAO,8BAc9BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,OAAQyf,EAAIxe,OAAO,qBACpB,CAAC,QAASwe,EAAIxe,OAAO,YAcvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,UAAWyf,EAAIxe,OAAO,cACvB,CAAC,QAASwe,EAAIxe,OAAO,cACrB,CAAC,YAAawe,EAAIxe,OAAO,aAW3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,WAAYyf,EAAIxe,OAAO,aACxB,CAAC,YAAawe,EAAIze,OAAOye,EAAIxe,OAAO,iBAUtCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,SAAUyf,EAAIxe,OAAO,qBAYxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,QAASyf,EAAIxe,OAAO,UACrB,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,YAAawe,EAAI1e,SAAS0e,EAAIxe,OAAO,YAAa,OAUrDmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,YAAayf,EAAIxe,OAAO,yBAU3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kCAAmC,CAC5C,CAAC,cAAeyf,EAAIxe,OAAO,gBAW7BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,wBAAyB,CAChCgZ,6BAA8B,EAC9BC,wBAAyB,IAW3BtK,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,YAAayf,EAAIxe,OAAO,cACzB,CAAC,YAAawe,EAAIxe,OAAO,gBAiB3BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,sBAAuB,CAC/BtB,SAAU8gB,EAAIxe,OAAO,yBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC,aACjC,CAAC,0BAA2B,WAE9BC,KAAM,CACJ45B,UAAWlZ,EAAIxe,OAAO,aACtB8lB,OAAQtH,EAAIxe,OAAO,gCAavBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,QAASyf,EAAIxe,OAAO,UACrB,CAAC,OAAQwe,EAAIxe,OAAO,iBACpB,CAAC,SAAUwe,EAAIxe,OAAO,YAUxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,6BAA8B,CACvC,CAAC,YAAayf,EAAIxe,OAAO,yBAc3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,UAAWyf,EAAIxe,OAAO,cACvB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,aAAcwe,EAAIxe,OAAO,WAC1B,CAAC,WAAYwe,EAAIxe,OAAO,aAO1BmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,yBAA0B,IAapC2O,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,kBAAmByf,EAAIxe,OAAO,WAC/B,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,WAAYwe,EAAIxe,OAAO,UACxB,CAAC,WAAYwe,EAAIxe,OAAO,YAa1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,0BAA2B,CACpC,CAAC,kBAAmByf,EAAIxe,OAAO,WAC/B,CAAC,SAAUwe,EAAIxe,OAAO,UACtB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,aAAcwe,EAAIxe,OAAO,YAY5BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,mBAAoB,CAC3BmZ,+BAAgC,EAChCC,+BAAgC,EAChCC,mCAAoC,IAWtC1K,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,yBAA0B,CACjCsZ,8BAA+B,EAC/BzX,4BAA6B,IAW/B8M,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gCAAiC,CAC1C,CAAC,UAAWyf,EAAIxe,OAAO,cACvB,CAAC,OAAQwe,EAAIxe,OAAO,cAiBtBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gCAAiC,eAClC,CAAC,8BAA+B,cAElCC,KAAM,CACJi6B,YAAavZ,EAAIxe,OAAO,iCACxBg4B,UAAWxZ,EAAIxe,OAAO,YAY1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,qBAAsByf,EAAIxe,OAAO,uBAClC,CAAC,aAAcwe,EAAIxe,OAAO,yBAW5BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,kBAAmByf,EAAIxe,OAAO,cAC/B,CAAC,eAAgBwe,EAAIxe,OAAO,aAC5B,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,eAe7CmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,eAAgB,CACxBtB,SAAU8gB,EAAIxe,OAAO,oBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iCAAkC,kBACnC,CAAC,iCAAkC,kBACnC,CAAC,qCAAsC,SAEzCC,KAAM,CACJm6B,eAAgBzZ,EAAIxe,OAAO,sBAC3Bk4B,eAAgB1Z,EAAIxe,OAAO,sBAC3Bm4B,KAAM3Z,EAAI5e,eAYdutB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gCAAiC,CACxC4Z,wCAAyC,EACzCC,kDAAmD,IAarDlL,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAIxe,OAAO,iCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,0CAA2C,cAC5C,CAAC,oDAAqD,yBAExDC,KAAM,CACJw6B,WAAY9Z,EAAIxe,OAAO,sBACvBu4B,qBAAsB/Z,EAAIxe,OAAO,yBAYrCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,8BAA+B,CACxC,CAAC,WAAYyf,EAAIxe,OAAO,8BACxB,CAAC,iBAAkBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,+BAAgC,eAa7EmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,UAAWyf,EAAIxe,OAAO,cACvB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,4BAA6Bwe,EAAIxe,OAAO,WACzC,CAAC,YAAawe,EAAIxe,OAAO,YAW3BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,yBAA0B,CACjCga,gCAAiC,EACjC5R,0BAA2B,IAa7BuG,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kCAAmC2gB,EAAG,QACvC,CAAC,4BAA6B,YAEhC1gB,KAAM,CACJggB,QAASU,EAAIxe,OAAO,gCAYxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,cAAeyf,EAAIxe,OAAO,uBAC3B,CAAC,iBAAkBwe,EAAIxe,OAAO,kCAahCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,eAAgByf,EAAIxe,OAAO,iBAC5B,CAAC,OAAQwe,EAAI1e,SAAS0e,EAAIxe,OAAO,6BAA8B,eAWjEmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,WAAYwe,EAAIxe,OAAO,aAU1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,MAAOyf,EAAIxe,OAAO,qBA+DrBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gBAAiB,mBAClB,CAAC,UAAW,aACZ,CAAC,2BAA4B,8BAC7B,CAAC,kBAAmB,qBACpB,CAAC,yBAA0B,4BAC3B,CAAC,aAAc,gBACf,CAAC,cAAe,iBAChB,CAAC,aAAc,gBACf,CAAC,eAAgB,eACjB,CAAC,YAAa2gB,EAAG,QACjB,CAAC,aAAc,gBACf,CAAC,eAAgB,kBACjB,CAAC,iBAAkB,oBACnB,CAAC,wBAAyB,2BAC1B,CAAC,yBAA0B,4BAC3B,CAAC,wBAAyB,2BAC1B,CAAC,gCAAiC,mCAClC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,oBAAqB,uBACtB,CAAC,WAAY,cACb,CAAC,2BAA4B,8BAC7B,CAAC,oBAAqB,uBACtB,CAAC,uBAAwB,0BACzB,CAAC,wBAAyB,2BAC1B,CAAC,qBAAsB,wBACvB,CAAC,qBAAsB,wBACvB,CAAC,mBAAoB,uBAEvB1gB,KAAM,CACJ26B,gBAAiBja,EAAIxe,OAAO,mBAC5B04B,UAAWla,EAAIxe,OAAO,aACtB24B,2BAA4Bna,EAAIxe,OAAO,8BACvC44B,kBAAmBpa,EAAIxe,OAAO,qBAC9B64B,yBAA0Bra,EAAIxe,OAAO,4BACrC84B,aAActa,EAAIxe,OAAO,gBACzB+4B,cAAeva,EAAIxe,OAAO,iBAC1Bg5B,aAAcxa,EAAIxe,OAAO,gBACzB0oB,YAAalK,EAAIxe,OAAO,gBACxBi5B,aAAcza,EAAIxe,OAAO,gBACzBk5B,eAAgB1a,EAAIxe,OAAO,kBAC3Bm5B,iBAAkB3a,EAAIxe,OAAO,oBAC7Bo5B,wBAAyB5a,EAAIxe,OAAO,2BACpCq5B,yBAA0B7a,EAAIxe,OAAO,4BACrCs5B,wBAAyB9a,EAAIxe,OAAO,2BACpCu5B,gCAAiC/a,EAAIxe,OAAO,mCAC5Cw5B,oBAAqBhb,EAAIxe,OAAO,uBAChCy5B,WAAYjb,EAAIxe,OAAO,cACvB05B,2BAA4Blb,EAAIxe,OAAO,8BACvC25B,oBAAqBnb,EAAIxe,OAAO,uBAChC45B,uBAAwBpb,EAAIxe,OAAO,0BACnC65B,wBAAyBrb,EAAIxe,OAAO,2BACpC85B,qBAAsBtb,EAAIxe,OAAO,wBACjC+5B,qBAAsBvb,EAAIxe,OAAO,wBACjCg6B,mBAAoBxb,EAAIxe,OAAO,yBAyEnCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,YAAa,CACtB,CAAC,gBAAiByf,EAAIze,OAAOye,EAAIxe,OAAO,kBACxC,CAAC,OAAQwe,EAAIxe,OAAO,oBAYtBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,gBAAiByf,EAAIxe,OAAO,cAC7B,CAAC,SAAUwe,EAAIxe,OAAO,mBACtB,CAAC,QAASwe,EAAIxe,OAAO,aAcvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,gBAAiByf,EAAIxe,OAAO,cAC7B,CAAC,SAAUwe,EAAIxe,OAAO,mBACtB,CAAC,QAASwe,EAAIxe,OAAO,WACrB,CAAC,kBAAmBwe,EAAIxe,OAAO,WAC/B,CAAC,QAASwe,EAAIxe,OAAO,YAWvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,YAAayf,EAAIxe,OAAO,SACzB,CAAC,qBAAsBwe,EAAIxe,OAAO,yBAapCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qCAAsC,CAC/C,CAAC,YAAayf,EAAIxe,OAAO,SACzB,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,4BAA6Bwe,EAAIxe,OAAO,WACzC,CAAC,aAAcwe,EAAIxe,OAAO,kCAuC5BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,gBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,mBAAoB,eACrB,CAAC,6BAA8B,YAC/B,CAAC,yBAA0B,cAC3B,CAAC,mCAAoC,yBAEvCC,KAAM,CACJm8B,YAAazb,EAAIxe,OAAO,6BACxBk6B,SAAU1b,EAAIxe,OAAO,0BACrB+e,WAAYP,EAAIxe,OAAO,4BACvBm6B,qBAAsB3b,EAAIxe,OAAO,yCAerCmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,WAAY,CACnB4b,SAAU,EACVC,SAAU,EACVC,OAAQ,EACRC,SAAU,EACVC,WAAY,IAmBdrN,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,OAAQ,CAChBtB,SAAU8gB,EAAIxe,OAAO,YACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,WAAY2gB,EAAG,QAChB,CAAC,WAAY,QACb,CAAC,SAAU,MACX,CAAC,WAAY,QACb,CAAC,aAAc,YAEjB1gB,KAAM,CACJ28B,KAAMjc,EAAI9e,OAAO,IACjBg7B,GAAIlc,EAAIxe,OAAO,UACf8f,KAAMtB,EAAIxe,OAAO,QACjB26B,QAASnc,EAAIxe,OAAO,WAYxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,UAAWyf,EAAIxe,OAAO,cACvB,CAAC,UAAWwe,EAAIxe,OAAO,gBAWzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,YAAayf,EAAIxe,OAAO,WACzB,CAAC,YAAawe,EAAIxe,OAAO,aAsC3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,aAAcyf,EAAIze,OAAOye,EAAIxe,OAAO,gBACrC,CAAC,eAAgBwe,EAAIze,OAAOye,EAAIxe,OAAO,kBACvC,CAAC,YAAawe,EAAIze,OAAOye,EAAIxe,OAAO,oBACpC,CAAC,YAAawe,EAAIxe,OAAO,aACzB,CAAC,kBAAmBwe,EAAIxe,OAAO,WAC/B,CAAC,eAAgBwe,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,MAYzDmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,mBAAoB,CAC3Boc,YAAa,EACbC,YAAa,EACbC,UAAW,IAeb3N,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,oBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,cAAe2gB,EAAG,QACnB,CAAC,cAAe,cAChB,CAAC,YAAa,OAEhB1gB,KAAM,CACJi9B,WAAYvc,EAAIxe,OAAO,cACvBmvB,GAAI3Q,EAAIxe,OAAO,sBAYnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,WAAYyf,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,aACnD,CAAC,YAAawe,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,eAkBtDmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,YAAayf,EAAIxe,OAAO,oBACzB,CAAC,eAAgBwe,EAAIxe,OAAO,WAC5B,CAAC,YAAawe,EAAIxe,OAAO,WACzB,CAAC,aAAcwe,EAAIxe,OAAO,aAqB5BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,YAAawe,EAAIxe,OAAO,qBACzB,CAAC,cAAewe,EAAIxe,OAAO,YAW7BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAqBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,uBAAwByf,EAAIxe,OAAO,YACpC,CAAC,MAAOwe,EAAIxe,OAAO,WACnB,CAAC,SAAUwe,EAAIxe,OAAO,mBACtB,CAAC,aAAcwe,EAAIze,OAAOye,EAAIxe,OAAO,gBACrC,CAAC,OAAQwe,EAAIxe,OAAO,SACpB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAcwe,EAAIxe,OAAO,oBAChE,CAAC,MAAOwe,EAAIxe,OAAO,uBAarBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,KAAMyf,EAAIxe,OAAO,kBAClB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,sBAAuB,OAahEmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,QACP,CAAC,EAAG,gBAEN1gB,KAAM,CACJk9B,YAAaxc,EAAIxe,OAAO,6BAmC5BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,gBAAiByf,EAAIxe,OAAO,iBAC7B,CAAC,MAAOwe,EAAIxe,OAAO,WACnB,CAAC,SAAUwe,EAAIxe,OAAO,mBACtB,CAAC,OAAQwe,EAAIxe,OAAO,kBACpB,CAAC,OAAQwe,EAAIxe,OAAO,SACpB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAcwe,EAAIxe,OAAO,oBAChE,CAAC,MAAOwe,EAAIxe,OAAO,qBAarBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,KAAMyf,EAAIxe,OAAO,gBAClB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,sBAAuB,OAWhEmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAIxe,OAAO,gBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iBAAkB,OAErBC,KAAM,CACJuuB,GAAI7N,EAAIxe,OAAO,4BAYnBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,wBAAyB,CACjCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAuBFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,YAAayf,EAAIxe,OAAO,iBACzB,CAAC,MAAOwe,EAAIxe,OAAO,UACnB,CAAC,UAAWwe,EAAIxe,OAAO,8BACvB,CAAC,MAAOwe,EAAIxe,OAAO,4BAarBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,6BAA8B,CACvC,CAAC,KAAMyf,EAAIxe,OAAO,uBAClB,CAAC,aAAcwe,EAAI1e,SAAS0e,EAAIxe,OAAO,sBAAuB,OAehEmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,sBAAuB,CAC/BtB,SAAU8gB,EAAIxe,OAAO,gBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,mBAAoB,MACrB,CAAC,iBAAkB,MACnB,CAAC,wBAAyB,YAE5BC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,yBACfqsB,GAAI7N,EAAIxe,OAAO,yBACfi7B,QAASzc,EAAIxe,OAAO,iCAexBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,+CAAgD,CACxDtB,SAAU8gB,EAAIxe,OAAO,gBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iBAAkB,MACnB,CAAC,wBAAyB,YAE5BC,KAAM,CACJiuB,GAAIvN,EAAIxe,OAAO,eACfi7B,QAASzc,EAAIxe,OAAO,yBAoBxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,8BAA+B,CACxC,CAAC,YAAayf,EAAIxe,OAAO,SACzB,CAAC,oBAAqBwe,EAAIxe,OAAO,mDAYnCmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxB0c,gBAAiB,EACjBC,uBAAwB,EACxBC,2BAA4B,IAoB9BjO,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,gBAAiByf,EAAIxe,OAAO,YAC7B,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,cAAewe,EAAIxe,OAAO,UAC3B,CAAC,eAAgBwe,EAAIxe,OAAO,YAoB9BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,iBAAkB,CAC3B,CAAC,WAAYyf,EAAIxe,OAAO,cACxB,CAAC,UAAWwe,EAAIxe,OAAO,UACvB,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,cAAewe,EAAIxe,OAAO,UAC3B,CAAC,eAAgBwe,EAAIxe,OAAO,YAkB9BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,kBAAmByf,EAAIxe,OAAO,WAC/B,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,cAAewe,EAAIxe,OAAO,UAC3B,CAAC,eAAgBwe,EAAIxe,OAAO,YAe9BmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kBAAmB,MACpB,CAAC,yBAA0B,aAC3B,CAAC,6BAA8B,kBAEjCC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,oBACfq7B,UAAW7c,EAAIxe,OAAO,kBACtB0uB,cAAelQ,EAAIxe,OAAO,yBAmB9BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,0BAA2B,CAClC8c,qBAAsB,EACtBC,wBAAyB,EACzBC,0BAA2B,EAC3BC,yBAA0B,EAC1BC,2BAA4B,IAgB9BvO,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,sBAAuB,CAC/BtB,SAAU8gB,EAAIxe,OAAO,2BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uBAAwB2gB,EAAG,QAC5B,CAAC,yBAA0BA,EAAG,QAC9B,CAAC,2BAA4BA,EAAG,QAChC,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,4BAA6BA,EAAG,SAEnC1gB,KAAM,CACN,IAsBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,oBAAqB,CAC5Bmd,eAAgB,EAChBC,kBAAmB,EACnBC,oBAAqB,EACrBC,mBAAoB,EACpBC,yBAA0B,EAC1BC,sBAAuB,EACvBC,gBAAiB,EACjBC,sBAAuB,EACvBC,iBAAkB,EAClBC,iBAAkB,IAqBpBjP,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,qBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,iBAAkB2gB,EAAG,QACtB,CAAC,mBAAoBA,EAAG,QACxB,CAAC,qBAAsBA,EAAG,QAC1B,CAAC,oBAAqBA,EAAG,QACzB,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,iBAAkBA,EAAG,QACtB,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,kBAAmBA,EAAG,QACvB,CAAC,kBAAmBA,EAAG,SAEzB1gB,KAAM,CACN,IAkCFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,qCAAsC,CAC7C6d,gCAAiC,EACjCC,mCAAoC,EACpCC,qCAAsC,EACtCC,oCAAqC,EACrCC,0CAA2C,EAC3CC,uCAAwC,EACxCC,iCAAkC,EAClCC,uCAAwC,EACxCC,kCAAmC,EACnCC,kCAAmC,EACnCC,sCAAuC,GACvCC,wCAAyC,GACzCC,qCAAsC,KAYxC9P,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,cAAeyf,EAAIxe,OAAO,cAC3B,CAAC,QAASwe,EAAIxe,OAAO,UACrB,CAAC,SAAUwe,EAAIxe,OAAO,YAWxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wCAAyC,CAClD,CAAC,SAAUyf,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,aACjD,CAAC,OAAQwe,EAAIxe,OAAO,0BA+BtBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iCAAkC,CAC1CtB,SAAU8gB,EAAIxe,OAAO,sCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kCAAmC,WACpC,CAAC,oCAAqC2gB,EAAG,QACzC,CAAC,sCAAuCA,EAAG,QAC3C,CAAC,qCAAsCA,EAAG,QAC1C,CAAC,2CAA4CA,EAAG,QAChD,CAAC,wCAAyCA,EAAG,QAC7C,CAAC,kCAAmCA,EAAG,QACvC,CAAC,wCAAyCA,EAAG,QAC7C,CAAC,mCAAoCA,EAAG,QACxC,CAAC,mCAAoC,YACrC,CAAC,uCAAwCA,EAAG,QAC5C,CAAC,yCAA0CA,EAAG,QAC9C,CAAC,sCAAuCA,EAAG,SAE7C1gB,KAAM,CACJo/B,QAAS1e,EAAIxe,OAAO,yCACpBm9B,SAAU3e,EAAIxe,OAAO,YAkCzBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kCAAmC,CAC1C4e,6BAA8B,EAC9BC,gCAAiC,EACjCC,kCAAmC,EACnCC,iCAAkC,EAClCC,uCAAwC,EACxCC,oCAAqC,EACrCC,8BAA+B,EAC/BC,oCAAqC,EACrCC,+BAAgC,EAChCC,+BAAgC,EAChCC,mCAAoC,GACpCC,qCAAsC,GACtCC,mCAAoC,KAWtC7Q,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qCAAsC,CAC/C,CAAC,SAAUyf,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,aACjD,CAAC,OAAQwe,EAAIxe,OAAO,0BA8BtBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,8BAA+B,CACvCtB,SAAU8gB,EAAIxe,OAAO,mCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC,WACjC,CAAC,iCAAkC2gB,EAAG,QACtC,CAAC,mCAAoCA,EAAG,QACxC,CAAC,kCAAmCA,EAAG,QACvC,CAAC,wCAAyCA,EAAG,QAC7C,CAAC,qCAAsCA,EAAG,QAC1C,CAAC,+BAAgCA,EAAG,QACpC,CAAC,qCAAsCA,EAAG,QAC1C,CAAC,gCAAiCA,EAAG,QACrC,CAAC,gCAAiC,YAClC,CAAC,oCAAqCA,EAAG,QACzC,CAAC,sCAAuCA,EAAG,QAC3C,CAAC,oCAAqCA,EAAG,SAE3C1gB,KAAM,CACJo/B,QAAS1e,EAAIxe,OAAO,sCACpBm9B,SAAU3e,EAAIxe,OAAO,YAiCzBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,4BAA6B,CACpCyf,uBAAwB,EACxBC,0BAA2B,EAC3BC,4BAA6B,EAC7BC,2BAA4B,EAC5BC,kCAAmC,EACnCC,iCAAkC,EAClCC,yBAA0B,EAC1BC,4BAA6B,EAC7BC,0BAA2B,EAC3BC,6BAA8B,EAC9BC,4BAA6B,GAC7BC,yBAA0B,GAC1BC,2BAA4B,KAY9B1R,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,oBAAqB,CAC5BsgB,mBAAoB,EACpBC,mBAAoB,EACpBC,mBAAoB,IActB7R,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gCAAiC,CACzCtB,SAAU8gB,EAAIxe,OAAO,qBACrB2tB,WAAY,SACZ9vB,SAAU,CACR,CAAC,qBAAsB,SACvB,CAAC,qBAAsB,SACvB,CAAC,qBAAsB2gB,EAAG,SAE5B1gB,KAAM,CACJ0wB,MAAOhQ,EAAIxe,OAAO,iBAsBtBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,gBAAiByf,EAAI1e,SAAS0e,EAAIxe,OAAO,aAAc,aACxD,CAAC,QAASwe,EAAIxe,OAAO,oCAwBvBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,wBAAyB,CACjCtB,SAAU8gB,EAAIxe,OAAO,6BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,yBAA0B,WAC3B,CAAC,2BAA4B2gB,EAAG,QAChC,CAAC,6BAA8BA,EAAG,QAClC,CAAC,4BAA6BA,EAAG,QACjC,CAAC,mCAAoCA,EAAG,QACxC,CAAC,kCAAmCA,EAAG,QACvC,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,6BAA8BA,EAAG,QAClC,CAAC,2BAA4BA,EAAG,QAChC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,6BAA8BA,EAAG,QAClC,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,4BAA6BA,EAAG,SAEnC1gB,KAAM,CACJo/B,QAAS1e,EAAIxe,OAAO,+BA8BxBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,2BAA4B,CACnCygB,sBAAuB,EACvBC,yBAA0B,EAC1BC,2BAA4B,EAC5BC,0BAA2B,EAC3BC,iCAAkC,EAClCC,gCAAiC,EACjCC,wBAAyB,EACzBC,2BAA4B,EAC5BC,yBAA0B,EAC1BC,4BAA6B,EAC7BC,2BAA4B,GAC5BC,wBAAyB,GACzBC,0BAA2B,KAwB7B1S,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,uBAAwB,CAChCtB,SAAU8gB,EAAIxe,OAAO,4BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,wBAAyB,WAC1B,CAAC,0BAA2B2gB,EAAG,QAC/B,CAAC,4BAA6BA,EAAG,QACjC,CAAC,2BAA4BA,EAAG,QAChC,CAAC,kCAAmCA,EAAG,QACvC,CAAC,iCAAkCA,EAAG,QACtC,CAAC,yBAA0BA,EAAG,QAC9B,CAAC,4BAA6BA,EAAG,QACjC,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,6BAA8BA,EAAG,QAClC,CAAC,4BAA6BA,EAAG,QACjC,CAAC,yBAA0BA,EAAG,QAC9B,CAAC,2BAA4BA,EAAG,SAElC1gB,KAAM,CACJo/B,QAAS1e,EAAIxe,OAAO,+BAwBxBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,uBAAwB,CAC/BshB,kBAAmB,EACnBC,sBAAuB,EACvBC,0BAA2B,EAC3BC,oBAAqB,EACrBC,4BAA6B,EAC7BC,sBAAuB,EACvBC,uBAAwB,EACxBC,+BAAgC,EAChCC,qBAAsB,EACtBC,6BAA8B,EAC9BC,iCAAkC,KAsBpCrT,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAIxe,OAAO,wBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,oBAAqB2gB,EAAG,QACzB,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,2BAA4BA,EAAG,QAChC,CAAC,qBAAsBA,EAAG,QAC1B,CAAC,6BAA8BA,EAAG,QAClC,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,gCAAiCA,EAAG,QACrC,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,8BAA+BA,EAAG,QACnC,CAAC,kCAAmCA,EAAG,SAEzC1gB,KAAM,CACN,IAwBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,wBAAyB,CAChCiiB,mBAAoB,EACpBC,sBAAuB,EACvBC,qBAAsB,EACtBC,yBAA0B,EAC1BC,uBAAwB,EACxBC,2BAA4B,EAC5BC,6BAA8B,EAC9BC,yBAA0B,EAC1BC,uCAAwC,IAoB1C9T,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAIxe,OAAO,yBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,qBAAsB2gB,EAAG,QAC1B,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,4BAA6BA,EAAG,QACjC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,0BAA2BA,EAAG,QAC/B,CAAC,wCAAyCA,EAAG,SAE/C1gB,KAAM,CACN,IAoBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,uBAAwB,CAC/B0iB,kBAAmB,EACnBC,qBAAsB,EACtBC,uBAAwB,EACxBC,4BAA6B,EAC7BC,sBAAuB,EACvBC,0BAA2B,EAC3BC,sBAAuB,IAkBzBrU,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAIxe,OAAO,wBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,oBAAqB2gB,EAAG,QACzB,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,6BAA8BA,EAAG,QAClC,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,2BAA4BA,EAAG,QAChC,CAAC,uBAAwBA,EAAG,SAE9B1gB,KAAM,CACN,IAoBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,yBAA0B,CACjCijB,oBAAqB,EACrBC,uBAAwB,EACxBC,uBAAwB,EACxBC,0BAA2B,EAC3BC,2BAA4B,EAC5BC,0BAA2B,EAC3BC,sBAAuB,EACvBC,uBAAwB,IAmB1B7U,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,sBAAuB,wBACxB,CAAC,wBAAyB2gB,EAAG,QAC7B,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,2BAA4BA,EAAG,QAChC,CAAC,4BAA6BA,EAAG,QACjC,CAAC,2BAA4BA,EAAG,QAChC,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,wBAAyBA,EAAG,SAE/B1gB,KAAM,CACJmkC,qBAAsBzjB,EAAIxe,OAAO,YAcrCmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,sBAAuB,CAC9B0jB,iBAAkB,EAClBC,kBAAmB,IAWrBhV,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,cAAeyf,EAAIxe,OAAO,cAC3B,CAAC,SAAUwe,EAAIxe,OAAO,YAaxBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAIxe,OAAO,uBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,mBAAoB,WACrB,CAAC,mBAAoB2gB,EAAG,SAE1B1gB,KAAM,CACJskC,QAAS5jB,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,eAmBzDmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,uBAAwB,CAC/B6jB,kBAAmB,EACnBC,2BAA4B,EAC5BC,wBAAyB,EACzBC,sBAAuB,EACvBC,uBAAwB,IAgB1BtV,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,mBAAoB,CAC5BtB,SAAU8gB,EAAIxe,OAAO,wBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,oBAAqB2gB,EAAG,QACzB,CAAC,4BAA6BA,EAAG,QACjC,CAAC,yBAA0BA,EAAG,QAC9B,CAAC,uBAAwBA,EAAG,QAC5B,CAAC,wBAAyBA,EAAG,SAE/B1gB,KAAM,CACN,IAaFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,yBAA0B,CACjCkkB,oBAAqB,EACrBC,oBAAqB,IAavBxV,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,sBAAuB2gB,EAAG,QAC3B,CAAC,qBAAsBA,EAAG,SAE5B1gB,KAAM,CACN,IAeFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,mCAAoC,CAC3CokB,8BAA+B,EAC/BC,iCAAkC,EAClCC,kCAAmC,EACnCC,+BAAgC,EAChCC,qCAAsC,EACtCC,mCAAoC,IAkBtC9V,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,+BAAgC,CACxCtB,SAAU8gB,EAAIxe,OAAO,oCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gCAAiC,aAClC,CAAC,kCAAmC2gB,EAAG,QACvC,CAAC,mCAAoCA,EAAG,QACxC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,sCAAuCA,EAAG,QAC3C,CAAC,oCAAqCA,EAAG,SAE3C1gB,KAAM,CACJolC,UAAW1kB,EAAIxe,OAAO,yBAgB1BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kCAAmC,CAC1C2kB,6BAA8B,EAC9BC,mCAAoC,EACpCC,kCAAmC,EACnCC,+BAAgC,EAChCC,8BAA+B,EAC/BC,oCAAqC,IAiBvCrW,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,8BAA+B,CACvCtB,SAAU8gB,EAAIxe,OAAO,mCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC2gB,EAAG,QACpC,CAAC,oCAAqCA,EAAG,QACzC,CAAC,mCAAoCA,EAAG,QACxC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,+BAAgCA,EAAG,QACpC,CAAC,qCAAsCA,EAAG,SAE5C1gB,KAAM,CACN,IAgBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,0CAA2C,CAClDilB,qCAAsC,EACtCC,wCAAyC,EACzCC,+CAAgD,EAChDC,wCAAyC,IAgB3CzW,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,sCAAuC,CAC/CtB,SAAU8gB,EAAIxe,OAAO,2CACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uCAAwC2gB,EAAG,QAC5C,CAAC,yCAA0CA,EAAG,QAC9C,CAAC,gDAAiDA,EAAG,QACrD,CAAC,yCAA0CA,EAAG,SAEhD1gB,KAAM,CACN,IAcFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,wCAAyC,CAChDqlB,mCAAoC,EACpCC,yCAA0C,IAc5C3W,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oCAAqC,CAC7CtB,SAAU8gB,EAAIxe,OAAO,yCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,qCAAsC2gB,EAAG,QAC1C,CAAC,0CAA2CA,EAAG,SAEjD1gB,KAAM,CACN,IAkBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,8BAA+B,CACtCulB,yBAA0B,EAC1BC,+BAAgC,EAChCC,6BAA8B,EAC9BC,6BAA8B,EAC9BC,mCAAoC,EACpCC,4BAA6B,IAiB/BjX,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,0BAA2B,CACnCtB,SAAU8gB,EAAIxe,OAAO,+BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B2gB,EAAG,QAChC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,oCAAqCA,EAAG,QACzC,CAAC,6BAA8BA,EAAG,SAEpC1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,qBAAsB,CAC7B6lB,gBAAiB,EACjBC,mBAAoB,EACpBC,4BAA6B,EAC7BC,iBAAkB,EAClBC,qBAAsB,IAgBxBtX,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,sBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kBAAmB2gB,EAAG,QACvB,CAAC,oBAAqBA,EAAG,QACzB,CAAC,6BAA8BA,EAAG,QAClC,CAAC,kBAAmBA,EAAG,QACvB,CAAC,sBAAuBA,EAAG,SAE7B1gB,KAAM,CACN,IAgBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,qCAAsC,CAC7CkmB,gCAAiC,EACjCC,sCAAuC,EACvCC,mCAAoC,EACpCC,4CAA6C,IAgB/C1X,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iCAAkC,CAC1CtB,SAAU8gB,EAAIxe,OAAO,sCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,kCAAmC2gB,EAAG,QACvC,CAAC,uCAAwCA,EAAG,QAC5C,CAAC,oCAAqCA,EAAG,QACzC,CAAC,6CAA8CA,EAAG,SAEpD1gB,KAAM,CACN,IAmBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,8BAA+B,CACtCsmB,yBAA0B,EAC1BC,4BAA6B,EAC7BC,8BAA+B,EAC/BC,6BAA8B,EAC9BC,+BAAgC,EAChCC,6BAA8B,IAiBhChY,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,0BAA2B,CACnCtB,SAAU8gB,EAAIxe,OAAO,+BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B2gB,EAAG,QAChC,CAAC,6BAA8BA,EAAG,QAClC,CAAC,+BAAgCA,EAAG,QACpC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,8BAA+BA,EAAG,SAErC1gB,KAAM,CACN,IAwBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,iCAAkC,CACzC4mB,4BAA6B,EAC7BC,+BAAgC,EAChCC,6BAA8B,EAC9BC,mCAAoC,EACpCC,iCAAkC,EAClCC,8BAA+B,EAC/BC,8BAA+B,EAC/BC,8BAA+B,IAmBjCxY,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,6BAA8B,CACtCtB,SAAU8gB,EAAIxe,OAAO,kCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,8BAA+B2gB,EAAG,QACnC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,oCAAqCA,EAAG,QACzC,CAAC,kCAAmCA,EAAG,QACvC,CAAC,+BAAgCA,EAAG,QACpC,CAAC,+BAAgCA,EAAG,QACpC,CAAC,+BAAgCA,EAAG,SAEtC1gB,KAAM,CACN,IAqBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kCAAmC,CAC1ConB,6BAA8B,EAC9BC,gCAAiC,EACjCC,8BAA+B,EAC/BC,kCAAmC,EACnCC,+BAAgC,EAChCC,mCAAoC,IAiBtC9Y,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,8BAA+B,CACvCtB,SAAU8gB,EAAIxe,OAAO,mCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,+BAAgC2gB,EAAG,QACpC,CAAC,iCAAkCA,EAAG,QACtC,CAAC,+BAAgCA,EAAG,QACpC,CAAC,mCAAoCA,EAAG,QACxC,CAAC,gCAAiCA,EAAG,QACrC,CAAC,oCAAqCA,EAAG,SAE3C1gB,KAAM,CACN,IAkBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,+BAAgC,CACvC0nB,0BAA2B,EAC3BC,6BAA8B,EAC9BC,2BAA4B,EAC5BC,yCAA0C,EAC1CC,iCAAkC,EAClCC,6CAA8C,IAiBhDpZ,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,2BAA4B,CACpCtB,SAAU8gB,EAAIxe,OAAO,gCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,4BAA6B,WAC9B,CAAC,8BAA+B2gB,EAAG,QACnC,CAAC,4BAA6BA,EAAG,QACjC,CAAC,0CAA2CA,EAAG,QAC/C,CAAC,kCAAmCA,EAAG,QACvC,CAAC,8CAA+CA,EAAG,SAErD1gB,KAAM,CACJo/B,QAAS1e,EAAIxe,OAAO,WAiBxBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,+BAAgC,CACvCgoB,0BAA2B,EAC3BC,6BAA8B,EAC9BC,yCAA0C,EAC1CC,6CAA8C,IAehDxZ,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,2BAA4B,CACpCtB,SAAU8gB,EAAIxe,OAAO,gCACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,4BAA6B2gB,EAAG,QACjC,CAAC,8BAA+BA,EAAG,QACnC,CAAC,0CAA2CA,EAAG,QAC/C,CAAC,8CAA+CA,EAAG,SAErD1gB,KAAM,CACN,IAgBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,6BAA8B,CACrCooB,wBAAyB,EACzBC,2BAA4B,EAC5BC,uCAAwC,EACxCC,2CAA4C,IAe9C5Z,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,yBAA0B,CAClCtB,SAAU8gB,EAAIxe,OAAO,8BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,0BAA2B2gB,EAAG,QAC/B,CAAC,4BAA6BA,EAAG,QACjC,CAAC,wCAAyCA,EAAG,QAC7C,CAAC,4CAA6CA,EAAG,SAEnD1gB,KAAM,CACN,IAiBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,sBAAuB,CAC9BwoB,QAAS,EACTC,WAAY,EACZC,aAAc,EACdC,gBAAiB,EACjBC,qBAAsB,EACtBC,qBAAsB,EACtBC,qBAAsB,IA+DxBna,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,oBAAqB,CAC7BtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gBAAiB,uBAClB,CAAC,UAAW,iBACZ,CAAC,2BAA4B,kCAC7B,CAAC,kBAAmB,yBACpB,CAAC,yBAA0B,gCAC3B,CAAC,aAAc,oBACf,CAAC,cAAe,qBAChB,CAAC,aAAc,oBACf,CAAC,eAAgB,sBACjB,CAAC,YAAa,mBACd,CAAC,aAAc,oBACf,CAAC,eAAgB,iBACjB,CAAC,iBAAkB,wBACnB,CAAC,wBAAyB,+BAC1B,CAAC,yBAA0B,gCAC3B,CAAC,wBAAyB,+BAC1B,CAAC,gCAAiC,uCAClC,CAAC,8BAA+B,qCAChC,CAAC,oBAAqB,2BACtB,CAAC,WAAY,kBACb,CAAC,2BAA4B,kCAC7B,CAAC,oBAAqB,2BACtB,CAAC,uBAAwB,8BACzB,CAAC,wBAAyB,+BAC1B,CAAC,qBAAsB,4BACvB,CAAC,qBAAsB,4BACvB,CAAC,mBAAoB,2BAEvBC,KAAM,CACJypC,oBAAqB/oB,EAAIxe,OAAO,uBAChCwnC,cAAehpB,EAAIxe,OAAO,iBAC1BynC,+BAAgCjpB,EAAIxe,OAAO,kCAC3C0nC,sBAAuBlpB,EAAIxe,OAAO,yBAClC2nC,6BAA8BnpB,EAAIxe,OAAO,yBACzC4nC,iBAAkBppB,EAAIxe,OAAO,oBAC7B6nC,kBAAmBrpB,EAAIxe,OAAO,qBAC9B8nC,iBAAkBtpB,EAAIxe,OAAO,oBAC7B+nC,mBAAoBvpB,EAAIxe,OAAO,sBAC/BgoC,gBAAiBxpB,EAAIxe,OAAO,mBAC5BioC,iBAAkBzpB,EAAIxe,OAAO,oBAC7BkoC,cAAe1pB,EAAIxe,OAAO,sBAC1BmoC,qBAAsB3pB,EAAIxe,OAAO,wBACjCooC,4BAA6B5pB,EAAIxe,OAAO,+BACxCqoC,6BAA8B7pB,EAAIxe,OAAO,gCACzCsoC,4BAA6B9pB,EAAIxe,OAAO,+BACxCuoC,oCAAqC/pB,EAAIxe,OAAO,uCAChDwoC,kCAAmChqB,EAAIxe,OAAO,qCAC9CyoC,wBAAyBjqB,EAAIxe,OAAO,2BACpC0oC,eAAgBlqB,EAAIxe,OAAO,kBAC3B2oC,+BAAgCnqB,EAAIxe,OAAO,kCAC3C4oC,wBAAyBpqB,EAAIxe,OAAO,2BACpC6oC,2BAA4BrqB,EAAIxe,OAAO,8BACvC8oC,4BAA6BtqB,EAAIxe,OAAO,+BACxC+oC,yBAA0BvqB,EAAIxe,OAAO,4BACrCgpC,yBAA0BxqB,EAAIxe,OAAO,4BACrCipC,uBAAwBzqB,EAAIxe,OAAO,6BA4EvCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,kBAAmB,CAC3BtB,SAAU8gB,EAAIxe,OAAO,uBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,UAAW,MACZ,CAAC,YAAa2gB,EAAG,QACjB,CAAC,cAAeA,EAAG,QACnB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,sBAAuBA,EAAG,SAE7B1gB,KAAM,CACJorC,GAAI1qB,EAAIxe,OAAO,wBAiCnBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,wBAAyB,CAChC2qB,sBAAuB,EACvBC,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,WAAY,EACZC,oBAAqB,EACrBC,UAAW,EACXC,WAAY,EACZC,uBAAwB,EACxBC,aAAc,EACdC,mBAAoB,EACpBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,sBAAuB,GACvBC,kBAAmB,GACnBC,qBAAsB,GACtBC,aAAc,GACdC,kBAAmB,KA8BrBld,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,+BAAgC,CACxCtB,SAAU8gB,EAAIxe,OAAO,yBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,YAAa,WACd,CAAC,WAAY,WACb,CAAC,aAAc2gB,EAAG,QAClB,CAAC,YAAaA,EAAG,QACjB,CAAC,qBAAsBA,EAAG,QAC1B,CAAC,WAAYA,EAAG,QAChB,CAAC,YAAaA,EAAG,QACjB,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,cAAeA,EAAG,QACnB,CAAC,oBAAqBA,EAAG,QACzB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,kBAAmBA,EAAG,QACvB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,mBAAoBA,EAAG,QACxB,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,cAAeA,EAAG,QACnB,CAAC,mBAAoBA,EAAG,SAE1B1gB,KAAM,CACJ1B,QAASoiB,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,eAYzDmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,4BAA6B,CACrCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IA6CFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,aAAcyf,EAAIxe,OAAO,UAC1B,CAAC,SAAUwe,EAAIxe,OAAO,iCACtB,CAAC,MAAOwe,EAAIxe,OAAO,gCAWrBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,6BAA8B,CACvC,CAAC,kBAAmByf,EAAIxe,OAAO,SAC/B,CAAC,SAAUwe,EAAIxe,OAAO,6BAgCxBmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,0BAA2B,CACnCtB,SAAU8gB,EAAIxe,OAAO,yBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,wBAAyB,mBAC1B,CAAC,uBAAwB,mBACzB,CAAC,YAAa,WACd,CAAC,WAAY,WACb,CAAC,aAAc2gB,EAAG,QAClB,CAAC,YAAaA,EAAG,QACjB,CAAC,qBAAsBA,EAAG,QAC1B,CAAC,WAAYA,EAAG,QAChB,CAAC,YAAaA,EAAG,QACjB,CAAC,wBAAyBA,EAAG,QAC7B,CAAC,cAAeA,EAAG,QACnB,CAAC,oBAAqBA,EAAG,QACzB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,kBAAmBA,EAAG,QACvB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,mBAAoBA,EAAG,QACxB,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,cAAeA,EAAG,QACnB,CAAC,mBAAoBA,EAAG,SAE1B1gB,KAAM,CACJwsC,gBAAiB9rB,EAAIxe,OAAO,8BAC5B5D,QAASoiB,EAAI1e,SAAS0e,EAAIxe,OAAO,mBAAoB,eAYzDmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,uBAAwB,CAChCtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IA8CFqvB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,aAAcyf,EAAIxe,OAAO,UAC1B,CAAC,SAAUwe,EAAIxe,OAAO,4BACtB,CAAC,MAAOwe,EAAIxe,OAAO,2BAOrBmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,OAAQuf,EAAI7e,OAAO,KAM/BwtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,UAAWuf,EAAI7e,OAAO,KAMlCwtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,SAAUuf,EAAInf,QAM1B8tB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,QAASuf,EAAG,OAMxB2O,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,SAAUuf,EAAIlf,UAM1B6tB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,QAASuf,EAAIpf,SAMzB+tB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,YAAauf,EAAIxe,OAAO,WAMpCmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,WAAYuf,EAAIxe,OAAO,WAUnCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAG,MACbmP,WAAY,IACZ9vB,SAAU,CACR,CAAC,EAAG2gB,EAAG,SAET1gB,KAAM,CACN,IAgBFqvB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxB+rB,eAAgB,EAChBC,iBAAkB,EAClBC,aAAc,EACdC,4BAA6B,EAC7BC,oBAAqB,MAUvBxd,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxBa,qBAAsB,IAaxB8N,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxBosB,qBAAsB,EACtBC,uBAAwB,EACxBC,mBAAoB,EACpBC,kCAAmC,IAWrC5d,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uBAAwB,YAE3BC,KAAM,CACJ8gB,QAASJ,EAAIxe,OAAO,cAcxBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gCAAiC,CAC1C,CAAC,UAAWyf,EAAIxe,OAAO,YACvB,CAAC,UAAWwe,EAAI5e,UAAU,OAyB5ButB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uBAAwB,WACzB,CAAC,yBAA0B,aAC3B,CAAC,qBAAsB,SACvB,CAAC,oCAAqC,yBAExCC,KAAM,CACJ8gB,QAASJ,EAAIxe,OAAO,WACpBgrC,UAAWxsB,EAAIxe,OAAO,WACtBirC,MAAOzsB,EAAIxe,OAAO,WAClBkrC,qBAAsB1sB,EAAIxe,OAAO,oCAQrCmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,YAAauf,EAAI5e,UAAU,KAMvCutB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,gBAAiBuf,EAAI7e,OAAO,IAMxCwtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,SAAUuf,EAAIxe,OAAO,cAMjCmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,YAAauf,EAAIxe,OAAO,cASpCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,MAAOyf,EAAI7e,OAAO,OAUrBwtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,MAAOyf,EAAI7e,OAAO,OAUrBwtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,MAAOyf,EAAI7e,OAAO,OAUrBwtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,MAAOyf,EAAI7e,OAAO,OA4DrBwtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,YAAa,CACpB2sB,QAAS,EACTC,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,aAAc,EACdC,YAAa,EACbC,QAAS,EACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXxkB,OAAQ,GACRykB,OAAQ,GACRltB,WAAY,GACZmtB,oBAAqB,GACrB5hB,6BAA8B,GAC9B6hB,kBAAmB,KAmBrBlf,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,cAAe,CACtB8tB,YAAa,EACbC,UAAW,EACXC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,SAAU,EACVC,QAAS,IAmBX5f,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,cAAe,CACtBwuB,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,iBAAkB,EAClBC,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,EACnBC,mBAAoB,EACpBC,mBAAoB,IAqBtBtgB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,UAAW,CACnBtB,SAAU8gB,EAAIxe,OAAO,eACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,cAAe,gBAChB,CAAC,YAAa,QACd,CAAC,aAAc,QACf,CAAC,aAAc,QACf,CAAC,YAAa,QACd,CAAC,YAAa,QACd,CAAC,YAAa,QACd,CAAC,YAAa,QACd,CAAC,WAAY,QACb,CAAC,UAAW,SAEdC,KAAM,CACJ6wB,aAAcnQ,EAAIxe,OAAO,UACzBqG,KAAMmY,EAAIxe,OAAO,kBAWrBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,KAAMyf,EAAIxe,OAAO,WAClB,CAAC,KAAMwe,EAAIxe,OAAO,aAUpBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,KAAMyf,EAAIxe,OAAO,UAClB,CAAC,KAAMwe,EAAIxe,OAAO,aAYpBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,eAAgB,CACzB,CAAC,OAAQyf,EAAIxe,OAAO,WACpB,CAAC,OAAQwe,EAAIxe,OAAO,WACpB,CAAC,OAAQwe,EAAIxe,OAAO,WACpB,CAAC,OAAQwe,EAAIxe,OAAO,aAYtBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,cAAe,CACxB,CAAC,OAAQyf,EAAIxe,OAAO,UACpB,CAAC,OAAQwe,EAAIxe,OAAO,WACpB,CAAC,OAAQwe,EAAIxe,OAAO,WACpB,CAAC,OAAQwe,EAAIxe,OAAO,aAWtBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,yBAA0B,CACjCkvB,uBAAwB,EACxBC,+BAAgC,IAalCxgB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,0BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,yBAA0B,YAC3B,CAAC,iCAAkC2gB,EAAG,SAExC1gB,KAAM,CACJ8vC,SAAUpvB,EAAIxe,OAAO,WAYzBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxBE,qBAAsB,EACtBG,sBAAuB,IAazBsO,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,YAAa,CACrBtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,uBAAwB,aACzB,CAAC,wBAAyB,eAE5BC,KAAM,CACJsf,UAAWoB,EAAIxe,OAAO,aACtB+e,WAAYP,EAAIxe,OAAO,WAQ3BmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,iBAAkB,IAM5B2O,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,QAASuf,EAAI1e,SAAS0e,EAAIxe,OAAO,SAAU,aAMvDmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,QAASuf,EAAI1e,SAAS0e,EAAIxe,OAAO,cAAe,aAM5DmtB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,UAAWuf,EAAI5e,aAM3ButB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,WAAYuf,EAAI9e,UAM5BytB,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,WAAYuf,EAAI9e,OAAO2tB,IAQnCF,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,QAASyf,EAAIxe,OAAO,YAUvBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,qBAAsB,CAC/B,CAAC,aAAcyf,EAAIxe,OAAO,uBAC1B,CAAC,UAAWwe,EAAIze,OAAOye,EAAIxe,OAAO,aAmEpCmtB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,QAAS,CACjBtB,SAAU8gB,EAAIxe,OAAO,aACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,UAAW,KACZ,CAAC,UAAW2gB,EAAG,QACf,CAAC,WAAY,SACb,CAAC,SAAU,OACX,CAAC,SAAU,OACX,CAAC,SAAU,OACX,CAAC,SAAU,OACX,CAAC,eAAgB,aACjB,CAAC,cAAe,YAChB,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,UAAW,QACZ,CAAC,WAAY,SACb,CAAC,YAAa,OACd,CAAC,YAAa,OACd,CAAC,SAAU,OACX,CAAC,SAAU,OACX,CAAC,aAAc,WACf,CAAC,+BAAgCA,EAAG,QACpC,CAAC,oBAAqB,YACtB,CAAC,sBAAuB,aAE1B1gB,KAAM,CACJnE,EAAG6kB,EAAItf,OACP6C,MAAOyc,EAAIxe,OAAO,WAClB6tC,IAAKrvB,EAAIxe,OAAO,UAChB8tC,IAAKtvB,EAAIxe,OAAO,SAChB+tC,IAAKvvB,EAAIxe,OAAO,UAChBguC,IAAKxvB,EAAIxe,OAAO,SAChBiuC,UAAWzvB,EAAIxe,OAAO,aACtBkuC,SAAU1vB,EAAIxe,OAAO,YACrBmuC,KAAM3vB,EAAIxe,OAAO,gBACjBouC,KAAM5vB,EAAIxe,OAAO,eACjBquC,KAAM7vB,EAAIxe,OAAO,gBACjBsuC,KAAM9vB,EAAIxe,OAAO,eACjB8nB,MAAOtJ,EAAIxe,OAAO,WAClB8Q,IAAK0N,EAAIxe,OAAO,YAChBuuC,IAAK/vB,EAAIxe,OAAO,YAChBwuC,IAAKhwB,EAAIze,OAAOye,EAAIxe,OAAO,UAC3BoW,IAAKoI,EAAIze,OAAOye,EAAIxe,OAAO,UAC3B8d,QAASU,EAAIxe,OAAO,aACpByuC,SAAUjwB,EAAIxe,OAAO,cACrBgM,SAAUwS,EAAIxe,OAAO,yBAYzBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,aAAc,CACvB,CAAC,MAAOyf,EAAIxe,OAAO,UACnB,CAAC,MAAOwe,EAAIxe,OAAO,YAUrBmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,gBAAiB,CACxBkwB,8BAA+B,IAWjCvhB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,iBAAkB,CAC1BtB,SAAU8gB,EAAIxe,OAAO,iBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gCAAiC,qBAEpCC,KAAM,CACJ6wC,iBAAkBnwB,EAAIxe,OAAO,aAYjCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,WAAY,CACrB,CAAC,MAAOyf,EAAI9e,UACZ,CAAC,MAAO8e,EAAI9e,YAUdytB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,aAAc,CACrBowB,SAAU,IAWZzhB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,cAAe,CACvBtB,SAAU8gB,EAAIxe,OAAO,cACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,WAAY,OAEfC,KAAM,CACJ6rB,GAAInL,EAAIxe,OAAO,eAQnBmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,oBAAqB,MAuC/B2O,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,aAAc,CACrBqwB,cAAe,EACfC,eAAgB,EAChBC,eAAgB,EAChBC,gBAAiB,EACjBC,cAAe,EACfC,cAAe,EACfC,cAAe,EACfC,cAAe,EACfC,oBAAqB,EACrBC,mBAAoB,EACpBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAClBC,iBAAkB,GAClBC,kBAAmB,GACnBC,iBAAkB,IAClBC,iBAAkB,KAClBC,cAAe,KACfC,cAAe,KACfC,gBAAiB,KACjBC,iBAAkB,KAClBC,cAAe,MAUjBljB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,YAAayf,EAAIxe,OAAO,oBAW3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,SAAUyf,EAAIxe,OAAO,kBACtB,CAAC,YAAawe,EAAIxe,OAAO,oBAU3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,cAAeyf,EAAIxe,OAAO,oBAW7BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,UAAWyf,EAAIxe,OAAO,kBACvB,CAAC,YAAawe,EAAIxe,OAAO,oBAU3BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,aAAcyf,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,OAU3DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,IAAKyf,EAAIxe,OAAO,aAUnBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gBAAiB,CAC1B,CAAC,OAAQyf,EAAI9e,OAAO,OA0CtBytB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,gBAAiB,CACzBtB,SAAU8gB,EAAIxe,OAAO,cACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,gBAAiB2gB,EAAG,QACrB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,kBAAmBA,EAAG,QACvB,CAAC,gBAAiBA,EAAG,QACrB,CAAC,gBAAiBA,EAAG,QACrB,CAAC,gBAAiBA,EAAG,QACrB,CAAC,gBAAiBA,EAAG,QACrB,CAAC,sBAAuBA,EAAG,QAC3B,CAAC,qBAAsBA,EAAG,QAC1B,CAAC,iBAAkBA,EAAG,QACtB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,iBAAkBA,EAAG,QACtB,CAAC,kBAAmBA,EAAG,QACvB,CAAC,mBAAoBA,EAAG,QACxB,CAAC,mBAAoBA,EAAG,QACxB,CAAC,oBAAqBA,EAAG,QACzB,CAAC,mBAAoB,UACrB,CAAC,mBAAoB,UACrB,CAAC,gBAAiB,OAClB,CAAC,gBAAiB,OAClB,CAAC,kBAAmB,SACpB,CAAC,mBAAoB,UACrB,CAAC,gBAAiB,QAEpB1gB,KAAM,CACJiC,OAAQye,EAAIxe,OAAO,oBACnBgO,OAAQwQ,EAAIxe,OAAO,oBACnBwuC,IAAKhwB,EAAIxe,OAAO,iBAChBoW,IAAKoI,EAAIxe,OAAO,iBAChBswC,MAAO9xB,EAAIxe,OAAO,mBAClBuwC,OAAQ/xB,EAAIxe,OAAO,oBACnBwwC,IAAKhyB,EAAIxe,OAAO,oBAapBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,KACpB,CAAC,OAAQ8e,EAAIxe,OAAO,oBAatBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oBAAqB,CAC9B,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,MAAO9O,EAAI9e,OAAO,KACnB,CAAC,OAAQ8e,EAAI9e,OAAO,KACpB,CAAC,SAAU8e,EAAI1e,SAAS0e,EAAIxe,OAAO,0BAA2B,OAWhEmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,OAYtBytB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,4BAA6B,CACtC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,KACpB,CAAC,OAAQ8e,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,OAWrDmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,2BAA4B,CACnCiyB,yBAA0B,EAC1BC,0BAA2B,IAa7BvjB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,uBAAwB,CAChCtB,SAAU8gB,EAAIxe,OAAO,4BACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,2BAA4B,YAC7B,CAAC,4BAA6B,cAEhCC,KAAM,CACJ6yC,SAAUnyB,EAAIxe,OAAO,4BACrB4wC,UAAWpyB,EAAIxe,OAAO,gCAc1BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,MAAO9O,EAAI9e,OAAO,KACnB,CAAC,OAAQ8e,EAAI9e,OAAO,KACpB,CAAC,QAAS8e,EAAI1e,SAAS0e,EAAIxe,OAAO,wBAAyB,OAY7DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,sBAAuB,CAChC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,KACpB,CAAC,QAAS8e,EAAIxe,OAAO,aAavBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,kBAAmB,CAC5B,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,MAAO9O,EAAI9e,OAAO,KACnB,CAAC,OAAQ8e,EAAI9e,OAAO,KACpB,CAAC,QAAS8e,EAAI1e,SAAS0e,EAAIxe,OAAO,uBAAwB,OAY5DmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,2BAA4B,CACrC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,KACpB,CAAC,QAAS8e,EAAIxe,OAAO,aAavBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,uBAAwB,CACjC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,MAAO9O,EAAI9e,OAAO,KACnB,CAAC,OAAQ8e,EAAI9e,OAAO,KACpB,CAAC,QAAS8e,EAAI1e,SAAS0e,EAAIxe,OAAO,4BAA6B,OAYjEmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAI9e,OAAO,KACpB,CAAC,OAAQ8e,EAAIxe,OAAO,oBAatBmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,MAAOyf,EAAI9e,OAAO4tB,IACnB,CAAC,OAAQ9O,EAAIxe,OAAO,aACpB,CAAC,SAAUwe,EAAI1e,SAAS0e,EAAIxe,OAAO,yBAA0B,KAC7D,CAAC,UAAWwe,EAAI1e,SAAS0e,EAAIxe,OAAO,iBAAkB,MAcxDmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kBAAmB,CAC1BqyB,sBAAuB,EACvBC,uBAAwB,EACxBC,sBAAuB,EACvBC,qBAAsB,EACtBC,0BAA2B,IAmB7B9jB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,cAAe,CACvBtB,SAAU8gB,EAAIxe,OAAO,mBACrB2tB,WAAY,OACZ9vB,SAAU,CACR,CAAC,wBAAyB,cAC1B,CAAC,yBAA0B,eAC3B,CAAC,wBAAyB,cAC1B,CAAC,uBAAwB,aACzB,CAAC,4BAA6B,mBAEhCC,KAAM,CACJozC,WAAY1yB,EAAIxe,OAAO,oBACvBmxC,YAAa3yB,EAAIxe,OAAO,qBACxBoxC,WAAY5yB,EAAIxe,OAAO,oBACvBqxC,UAAW7yB,EAAIxe,OAAO,mBACtBsxC,eAAgB9yB,EAAIxe,OAAO,2BAY/BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wCAAyC,CAClD,CAAC,mBAAoByf,EAAIxe,OAAO,aAmBlCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,iCAAkC,CAC3C,CAAC,wBAAyByf,EAAIxe,OAAO,UACrC,CAAC,oBAAqBwe,EAAIxe,OAAO,UACjC,CAAC,kCAAmCwe,EAAIxe,OAAO,UAC/C,CAAC,gBAAiBwe,EAAIxe,OAAO,aAyC/BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,oCAAqC,CAC9C,CAAC,6BAA8Byf,EAAIxe,OAAO,WAC1C,CAAC,qBAAsBwe,EAAIxe,OAAO,WAClC,CAAC,8BAA+Bwe,EAAIxe,OAAO,WAC3C,CAAC,sBAAuBwe,EAAIxe,OAAO,WACnC,CAAC,yBAA0Bwe,EAAIxe,OAAO,WACtC,CAAC,iBAAkBwe,EAAIxe,OAAO,WAC9B,CAAC,0BAA2Bwe,EAAIxe,OAAO,WACvC,CAAC,kBAAmBwe,EAAIxe,OAAO,WAC/B,CAAC,qBAAsBwe,EAAIxe,OAAO,UAClC,CAAC,sBAAuBwe,EAAIxe,OAAO,UACnC,CAAC,aAAcwe,EAAIxe,OAAO,UAC1B,CAAC,4BAA6Bwe,EAAIxe,OAAO,UACzC,CAAC,2BAA4Bwe,EAAIxe,OAAO,UACxC,CAAC,4BAA6Bwe,EAAIxe,OAAO,UACzC,CAAC,iCAAkCwe,EAAIxe,OAAO,aAUhDmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wCAAyC,CAClD,CAAC,mBAAoByf,EAAIxe,OAAO,YAalCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,gCAAiC,CAC1C,CAAC,+BAAgCyf,EAAIxe,OAAO,WAC5C,CAAC,uBAAwBwe,EAAIxe,OAAO,YAgBtCmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mCAAoC,CAC7C,CAAC,wBAAyByf,EAAIxe,OAAO,WACrC,CAAC,iBAAkBwe,EAAIxe,OAAO,WAC9B,CAAC,eAAgBwe,EAAIxe,OAAO,YA2G9BmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,mBAAoB,CAC3B+yB,aAAc,EACdC,SAAU,EACVC,OAAQ,EACRC,OAAQ,EACRC,qBAAsB,EACtBC,YAAa,EACbC,OAAQ,EACRC,SAAU,EACVC,kBAAmB,EACnBC,qBAAsB,EACtBC,iBAAkB,GAClBC,gBAAiB,GACjBC,sBAAuB,GACvBC,iBAAkB,GAClBC,qBAAsB,GACtBC,uBAAwB,GACxBC,yBAA0B,GAC1BC,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,YAAa,GACbC,kBAAmB,GACnBC,sBAAuB,GACvBC,mBAAoB,GACpBC,iBAAkB,GAClBC,sBAAuB,GACvBC,eAAgB,GAChBC,sBAAuB,GACvBC,sBAAuB,GACvBC,iBAAkB,GAClBC,iBAAkB,GAClBC,0BAA2B,GAC3BC,4BAA6B,GAC7BC,yBAA0B,GAC1BC,uBAAwB,GACxBC,4BAA6B,GAC7BC,qBAAsB,GACtBC,4BAA6B,GAC7BC,4BAA6B,GAC7BC,uBAAwB,GACxBC,uBAAwB,GACxBC,gCAAiC,GACjCC,4BAA6B,GAC7BC,wBAAyB,KAa3BhnB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,yBAA0B,CACnC,CAAC,MAAOyf,EAAIxe,OAAO,mBACnB,CAAC,YAAawe,EAAIxe,OAAO,UACzB,CAAC,aAAcwe,EAAIxe,OAAO,YA8B5BmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,wBAAyB,CAClC,CAAC,cAAeyf,EAAIxe,OAAO,WAC3B,CAAC,kBAAmBwe,EAAIxe,OAAO,WAC/B,CAAC,mBAAoBwe,EAAIxe,OAAO,WAChC,CAAC,gCAAiCwe,EAAIxe,OAAO,UAC7C,CAAC,0BAA2Bwe,EAAIxe,OAAO,UACvC,CAAC,sBAAuBwe,EAAIxe,OAAO,WACnC,CAAC,iCAAkCwe,EAAIxe,OAAO,WAC9C,CAAC,+BAAgCwe,EAAIxe,OAAO,WAC5C,CAAC,mBAAoBwe,EAAIxe,OAAO,WAChC,CAAC,4BAA6Bwe,EAAIxe,OAAO,aAW3CmtB,IAAA32B,EAAA,OACAgoB,EAAIzf,OAAO,mBAAoB,CAC7B,CAAC,kBAAmByf,EAAIxe,OAAO,WAC/B,CAAC,eAAgBwe,EAAItf,QACrB,CAAC,mBAAoBsf,EAAIxe,OAAO,aAOlCmtB,IAAA32B,EAAA,OACAgoB,EAAG,MAAO,4BAA6B,MAMvC2O,IAAA32B,EAAA,OACAgoB,EAAIvf,QAAQ,qBAAsBuf,EAAI1e,SAAS0e,EAAIxe,OAAO,0BAA2Bwe,EAAIxe,OAAO,+BAsBhGmtB,IAAA32B,EAAA,OACAgoB,EAAG,KAAM,kBAAmB,CAC1B41B,kCAAmC,EACnCC,+BAAgC,EAChCC,kCAAmC,EACnCC,sCAAuC,EACvCC,8BAA+B,EAC/BC,iCAAkC,EAClCC,+CAAgD,EAChDC,2CAA4C,EAC5CC,sCAAuC,EACvCC,wCAAyC,EACzCC,2BAA4B,GAC5BC,oCAAqC,GACrCC,kCAAmC,GACnCC,8BAA+B,KAqCjC9nB,IAAA32B,EAAA,OACAgoB,EAAIxf,MAAM,qBAAsB,CAC9BtB,SAAU8gB,EAAIxe,OAAO,mBACrB2tB,WAAY,kBACZ9vB,SAAU,CACR,CAAC,oCAAqC,wBACtC,CAAC,iCAAkC,mBACnC,CAAC,oCAAqC,sBACtC,CAAC,wCAAyC,0BAC1C,CAAC,gCAAiC,kBAClC,CAAC,mCAAoC,qBACrC,CAAC,iDAAkD,8BACnD,CAAC,6CAA8C,8BAC/C,CAAC,wCAAyC,4BAC1C,CAAC,0CAA2C,8BAC5C,CAAC,6BAA8B,yBAC/B,CAAC,sCAAuC,0BACxC,CAAC,oCAAqC,wBACtC,CAAC,gCAAiC,qBAEpCC,KAAM,CACJo3C,qBAAsB12B,EAAIxe,OAAO,UACjCm1C,gBAAiB32B,EAAIxe,OAAO,kCAC5Bo1C,mBAAoB52B,EAAIxe,OAAO,qCAC/Bq1C,uBAAwB72B,EAAIxe,OAAO,yCACnCs1C,eAAgB92B,EAAIxe,OAAO,iCAC3Bu1C,kBAAmB/2B,EAAIxe,OAAO,oCAC9Bw1C,2BAA4Bh3B,EAAIxe,OAAO,sBACvCy1C,2BAA4Bj3B,EAAIxe,OAAO,sBACvC01C,yBAA0Bl3B,EAAIxe,OAAO,UACrC21C,2BAA4Bn3B,EAAIxe,OAAO,UACvC41C,sBAAuBp3B,EAAIxe,OAAO,yBAClC61C,uBAAwBr3B,EAAIxe,OAAO,yCACnC81C,qBAAsBt3B,EAAI1e,SAAS0e,EAAIxe,OAAO,UAAW,YACzD+1C,iBAAkBv3B,EAAIxe,OAAO,sBAIjC,miHC3xTY,OAAAg2C,EAAA,kBAAAh5B,CAAA,EAAAA,CAAA,CAAAg5B,IAVL,IAAMC,GAAmBD,IAAAx/C,EAAA,KAAG,IAgB5B,SAAS0/C,EACdC,GAEA,IADAC,EAAuBl1C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA80C,IAAAr8C,EAAA,QAAG,CAAC,GAE3B,GAF4Bq8C,IAAAv/C,EAAA,KAAAu/C,IAAAx/C,EAAA,KAEF,qBAAtB2/C,EACF,MAD4CH,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACtC,IAAI8J,MAAM,gCACjB01C,IAAAr8C,EAAA,QAED,IAAA08C,GAAAL,IAAAx/C,EAAA,KAAgC4/C,GAAxBl0B,EAAMm0B,EAANn0B,OAAQC,EAAMk0B,EAANl0B,OAAQ6J,EAAGqqB,EAAHrqB,IACxB,GADwDgqB,IAAAx/C,EAAA,KACpDw/C,IAAAr8C,EAAA,UAACuoB,IAAM8zB,IAAAr8C,EAAA,QAAMuoB,aAAkB3C,EAAAA,QACjC,MADyCy2B,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACnC,IAAI8J,MAAM,qBAElB,GADC01C,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACGw/C,IAAAr8C,EAAA,UAACwoB,IAAM6zB,IAAAr8C,EAAA,QAAMwoB,aAAkB5C,EAAAA,QACjC,MADyCy2B,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACnC,IAAI8J,MAAM,qBAElB,GADC01C,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACGw/C,IAAAr8C,EAAA,SAACqyB,IAAGgqB,IAAAr8C,EAAA,QAAIqyB,IAAQiqB,GAClB,MADuCD,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,KACjC,IAAI8J,MAAM,kBAGlB,GAFC01C,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,OAEsC,IAAnC+oB,EAAAA,MAAMld,QAAQ6f,EAAQC,GACxB,MADwC6zB,IAAAr8C,EAAA,QAAAq8C,IAAAx/C,EAAA,MAClC,IAAI8J,MAAM,yCACjB01C,IAAAr8C,EAAA,QAED,IAAM28C,GAAUN,IAAAx/C,EAAA,MACdgoB,EAAAA,QAAI+3B,kBAAkBhnB,+BAA+Br2B,SACjDs9C,GAAYR,IAAAx/C,EAAA,MAAG,IAAIgoB,EAAAA,QAAIi4B,uCAAuC,CAClEv0B,OAAQA,EAAO5B,cACf6B,OAAQA,EAAO7B,cACf0L,IAAAA,IACC9yB,SACGgtB,GAAO8vB,IAAAx/C,EAAA,MAAGymB,EAAO1a,OAAO,CAAC+zC,EAAYE,KAC3C,OAD0DR,IAAAx/C,EAAA,OACnDspB,EAAAA,EAAAA,MAAKoG,EACd,40BCtCY,OAAAwwB,EAAA,kBAAA15B,CAAA,EAAAA,CAAA,CAbL,SAAS8C,EAAK9e,GAAM01C,IAAAjgD,EAAA,KACzB,IAAMkgD,GAAMD,IAAAlgD,EAAA,KAAG,IAAIogD,EAAAA,QAEnB,OAF4BF,IAAAlgD,EAAA,KAC5BmgD,EAAOE,OAAO71C,EAAM,QAAQ01C,IAAAlgD,EAAA,KACrBmgD,EAAOG,QAChB,CASYJ,0sGCAA,OAAAK,EAAA,kBAAA/5B,CAAA,EAAAA,CAAA,YAAA+5B,IA8CZ,QAAexvC,EAAc,21IC9CjB,OAAAyvC,EAAA,kBAAAh6B,CAAA,EAAAA,CAAA,UAAAvG,EAAAjkB,EAAAF,GAAA,gBAAAE,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAA,CAAA,CAAAmkB,CAAAnkB,IAAA,SAAAA,EAAAwG,GAAA,IAAAzG,EAAA,MAAAC,EAAA,yBAAAgO,QAAAhO,EAAAgO,OAAAiH,WAAAjV,EAAA,uBAAAD,EAAA,KAAAD,EAAAM,EAAAD,EAAAoD,EAAA+B,EAAA,GAAArB,GAAA,EAAAF,GAAA,SAAA5D,GAAAJ,EAAAA,EAAAW,KAAAV,IAAAokB,KAAA,IAAA5d,EAAA,IAAA5F,OAAAb,KAAAA,EAAA,OAAAkE,GAAA,cAAAA,GAAAnE,EAAAK,EAAAO,KAAAX,IAAAskB,QAAA/e,EAAAsI,KAAA9N,EAAAqJ,OAAA7D,EAAAb,SAAA+B,GAAAvC,GAAA,UAAAjE,GAAA+D,GAAA,EAAA3D,EAAAJ,CAAA,iBAAAiE,GAAA,MAAAlE,EAAA,SAAAwD,EAAAxD,EAAA,SAAAa,OAAA2C,KAAAA,GAAA,kBAAAQ,EAAA,MAAA3D,CAAA,SAAAkF,CAAA,EAAAif,CAAAvkB,EAAAF,IAAA,SAAAE,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,EAAAF,IAAA,qBAAA8D,UAAA,6IAAAghB,EAAA,UAAAH,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,CAkEL,SAASqkD,EAAoBC,GAAMF,IAAAvgD,EAAA,KACxC,IAAMyT,GAAE8sC,IAAAxgD,EAAA,KAAG0gD,EAAI,YAGTC,GAAMH,IAAAxgD,EAAA,KAAG,CAAC,GAGV4gD,GAAKJ,IAAAxgD,EAAA,KAAG0T,EAAGvO,SAEjB,OAFyBq7C,IAAAxgD,EAAA,KAEjB0T,EAAE,SAAUvO,OAElB,KAAK,EAACq7C,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,KACJ2gD,EAAOp2C,KAAO,UAAUi2C,IAAAxgD,EAAA,KACxB2gD,EAAOxsC,KAAO,CACZgH,OAAQkM,EAAAA,QAAQS,cAAc84B,EAAMC,mBAAmB39C,WACvD0wB,SAAUgtB,EAAME,eAChB3sC,KAAMysC,EAAMzsC,OAAOyL,KAAI,SAACtO,GAAQ,OAAAkvC,IAAAvgD,EAAA,KAAAugD,IAAAxgD,EAAA,MAAA40B,EAAAA,EAAAA,eAActjB,EAAG,KACjDkvC,IAAAxgD,EAAA,KACF,MAGF,KAAK,EAACwgD,IAAAr9C,EAAA,QAAEq9C,IAAAxgD,EAAA,KACN2gD,EAAOp2C,KAAO,SAASi2C,IAAAxgD,EAAA,KACvB2gD,EAAOxsC,KAAO,CAAC,EASf,IAAyE4sC,EAAA9gC,GAAzEugC,IAAAxgD,EAAA,MAAyB,CAAC4gD,EAAMI,aAAcJ,EAAMj3B,uBAAqB,GAAlEs3B,EAAIF,EAAA,GAAEx3B,EAAQw3B,EAAA,GACrB,GAD0EP,IAAAxgD,EAAA,QACpEihD,EAAI,SAAU97C,SAAYokB,EAAQ,SAAUpkB,MAChD,MADuDq7C,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MACjD,IAAI8J,MAAM,sCAADiC,OACyBm1C,KAAKC,UACzCP,GACD,6CAIL,OAFCJ,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MAEOihD,EAAI,SAAU97C,OAEpB,KAAK,EAACq7C,IAAAr9C,EAAA,QAEJ,IAAMqT,GAAOgqC,IAAAxgD,EAAA,MAAGupB,EAASgY,eAAcif,IAAAxgD,EAAA,MAEvC2gD,EAAOxsC,KAAK5J,KAAO,OAAOi2C,IAAAxgD,EAAA,MAC1B2gD,EAAOxsC,KAAKwtB,KAAO,CACjByf,KAAM5qC,EAAQ4qC,OAAOl+C,SAAS,OAC9BomB,KAAM23B,EAAK7J,WAAWl0C,SAAS,OAC/BokB,QAASD,EAAAA,QAAQS,cAActR,EAAQ8Q,WAAWpkB,YAClDs9C,IAAAxgD,EAAA,MACF,MAIF,KAAK,EAACwgD,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MACJ2gD,EAAOxsC,KAAK5J,KAAO,MAAMi2C,IAAAxgD,EAAA,MACzB2gD,EAAOxsC,KAAK+W,MAAQnC,EAAAA,MAAMs4B,cACxB93B,EAASiY,aACTt+B,WAAWs9C,IAAAxgD,EAAA,MACb,MAEF,QACE,MADFwgD,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MACQ,IAAI8J,MAAM,0BAADiC,OAA2Bm1C,KAAKC,UAAUF,KAC5DT,IAAAxgD,EAAA,MAED,MAGF,QACE,MADFwgD,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MACQ,IAAI8J,MAAM,4BAADiC,OACe2H,EAAE,SAAS,OAAA3H,OAAMm1C,KAAKC,UAAUztC,KAKlE,OAHC8sC,IAAAxgD,EAAA,MAED2gD,EAAOW,YAAcZ,EAAKa,iBAAiB3hC,KAAI,SAACzjB,GAAM,OAAAqkD,IAAAvgD,EAAA,KAAAugD,IAAAxgD,EAAA,MAAAygD,EAAoBtkD,EAAC,IAAGqkD,IAAAxgD,EAAA,MACvE2gD,CACT,CAyBO,SAASa,EAAmBd,EAAMe,GAAUjB,IAAAvgD,EAAA,KAAAugD,IAAAxgD,EAAA,MACjD0hD,EAAWhB,EAAM,EAAGe,EACtB,CAEA,SAASC,EAAWC,EAAMnmC,EAAOimC,EAAUG,GACzC,GADiDpB,IAAAvgD,EAAA,KAAAugD,IAAAxgD,EAAA,OACX,IAAlCyhD,EAASE,EAAMnmC,EAAOomC,GACxB,OAD+DpB,IAAAr9C,EAAA,aAAAq9C,IAAAxgD,EAAA,MAEhEwgD,IAAAr9C,EAAA,QAAAq9C,IAAAxgD,EAAA,MAED2hD,EACGJ,iBACA7rC,SAAQ,SAACvZ,GAAM,OAAAqkD,IAAAvgD,EAAA,KAAAugD,IAAAxgD,EAAA,MAAA0hD,EAAWvlD,EAAGqf,EAAQ,EAAGimC,EAAUE,EAAI,GAC3D,CAtLYnB,omBCAA,OAAAqB,EAAA,kBAAAr7B,CAAA,EAAAA,CAAA,CAAAq7B,IAZZ,SADYA,IAAA7hD,EAAA,KAAG,CAAER,UAAAA,EAAAA,UAAWF,UAAAA,EAAAA,0jUCahB,OAAAwiD,EAAA,kBAAAt7B,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA2lD,IAYL,IAAMn3B,EAAO,WAkClB,OA9CU7uB,EAaV,SAAA6uB,EAAYrV,GACV,GAdQ,SAAAhU,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAaQ6V,CAAA,KAAAkV,GAAAm3B,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,KACE,YAAdsV,EAAK/K,KACP,MAD2Bu3C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,KACrB,IAAI8J,MAAM,qBAKlB,GAJCg4C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,KAEDrD,KAAK4N,KAAO+K,EAAK/K,KAAKu3C,IAAA9hD,EAAA,KAElBsV,EAAKysC,UAAW,CAGlB,GAHkBD,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,KAClBsV,EAAKysC,UAAYt7B,EAAOnmB,KAAKgV,EAAKysC,WAAWD,IAAA9hD,EAAA,KAEf,KAA1BsV,EAAKysC,UAAUthD,OACjB,MADgCqhD,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,KAC1B,IAAI8J,MAAM,+BAOlB,GANCg4C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,KAEDrD,KAAKqlD,YAAc1sC,EAAKysC,UAAUD,IAAA9hD,EAAA,KAClCrD,KAAKslD,YAAaC,EAAAA,EAAAA,UAAS5sC,EAAKysC,WAAWD,IAAA9hD,EAAA,KAC3CrD,KAAKwlD,WAAa17B,EAAO1a,OAAO,CAACuJ,EAAKysC,UAAWplD,KAAKslD,aAAaH,IAAA9hD,EAAA,MAGjE8hD,IAAA3+C,EAAA,QAAAmS,EAAKsa,YAASkyB,IAAA3+C,EAAA,SACbxG,KAAKslD,WAAW71C,OAAOqa,EAAOnmB,KAAKgV,EAAKsa,aAEzC,MADAkyB,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACM,IAAI8J,MAAM,sCACjBg4C,IAAA3+C,EAAA,OACH,KAAO,CAGL,GAHK2+C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACLrD,KAAKslD,WAAax7B,EAAOnmB,KAAKgV,EAAKsa,WAAWkyB,IAAA9hD,EAAA,MAEf,KAA3BrD,KAAKslD,WAAWxhD,OAClB,MADiCqhD,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MAC3B,IAAI8J,MAAM,+BACjBg4C,IAAA3+C,EAAA,OACH,CACF,EA5CUpH,EAmQT,EAAAwV,IAAA,aAAApM,MA/MD,SAAkBi9C,GAAQN,IAAA7hD,EAAA,KACxB,IAAMoiD,GAASP,IAAA9hD,EAAA,MAAG8mB,EAAAA,OAAOw7B,wBAAwBF,IACjD,OADyDN,IAAA9hD,EAAA,MAClDrD,KAAK4lD,mBAAmBF,EACjC,GAEA,CAAA9wC,IAAA,qBAAApM,MAMA,SAA0Bq9C,GACxB,OADiCV,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,MAC1B,IAAIrD,KAAK,CAAE4N,KAAM,UAAWw3C,UAAWS,GAChD,GAEA,CAAAjxC,IAAA,SAAApM,MAKA,SAAcikB,GACZ,GAD+B04B,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,OAC1BopB,EACH,MADsB04B,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MAChB,IAAI8J,MACR,gGAIJ,OAFCg4C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MAEMrD,KAAK4lD,oBAAmBj5B,EAAAA,EAAAA,MAAKF,GACtC,GAEA,CAAA7X,IAAA,gBAAApM,MAKA,SAAqByqB,GAEnB,GAF8BkyB,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,MAC9B4vB,EAAY9I,EAAAA,OAAOU,uBAAuBoI,GAAWkyB,IAAA9hD,EAAA,MAC5B,KAArB4vB,EAAUnvB,OACZ,MAD2BqhD,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACrB,IAAI8J,MAAM,8BAElB,OADCg4C,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACM,IAAIrD,KAAK,CAAE4N,KAAM,UAAWqlB,UAAAA,GACrC,GAEA,CAAAre,IAAA,SAAApM,MAIA,WAAgB28C,IAAA7hD,EAAA,KACd,IAAMmiD,GAAMN,IAAA9hD,EAAA,MAAGyiD,IAAAA,YAAiB,KAChC,OADoCX,IAAA9hD,EAAA,MAC7BrD,KAAK4lD,mBAAmBH,EACjC,KAtGUpmD,EA8CV,EAAAuV,IAAA,eAAApM,MA0DA,WACE,OADa28C,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,MACN,IAAIgoB,EAAAA,QAAI06B,UAAU75B,qBAAqBlsB,KAAKslD,WACrD,GAAC,CAAA1wC,IAAA,eAAApM,MAED,WACE,OADa28C,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,MACN,IAAIgoB,EAAAA,QAAIY,UAAUC,qBAAqBlsB,KAAKslD,WACrD,GAEA,CAAA1wC,IAAA,kBAAApM,MAWA,SAAgB++B,GACd,GADkB4d,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,WACA,IAAPkkC,EAAoB,CAC7B,GAD6B4d,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACX,iBAAPkkC,EACT,MAD0B4d,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MACpB,IAAIJ,UAAU,+BAADmM,OAAAiF,EAAuCkzB,KAG5D,OAFC4d,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MAEMgoB,EAAAA,QAAI26B,aAAaxO,oBACtB,IAAInsB,EAAAA,QAAI46B,qBAAqB,CAC3B1e,GAAIlc,EAAAA,QAAI66B,OAAOx+C,WAAW6/B,GAC1B9b,QAASzrB,KAAKslD,aAGpB,CAEA,OAFCH,IAAA3+C,EAAA,QAAA2+C,IAAA9hD,EAAA,MAEM,IAAIgoB,EAAAA,QAAI26B,aAAa5O,eAAep3C,KAAKslD,WAClD,GAEA,CAAA1wC,IAAA,eAAApM,MAIA,WACE,OADa28C,IAAA7hD,EAAA,KAAA6hD,IAAA9hD,EAAA,MACNrD,KAAKslD,UACd,GAAC,CAAA1wC,IAAA,gBAAApM,MAED,WAAgB28C,IAAA7hD,EAAA,MACd,IAAMqB,GAACwgD,IAAA9hD,EAAA,MAAGrD,KAAKkuB,eAAenoB,SAE9B,OAFsCo/C,IAAA9hD,EAAA,MAE/BsB,EAAE0C,MAAM1C,EAAEb,OAAS,EAC5B,GAEA,CAAA8Q,IAAA,YAAApM,MAIA,WACE,OADU28C,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,MACH8mB,EAAAA,OAAOa,uBAAuBhrB,KAAKslD,WAC5C,GAEA,CAAA1wC,IAAA,SAAApM,MAIA,WACE,GADO28C,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,OACFrD,KAAKqlD,YACR,MADqBF,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MACf,IAAI8J,MAAM,2BAGlB,GAFCg4C,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MAEiB,YAAdrD,KAAK4N,KACP,OAD2Bu3C,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MACpB8mB,EAAAA,OAAOg8B,wBAAwBnmD,KAAKqlD,aAG7C,MAFCF,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MAEK,IAAI8J,MAAM,uBAClB,GAEA,CAAAyH,IAAA,eAAApM,MAIA,WACE,OADa28C,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,MACNrD,KAAKqlD,WACd,GAEA,CAAAzwC,IAAA,UAAApM,MAIA,WACE,OADQ28C,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,QACCrD,KAAKwlD,UAChB,GAEA,CAAA5wC,IAAA,OAAApM,MAKA,SAAKqF,GACH,GADSs3C,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,OACJrD,KAAKomD,UACR,MADmBjB,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MACb,IAAI8J,MAAM,wCAGlB,OAFCg4C,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,OAEM8wB,EAAAA,EAAAA,MAAKtmB,EAAM7N,KAAKwlD,WACzB,GAEA,CAAA5wC,IAAA,SAAApM,MAMA,SAAOqF,EAAMmlB,GACX,OADsBmyB,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,OACf+wB,EAAAA,EAAAA,QAAOvmB,EAAMmlB,EAAWhzB,KAAKslD,WACtC,GAEA,CAAA1wC,IAAA,gBAAApM,MASA,SAAcqF,GAAMs3C,IAAA7hD,EAAA,MAClB,IAAM0vB,GAASmyB,IAAA9hD,EAAA,MAAGrD,KAAKm0B,KAAKtmB,IACtBiH,GAAIqwC,IAAA9hD,EAAA,MAAGrD,KAAKqmD,iBAElB,OAFkClB,IAAA9hD,EAAA,MAE3B,IAAIgoB,EAAAA,QAAIi7B,mBAAmB,CAAExxC,KAAAA,EAAMke,UAAAA,GAC5C,GAEA,CAAApe,IAAA,uBAAApM,MAYA,SAAqBqF,GAAMs3C,IAAA7hD,EAAA,MACzB,IAAM0vB,GAASmyB,IAAA9hD,EAAA,MAAGrD,KAAKm0B,KAAKtmB,IACtB04C,GAAOpB,IAAA9hD,EAAA,MAAGrD,KAAKqmD,iBAEjBvxC,GAAIqwC,IAAA9hD,EAAA,MAAGymB,EAAOnmB,KAAKkK,EAAKxG,OAAO,KAMnC,OANuC89C,IAAA9hD,EAAA,MACnCyR,EAAKhR,OAAS,GAAGqhD,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MAEnByR,EAAOgV,EAAO1a,OAAO,CAAC0F,EAAMgV,EAAOnqB,MAAM,EAAIkO,EAAK/J,OAAQ,MAC3DqhD,IAAA3+C,EAAA,SAAA2+C,IAAA9hD,EAAA,MAEM,IAAIgoB,EAAAA,QAAIi7B,mBAAmB,CAChCxxC,KAAMA,EAAKmO,KAAI,SAACujC,EAAMhnD,GAAM,OAAA2lD,IAAA7hD,EAAA,MAAA6hD,IAAA9hD,EAAA,MAAAmjD,EAAOD,EAAQ/mD,EAAC,IAC5CwzB,UAAAA,GAEJ,MAnQUze,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAsGT,CA1FiB,m7JCZR,OAAAqnD,EAAA,kBAAA58B,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAwY,EAAAzc,EAAAE,GAAA,IAAAD,EAAAa,OAAA0Y,KAAAxZ,GAAA,GAAAc,OAAA4b,sBAAA,KAAAzY,EAAAnD,OAAA4b,sBAAA1c,GAAAE,IAAA+D,EAAAA,EAAA0Y,QAAA,SAAAzc,GAAA,OAAAY,OAAA8b,yBAAA5c,EAAAE,GAAAyP,UAAA,KAAA1P,EAAA6N,KAAAuB,MAAApP,EAAAgE,EAAA,QAAAhE,CAAA,UAAA4c,EAAA7c,GAAA,QAAAE,EAAA,EAAAA,EAAA0O,UAAAjK,OAAAzE,IAAA,KAAAD,EAAA,MAAA2O,UAAA1O,GAAA0O,UAAA1O,GAAA,GAAAA,EAAA,EAAAuc,EAAA3b,OAAAb,IAAA,GAAA2Z,SAAA,SAAA1Z,GAAA4c,EAAA9c,EAAAE,EAAAD,EAAAC,GAAA,IAAAY,OAAAic,0BAAAjc,OAAAkc,iBAAAhd,EAAAc,OAAAic,0BAAA9c,IAAAwc,EAAA3b,OAAAb,IAAA2Z,SAAA,SAAA1Z,GAAAY,OAAA4O,eAAA1P,EAAAE,EAAAY,OAAA8b,yBAAA3c,EAAAC,GAAA,WAAAF,CAAA,UAAA8c,EAAA9c,EAAAE,EAAAD,GAAA,OAAAC,EAAA+c,EAAA/c,MAAAF,EAAAc,OAAA4O,eAAA1P,EAAAE,EAAA,CAAAmJ,MAAApJ,EAAA0P,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA5T,EAAAE,GAAAD,EAAAD,CAAA,UAAAoV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAinD,IAAL,IAAMC,EAAkB,WAoB7B,OApBUvnD,EACV,SAAAunD,EAAY33B,EAAQC,EAAQ6J,GAC1B,GAFQ,SAAAl0B,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCACuB6V,CAAA,KAAA4tC,GAAAD,IAAAnjD,EAAA,KAAAmjD,IAAApjD,EAAA,KAC3BojD,IAAAjgD,EAAA,UAACuoB,IAAM03B,IAAAjgD,EAAA,QAAMuoB,aAAkB3C,EAAAA,QACjC,MADyCq6B,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KACnC,IAAI8J,MAAM,qBAElB,GADCs5C,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KACGojD,IAAAjgD,EAAA,UAACwoB,IAAMy3B,IAAAjgD,EAAA,QAAMwoB,aAAkB5C,EAAAA,QACjC,MADyCq6B,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KACnC,IAAI8J,MAAM,qBAElB,GADCs5C,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,MACsC,IAAnC+oB,EAAAA,MAAMld,QAAQ6f,EAAQC,GACxB,MADwCy3B,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KAClC,IAAI8J,MAAM,yCAElB,GADCs5C,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KACGojD,IAAAjgD,EAAA,SAACqyB,IAAG4tB,IAAAjgD,EAAA,QAAIqyB,IAAQiqB,EAAAA,qBAClB,MADuC2D,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KACjC,IAAI8J,MAAM,kBACjBs5C,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,KAEDrD,KAAK+uB,OAASA,EAAO03B,IAAApjD,EAAA,KACrBrD,KAAKgvB,OAASA,EAAOy3B,IAAApjD,EAAA,MACrBrD,KAAK64B,IAAMA,CACb,EAlBUz5B,EAuGT,EAAAwV,IAAA,gBAAApM,MA7ED,SAAqBm+C,GAAYF,IAAAnjD,EAAA,KAC/B,IAAMwqB,GAAS24B,IAAApjD,EAAA,MAAGsjD,EAAU,UAC5B,GADsCF,IAAApjD,EAAA,MAClCyqB,IAAczC,EAAAA,QAAI+C,UAAUyM,qBAAsB,CAAA4rB,IAAAjgD,EAAA,QACpD,IAAMy8C,GAAuBwD,IAAApjD,EAAA,MAAGsjD,EAC7BprB,gBACAsB,mBACH,OADqB4pB,IAAApjD,EAAA,MACd,IAAIrD,KACTosB,EAAAA,MAAMs4B,cAAczB,EAAwBl0B,UAC5C3C,EAAAA,MAAMs4B,cAAczB,EAAwBj0B,UAC5Ci0B,EAAwBpqB,MAE5B,CAEA,MAFC4tB,IAAAjgD,EAAA,QAAAigD,IAAApjD,EAAA,MAEK,IAAI8J,MAAM,uBAADiC,OAAwB0e,EAAUrmB,MACnD,KAxCUpI,EAoBV,EAAAuV,IAAA,cAAApM,MA+BA,WAAci+C,IAAAnjD,EAAA,KACZ,IAAMsjD,GAA0BH,IAAApjD,EAAA,MAC9B,IAAIgoB,EAAAA,QAAIi4B,uCAAuC,CAC7Cv0B,OAAQ/uB,KAAK+uB,OAAO5B,cACpB6B,OAAQhvB,KAAKgvB,OAAO7B,cACpB0L,IAAK74B,KAAK64B,OAERguB,GAAWJ,IAAApjD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIy7B,wBAC1B,+BACAF,IAEF,OADEH,IAAApjD,EAAA,MACK,IAAIgoB,EAAAA,QAAIkB,iBAAiB,qBAAsBs6B,EACxD,GAEA,CAAAjyC,IAAA,6BAAApM,MAGA,WACE,OAD2Bi+C,IAAAnjD,EAAA,KAAAmjD,IAAApjD,EAAA,MAC3B2Y,EAAAA,EAAA,GACKhc,MAAI,IACP+uB,OAAQ/uB,KAAK+uB,OACbC,OAAQhvB,KAAKgvB,OACb6J,IAAK74B,KAAK64B,KAEd,GAEA,CAAAjkB,IAAA,eAAApM,MAIA,WACE,OADai+C,IAAAnjD,EAAA,KAAAmjD,IAAApjD,EAAA,MACN,uBACT,GAEA,CAAAuR,IAAA,SAAApM,MAIA,SAAO8W,GACL,OADYmnC,IAAAnjD,EAAA,KAAAmjD,IAAApjD,EAAA,MAEVojD,IAAAjgD,EAAA,QAAAxG,KAAK+uB,OAAOtf,OAAO6P,EAAMyP,UAAO03B,IAAAjgD,EAAA,QAChCxG,KAAKgvB,OAAOvf,OAAO6P,EAAM0P,WAAOy3B,IAAAjgD,EAAA,QAChCxG,KAAK64B,MAAQvZ,EAAMuZ,IAEvB,GAAC,CAAAjkB,IAAA,WAAApM,MAED,WAAWi+C,IAAAnjD,EAAA,KACT,IAAMyjD,GAAMN,IAAApjD,EAAA,OAAG0/C,EAAAA,EAAAA,oBACb,mBACA/iD,KAAKgnD,8BACLzgD,SAAS,QACX,OADkBkgD,IAAApjD,EAAA,MACX,kBAAP+L,OAAyB23C,EAC3B,MAvGUxyC,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAwCT,CAxC4B,4lGCAnB,OAAA6nD,EAAA,kBAAAp9B,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAynD,IANL,IAAMC,EAAe,WAY1B,OANU/nD,EALV,SAAA+nD,EAAY7qB,GACV,GAIQ,SAAA13B,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCALmB6V,CAAA,KAAAouC,GAAAD,IAAA3jD,EAAA,KAAA2jD,IAAA5jD,EAAA,MACtBg5B,EACH,MADoB4qB,IAAAzgD,EAAA,QAAAygD,IAAA5jD,EAAA,KACd,IAAI8J,MAAM,mCAElB,GADC85C,IAAAzgD,EAAA,QAAAygD,IAAA5jD,EAAA,MACI,iBAAiB0gB,KAAKsY,GACzB,MAD2C4qB,IAAAzgD,EAAA,QAAAygD,IAAA5jD,EAAA,KACrC,IAAI8J,MAAM,yCACjB85C,IAAAzgD,EAAA,QAAAygD,IAAA5jD,EAAA,KAEDrD,KAAKq8B,gBAAkBA,CACzB,EAJUj9B,EA4DT,EAAAwV,IAAA,gBAAApM,MAjDD,SAAqB2+C,GAAYF,IAAA3jD,EAAA,KAC/B,IAAMwqB,GAASm5B,IAAA5jD,EAAA,KAAG8jD,EAAU,UAC5B,GADsCF,IAAA5jD,EAAA,KAClCyqB,IAAczC,EAAAA,QAAI+C,UAAUyM,qBAAsB,CAAAosB,IAAAzgD,EAAA,QACpD,IAAM61B,GAAe4qB,IAAA5jD,EAAA,KAAG8jD,EAAW9qB,kBAAkB91B,SAAS,QAC9D,OADqE0gD,IAAA5jD,EAAA,KAC9D,IAAIrD,KAAKq8B,EAClB,CAEA,MAFC4qB,IAAAzgD,EAAA,QAAAygD,IAAA5jD,EAAA,KAEK,IAAI8J,MAAM,uBAADiC,OAAwB0e,EAAUrmB,MACnD,KAnBUpI,EAMV,EAAAuV,IAAA,cAAApM,MAwBA,WAAcy+C,IAAA3jD,EAAA,KACZ,IAAM8jD,GAASH,IAAA5jD,EAAA,MAAGgoB,EAAAA,QAAIg8B,OAAOphD,QAAQjG,KAAKq8B,gBAAiB,QAC3D,OADkE4qB,IAAA5jD,EAAA,MAC3D,IAAIgoB,EAAAA,QAAImB,eAAe,qBAAsB46B,EACtD,GAEA,CAAAxyC,IAAA,qBAAApM,MAGA,WACE,OADmBy+C,IAAA3jD,EAAA,KAAA2jD,IAAA5jD,EAAA,MACZ1B,OAAO3B,KAAKq8B,gBACrB,GAEA,CAAAznB,IAAA,eAAApM,MAIA,WACE,OADay+C,IAAA3jD,EAAA,KAAA2jD,IAAA5jD,EAAA,MACN,uBACT,GAEA,CAAAuR,IAAA,SAAApM,MAIA,SAAO+lB,GACL,OADY04B,IAAA3jD,EAAA,KAAA2jD,IAAA5jD,EAAA,MACLrD,KAAKq8B,kBAAoB9N,EAAMw0B,oBACxC,GAAC,CAAAnuC,IAAA,WAAApM,MAED,WACE,OADSy+C,IAAA3jD,EAAA,KAAA2jD,IAAA5jD,EAAA,MACF,kBAAP+L,OAAyBpP,KAAKq8B,gBAChC,MA5DU9nB,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAmBT,CAzByB,0jXCMhB,OAAAkoD,EAAA,kBAAAz9B,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA8nD,IARL,IAAMC,GAAQD,IAAAjkD,EAAA,KAAG,QAIXmkD,GAAMF,IAAAjkD,EAAA,KAAG,MAITokD,GAAQH,IAAAjkD,EAAA,KAAG,QAIXqkD,GAAQJ,IAAAjkD,EAAA,KAAG,QAIXskD,GAAUL,IAAAjkD,EAAA,KAAG,UAUbukD,EAAI,WACf,SAAAA,EAAYh6C,GAAoB,IAAdpF,EAAKuF,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAu5C,IAAA9gD,EAAA,QAAG,MAIxB,OAvBQ,SAAA7B,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAmBoB6V,CAAA,KAAA8uC,GAAAN,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,KAC5BrD,KAAK4qB,MAAQhd,EAAK05C,IAAAjkD,EAAA,KAClBrD,KAAK+G,OAASyB,EAAM8+C,IAAAjkD,EAAA,KAEZrD,KAAK4qB,OACX,KAAK28B,EAAQD,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,KACX,MACF,KAAKmkD,EAAMF,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,KACTukD,EAAKC,iBAAiBr/C,GAAO8+C,IAAAjkD,EAAA,MAC7B,MACF,KAAKokD,EAAQH,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACXukD,EAAKE,mBAAmBt/C,GAAO8+C,IAAAjkD,EAAA,MAC/B,MACF,KAAKqkD,EAAQJ,IAAA9gD,EAAA,QACb,KAAKmhD,EAAUL,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACbukD,EAAKG,mBAAmBv/C,GACxB8+C,IAAAjkD,EAAA,MACqB,iBAAVmF,GAAoB8+C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MAC7BrD,KAAK+G,OAAS+iB,EAAOnmB,KAAK6E,EAAO,QAClC8+C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACD,MACF,QACE,MADFikD,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACQ,IAAI8J,MAAM,qBAEtB,CAEA,OA7CUhO,EA6CVyoD,EA7CUxoD,EA4MV,EAAAwV,IAAA,mBAAApM,MA1HA,SAAwBA,GAAO8+C,IAAAhkD,EAAA,KAC7B,IAMI0kD,EANEp5C,GAAK04C,IAAAjkD,EAAA,MAAG,IAAI8J,MAAM,oCAADiC,OAAqC5G,KAE5D,GAFqE8+C,IAAAjkD,EAAA,MAEhD,iBAAVmF,EACT,MAD6B8+C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACvBuL,EACP04C,IAAA9gD,EAAA,QAEU8gD,IAAAjkD,EAAA,MACX,IAAIikD,IAAAjkD,EAAA,MACF2kD,EAAS,IAAIz9B,EAAAA,QAAU/hB,EACzB,CAAE,MAAOrJ,GACP,MADUmoD,IAAAjkD,EAAA,MACJuL,CACR,CAGA,GADA04C,IAAAjkD,EAAA,OACK2kD,EAAOl4C,WACV,MADsBw3C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MAChBuL,EAIR,GAHC04C,IAAA9gD,EAAA,QAED8gD,IAAAjkD,EAAA,MACI2kD,EAAOp0C,QACT,MADkB0zC,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACZuL,EACP04C,IAAA9gD,EAAA,OACH,GAAC,CAAAoO,IAAA,qBAAApM,MAED,SAA0BA,GACxB,GAD+B8+C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,OAC1BgoB,EAAAA,QAAIu8B,KAAKx9C,cAAc,QAAQhE,QAAQoC,GAC1C,MADkD8+C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MAC5C,IAAI8J,MAAM,iDACjBm6C,IAAA9gD,EAAA,OACH,GAAC,CAAAoO,IAAA,qBAAApM,MAED,SAA0BA,GAAO8+C,IAAAhkD,EAAA,KAC/B,IAQI2kD,EAREr5C,GAAK04C,IAAAjkD,EAAA,MAAG,IAAI8J,MAAM,2DAADiC,OACsC5G,KAG7D,GAFE8+C,IAAAjkD,EAAA,MAEEikD,IAAA9gD,EAAA,QAAU,OAAVgC,IAAc8+C,IAAA9gD,EAAA,aAAqB,IAAVgC,GAC3B,MADkD8+C,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MAC5CuL,EAIR,GAHC04C,IAAA9gD,EAAA,QAEe8gD,IAAAjkD,EAAA,MACK,iBAAVmF,EAAoB,CAC7B,GAD6B8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,OACxB,qBAAqB0gB,KAAKvb,GAC7B,MADqC8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MAC/BuL,EACP04C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACD4kD,EAAcn+B,EAAOnmB,KAAK6E,EAAO,MACnC,KAAO,IAAA8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,OAAIymB,EAAOvmB,SAASiF,GAGzB,MADK8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACCuL,EAH2B04C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACjC4kD,EAAcn+B,EAAOnmB,KAAK6E,EAG5B,CAEA,GAFC8+C,IAAAjkD,EAAA,MAEGikD,IAAA9gD,EAAA,UAACyhD,EAAYnkD,SAAMwjD,IAAA9gD,EAAA,SAA2B,KAAvByhD,EAAYnkD,QACrC,MADoDwjD,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MAC9CuL,EACP04C,IAAA9gD,EAAA,QACH,GAEA,CAAAoO,IAAA,OAAApM,MAIA,WACE,OADY8+C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACL,IAAIukD,EAAKL,EAClB,GAEA,CAAA3yC,IAAA,OAAApM,MAKA,SAAY8+B,GACV,OADgBggB,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACT,IAAIukD,EAAKH,EAAUngB,EAC5B,GAEA,CAAA1yB,IAAA,KAAApM,MAKA,SAAU++B,GACR,OADY+f,IAAAhkD,EAAA,MAAAgkD,IAAAjkD,EAAA,MACL,IAAIukD,EAAKJ,EAAQjgB,EAC1B,GAEA,CAAA3yB,IAAA,OAAApM,MAKA,SAAYmkB,GACV,OADgB26B,IAAAhkD,EAAA,MAAAgkD,IAAAjkD,EAAA,MACT,IAAIukD,EAAKF,EAAU/6B,EAC5B,GAEA,CAAA/X,IAAA,SAAApM,MAKA,SAAcmkB,GACZ,OADkB26B,IAAAhkD,EAAA,MAAAgkD,IAAAjkD,EAAA,MACX,IAAIukD,EAAKD,EAAYh7B,EAC9B,GAAC,CAAA/X,IAAA,gBAAApM,MA4BD,SAAqB0/C,GACnB,OAD2BZ,IAAAhkD,EAAA,MAAAgkD,IAAAjkD,EAAA,MACnB6kD,EAAOl+C,OACb,IAAK,KACH,OADOs9C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACAukD,EAAKrgB,GAAG2gB,EAAO1/C,QAAQjC,YAChC,IAAK,OACH,OADS+gD,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACFukD,EAAKtgB,KAAK4gB,EAAO1/C,SAC1B,IAAK,OACH,OADS8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACFukD,EAAKj7B,KAAKu7B,EAAO1/C,SAC1B,IAAK,UACH,OADY8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACLukD,EAAI,OAAQM,EAAO1/C,SAC5B,QAAA8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MAIF,GAFCikD,IAAAjkD,EAAA,WAE6B,IAAnB6kD,EAAO1/C,QAChB,OADyC8+C,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MAClCukD,EAAKO,OAGd,MAFCb,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MAEK,IAAI8J,MAAM,eAClB,KApOU9N,EA6CV,EAAAuV,IAAA,OAAA7K,IAGA,WACE,OADSu9C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACFrD,KAAK4qB,KACd,EAACphB,IAED,SAASoE,GACP,MADa05C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACP,IAAI8J,MAAM,oBAClB,GAEA,CAAAyH,IAAA,QAAA7K,IAOA,WACE,OADUu9C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACFrD,KAAK4qB,OACX,KAAK28B,EACH,OADWD,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACJ,KACT,KAAKmkD,EAAMF,IAAA9gD,EAAA,QACX,KAAKihD,EACH,OADWH,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACJrD,KAAK+G,OACd,KAAK2gD,EAAQJ,IAAA9gD,EAAA,QACb,KAAKmhD,EACH,OADaL,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACNymB,EAAOnmB,KAAK3D,KAAK+G,QAC1B,QACE,MADFugD,IAAA9gD,EAAA,QAAA8gD,IAAAjkD,EAAA,MACQ,IAAI8J,MAAM,qBAEtB,EAAC3D,IAED,SAAUhB,GACR,MADe8+C,IAAAhkD,EAAA,KAAAgkD,IAAAjkD,EAAA,MACT,IAAI8J,MAAM,oBAClB,GAAC,CAAAyH,IAAA,cAAApM,MA2GD,WACE,OADY8+C,IAAAhkD,EAAA,MAAAgkD,IAAAjkD,EAAA,MACJrD,KAAK4qB,OACX,KAAK28B,EACH,OADWD,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACJgoB,EAAAA,QAAIu8B,KAAK3gB,WAClB,KAAKugB,EACH,OADSF,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACFgoB,EAAAA,QAAIu8B,KAAKzgB,OAAOllC,EAAAA,cAAcyF,WAAW1H,KAAK+G,SACvD,KAAK0gD,EACH,OADWH,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACJgoB,EAAAA,QAAIu8B,KAAK1gB,SAASlnC,KAAK+G,QAChC,KAAK2gD,EACH,OADWJ,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACJgoB,EAAAA,QAAIu8B,KAAKxgB,SAASpnC,KAAK+G,QAChC,KAAK4gD,EACH,OADaL,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACNgoB,EAAAA,QAAIu8B,KAAKvgB,WAAWrnC,KAAK+G,QAClC,QACE,OADFugD,IAAA9gD,EAAA,SAAA8gD,IAAAjkD,EAAA,MACS,KAEb,MA1MUkR,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAoOT,CAlNc,u5HClBL,OAAAgpD,EAAA,kBAAAv+B,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA4oD,IAgCL,IAAMpC,EAAY,WACvB,SAAAA,EAAYqC,EAAa9gB,IAjCf,SAAA5iC,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAiCmB6V,CAAA,KAAAktC,GAAAoC,IAAA9kD,EAAA,KAC3B,IAAM2mB,GAASm+B,IAAA/kD,EAAA,KAAGglD,EAAYp+B,aAC9B,GAD0Cm+B,IAAA/kD,EAAA,MACrC8mB,EAAAA,OAAOE,wBAAwBJ,GAClC,MAD8Cm+B,IAAA5hD,EAAA,QAAA4hD,IAAA/kD,EAAA,KACxC,IAAI8J,MAAM,wBACjBi7C,IAAA5hD,EAAA,QAAA4hD,IAAA/kD,EAAA,KAEDrD,KAAKwrB,QAAU68B,EAAYD,IAAA/kD,EAAA,KAC3BrD,KAAKsoD,WAAYC,EAAAA,EAAAA,oBAAmBt+B,EAAWsd,GAAI6gB,IAAA/kD,EAAA,KACnDrD,KAAKwoD,WAAYpvB,EAAAA,EAAAA,6BAA4Bp5B,KAAKsoD,WAAWF,IAAA/kD,EAAA,KAC7DrD,KAAK62B,IAAM0Q,CACb,CAEA,OA7CUpoC,EA6CV6mD,EA7CU5mD,EAwHT,EAAAwV,IAAA,cAAApM,MAhED,SAAmBigD,EAAUC,GAAaN,IAAA9kD,EAAA,KACxC,IAAMqlD,GAAYP,IAAA/kD,EAAA,MAAGulD,EAAAA,EAAAA,6BAA4BH,IAC3CI,GAAQT,IAAA/kD,EAAA,MAAGylD,EAAAA,EAAAA,oBAAmBL,IAC9BlhB,GAAE6gB,IAAA/kD,EAAA,KAAGslD,EAAalmB,WAAW8E,KAAKhhC,YAExC,OAFmD6hD,IAAA/kD,EAAA,MAE5C,IAAI2iD,EAAa,IAAIh8B,EAAAA,QAAQ6+B,EAAUH,GAAcnhB,EAC9D,KA9DUloC,EA6CV,EAAAuV,IAAA,cAAApM,MAuBA,WACE,OADY4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACLrD,KAAKwrB,OACd,GAEA,CAAA5W,IAAA,YAAApM,MAGA,WACE,OADU4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACHrD,KAAKwoD,SACd,GAAC,CAAA5zC,IAAA,KAAApM,MAED,WACE,OADG4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACIrD,KAAK62B,GACd,GAAC,CAAAjiB,IAAA,QAAApM,MAED,SAAM++B,GACJ,GADQ6gB,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACU,iBAAPkkC,EACT,MAD0B6gB,IAAA5hD,EAAA,QAAA4hD,IAAA/kD,EAAA,MACpB,IAAI8J,MAAM,wDAMlB,OALCi7C,IAAA5hD,EAAA,QAAA4hD,IAAA/kD,EAAA,MAEDrD,KAAKsoD,UAAU7lB,WAAW8E,GAAGlc,EAAAA,QAAI66B,OAAOx+C,WAAW6/B,IAAK6gB,IAAA/kD,EAAA,MACxDrD,KAAKwoD,WAAYpvB,EAAAA,EAAAA,6BAA4Bp5B,KAAKsoD,WAAWF,IAAA/kD,EAAA,MAC7DrD,KAAK62B,IAAM0Q,EAAG6gB,IAAA/kD,EAAA,MACPrD,IACT,GAEA,CAAA4U,IAAA,iBAAApM,MAIA,WACE,OADe4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACRrD,KAAKwrB,QAAQu9B,gBACtB,GAEA,CAAAn0C,IAAA,0BAAApM,MAIA,WACE,OADwB4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACjBrD,KAAKwrB,QAAQw9B,yBACtB,GAEA,CAAAp0C,IAAA,cAAApM,MAIA,WACE,OADY4/C,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACLrD,KAAKsoD,SACd,GAAC,CAAA1zC,IAAA,SAAApM,MAED,SAAOygD,GACL,OADwBb,IAAA9kD,EAAA,KAAA8kD,IAAA/kD,EAAA,MACjBrD,KAAKiqB,cAAgBg/B,EAAkBh/B,WAChD,MAxHU1V,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CA8DT,CA9BsB,shBChCb,OAAA8pD,EAAA,kBAAAr/B,CAAA,EAAAA,CAAA,gCAAAq/B,IANL,IAAM71B,GAAQ61B,IAAA7lD,EAAA,KAAG,CACtB8lD,OAAQ,iDACRC,QAAS,oCACT91B,UAAW,yCACX+1B,QAAS,iDACTC,WAAY,i+DCCF,OAAAC,EAAA,kBAAA1/B,CAAA,EAAAA,CAAA,CAYL,SAAS2/B,EAAcC,GAAKF,IAAAjmD,EAAA,KACjC,IAAMomD,GAASH,IAAAlmD,EAAA,KAAGsmD,EAAAA,YAAYC,QAAQH,EAAG,SAAUhiD,OAEnD,OAFyD8hD,IAAAlmD,EAAA,KAEjDomD,EAAG,SAAUhiD,MACnB,IAAK,SAAQ8hD,IAAA/iD,EAAA,QACb,IAAK,SACH,OADW+iD,IAAA/iD,EAAA,QAAA+iD,IAAAlmD,EAAA,KACJqD,OAAO+iD,EAAIjhD,SAEpB,IAAK,SAAQ+gD,IAAA/iD,EAAA,QACb,IAAK,SACH,OADW+iD,IAAA/iD,EAAA,QAAA+iD,IAAAlmD,EAAA,KACJ,IAAIsmD,EAAAA,YAAYD,EAAWD,EAAIjhD,SAASjB,WAEjD,IAAK,UAASgiD,IAAA/iD,EAAA,QACd,IAAK,UACH,OADY+iD,IAAA/iD,EAAA,QAAA+iD,IAAAlmD,EAAA,KACL,IAAIsmD,EAAAA,YAAYD,EAAW,CAChCD,EAAIjhD,QAAQqhD,KACZJ,EAAIjhD,QAAQshD,OACXviD,WAEL,IAAK,UAASgiD,IAAA/iD,EAAA,QACd,IAAK,UACH,OADY+iD,IAAA/iD,EAAA,QAAA+iD,IAAAlmD,EAAA,KACL,IAAIsmD,EAAAA,YAAYD,EAAW,CAChCD,EAAIjhD,QAAQuhD,OACZN,EAAIjhD,QAAQwhD,OACZP,EAAIjhD,QAAQyhD,OACZR,EAAIjhD,QAAQ0hD,SACX3iD,WAEL,QACE,MADFgiD,IAAA/iD,EAAA,QAAA+iD,IAAAlmD,EAAA,KACQJ,UAAU,8BAADmM,OAA+Bq6C,EAAG,WAEvD,CA3CYF,y8CCAA,OAAAY,EAAA,kBAAAtgC,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAAgrD,IAbL,IAAMC,EAAM,SAAAC,GAOjB,SAAAD,KAMU,SAAAzlD,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCANW6V,CAAA,KAAAsxC,GAAAD,IAAA7mD,EAAA,KAAA6mD,IAAA9mD,EAAA,aAAAkU,EAAAxJ,UAAAjK,OAAN0T,EAAI,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1J,UAAA0J,GAAA,OAAA0gB,EAAA,KAAAiyB,EAAA,CACX5yC,GACR,CAAC,OAIS,SAAApY,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAJTgiB,CAAAipC,EAAAC,GAISlrD,EAJTirD,GAIS/qD,EAJT,EAAAuV,IAAA,WAAA7K,IAED,WACE,OADaogD,IAAA7mD,EAAA,KAAA6mD,IAAA9mD,EAAA,MACN,CACT,GAAC,CAAAuR,IAAA,OAAA7K,IAED,WACE,OADSogD,IAAA7mD,EAAA,KAAA6mD,IAAA9mD,EAAA,KACF,GACT,MAJUkR,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAIT,CAjBgB,CAAS8B,EAAAA,UAkB3BipD,IAAA9mD,EAAA,KAED+mD,EAAOziD,29CCPK,OAAA2iD,EAAA,kBAAAzgC,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAAmrD,IAbL,IAAMC,EAAM,SAAAF,GAOjB,SAAAE,KAMU,SAAA5lD,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCANW6V,CAAA,KAAAyxC,GAAAD,IAAAhnD,EAAA,KAAAgnD,IAAAjnD,EAAA,aAAAkU,EAAAxJ,UAAAjK,OAAN0T,EAAI,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1J,UAAA0J,GAAA,OAAA0gB,EAAA,KAAAoyB,EAAA,CACX/yC,GACR,CAAC,OAIS,SAAApY,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAJTgiB,CAAAopC,EAAAF,GAISlrD,EAJTorD,GAISlrD,EAJT,EAAAuV,IAAA,WAAA7K,IAED,WACE,OADaugD,IAAAhnD,EAAA,KAAAgnD,IAAAjnD,EAAA,MACN,CACT,GAAC,CAAAuR,IAAA,OAAA7K,IAED,WACE,OADSugD,IAAAhnD,EAAA,KAAAgnD,IAAAjnD,EAAA,KACF,GACT,MAJUkR,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAIT,CAjBgB,CAAS8B,EAAAA,UAkB3BopD,IAAAjnD,EAAA,KAEDknD,EAAO5iD,6pHCPK,OAAA6iD,EAAA,kBAAA3gC,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAAqrD,IA0DL,IAAMC,EAAK,SAAAC,GAChB,SAAAD,EAAYjiD,EAAOmiD,GAAM,IAAAzH,GA3Df,SAAAv+C,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCA2De6V,CAAA,KAAA2xC,GAAAD,IAAAlnD,EAAA,KACvB,IAAMsnD,GAAMJ,IAAAnnD,EAAA,KAAGmF,EAAQ,GACnBoF,GAAI48C,IAAAnnD,EAAA,KAAa,QAAbmnD,IAAAhkD,EAAA,QAAA08C,EAAGyH,aAAI,EAAJA,EAAM/8C,YAAI,IAAAs1C,EAAAA,GAAAsH,IAAAhkD,EAAA,QAAI,KACzB,GAD4BgkD,IAAAnnD,EAAA,KACxBmnD,IAAAhkD,EAAA,QAAAoH,EAAKi9C,WAAW,OAAIL,IAAAhkD,EAAA,QAAIokD,GAC1B,MADkCJ,IAAAhkD,EAAA,QAAAgkD,IAAAnnD,EAAA,KAC5BJ,UAAU,kBAADmM,OAAmBu7C,EAAK/8C,KAAI,mBAAAwB,OAAkB5G,EAAK,MAKpE,GAJCgiD,IAAAhkD,EAAA,QAGDgkD,IAAAnnD,EAAA,KACa,KAATuK,EAAa,CAAA48C,IAAAhkD,EAAA,QAAAgkD,IAAAnnD,EAAA,KACfuK,EAAOg9C,GAAMJ,IAAAhkD,EAAA,QAAG,MAAGgkD,IAAAhkD,EAAA,QAAG,KACtB,IAAMskD,GAAMN,IAAAnnD,EAAA,KAoBlB,SAA2B0nD,GAAM,IAAA3G,EAAAoG,IAAAlnD,EAAA,KAI/B,IAAMwnD,GAAMN,IAAAnnD,EAAA,MAAG0nD,EAAKxkD,SAAS,GAAGzC,QAChC,OADuC0mD,IAAAnnD,EAAA,MACW,QAAlDmnD,IAAAhkD,EAAA,QAAA49C,EAAO,CAAC,GAAI,IAAK,KAAK4G,MAAK,SAAChoC,GAAQ,OAAAwnC,IAAAlnD,EAAA,KAAAknD,IAAAnnD,EAAA,MAAAynD,GAAU9nC,CAAE,WAAE,IAAAohC,EAAAA,GAAAoG,IAAAhkD,EAAA,QAAIskD,EACxD,CA1BqBG,CAAkBziD,IAEjC,OAFwCgiD,IAAAnnD,EAAA,KAEhCynD,GACN,KAAK,GAAEN,IAAAhkD,EAAA,QACP,KAAK,IAAGgkD,IAAAhkD,EAAA,QACR,KAAK,IAAGgkD,IAAAhkD,EAAA,QAAAgkD,IAAAnnD,EAAA,KACNuK,GAAQk9C,EAAOvkD,WAAWikD,IAAAnnD,EAAA,KAC1B,MAEF,QACE,MADFmnD,IAAAhkD,EAAA,QAAAgkD,IAAAnnD,EAAA,MACQ2D,WAAW,uCAADoI,OACyB5G,EAAK,WAAA4G,OAAU07C,IAG9D,MAACN,IAAAhkD,EAAA,eAAAgkD,IAAAnnD,EAAA,MAAA80B,EAAA,KAAAsyB,EAAA,CAEK78C,EAAMpF,GACd,CAAC,OAvFS,SAAApJ,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAuFTgiB,CAAAspC,EAAAC,GAvFSvrD,EAuFTsrD,EAvFSprD,GAAAkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAuFT,CA7Be,CAASuqD,EAAAA,s9CC1Df,OAAAuB,EAAA,kBAAArhC,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAA+rD,IAbL,IAAMC,EAAO,SAAAd,GAOlB,SAAAc,KAMU,SAAAxmD,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCANW6V,CAAA,KAAAqyC,GAAAD,IAAA5nD,EAAA,KAAA4nD,IAAA7nD,EAAA,aAAAkU,EAAAxJ,UAAAjK,OAAN0T,EAAI,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1J,UAAA0J,GAAA,OAAA0gB,EAAA,KAAAgzB,EAAA,CACX3zC,GACR,CAAC,OAIS,SAAApY,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAJTgiB,CAAAgqC,EAAAd,GAISlrD,EAJTgsD,GAIS9rD,EAJT,EAAAuV,IAAA,WAAA7K,IAED,WACE,OADamhD,IAAA5nD,EAAA,KAAA4nD,IAAA7nD,EAAA,MACN,CACT,GAAC,CAAAuR,IAAA,OAAA7K,IAED,WACE,OADSmhD,IAAA5nD,EAAA,KAAA4nD,IAAA7nD,EAAA,KACF,GACT,MAJUkR,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAIT,CAjBiB,CAAS8B,EAAAA,UAkB5BgqD,IAAA7nD,EAAA,KAED8nD,EAAQxjD,+9CCPI,OAAAyjD,EAAA,kBAAAvhC,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAAisD,IAbL,IAAMC,EAAO,SAAAhB,GAOlB,SAAAgB,KAMU,SAAA1mD,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCANW6V,CAAA,KAAAuyC,GAAAD,IAAA9nD,EAAA,KAAA8nD,IAAA/nD,EAAA,aAAAkU,EAAAxJ,UAAAjK,OAAN0T,EAAI,IAAApX,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1J,UAAA0J,GAAA,OAAA0gB,EAAA,KAAAkzB,EAAA,CACX7zC,GACR,CAAC,OAIS,SAAApY,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAJTgiB,CAAAkqC,EAAAhB,GAISlrD,EAJTksD,GAIShsD,EAJT,EAAAuV,IAAA,WAAA7K,IAED,WACE,OADaqhD,IAAA9nD,EAAA,KAAA8nD,IAAA/nD,EAAA,MACN,CACT,GAAC,CAAAuR,IAAA,OAAA7K,IAED,WACE,OADSqhD,IAAA9nD,EAAA,KAAA8nD,IAAA/nD,EAAA,KACF,GACT,MAJUkR,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAIT,CAjBiB,CAAS8B,EAAAA,UAkB5BkqD,IAAA/nD,EAAA,KAEDgoD,EAAQ1jD,02UCPI,OAAA2jD,EAAA,kBAAAzhC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAA6Y,EAAA9c,EAAAE,EAAAD,GAAA,OAAAC,EAAA+c,EAAA/c,MAAAF,EAAAc,OAAA4O,eAAA1P,EAAAE,EAAA,CAAAmJ,MAAApJ,EAAA0P,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA5T,EAAAE,GAAAD,EAAAD,CAAA,UAAAid,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA8rD,IAQL,IAAM3B,EAAW,WAkDtB,OA1DUxqD,EAeV,SAAAwqD,EAAY/7C,EAAM/E,GAiBhB,OAhCQ,SAAAlE,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAegB6V,CAAA,KAAA6wC,GAN1B1tC,EAAA,mBAGAA,EAAA,oBAAAqvC,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,KAIQwF,aAAkBzI,MAEvBkrD,IAAA9kD,EAAA,SAF+B8kD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KAC9BwF,EAAS,CAACA,IAGZyiD,IAAAjoD,EAAA,KACAwF,EAASA,EAAOoa,KAAI,SAACzjB,GAEnB,OAFyB8rD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,KAER,iBAAN7D,GAAgB8rD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KAClB7D,IACR8rD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KACG7D,aAAamqD,GAAa2B,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KACrB7D,EAAE+H,aACV+jD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KACMqD,OAAOlH,IAChB,IAAG8rD,IAAAjoD,EAAA,KAEKuK,GACN,IAAK,MAAK09C,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,KACRrD,KAAI,IAAO,IAAIc,EAAAA,MAAM+H,GAAQyiD,IAAAjoD,EAAA,MAC7B,MACF,IAAK,OAAMioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACTrD,KAAI,IAAO,IAAIoqD,EAAAA,OAAOvhD,GAAQyiD,IAAAjoD,EAAA,MAC9B,MACF,IAAK,OAAMioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACTrD,KAAI,IAAO,IAAIuqD,EAAAA,OAAO1hD,GAAQyiD,IAAAjoD,EAAA,MAC9B,MACF,IAAK,MAAKioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACRrD,KAAI,IAAO,IAAIiC,EAAAA,cAAc4G,GAAQyiD,IAAAjoD,EAAA,MACrC,MACF,IAAK,OAAMioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACTrD,KAAI,IAAO,IAAImrD,EAAAA,QAAQtiD,GAAQyiD,IAAAjoD,EAAA,MAC/B,MACF,IAAK,OAAMioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACTrD,KAAI,IAAO,IAAIqrD,EAAAA,QAAQxiD,GAAQyiD,IAAAjoD,EAAA,MAC/B,MACF,QACE,MADFioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACQJ,UAAU,iBAADmM,OAAkBxB,IACpC09C,IAAAjoD,EAAA,MAEDrD,KAAK4N,KAAOA,CACd,EAxDUxO,EAgNT,EAAAwV,IAAA,SAAApM,MAED,SAAcoF,GACZ,OADkB09C,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACVuK,GACN,IAAK,MAAK09C,IAAA9kD,EAAA,QACV,IAAK,OAAM8kD,IAAA9kD,EAAA,QACX,IAAK,OAAM8kD,IAAA9kD,EAAA,QACX,IAAK,MAAK8kD,IAAA9kD,EAAA,QACV,IAAK,OAAM8kD,IAAA9kD,EAAA,QACX,IAAK,OACH,OADS8kD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,OACF,EACT,QACE,OADFioD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,OACS,EAEb,GAEA,CAAAuR,IAAA,UAAApM,MAOA,SAAe+iD,GACb,OADsBD,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACfkoD,EAAQlkD,MAAM,GAAG2G,aAC1B,KAzOU3O,EA0DV,EAAAuV,IAAA,WAAApM,MAIA,WAAW8iD,IAAAhoD,EAAA,KACT,IAAMkoD,GAAEF,IAAAjoD,EAAA,MAAGrD,KAAI,IAAKuH,YACpB,GAD+B+jD,IAAAjoD,EAAA,MAC3BioD,IAAA9kD,EAAA,QAAAglD,EAAK3jD,OAAO4jD,mBAAgBH,IAAA9kD,EAAA,QAAIglD,EAAK3jD,OAAO6jD,kBAC9C,MADgEJ,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MAC1D2D,WACJ,SAAAoI,OAASo8C,EAAE,iCAAAp8C,OACLvH,OAAO4jD,iBAAgB,MAAAr8C,OAAKvH,OAAO6jD,iBAAgB,MAI7D,OAFCJ,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MAEMwE,OAAO2jD,EAChB,GAEA,CAAA52C,IAAA,WAAApM,MACA,WACE,OADS8iD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,MACFrD,KAAI,IAAKuH,UAClB,GAEA,CAAAqN,IAAA,QAAApM,MACA,WAAQ8iD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,MACNrD,KAAK2rD,WAAW,IAChB,IAAM/kD,GAAC0kD,IAAAjoD,EAAA,MAAGrD,KAAKuH,YACf,GAD0B+jD,IAAAjoD,EAAA,MACtBqD,OAAOC,OAAO,GAAIC,KAAOA,EAC3B,MAD8B0kD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACxB2D,WAAW,4BAADoI,OAA6BxI,IAG/C,OAFC0kD,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MAEMgoB,EAAAA,QAAIQ,MAAMysB,OAAO,IAAIjtB,EAAAA,QAAI0J,MAAMnuB,GACxC,GAEA,CAAAgO,IAAA,QAAApM,MACA,WAEE,OAFM8iD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,MACNrD,KAAK2rD,WAAW,IAAIL,IAAAjoD,EAAA,MACbgoB,EAAAA,QAAIQ,MAAMwsB,OACf,IAAIhtB,EAAAA,QAAI66B,OAAOx/C,OAAOQ,QAAQ,GAAIlH,KAAKuH,aAE3C,GAEA,CAAAqN,IAAA,SAAApM,MAIA,WAAS8iD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,MACPrD,KAAK2rD,WAAW,KAEhB,IAAM/kD,GAAC0kD,IAAAjoD,EAAA,MAAGrD,KAAI,IAAKuH,YACbqkD,GAAIN,IAAAjoD,EAAA,MAAGqD,OAAOC,OAAO,GAAIC,GAAK,MAC9BilD,GAAIP,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,IAEhC,OAFoC0kD,IAAAjoD,EAAA,MAE7BgoB,EAAAA,QAAIQ,MAAM6sB,QACf,IAAIrtB,EAAAA,QAAIygC,YAAY,CAClBhC,GAAI,IAAIz+B,EAAAA,QAAI0J,MAAM62B,GAClB/B,GAAI,IAAIx+B,EAAAA,QAAI66B,OAAO2F,KAGzB,GAEA,CAAAj3C,IAAA,SAAApM,MAIA,WAAS8iD,IAAAhoD,EAAA,KAAAgoD,IAAAjoD,EAAA,MACPrD,KAAK2rD,WAAW,KAChB,IAAM/kD,GAAC0kD,IAAAjoD,EAAA,MAAGrD,KAAI,IAAKuH,YAEnB,OAF8B+jD,IAAAjoD,EAAA,MAEvBgoB,EAAAA,QAAIQ,MAAM4sB,QACf,IAAIptB,EAAAA,QAAI0gC,aAAa,CACnBjC,GAAI,IAAIz+B,EAAAA,QAAI66B,OAAOx/C,OAAOQ,QAAQ,GAAIN,GAAK,MAC3CijD,GAAI,IAAIx+B,EAAAA,QAAI66B,OAAOx/C,OAAOQ,QAAQ,GAAIN,MAG5C,GAEA,CAAAgO,IAAA,SAAApM,MACA,WAAS8iD,IAAAhoD,EAAA,KACP,IAAMsD,GAAC0kD,IAAAjoD,EAAA,MAAGrD,KAAI,IAAKuH,YACbykD,GAAMV,IAAAjoD,EAAA,MAAGqD,OAAOC,OAAO,GAAIC,GAAK,OAChCqlD,GAAMX,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,GAAK,OACjCslD,GAAMZ,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,GAAK,MACjCulD,GAAMb,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,IAElC,OAFqC0kD,IAAAjoD,EAAA,MAE9BgoB,EAAAA,QAAIQ,MAAM+sB,QACf,IAAIvtB,EAAAA,QAAI+gC,YAAY,CAClBlC,KAAM,IAAI7+B,EAAAA,QAAI0J,MAAMi3B,GACpB/B,KAAM,IAAI5+B,EAAAA,QAAI66B,OAAO+F,GACrBjC,KAAM,IAAI3+B,EAAAA,QAAI66B,OAAOgG,GACrBnC,KAAM,IAAI1+B,EAAAA,QAAI66B,OAAOiG,KAG3B,GAEA,CAAAv3C,IAAA,SAAApM,MACA,WAAS8iD,IAAAhoD,EAAA,KACP,IAAMsD,GAAC0kD,IAAAjoD,EAAA,MAAGrD,KAAI,IAAKuH,YACbykD,GAAMV,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,GAAK,OACjCqlD,GAAMX,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,GAAK,OACjCslD,GAAMZ,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,GAAK,MACjCulD,GAAMb,IAAAjoD,EAAA,MAAGqD,OAAOQ,QAAQ,GAAIN,IAElC,OAFqC0kD,IAAAjoD,EAAA,MAE9BgoB,EAAAA,QAAIQ,MAAM8sB,QACf,IAAIttB,EAAAA,QAAIghC,aAAa,CACnBnC,KAAM,IAAI7+B,EAAAA,QAAI66B,OAAO8F,GACrB/B,KAAM,IAAI5+B,EAAAA,QAAI66B,OAAO+F,GACrBjC,KAAM,IAAI3+B,EAAAA,QAAI66B,OAAOgG,GACrBnC,KAAM,IAAI1+B,EAAAA,QAAI66B,OAAOiG,KAG3B,GAEA,CAAAv3C,IAAA,UAAApM,MACA,WACE,OADQ8iD,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACArD,KAAK4N,MACX,IAAK,MACH,OADQ09C,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACDrD,KAAKssD,QACd,IAAK,OACH,OADShB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACFrD,KAAKusD,SACd,IAAK,OACH,OADSjB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACFrD,KAAKwsD,SACd,IAAK,MACH,OADQlB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACDrD,KAAKysD,QACd,IAAK,OACH,OADSnB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACFrD,KAAK0sD,SACd,IAAK,OACH,OADSpB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACFrD,KAAK2sD,SACd,QACE,MADFrB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MACQJ,UAAU,iBAADmM,OAAkBpP,KAAK4N,OAE5C,GAAC,CAAAgH,IAAA,UAAApM,MAED,WACE,OADQ8iD,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACDrD,KAAI,IAAKiH,SAClB,GAAC,CAAA2N,IAAA,WAAApM,MAED,WACE,OADS8iD,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACFrD,KAAI,IAAKuG,UAClB,GAAC,CAAAqO,IAAA,SAAApM,MAED,WACE,OADO8iD,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACA,CACLmF,MAAOxI,KAAKuH,WAAWhB,WACvBqH,KAAM5N,KAAK4N,KAEf,GAAC,CAAAgH,IAAA,aAAApM,MAED,SAAWokD,GACT,GADetB,IAAAhoD,EAAA,MAAAgoD,IAAAjoD,EAAA,MACXrD,KAAI,IAAKmH,KAAOylD,EAClB,MADwBtB,IAAA9kD,EAAA,QAAA8kD,IAAAjoD,EAAA,MAClB2D,WAAW,uBAADoI,OAAwBw9C,EAAI,WAAAx9C,OAAUpP,KAAK4N,KAAI,MAChE09C,IAAA9kD,EAAA,OACH,MAhNU+N,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAyOT,CAjOqB,yx9BCRZ,OAAAytD,EAAA,kBAAAhjC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAqtD,IAGZ,IAAMC,GAAGD,IAAAxpD,EAAA,KAAG,KACN0pD,GAASF,IAAAxpD,EAAA,KAAG,uBAUL2pD,GAAgBH,IAAAxpD,EAAA,KAAG,GAQnB4pD,GAAiBJ,IAAAxpD,EAAA,KAAG,GAQpB6pD,GAAiBL,IAAAxpD,EAAA,KAAG,GAUpB8pD,GAAuBN,IAAAxpD,EAAA,KAAG,GA4C1B0zB,EAAS,kBApFV53B,EAoFU,SAAA43B,KApFV,SAAApyB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAoFU6V,CAAA,KAAAie,EAAA,EApFV33B,EAoFU,EAAAwV,IAAA,mBAAApM,MACpB,SAAwB4kD,EAAczC,GACpC,GAD0CkC,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,KACtCsnD,EAAKnsC,OAAQ,CAAAquC,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,KACf,IAAIwpD,IAAAxpD,EAAA,KACF+pD,EAAaC,eAAgBzE,EAAAA,EAAAA,6BAA4B+B,EAAKnsC,OAChE,CAAE,MAAOrf,GACP,MADU0tD,IAAAxpD,EAAA,KACJ,IAAI8J,MAAM,4BAClB,CACF,MAAC0/C,IAAArmD,EAAA,OACH,GAEA,CAAAoO,IAAA,gBAAApM,MAOA,SAAqB8kD,GAAWT,IAAAvpD,EAAA,KAC9B,IAAMuX,GAAMgyC,IAAAxpD,EAAA,MAAG,CAAC,GAAEwpD,IAAAxpD,EAAA,MACdiqD,EAAUD,iBAAiBR,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAC7BwX,EAAO2D,QAAS4a,EAAAA,EAAAA,6BAA4Bk0B,EAAUD,kBACvDR,IAAArmD,EAAA,QAED,IAAM+mD,GAAKV,IAAAxpD,EAAA,MAAGiqD,EAAUt1B,OAAOxvB,SACzBglD,GAAaX,IAAAxpD,EAAA,MAAGiqD,EAAUt1B,OAAM,SAAUvwB,MAEhD,OAFqDolD,IAAAxpD,EAAA,MAE7CmqD,GACN,IAAK,gBAAeX,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACpBwX,EAAOjN,KAAO,gBAAgBi/C,IAAAxpD,EAAA,MAC9BwX,EAAO0a,YAAck4B,EAAmBF,EAAMh4B,eAAes3B,IAAAxpD,EAAA,MAC7DwX,EAAO6yC,gBAAkB1tD,KAAK2tD,eAAeJ,EAAMG,mBAAmBb,IAAAxpD,EAAA,MACtE,MAEF,IAAK,UAASwpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACdwX,EAAOjN,KAAO,UAAUi/C,IAAAxpD,EAAA,MACxBwX,EAAO0a,aAAc6D,EAAAA,EAAAA,6BAA4Bm0B,EAAMh4B,eAAes3B,IAAAxpD,EAAA,MACtEwX,EAAO0T,MAAQnC,EAAAA,MAAMs4B,cAAc6I,EAAMh/B,SAASs+B,IAAAxpD,EAAA,MAClDwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,MACpD,MAEF,IAAK,2BAA0BwpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MAC/BwX,EAAOjN,KAAO,2BAA2Bi/C,IAAAxpD,EAAA,MACzCwX,EAAOgzC,UAAYzhC,EAAAA,MAAMs4B,cAAc6I,EAAMM,aAAahB,IAAAxpD,EAAA,MAC1DwX,EAAOizC,QAAU9tD,KAAK2tD,eAAeJ,EAAMO,WAAWjB,IAAAxpD,EAAA,MACtDwX,EAAO0a,aAAc6D,EAAAA,EAAAA,6BAA4Bm0B,EAAMh4B,eAAes3B,IAAAxpD,EAAA,MACtEwX,EAAOkzC,UAAY3hC,EAAAA,MAAMs4B,cAAc6I,EAAMQ,aAAalB,IAAAxpD,EAAA,MAC1DwX,EAAOmzC,WAAahuD,KAAK2tD,eAAeJ,EAAMS,cAAcnB,IAAAxpD,EAAA,MAC5DwX,EAAOozC,KAAO,GAEd,IAAMA,GAAIpB,IAAAxpD,EAAA,MAAGkqD,EAAMU,QAEnBpB,IAAAxpD,EAAA,MACApD,OAAO0Y,KAAKs1C,GAAMl1C,SAAQ,SAACm1C,GAAYrB,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,MACrCwX,EAAOozC,KAAKhhD,KAAKmf,EAAAA,MAAMs4B,cAAcuJ,EAAKC,IAC5C,IAAGrB,IAAAxpD,EAAA,MACH,MAEF,IAAK,wBAAuBwpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MAC5BwX,EAAOjN,KAAO,wBAAwBi/C,IAAAxpD,EAAA,MACtCwX,EAAOgzC,UAAYzhC,EAAAA,MAAMs4B,cAAc6I,EAAMM,aAAahB,IAAAxpD,EAAA,MAC1DwX,EAAOszC,WAAanuD,KAAK2tD,eAAeJ,EAAMY,cAActB,IAAAxpD,EAAA,MAC5DwX,EAAO0a,aAAc6D,EAAAA,EAAAA,6BAA4Bm0B,EAAMh4B,eAAes3B,IAAAxpD,EAAA,MACtEwX,EAAOkzC,UAAY3hC,EAAAA,MAAMs4B,cAAc6I,EAAMQ,aAAalB,IAAAxpD,EAAA,MAC1DwX,EAAOuzC,QAAUpuD,KAAK2tD,eAAeJ,EAAMa,WAAWvB,IAAAxpD,EAAA,MACtDwX,EAAOozC,KAAO,GAEd,IAAMA,GAAIpB,IAAAxpD,EAAA,MAAGkqD,EAAMU,QAEnBpB,IAAAxpD,EAAA,MACApD,OAAO0Y,KAAKs1C,GAAMl1C,SAAQ,SAACm1C,GAAYrB,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,MACrCwX,EAAOozC,KAAKhhD,KAAKmf,EAAAA,MAAMs4B,cAAcuJ,EAAKC,IAC5C,IAAGrB,IAAAxpD,EAAA,MACH,MAEF,IAAK,cAAawpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MAClBwX,EAAOjN,KAAO,cAAci/C,IAAAxpD,EAAA,MACpBkqD,EAAMc,OAAM,WACbhjC,EAAAA,QAAI+C,UAAUyM,sBAAoBgyB,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MACrCwX,EAAOwzC,KAAO3H,EAAAA,mBAAmBhC,cAAc6I,EAAMc,QAAQxB,IAAAxpD,EAAA,QAE/DwpD,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MACEwX,EAAOwzC,KAAOjiC,EAAAA,MAAMs4B,cAAc6I,EAAMc,QAAQxB,IAAAxpD,EAAA,OAEnDwpD,IAAAxpD,EAAA,MACDwX,EAAO6G,MAAQ1hB,KAAK2tD,eAAeJ,EAAM7rC,SAASmrC,IAAAxpD,EAAA,MAClD,MAEF,IAAK,aAAYwpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACjBwX,EAAOjN,KAAO,aAAai/C,IAAAxpD,EAAA,MAC3BwX,EAAOyzC,QAAUb,EAAmBF,EAAMe,WAAWzB,IAAAxpD,EAAA,MACrDwX,EAAOkT,UAAYw/B,EAAMh/B,QAAQ/lB,QAAQjC,WAAWsmD,IAAAxpD,EAAA,MACpDwX,EAAOkT,WAAYe,EAAAA,EAAAA,SAAQjU,EAAOkT,UAAW,MAAM8+B,IAAAxpD,EAAA,MACnDwX,EAAO0zC,UAAYhB,EAAMgB,YAAY1B,IAAAxpD,EAAA,MACrC,MAEF,IAAK,aAkBH,GAlBewpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACjBwX,EAAOjN,KAAO,aAAai/C,IAAAxpD,EAAA,MACvBkqD,EAAMiB,iBAAiB3B,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MACzBwX,EAAO2zC,cAAgBf,EAAmBF,EAAMiB,kBACjD3B,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAEDwX,EAAO4zC,WAAalB,EAAMkB,aAAa5B,IAAAxpD,EAAA,MACvCwX,EAAO6zC,SAAWnB,EAAMmB,WAAW7B,IAAAxpD,EAAA,MACnCwX,EAAO8zC,aAAepB,EAAMoB,eAAe9B,IAAAxpD,EAAA,MAC3CwX,EAAO+zC,aAAerB,EAAMqB,eAAe/B,IAAAxpD,EAAA,MAC3CwX,EAAOg0C,aAAetB,EAAMsB,eAAehC,IAAAxpD,EAAA,MAC3CwX,EAAOi0C,cAAgBvB,EAAMuB,gBAC7BjC,IAAAxpD,EAAA,MACAwX,EAAOk0C,gBACkB/5C,IAAvBu4C,EAAMwB,cAA0BlC,IAAArmD,EAAA,QAC5B+mD,EAAMwB,aAAaxoD,SAAS,eAAQsmD,IAAArmD,EAAA,QAC1BqmD,IAAAxpD,EAAA,MAEZkqD,EAAM56B,SAAU,CAAAk6B,IAAArmD,EAAA,QAClB,IAAMmsB,GAAMk6B,IAAAxpD,EAAA,MAAG,CAAC,GACV2G,GAAG6iD,IAAAxpD,EAAA,MAAGkqD,EAAM56B,SAAS/d,MAAM5K,OACjC,GADuC6iD,IAAAxpD,EAAA,MAC3B,YAAR2G,EAAmB6iD,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MACrBsvB,EAAOq8B,iBAAmBvB,EAAmBF,EAAM56B,SAAS/d,YACvD,GAAAi4C,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAAY,cAAR2G,EAAqB6iD,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAC9BsvB,EAAOklB,UAAY0V,EAAM56B,SAAS/d,MAAMijC,iBACnC,GAAAgV,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAAY,UAAR2G,EAAiB6iD,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAC1BsvB,EAAOs8B,WAAa1B,EAAM56B,SAAS/d,MAAMkjC,aACpC,GAAA+U,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MAAY,yBAAR2G,EAAgC,CAAA6iD,IAAArmD,EAAA,SACzC,IAAM0oD,GAAarC,IAAAxpD,EAAA,MAAGkqD,EAAM56B,SAAS/d,MAAMmjC,wBAAuB8U,IAAAxpD,EAAA,MAClEsvB,EAAOolB,qBAAuB5tB,EAAAA,OAAOglC,oBACnCD,EAAcnpD,QAElB,MAAC8mD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,MAEDsvB,EAAOy8B,OAAS7B,EAAM56B,SAASy8B,SAASvC,IAAAxpD,EAAA,MACxCwX,EAAO8X,OAASA,CAClB,MAACk6B,IAAArmD,EAAA,QAAAqmD,IAAAxpD,EAAA,MACD,MAGF,IAAK,cAAawpD,IAAArmD,EAAA,QAClB,IAAK,kBAAiBqmD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACtBwX,EAAOjN,KAAO,kBAAkBi/C,IAAAxpD,EAAA,MAChCwX,EAAOw0C,QAAUjjC,EAAAA,MAAMs4B,cAAc6I,EAAM8B,WAAWxC,IAAAxpD,EAAA,MACtDwX,EAAOy0C,OAASljC,EAAAA,MAAMs4B,cAAc6I,EAAM+B,UAAUzC,IAAAxpD,EAAA,MACpDwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,MACpDwX,EAAO00C,MAAQvvD,KAAKwvD,cAAcjC,EAAMgC,SAAS1C,IAAAxpD,EAAA,MACjDwX,EAAO40C,QAAUlC,EAAMkC,UAAUlpD,WAAWsmD,IAAAxpD,EAAA,MAC5C,MAEF,IAAK,iBAAgBwpD,IAAArmD,EAAA,QAAEqmD,IAAAxpD,EAAA,MACrBwX,EAAOjN,KAAO,iBAAiBi/C,IAAAxpD,EAAA,MAC/BwX,EAAOw0C,QAAUjjC,EAAAA,MAAMs4B,cAAc6I,EAAM8B,WAAWxC,IAAAxpD,EAAA,MACtDwX,EAAOy0C,OAASljC,EAAAA,MAAMs4B,cAAc6I,EAAM+B,UAAUzC,IAAAxpD,EAAA,MACpDwX,EAAO60C,UAAY1vD,KAAK2tD,eAAeJ,EAAMmC,aAAa7C,IAAAxpD,EAAA,MAC1DwX,EAAO00C,MAAQvvD,KAAKwvD,cAAcjC,EAAMgC,SAAS1C,IAAAxpD,EAAA,MACjDwX,EAAO40C,QAAUlC,EAAMkC,UAAUlpD,WAAWsmD,IAAAxpD,EAAA,MAC5C,MAGF,IAAK,qBAAoBwpD,IAAArmD,EAAA,SACzB,IAAK,yBAAwBqmD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC7BwX,EAAOjN,KAAO,yBAAyBi/C,IAAAxpD,EAAA,OACvCwX,EAAOw0C,QAAUjjC,EAAAA,MAAMs4B,cAAc6I,EAAM8B,WAAWxC,IAAAxpD,EAAA,OACtDwX,EAAOy0C,OAASljC,EAAAA,MAAMs4B,cAAc6I,EAAM+B,UAAUzC,IAAAxpD,EAAA,OACpDwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,OACpDwX,EAAO00C,MAAQvvD,KAAKwvD,cAAcjC,EAAMgC,SAAS1C,IAAAxpD,EAAA,OACjD,MAEF,IAAK,eAAcwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACnBwX,EAAOjN,KAAO,eAAei/C,IAAAxpD,EAAA,OAC7BwX,EAAO0a,aAAc6D,EAAAA,EAAAA,6BAA4Bm0B,GAAOV,IAAAxpD,EAAA,OACxD,MAEF,IAAK,aAAYwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACjBwX,EAAOjN,KAAO,aACdi/C,IAAAxpD,EAAA,OACAwX,EAAOpT,KAAO8lD,EAAMoC,WAAWppD,SAAS,SAASsmD,IAAAxpD,EAAA,OACjDwX,EAAOrS,MAAQ+kD,EAAMqC,YAAY/C,IAAAxpD,EAAA,OACjC,MAEF,IAAK,YAAWwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAChBwX,EAAOjN,KAAO,YAAYi/C,IAAAxpD,EAAA,OAC1B,MAEF,IAAK,eAAcwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACnBwX,EAAOjN,KAAO,eAAei/C,IAAAxpD,EAAA,OAC7BwX,EAAOg1C,OAAStC,EAAMsC,SAAStpD,WAAWsmD,IAAAxpD,EAAA,OAC1C,MAEF,IAAK,yBAAwBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC7BwX,EAAOjN,KAAO,yBAAyBi/C,IAAAxpD,EAAA,OACvCwX,EAAO0T,MAAQnC,EAAAA,MAAMs4B,cAAc6I,EAAMh/B,SAASs+B,IAAAxpD,EAAA,OAClDwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,OACpDwX,EAAOi1C,UAAY,GAAGjD,IAAAxpD,EAAA,OACtBkqD,EAAMuC,YAAY/2C,SAAQ,SAAC0d,GAAao2B,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,OACtCwX,EAAOi1C,UAAU7iD,KAAKqoB,EAAAA,SAASrvB,QAAQwwB,GACzC,IAAGo2B,IAAAxpD,EAAA,OACH,MAEF,IAAK,wBAAuBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC5BwX,EAAOjN,KAAO,wBAAwBi/C,IAAAxpD,EAAA,OACtCwX,EAAOk1B,UAAYwd,EAAMxnD,MAAM,OAAO8mD,IAAAxpD,EAAA,OACtC,MAEF,IAAK,gCAA+BwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACpCwX,EAAOjN,KAAO,gCAAgCi/C,IAAAxpD,EAAA,OAC9CwX,EAAOk1C,YAActC,EAAmBF,EAAMwC,eAAelD,IAAAxpD,EAAA,OAC7D,MAEF,IAAK,8BAA6BwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAClCwX,EAAOjN,KAAO,8BAA8Bi/C,IAAAxpD,EAAA,OAC5C,MAEF,IAAK,oBAAmBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAuOhC,SAAsCkqD,EAAO1yC,GAC3C,OADmDgyC,IAAAvpD,EAAA,MAAAupD,IAAAxpD,EAAA,OAC3CkqD,EAAK,SAAU9lD,MACrB,IAAK,+BAA8BolD,IAAArmD,EAAA,SACjC,IAAM+9B,GAASsoB,IAAAxpD,EAAA,OAAGkqD,EAAMhpB,aACxB,OADoCsoB,IAAAxpD,EAAA,OAC5BkhC,EAAS,SAAU98B,MACzB,KAAK4jB,EAAAA,QAAI2kC,gBAAgBxkC,UAAU/jB,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACvCwX,EAAOjN,KAAO,2BAA2Bi/C,IAAAxpD,EAAA,OACzCwX,EAAO2Q,QAAUiiC,EAAmBlpB,EAAU/Y,UAAUvB,aAAa4iC,IAAAxpD,EAAA,OACrE,MAEF,KAAKgoB,EAAAA,QAAI2kC,gBAAgB50B,YAAY3zB,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACzCwX,EAAOjN,KAAO,6BAA6Bi/C,IAAAxpD,EAAA,OAC3CwX,EAAO2Q,QAAUiiC,EACflpB,EAAUxH,YAAY9S,aAExB,IAAMqD,GAAQu/B,IAAAxpD,EAAA,OAAGkhC,EAAUxH,YAAYxO,SAAQs+B,IAAAxpD,EAAA,OACvCiqB,EAAQ,WACTjC,EAAAA,QAAI+C,UAAUyM,sBAAoBgyB,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACrCwX,EAAO0T,MAAQ24B,EAAAA,gBAAgBxC,cAAcp3B,GAAUu/B,IAAAxpD,EAAA,SAEzDwpD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACEwX,EAAO0T,MAAQnC,EAAAA,MAAMs4B,cAAcp3B,GAAUu/B,IAAAxpD,EAAA,QAEhDwpD,IAAAxpD,EAAA,OACD,MAEF,KAAKgoB,EAAAA,QAAI2kC,gBAAgB30B,QAAQ5zB,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACrCwX,EAAOjN,KAAO,yBAAyBi/C,IAAAxpD,EAAA,OACvCwX,EAAOo1C,OAASxC,EAAmBlpB,EAAUlJ,QAAQ60B,YAAYrD,IAAAxpD,EAAA,OACjEwX,EAAO40C,QAAUlrB,EAAUlJ,QAAQo0B,UAAUlpD,WAAWsmD,IAAAxpD,EAAA,OACxD,MAEF,KAAKgoB,EAAAA,QAAI2kC,gBAAgBniD,OAAOpG,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACpCwX,EAAOjN,KAAO,wBAAwBi/C,IAAAxpD,EAAA,OACtCwX,EAAO2Q,QAAUiiC,EAAmBlpB,EAAU12B,OAAOoc,aAAa4iC,IAAAxpD,EAAA,OAClEwX,EAAOpT,KAAO88B,EAAU12B,OAAO8hD,WAAWppD,SAAS,SAASsmD,IAAAxpD,EAAA,OAC5D,MAEF,KAAKgoB,EAAAA,QAAI2kC,gBAAgB10B,mBAAmB7zB,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAChDwX,EAAOjN,KAAO,oCAAoCi/C,IAAAxpD,EAAA,OAClDwX,EAAOk1B,UAAYxL,EAChBjJ,mBACAyU,YACAhqC,MAAM,OAAO8mD,IAAAxpD,EAAA,OAChB,MAEF,KAAKgoB,EAAAA,QAAI2kC,gBAAgBz0B,gBAAgB9zB,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC7CwX,EAAOjN,KAAO,iCAAiCi/C,IAAAxpD,EAAA,OAC/CwX,EAAOwhB,gBAAkBkI,EACtBhJ,gBACAc,kBACA91B,SAAS,OAAOsmD,IAAAxpD,EAAA,OACnB,MAEF,QACE,MADFwpD,IAAArmD,EAAA,SAASqmD,IAAAxpD,EAAA,OACD,IAAI8J,MAAM,sBAADiC,OAAuBm+C,EAAK,SAAU9lD,OAExDolD,IAAAxpD,EAAA,OACD,MAEF,IAAK,0BAAyBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC9BwX,EAAOjN,KAAO,0BAA0Bi/C,IAAAxpD,EAAA,OACxCwX,EAAO2Q,QAAUiiC,EAAmBF,EAAM56B,SAAS1I,aAAa4iC,IAAAxpD,EAAA,OAChEwX,EAAO8X,OASb,SAAqCw9B,GAAWtD,IAAAvpD,EAAA,MAC9C,IAAMiqD,GAAKV,IAAAxpD,EAAA,OAAG,CAAC,GACf,OADiBwpD,IAAAxpD,EAAA,OACT8sD,EAAS,SAAU1oD,MACzB,KAAK4jB,EAAAA,QAAI+kC,cAAc3Y,uBAAuBhwC,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAClDkqD,EAAMyB,iBAAmB7kC,EAAAA,OAAOa,uBAC9BmlC,EAAU1kC,WACVohC,IAAAxpD,EAAA,OACF,MAEF,KAAKgoB,EAAAA,QAAI+kC,cAAc1Y,yBAAyBjwC,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACpDkqD,EAAM1V,UAAYsY,EAAUtY,YAAYtxC,SAAS,OAAOsmD,IAAAxpD,EAAA,OACxD,MAEF,KAAKgoB,EAAAA,QAAI+kC,cAAczY,qBAAqBlwC,KAAIolD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAChDkqD,EAAM0B,WAAakB,EAAUrY,QAAQvxC,SAAS,OAAOsmD,IAAAxpD,EAAA,OACrD,MAEF,QACE,MADFwpD,IAAArmD,EAAA,SAASqmD,IAAAxpD,EAAA,OACD,IAAI8J,MAAM,sBAADiC,OAAuB+gD,EAAS,SAAU1oD,OAI7D,OAFColD,IAAAxpD,EAAA,OAEMkqD,CACT,CAhCsB8C,CAA4B9C,EAAM56B,SAASw9B,aAAatD,IAAAxpD,EAAA,OACxE,MAEF,QACE,MADFwpD,IAAArmD,EAAA,SAASqmD,IAAAxpD,EAAA,OACD,IAAI8J,MAAM,8BAADiC,OAA+Bm+C,EAAK,SAAU9lD,OAGnE,CA5SQ6oD,CAA6B/C,EAAO1yC,GAAQgyC,IAAAxpD,EAAA,OAC5C,MAEF,IAAK,WAAUwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACfwX,EAAOjN,KAAO,WAAWi/C,IAAAxpD,EAAA,OACzBwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,OACpDwX,EAAOlX,MAAOy1B,EAAAA,EAAAA,6BAA4Bm0B,EAAM5pD,QAAQkpD,IAAAxpD,EAAA,OACxDwX,EAAO0T,MAAQnC,EAAAA,MAAMs4B,cAAc6I,EAAMh/B,SAASs+B,IAAAxpD,EAAA,OAClD,MAEF,IAAK,2BAA0BwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC/BwX,EAAOjN,KAAO,2BAA2Bi/C,IAAAxpD,EAAA,OACzCwX,EAAOk1B,UAAYwd,EAAMxnD,MAAM,OAAO8mD,IAAAxpD,EAAA,OACtC,MAEF,IAAK,oBAAmBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACxBwX,EAAOjN,KAAO,oBAAoBi/C,IAAAxpD,EAAA,OAClCwX,EAAO0T,MAAQnC,EAAAA,MAAMs4B,cAAc6I,EAAMh/B,SAASs+B,IAAAxpD,EAAA,OAClDwX,EAAOyzC,QAAUb,EAAmBF,EAAMe,WAI1C,IAAMiC,GAAM1D,IAAAxpD,EAAA,OAAGkqD,EAAMkB,cACf+B,GAAI3D,IAAAxpD,EAAA,OAAGkqD,EAAMmB,YAEb+B,GAAO5D,IAAAxpD,EAAA,OAAG,CACdqtD,WAAYrlC,EAAAA,QAAIslC,eAAe10B,iBAC/B20B,gCACEvlC,EAAAA,QAAIslC,eAAez0B,sCACrB20B,gBAAiBxlC,EAAAA,QAAIslC,eAAex0B,iCACpC0wB,IAAAxpD,EAAA,OAWAwpD,IAAAxpD,EAAA,OAEFwX,EAAOuJ,MAAQ,CAAC,EAAEyoC,IAAAxpD,EAAA,OAClBpD,OAAO0Y,KAAK83C,GAAS13C,SAAQ,SAAC+3C,GAAajE,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,OACzCwX,EAAOuJ,MAAM0sC,GAbM,SAACl8C,GAAQi4C,IAAAvpD,EAAA,KAC5B,IAAMytD,GAAGlE,IAAAxpD,EAAA,OAAGotD,EAAQ77C,GAAKpM,OACzB,OAD+BqkD,IAAAxpD,EAAA,OAC3BmtD,EAAOO,GAAKlE,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QACP,IACRwpD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACGktD,EAASQ,GAAKlE,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QACT,IACRwpD,IAAArmD,EAAA,cAAAqmD,IAAAxpD,EAAA,QAEH,CAI2B2tD,CAAaF,EACxC,IAAGjE,IAAAxpD,EAAA,OAEH,MAEF,IAAK,uBAAsBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC3BwX,EAAOjN,KAAO,uBAAuBi/C,IAAAxpD,EAAA,OACrCwX,EAAOwhB,gBAAkBkxB,EAAMlxB,kBAAkB91B,SAAS,OAAOsmD,IAAAxpD,EAAA,OACjEwX,EAAOo2C,WAAajxD,KAAK2tD,eAAeJ,EAAM0D,cAAcpE,IAAAxpD,EAAA,OAC5DwX,EAAOq2C,WAAalxD,KAAK2tD,eAAeJ,EAAM2D,cAAcrE,IAAAxpD,EAAA,OAC5DwX,EAAOs2C,SAAWnxD,KAAKwvD,cAAcjC,EAAM4D,YAAYtE,IAAAxpD,EAAA,OACvDwX,EAAOu2C,SAAWpxD,KAAKwvD,cAAcjC,EAAM6D,YAAYvE,IAAAxpD,EAAA,OACvD,MAEF,IAAK,wBAAuBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OAC5BwX,EAAOjN,KAAO,wBAAwBi/C,IAAAxpD,EAAA,OACtCwX,EAAOwhB,gBAAkBkxB,EAAMlxB,kBAAkB91B,SAAS,OAAOsmD,IAAAxpD,EAAA,OACjEwX,EAAO+yC,OAAS5tD,KAAK2tD,eAAeJ,EAAMK,UAAUf,IAAAxpD,EAAA,OACpDwX,EAAOw2C,WAAarxD,KAAK2tD,eAAeJ,EAAM8D,cAAcxE,IAAAxpD,EAAA,OAC5DwX,EAAOy2C,WAAatxD,KAAK2tD,eAAeJ,EAAM+D,cAAczE,IAAAxpD,EAAA,OAC5D,MAEF,IAAK,qBAAsB,IAAA6/C,EAAF2J,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACzBwX,EAAOjN,KAAO,qBAAqBi/C,IAAAxpD,EAAA,OACnCwX,EAAO02C,KAAOhE,EAAMiE,eAAe3E,IAAAxpD,EAAA,OACnCwX,EAAO6lB,KAAmB,QAAfmsB,IAAArmD,EAAA,SAAA08C,EAAGqK,EAAM7sB,cAAM,IAAAwiB,EAAAA,GAAA2J,IAAArmD,EAAA,SAAI,IAAGqmD,IAAAxpD,EAAA,OACjC,MAEF,IAAK,qBAAoBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACzBwX,EAAOjN,KAAO,qBAAqBi/C,IAAAxpD,EAAA,OACnCwX,EAAO42C,SAAWlE,EAAMkE,WAAW5E,IAAAxpD,EAAA,OACnC,MAEF,IAAK,mBAAkBwpD,IAAArmD,EAAA,SAAEqmD,IAAAxpD,EAAA,OACvBwX,EAAOjN,KAAO,mBAAmBi/C,IAAAxpD,EAAA,OACjC,MAEF,QACE,MADFwpD,IAAArmD,EAAA,SAASqmD,IAAAxpD,EAAA,OACD,IAAI8J,MAAM,sBAADiC,OAAuBo+C,IAG1C,OADCX,IAAAxpD,EAAA,OACMwX,CACT,GAEA,CAAAjG,IAAA,gBAAApM,MAeA,SAAqBA,GAA0B,IAKzColD,EALsB8D,EAAS3jD,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA8+C,IAAArmD,EAAA,UAAG,GACtC,GAD2CqmD,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,OACtB,iBAAVmF,EACT,OAD6BqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QACtB,EACRwpD,IAAArmD,EAAA,SAEUqmD,IAAAxpD,EAAA,OACX,IAAIwpD,IAAAxpD,EAAA,OACFuqD,EAAS,IAAIrjC,EAAAA,QAAU/hB,EACzB,CAAE,MAAOrJ,GACP,OADU0tD,IAAAxpD,EAAA,QACH,CACT,CAEA,OAFCwpD,IAAAxpD,EAAA,OAIEwpD,IAAArmD,EAAA,UAACkrD,IAAS7E,IAAArmD,EAAA,SAAIonD,EAAO+D,YAAQ9E,IAAArmD,EAAA,SAE9BonD,EAAOgE,gBAAY/E,IAAArmD,EAAA,SAEnBonD,EAAOiE,MAAM/E,GAAKgF,GAAG,IAAIvnC,EAAAA,QAAUwiC,GAAWxmD,eAAWsmD,IAAArmD,EAAA,SAEzDonD,EAAOmE,gBAAkB,KAAClF,IAAArmD,EAAA,SAE1BonD,EAAOh6C,WAAOi5C,IAAArmD,EAAA,UACbonD,EAAO99C,aACR+8C,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QACO,IACRwpD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QAEM,EACT,GAAC,CAAAuR,IAAA,mCAAApM,MAED,SAAwCmM,GACtC,OAD2Ck4C,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,OACpC,GAAP+L,OAAUuF,EAAG,4GACf,GAEA,CAAAC,IAAA,yBAAApM,MAUA,SAA8Bf,EAAMe,GAA+B,IAAxBwpD,EAAejkD,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA8+C,IAAArmD,EAAA,SAAG,MAC3D,GAD+DqmD,IAAAvpD,EAAA,KAAAupD,IAAAxpD,EAAA,YAC1C,IAAVmF,EACT,OADgCqkD,IAAArmD,EAAA,cAAAqmD,IAAAxpD,EAAA,OAQlC,OANCwpD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OAEoB,iBAAVmF,GAAoBqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OAC7BmF,EAAQypD,WAAWzpD,IACpBqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,QAEO,GACN,KAAKwpD,IAAArmD,EAAA,SAAiB,iBAAVgC,IAAkBqkD,IAAArmD,EAAA,UAC3BqB,OAAOiI,SAAStH,MAAMqkD,IAAArmD,EAAA,SACvBgC,EAAQ,GAAM,GACd,MADeqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACT,IAAI8J,MAAM,GAADiC,OAAI3H,EAAI,sBACzB,KAAKe,EAAQ,EACX,MADYqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACN,IAAI8J,MAAM,GAADiC,OAAI3H,EAAI,4BACzB,KAAKolD,IAAArmD,EAAA,UAACwrD,IACHnF,IAAArmD,EAAA,SAAAwrD,IAAenF,IAAArmD,EAAA,SAAIwrD,EAAgBxpD,EAAOf,KAC3C,OADiDolD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OAC1CmF,EACT,QACE,MADFqkD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACQ,IAAI8J,MAAM,GAADiC,OAAI3H,EAAI,sBAE7B,GACA,CAAAmN,IAAA,eAAApM,MAKA,SAAoBA,GAAOqkD,IAAAvpD,EAAA,MACzB,IAAMsqD,GAAMf,IAAAxpD,EAAA,OAAG,IAAIknB,EAAAA,QAAU/hB,GAAOqpD,MAAM/E,IAC1C,OAD+CD,IAAAxpD,EAAA,OACxCvC,EAAAA,MAAM4G,WAAWkmD,EAAOrnD,WACjC,GAEA,CAAAqO,IAAA,iBAAApM,MAKA,SAAsBA,GACpB,OAD2BqkD,IAAAvpD,EAAA,MAAAupD,IAAAxpD,EAAA,OACpB,IAAIknB,EAAAA,QAAU/hB,GAAO0pD,IAAIpF,GAAKqF,QAAQ,EAC/C,GAEA,CAAAv9C,IAAA,gBAAApM,MAOA,SAAqB+mD,GAAO1C,IAAAvpD,EAAA,MAC1B,IAAM7D,GAACotD,IAAAxpD,EAAA,OAAG,IAAIknB,EAAAA,QAAUglC,EAAM9vD,MAC9B,OADmCotD,IAAAxpD,EAAA,OAC5B5D,EAAEyyD,IAAI,IAAI3nC,EAAAA,QAAUglC,EAAMjwD,MAAMiH,UACzC,GAEA,CAAAqO,IAAA,cAAApM,MAOA,SAAmB+mD,GACjB,IAAI6C,EACJ,GAFwBvF,IAAAvpD,EAAA,MACVupD,IAAAxpD,EAAA,OACVwpD,IAAArmD,EAAA,SAAA+oD,EAAM9vD,IAACotD,IAAArmD,EAAA,SAAI+oD,EAAMjwD,GAAGutD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACtB+uD,EAAY,IAAI/mC,EAAAA,QAAIgnC,MAAM9C,OACrB,CAAA1C,IAAArmD,EAAA,SACL,IAAM8rD,GAAMzF,IAAAxpD,EAAA,QAAGkvD,EAAAA,EAAAA,QAAOhD,IAAO1C,IAAAxpD,EAAA,OAC7B+uD,EAAY,IAAI/mC,EAAAA,QAAIgnC,MAAM,CACxB5yD,EAAG2O,SAASkkD,EAAO,GAAI,IACvBhzD,EAAG8O,SAASkkD,EAAO,GAAI,KAE3B,CAEA,GAFCzF,IAAAxpD,EAAA,OAEGwpD,IAAArmD,EAAA,SAAA4rD,EAAU3yD,IAAM,IAACotD,IAAArmD,EAAA,SAAI4rD,EAAU9yD,IAAM,GACvC,MAD0CutD,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OACpC,IAAI8J,MAAM,0BAGlB,OAFC0/C,IAAArmD,EAAA,SAAAqmD,IAAAxpD,EAAA,OAEM+uD,CACT,KA1gBU/yD,EAoFU,OApFVkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CA0gBT,CAtbmB,GA0hBtB,SAASquD,EAAmBxjC,GAC1B,OADqC4iC,IAAAvpD,EAAA,MAAAupD,IAAAxpD,EAAA,OAC9B8mB,EAAAA,OAAOa,uBAAuBf,EAAUwB,UACjD,CAEAohC,IAAAxpD,EAAA,OACA0zB,EAAUmM,aAAesvB,EAAAA,aAAiB3F,IAAAxpD,EAAA,OAC1C0zB,EAAUkM,WAAauvB,EAAAA,WAAe3F,IAAAxpD,EAAA,OACtC0zB,EAAUsM,aAAemvB,EAAAA,aAAiB3F,IAAAxpD,EAAA,OAC1C0zB,EAAUiM,YAAcwvB,EAAAA,YAAgB3F,IAAAxpD,EAAA,OACxC0zB,EAAU2L,cAAgB8vB,EAAAA,cAAkB3F,IAAAxpD,EAAA,OAC5C0zB,EAAUyM,uBAAyBgvB,EAAAA,uBAA2B3F,IAAAxpD,EAAA,OAC9D0zB,EAAU0M,sBAAwB+uB,EAAAA,sBAA0B3F,IAAAxpD,EAAA,OAC5D0zB,EAAU+M,yBAA2B0uB,EAAAA,yBAA6B3F,IAAAxpD,EAAA,OAClE0zB,EAAU+L,uBAAyB0vB,EAAAA,uBAA2B3F,IAAAxpD,EAAA,OAC9D0zB,EAAUoM,UAAYqvB,EAAAA,UAAc3F,IAAAxpD,EAAA,OACpC0zB,EAAUqM,WAAaovB,EAAAA,WAAe3F,IAAAxpD,EAAA,OACtC0zB,EAAU8L,gBAAkB2vB,EAAAA,gBAAoB3F,IAAAxpD,EAAA,OAChD0zB,EAAUuM,eAAiBkvB,EAAAA,eAAmB3F,IAAAxpD,EAAA,OAC9C0zB,EAAU6L,yBAA2B4vB,EAAAA,yBAA6B3F,IAAAxpD,EAAA,OAClE0zB,EAAUwM,sBAAwBivB,EAAAA,sBAA0B3F,IAAAxpD,EAAA,OAC5D0zB,EAAU4L,QAAU6vB,EAAAA,QAAY3F,IAAAxpD,EAAA,OAChC0zB,EAAUgM,WAAayvB,EAAAA,WAAe3F,IAAAxpD,EAAA,OACtC0zB,EAAU2M,8BAAgC8uB,EAAAA,8BAAkC3F,IAAAxpD,EAAA,OAC5E0zB,EAAU4M,4BAA8B6uB,EAAAA,4BAAgC3F,IAAAxpD,EAAA,OACxE0zB,EAAU07B,yBAA2BD,EAAAA,yBAA6B3F,IAAAxpD,EAAA,OAClE0zB,EAAU27B,2BAA6BF,EAAAA,2BAA+B3F,IAAAxpD,EAAA,OACtE0zB,EAAU47B,uBAAyBH,EAAAA,uBAA2B3F,IAAAxpD,EAAA,OAC9D0zB,EAAU67B,sBAAwBJ,EAAAA,sBAA0B3F,IAAAxpD,EAAA,OAC5D0zB,EAAU87B,kCACRL,EAAAA,kCAAsC3F,IAAAxpD,EAAA,OACxC0zB,EAAU+7B,+BAAiCN,EAAAA,+BAAmC3F,IAAAxpD,EAAA,OAC9E0zB,EAAUg8B,wBAA0BP,EAAAA,wBAA4B3F,IAAAxpD,EAAA,OAChE0zB,EAAU8M,SAAW2uB,EAAAA,SAAa3F,IAAAxpD,EAAA,OAClC0zB,EAAUgN,kBAAoByuB,EAAAA,kBAAsB3F,IAAAxpD,EAAA,OACpD0zB,EAAUiN,qBAAuBwuB,EAAAA,qBAAyB3F,IAAAxpD,EAAA,OAC1D0zB,EAAUkN,sBAAwBuuB,EAAAA,sBAA0B3F,IAAAxpD,EAAA,OAC5D0zB,EAAUmN,mBAAqBsuB,EAAAA,mBAAuB3F,IAAAxpD,EAAA,OACtD0zB,EAAUoN,mBAAqBquB,EAAAA,mBAAuB3F,IAAAxpD,EAAA,OACtD0zB,EAAUqN,iBAAmBouB,EAAAA,iBAG7B3F,IAAAxpD,EAAA,OACA0zB,EAAUi8B,2BAA6BR,EAAAA,2BAA+B3F,IAAAxpD,EAAA,OACtE0zB,EAAUC,uBAAyBw7B,EAAAA,uBAA2B3F,IAAAxpD,EAAA,OAC9D0zB,EAAUk8B,qBAAuBT,EAAAA,qBAAyB3F,IAAAxpD,EAAA,OAC1D0zB,EAAUm8B,mBAAqBV,EAAAA,qnCC3pBnB,OAAAW,EAAA,kBAAAtpC,CAAA,EAAAA,CAAA,CACL,SAASqZ,EAAaynB,GAAMwI,IAAA7vD,EAAA,KACjC,IAAM8pD,GAAY+F,IAAA9vD,EAAA,KAAG,CAAC,GAAE8vD,IAAA9vD,EAAA,KACxB,IAAI8vD,IAAA9vD,EAAA,KACF+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAclwB,cACpC0lB,EAAAA,EAAAA,6BAA4B+B,EAAKp1B,aAErC,CAAE,MAAOp2B,GACP,MADUg0D,IAAA9vD,EAAA,KACJ,IAAI8J,MAAM,yBAClB,CAGA,OAHCgmD,IAAA9vD,EAAA,KACDrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMwI,IAAA9vD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAbY+F,i7FCAA,OAAAG,EAAA,kBAAAzpC,CAAA,EAAAA,CAAA,CAML,SAASoZ,EAAW0nB,GACzB,GAD+B2I,IAAAhwD,EAAA,KAAAgwD,IAAAjwD,EAAA,MAC1B8mB,EAAAA,OAAOE,wBAAwBsgC,EAAK2D,SACvC,MADiDgF,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,KAC3C,IAAI8J,MAAM,sBACjBmmD,IAAA9sD,EAAA,QACD,IAAM+sD,GAAUD,IAAAjwD,EAAA,KAAG,CAAC,GAEpB,GAFsBiwD,IAAAjwD,EAAA,KACtBkwD,EAAWjF,QAAUtgC,EAAAA,QAAQC,cAAc08B,EAAK2D,SAASpgC,eAAeolC,IAAAjwD,EAAA,KACpEsnD,EAAK58B,UAAUjqB,QAAU,EAAG,CAAAwvD,IAAA9sD,EAAA,QAC9B,IAAM0M,GAAIogD,IAAAjwD,EAAA,KAAGsnD,EAAK58B,UAAUF,OAAO,EAAG,OAAMylC,IAAAjwD,EAAA,KAC5CkwD,EAAWhlC,MAAQlD,EAAAA,QAAImoC,UAAUnlC,yBAAyBnb,EAC5D,KAAO,IAAAogD,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,OAAIsnD,EAAK58B,UAAUjqB,QAAU,IAIlC,MADKwvD,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,MACC,IAAI8J,MAAM,4CAJsBmmD,IAAA9sD,EAAA,QACtC,IAAM0M,GAAIogD,IAAAjwD,EAAA,KAAGsnD,EAAK58B,UAAUF,OAAO,GAAI,OAAMylC,IAAAjwD,EAAA,KAC7CkwD,EAAWhlC,MAAQlD,EAAAA,QAAImoC,UAAUllC,0BAA0Bpb,EAG7D,CAACogD,IAAAjwD,EAAA,MAE6B,kBAAnBsnD,EAAK4D,WAAyB+E,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,MACnCsnD,EAAK4D,WAAW+E,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,MAClBkwD,EAAWhF,UAAYljC,EAAAA,QAAIslC,eAAe10B,iBAAiBzzB,QACtD8qD,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,MACLkwD,EAAWhF,UAAY,KAEpB+E,IAAA9sD,EAAA,QAAA8sD,IAAAjwD,EAAA,MACLkwD,EAAWhF,UAAY5D,EAAK4D,WAG9B,IAAM1oB,GAAYytB,IAAAjwD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIooC,aAAaF,IAEpCnG,GAAYkG,IAAAjwD,EAAA,MAAG,CAAC,GAItB,OAJwBiwD,IAAAjwD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcnwB,WAAW4C,GAAcytB,IAAAjwD,EAAA,MAC/DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM2I,IAAAjwD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAvCYkG,8mDCAA,OAAAI,EAAA,kBAAA7pC,CAAA,EAAAA,CAAA,CAIL,SAAS6Z,IAAyC,IAAXinB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA2lD,IAAAltD,EAAA,QAAG,CAAC,GACpD,GADqDktD,IAAApwD,EAAA,KAAAowD,IAAArwD,EAAA,MAChD8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKoF,aACvC,MADqD2D,IAAAltD,EAAA,QAAAktD,IAAArwD,EAAA,KAC/C,IAAI8J,MAAM,0BACjBumD,IAAAltD,EAAA,QACD,IAAMmtD,GAAED,IAAArwD,EAAA,KAAG,IAAIgoB,EAAAA,QAAIuoC,gCAAgC,CACjD7D,YAAa/hC,EAAAA,QAAQC,cAAc08B,EAAKoF,aAAa7hC,kBAGjDk/B,GAAYsG,IAAArwD,EAAA,KAAG,CAAC,GAItB,OAJwBqwD,IAAArwD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc1vB,8BAA8BiwB,GAAID,IAAArwD,EAAA,KACxErD,KAAKqzD,iBAAiBjG,EAAczC,GAAM+I,IAAArwD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAjBYsG,0rDCAA,OAAAG,EAAA,kBAAAhqC,CAAA,EAAAA,CAAA,CAFL,SAASwZ,EAAasnB,GAAMkJ,IAAAvwD,EAAA,KACjC,IAAMiwD,GAAUM,IAAAxwD,EAAA,KAAG,CAAC,GAEpB,GAFsBwwD,IAAAxwD,EAAA,KAEK,iBAAhBsnD,EAAKkF,OACd,MADmCgE,IAAArtD,EAAA,QAAAqtD,IAAAxwD,EAAA,KAC7B,IAAI8J,MAAM,2BACjB0mD,IAAArtD,EAAA,QAAAqtD,IAAAxwD,EAAA,KAED,IAAIwwD,IAAAxwD,EAAA,KAEF,IAAIknB,EAAAA,QAAUogC,EAAKkF,OACrB,CAAE,MAAO1wD,GACP,MADU00D,IAAAxwD,EAAA,KACJ,IAAI8J,MAAM,sCAClB,CAAC0mD,IAAAxwD,EAAA,KAEDkwD,EAAW1D,OAAS/uD,EAAAA,MAAM4G,WAAWijD,EAAKkF,QAE1C,IAAM9pB,GAAc8tB,IAAAxwD,EAAA,KAAG,IAAIgoB,EAAAA,QAAIyoC,eAAeP,IAExCnG,GAAYyG,IAAAxwD,EAAA,KAAG,CAAC,GAItB,OAJwBwwD,IAAAxwD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc/vB,aAAa0C,GAAgB8tB,IAAAxwD,EAAA,MACnErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMkJ,IAAAxwD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CArBYyG,4nGCAA,OAAAE,EAAA,kBAAAlqC,CAAA,EAAAA,CAAA,CAAAkqC,IATZ,IAAMhH,GAASgH,IAAA1wD,EAAA,KAAG,uBAcX,SAAS2/B,EAAY2nB,GAAMoJ,IAAAzwD,EAAA,KAChC,IAAMiwD,GAAUQ,IAAA1wD,EAAA,KAAG,CAAC,GAEpB,GAFsB0wD,IAAA1wD,EAAA,KAElBsnD,EAAKp8B,iBAAiBnC,EAAAA,MAAO2nC,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,KAC/BkwD,EAAWlF,KAAO1D,EAAKp8B,MAAMylC,6BACxB,IAAAD,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,OAAIsnD,EAAKp8B,iBAAiBm4B,EAAAA,oBAG/B,MADKqN,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,KACC,IAAIJ,UAAU,6CAH+B8wD,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,KACnDkwD,EAAWlF,KAAO1D,EAAKp8B,MAAMpB,aAG/B,CAEA,GAFC4mC,IAAA1wD,EAAA,KAEG0wD,IAAAvtD,EAAA,aAAewO,IAAf21C,EAAKjpC,QAAmBqyC,IAAAvtD,EAAA,SAAKxG,KAAKi0D,cAActJ,EAAKjpC,OAAO,IAC9D,MADqEqyC,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,KAC/D,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,UAC3DH,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,KAEGsnD,EAAKjpC,OAAOqyC,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,MACdkwD,EAAW7xC,MAAQ1hB,KAAKm0D,aAAaxJ,EAAKjpC,SACrCqyC,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,MACLkwD,EAAW7xC,MAAQ5gB,EAAAA,MAAM4G,WAAW,IAAI6iB,EAAAA,QAAUwiC,GAAWxmD,aAC9DwtD,IAAA1wD,EAAA,MAEGsnD,EAAKnsC,QAAQu1C,IAAAvtD,EAAA,QAAAutD,IAAA1wD,EAAA,MACfkwD,EAAW/0C,OAASmsC,EAAKnsC,OAAO41C,eACjCL,IAAAvtD,EAAA,QACD,IAAM6tD,GAAaN,IAAA1wD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIipC,cAAcf,IAEtCnG,GAAY2G,IAAA1wD,EAAA,MAAG,CAAC,GAItB,OAJwB0wD,IAAA1wD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcpwB,YAAYqxB,GAAeN,IAAA1wD,EAAA,MACjErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMoJ,IAAA1wD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,ilECpCY,OAAAmH,EAAA,kBAAA1qC,CAAA,EAAAA,CAAA,CAEL,SAAS4Z,IAAiC,IAAXknB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAwmD,IAAA/tD,EAAA,QAAG,CAAC,GAAC+tD,IAAAjxD,EAAA,KAAAixD,IAAAlxD,EAAA,KAC7CmxD,EAA2B7J,EAAK5a,WAEhC,IAAMwjB,GAAUgB,IAAAlxD,EAAA,KAAG,CAAC,GAAEkxD,IAAAlxD,EAAA,KACtBkwD,EAAWxjB,UAAY1kB,EAAAA,QAAIopC,mBAAmBxuD,QAAQ0kD,EAAK5a,UAAW,OACtE,IAAM5J,GAAuBouB,IAAAlxD,EAAA,KAAG,IAAIgoB,EAAAA,QAAIqpC,wBAAwBnB,IAE1DnG,GAAYmH,IAAAlxD,EAAA,KAAG,CAAC,GAMtB,OANwBkxD,IAAAlxD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc3vB,sBACpC0C,GACAouB,IAAAlxD,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM4J,IAAAlxD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAEO,SAASoH,EAA2BzkB,GACzC,GADoDwkB,IAAAjxD,EAAA,KAAAixD,IAAAlxD,EAAA,KAElDkxD,IAAA/tD,EAAA,QAAqB,iBAAdupC,IAAsBwkB,IAAA/tD,EAAA,QACR,KAArBupC,EAAUjsC,QAEV,MADAywD,IAAA/tD,EAAA,QAAA+tD,IAAAlxD,EAAA,KACM,IAAI8J,MAAM,6CACjBonD,IAAA/tD,EAAA,OACH,CAzBY+tD,skDCAA,OAAAI,EAAA,kBAAA9qC,CAAA,EAAAA,CAAA,CAOL,SAASga,EAAS8mB,GAAMgK,IAAArxD,EAAA,KAC7B,IAAMiwD,GAAUoB,IAAAtxD,EAAA,KAAG,CAAC,GACpB,GADsBsxD,IAAAtxD,EAAA,MACjBrD,KAAKi0D,cAActJ,EAAKiD,QAC3B,MADoC+G,IAAAnuD,EAAA,QAAAmuD,IAAAtxD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAC3DS,IAAAnuD,EAAA,QAAAmuD,IAAAtxD,EAAA,KACDkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAAQ+G,IAAAtxD,EAAA,KACnDkwD,EAAWhlC,MAAQo8B,EAAKp8B,MAAMpB,cAAcwnC,IAAAtxD,EAAA,KAC5C,IAAIsxD,IAAAtxD,EAAA,KACFkwD,EAAW5vD,MAAOilD,EAAAA,EAAAA,6BAA4B+B,EAAKhnD,KACrD,CAAE,MAAOxE,GACP,MADUw1D,IAAAtxD,EAAA,KACJ,IAAI8J,MAAM,0BAClB,CAEA,IAAMigD,GAAYuH,IAAAtxD,EAAA,KAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcvvB,SAAS,IAAIxY,EAAAA,QAAIupC,WAAWrB,MAItD,OAHEoB,IAAAtxD,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMgK,IAAAtxD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA1BYuH,0wCCAA,OAAAE,EAAA,kBAAAhrC,CAAA,EAAAA,CAAA,CAML,SAASia,IAAoC,IAAX6mB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA8mD,IAAAruD,EAAA,QAAG,CAAC,GAACquD,IAAAvxD,EAAA,KAAAuxD,IAAAxxD,EAAA,MAChDmxD,EAAAA,EAAAA,4BAA2B7J,EAAK5a,WAEhC,IAAMwjB,GAAUsB,IAAAxxD,EAAA,KAAG,CACjB0sC,UAAW1kB,EAAAA,QAAIopC,mBAAmBxuD,QAAQ0kD,EAAK5a,UAAW,SAGtDqd,GAAYyH,IAAAxxD,EAAA,KAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAActvB,yBACtB,IAAIzY,EAAAA,QAAIypC,2BAA2BvB,MAKvC,OAHEsB,IAAAxxD,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMkK,IAAAxxD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CArBYyH,k3DCAA,OAAAE,EAAA,kBAAAlrC,CAAA,EAAAA,CAAA,CAAL,SAAS6Y,EAAcioB,GAC5B,GADkCoK,IAAAzxD,EAAA,KAAAyxD,IAAA1xD,EAAA,MAC7B8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKp1B,aACvC,MADqDw/B,IAAAvuD,EAAA,QAAAuuD,IAAA1xD,EAAA,KAC/C,IAAI8J,MAAM,0BAElB,GADC4nD,IAAAvuD,EAAA,QAAAuuD,IAAA1xD,EAAA,MACIrD,KAAKi0D,cAActJ,EAAK+C,iBAAiB,GAC5C,MADmDqH,IAAAvuD,EAAA,QAAAuuD,IAAA1xD,EAAA,KAC7C,IAAIJ,UACRjD,KAAKk0D,iCAAiC,oBAEzCa,IAAAvuD,EAAA,QACD,IAAM+sD,GAAUwB,IAAA1xD,EAAA,KAAG,CAAC,GAAE0xD,IAAA1xD,EAAA,KACtBkwD,EAAWh+B,YAAcvH,EAAAA,QAAQC,cAC/B08B,EAAKp1B,aACLrH,eAAe6mC,IAAA1xD,EAAA,KACjBkwD,EAAW7F,gBAAkB1tD,KAAKm0D,aAAaxJ,EAAK+C,iBACpD,IAAMpoB,GAAeyvB,IAAA1xD,EAAA,KAAG,IAAIgoB,EAAAA,QAAI2pC,gBAAgBzB,IAE1CnG,GAAY2H,IAAA1xD,EAAA,KAAG,CAAC,GAItB,OAJwB0xD,IAAA1xD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc1wB,cAAc4C,GAAiByvB,IAAA1xD,EAAA,MACrErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMoK,IAAA1xD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CArBY2H,8qFCAA,OAAAE,EAAA,kBAAAprC,CAAA,EAAAA,CAAA,CAsBL,SAAS2Z,EAAuBmnB,GACrC,GAD2CsK,IAAA3xD,EAAA,KAAA2xD,IAAA5xD,EAAA,OACrCsnD,EAAKp8B,iBAAiBnC,EAAAA,OAC1B,MADkC6oC,IAAAzuD,EAAA,QAAAyuD,IAAA5xD,EAAA,KAC5B,IAAI8J,MACR,gEAIJ,GAFC8nD,IAAAzuD,EAAA,QAAAyuD,IAAA5xD,EAAA,MAEIrD,KAAKi0D,cAActJ,EAAKiD,QAC3B,MADoCqH,IAAAzuD,EAAA,QAAAyuD,IAAA5xD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAG5D,GAFCe,IAAAzuD,EAAA,QAAAyuD,IAAA5xD,EAAA,KAEG4xD,IAAAzuD,EAAA,SAACpG,MAAMoD,QAAQmnD,EAAKmF,aAAUmF,IAAAzuD,EAAA,QAA8B,IAA1BmkD,EAAKmF,UAAUhsD,QACnD,MADiEmxD,IAAAzuD,EAAA,QAAAyuD,IAAA5xD,EAAA,KAC3D,IAAI8J,MAAM,sCACjB8nD,IAAAzuD,EAAA,QAED,IAAM+sD,GAAU0B,IAAA5xD,EAAA,KAAG,CAAC,GAAE4xD,IAAA5xD,EAAA,KACtBkwD,EAAWhlC,MAAQo8B,EAAKp8B,MAAMpB,cAAc8nC,IAAA5xD,EAAA,KAC5CkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAAQqH,IAAA5xD,EAAA,KACnDkwD,EAAWzD,UAAY7vD,OAAO4I,OAAO8hD,EAAKmF,WAAW7sC,KAAI,SAACngB,GACxD,OAAAmyD,IAAA3xD,EAAA,KAAA2xD,IAAA5xD,EAAA,MAAAP,EAAEqqB,aAAY,IAGhB,IAAM+Y,GAAwB+uB,IAAA5xD,EAAA,MAAG,IAAIgoB,EAAAA,QAAI6pC,yBAAyB3B,IAE5DnG,GAAY6H,IAAA5xD,EAAA,MAAG,CAAC,GAMtB,OANwB4xD,IAAA5xD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc5vB,uBACpC0C,GACA+uB,IAAA5xD,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMsK,IAAA5xD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CArDY6H,4+DCAA,OAAAE,EAAA,kBAAAtrC,CAAA,EAAAA,CAAA,CAKL,SAASiZ,EAAuB6nB,GAAMwK,IAAA7xD,EAAA,KAC3C,IAAMiwD,GAAU4B,IAAA9xD,EAAA,KAAG,CAAC,GAGpB,GAHsB8xD,IAAA9xD,EAAA,KACtBkwD,EAAWlE,QAAU1E,EAAK0E,QAAQliC,cAAcgoC,IAAA9xD,EAAA,KAChDkwD,EAAWjE,OAAS3E,EAAK2E,OAAOniC,cAAcgoC,IAAA9xD,EAAA,MACzCrD,KAAKi0D,cAActJ,EAAKiD,QAC3B,MADoCuH,IAAA3uD,EAAA,QAAA2uD,IAAA9xD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAG5D,GAFCiB,IAAA3uD,EAAA,QAAA2uD,IAAA9xD,EAAA,KACDkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAAQuH,IAAA9xD,EAAA,UAChC2R,IAAf21C,EAAK4E,MACP,MAD4B4F,IAAA3uD,EAAA,QAAA2uD,IAAA9xD,EAAA,KACtB,IAAIJ,UAAU,8BACrBkyD,IAAA3uD,EAAA,QAAA2uD,IAAA9xD,EAAA,KACDkwD,EAAWhE,MAAQvvD,KAAKo1D,YAAYzK,EAAK4E,OACzC,IAAM7pB,GAAwByvB,IAAA9xD,EAAA,KAAG,IAAIgoB,EAAAA,QAAIgqC,yBAAyB9B,IAE5DnG,GAAY+H,IAAA9xD,EAAA,MAAG,CAAC,GAMtB,OANwB8xD,IAAA9xD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAActwB,uBACpC4C,GACAyvB,IAAA9xD,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMwK,IAAA9xD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA1BY+H,irCCAA,OAAAG,EAAA,kBAAAzrC,CAAA,EAAAA,CAAA,CADL,SAAS8Z,IAAuC,IAAXgnB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAunD,IAAA9uD,EAAA,QAAG,CAAC,GAAC8uD,IAAAhyD,EAAA,KACnD,IAAM8pD,GAAYkI,IAAAjyD,EAAA,KAAG,CAAC,GAItB,OAJwBiyD,IAAAjyD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAczvB,8BAA8B2xB,IAAAjyD,EAAA,KACpErD,KAAKqzD,iBAAiBjG,EAAczC,GAAM2K,IAAAjyD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CALYkI,+/CCAA,OAAAC,EAAA,kBAAA1rC,CAAA,EAAAA,CAAA,CAiBL,SAASsa,EAAmBwmB,GAAM,IAAAzH,EACvC,GADuCqS,IAAAjyD,EAAA,KAAAiyD,IAAAlyD,EAAA,MACrB,QAAdkyD,IAAA/uD,EAAA,QAAA08C,EAACyH,EAAK8G,gBAAQ,IAAAvO,EAAAA,GAAAqS,IAAA/uD,EAAA,SAAK,KAAM,EAC3B,MAD8B+uD,IAAA/uD,EAAA,QAAA+uD,IAAAlyD,EAAA,KACxB,IAAI2D,WAAW,+BACtBuuD,IAAA/uD,EAAA,QAED,IAAMgvD,GAAiBD,IAAAlyD,EAAA,KAAG,IAAIgoB,EAAAA,QAAIoqC,qBAAqB,CACrDC,IAAK,IAAIrqC,EAAAA,QAAIsqC,eAAe,GAC5BlE,SAAU9G,EAAK8G,YAGXrE,GAAYmI,IAAAlyD,EAAA,KAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcjvB,mBAAmBqxB,KAI7C,OAHED,IAAAlyD,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM4K,IAAAlyD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAjCYmI,y4GCAA,OAAAK,EAAA,kBAAA/rC,CAAA,EAAAA,CAAA,CAAA+rC,8kCCAA,OAAAC,EAAA,kBAAAhsC,CAAA,EAAAA,CAAA,CALL,SAASsZ,IAAqB,IAAXwnB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA8nD,IAAArvD,EAAA,QAAG,CAAC,GAACqvD,IAAAvyD,EAAA,KACjC,IAAM8pD,GAAYyI,IAAAxyD,EAAA,KAAG,CAAC,GAGtB,OAHwBwyD,IAAAxyD,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcjwB,YAAY0yB,IAAAxyD,EAAA,KAClDrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMkL,IAAAxyD,EAAA,KACnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAAYyI,ulKCAA,OAAAC,EAAA,kBAAAjsC,CAAA,EAAAA,CAAA,UAAAvG,EAAAjkB,EAAAF,GAAA,gBAAAE,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAA,CAAA,CAAAmkB,CAAAnkB,IAAA,SAAAA,EAAAwG,GAAA,IAAAzG,EAAA,MAAAC,EAAA,yBAAAgO,QAAAhO,EAAAgO,OAAAiH,WAAAjV,EAAA,uBAAAD,EAAA,KAAAD,EAAAM,EAAAD,EAAAoD,EAAA+B,EAAA,GAAArB,GAAA,EAAAF,GAAA,SAAA5D,GAAAJ,EAAAA,EAAAW,KAAAV,IAAAokB,KAAA,IAAA5d,EAAA,IAAA5F,OAAAb,KAAAA,EAAA,OAAAkE,GAAA,cAAAA,GAAAnE,EAAAK,EAAAO,KAAAX,IAAAskB,QAAA/e,EAAAsI,KAAA9N,EAAAqJ,OAAA7D,EAAAb,SAAA+B,GAAAvC,GAAA,UAAAjE,GAAA+D,GAAA,EAAA3D,EAAAJ,CAAA,iBAAAiE,GAAA,MAAAlE,EAAA,SAAAwD,EAAAxD,EAAA,SAAAa,OAAA2C,KAAAA,GAAA,kBAAAQ,EAAA,MAAA3D,CAAA,SAAAkF,CAAA,EAAAif,CAAAvkB,EAAAF,IAAA,SAAAE,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,EAAAF,IAAA,qBAAA8D,UAAA,6IAAAghB,EAAA,UAAAH,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,CAcL,SAASykC,EAAmBymB,GACjC,GADuCmL,IAAAxyD,EAAA,KAAAwyD,IAAAzyD,EAAA,MAClCsnD,EAAK4G,KACR,MADcuE,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,KACR,IAAIJ,UAAU,mDAADmM,OACkCm1C,KAAKC,UAAUmG,GAAK,MAE1EmL,IAAAtvD,EAAA,QAED,IAAMmgC,GAAoBmvB,IAAAzyD,EAAA,KAAG,IAAIgoB,EAAAA,QAAI0qC,qBAAqB,CACxDvE,aAAc7G,EAAK4G,KACnB7wB,MAAMo1B,IAAAtvD,EAAA,QAAAmkD,EAAKjqB,OAAIo1B,IAAAtvD,EAAA,QAAI,QAGf4mD,GAAY0I,IAAAzyD,EAAA,KAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAclvB,mBAAmByC,KAI7C,OAHEmvB,IAAAzyD,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMmL,IAAAzyD,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAyBO,SAASp2B,EAAuB2zB,GAAMmL,IAAAxyD,EAAA,KAC3C,IAAMR,GAACgzD,IAAAzyD,EAAA,KAAG,IAAIqnB,EAAAA,QAAQigC,EAAKh/B,WAC3B,GADqCmqC,IAAAzyD,EAAA,KACrB,aAAZP,EAAE8nB,MACJ,MAD0BkrC,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,KACpB,IAAIJ,UAAU,0CAADmM,OAA2CtM,IAGhE,OAFCgzD,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,KAEMrD,KAAKkkC,mBAAmB,CAC7B1lB,OAAQmsC,EAAKnsC,OACbkiB,KAAMiqB,EAAKjqB,KACX6wB,KAAMlmC,EAAAA,QAAI2qC,aAAaxxB,+BACrB,IAAInZ,EAAAA,QAAI4qC,mBAAmB,CACzB/R,gBAAiBphD,EAAEipB,cACnBo4B,aAAcwG,EAAI,SAClBnzC,KAAMmzC,EAAKnzC,SAInB,CA0BO,SAASy7C,EAAqBtI,GAAMmL,IAAAxyD,EAAA,KACzC,IAAMmhD,GAAIqR,IAAAzyD,EAAA,MAAGymB,EAAOnmB,MAAKmyD,IAAAtvD,EAAA,QAAAmkD,EAAKlG,OAAIqR,IAAAtvD,EAAA,QA8GhBsvD,IAAAxyD,EAAA,KAAAwyD,IAAAzyD,EAAA,MACX2qB,EAAAA,QAAQ6G,SAASqhC,eAAe1tD,YA7GvC,GAFkDstD,IAAAzyD,EAAA,MAE9CyyD,IAAAtvD,EAAA,SAACmkD,EAAKlQ,WAAQqb,IAAAtvD,EAAA,QAA6B,KAAzBmkD,EAAKlQ,SAAS32C,QAClC,MADiDgyD,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MAC3C,IAAIJ,UAAU,wDAADmM,OACuCu7C,EAAKlQ,WAGjE,GADCqb,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MACmB,KAAhBohD,EAAK3gD,OACP,MADsBgyD,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MAChB,IAAIJ,UAAU,6CAADmM,OAC4Bu7C,EAAKlQ,WAItD,OAFCqb,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MAEMrD,KAAKkkC,mBAAmB,CAC7B1lB,OAAQmsC,EAAKnsC,OACbkiB,KAAMiqB,EAAKjqB,KACX6wB,KAAMlmC,EAAAA,QAAI2qC,aAAavxB,+BACrB,IAAIpZ,EAAAA,QAAI8qC,mBAAmB,CACzB9R,WAAYh5B,EAAAA,QAAI+qC,mBAAmB7b,uBACjCzwB,EAAOnmB,KAAKgnD,EAAKlQ,WAEnBztB,mBACE3B,EAAAA,QAAI4B,mBAAmB0X,8BACrB,IAAItZ,EAAAA,QAAIgrC,8BAA8B,CACpC1rC,QAASggC,EAAKhgC,QAAQoB,cACtB04B,KAAAA,SAMd,CAyBO,SAASuO,EAA2BrI,GAAMmL,IAAAxyD,EAAA,KAC/C,IAAIirB,GAAKunC,IAAAzyD,EAAA,MAAGsnD,EAAKp8B,OACjB,GADuBunC,IAAAzyD,EAAA,MACF,iBAAVkrB,EAAoB,CAAAunC,IAAAtvD,EAAA,QAC7B,IAAuC49C,EAAA9gC,GAAvCwyC,IAAAzyD,EAAA,MAAuBkrB,EAAM7a,MAAM,MAAI,GAAhCR,EAAIkxC,EAAA,GAAE/3B,EAAM+3B,EAAA,GAAqB0R,IAAAzyD,EAAA,MACxCkrB,EAAQ,IAAInC,EAAAA,MAAMlZ,EAAMmZ,EAC1B,MAACypC,IAAAtvD,EAAA,QAED,GAFCsvD,IAAAzyD,EAAA,QAEKkrB,aAAiBnC,EAAAA,OACrB,MAD6B0pC,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MACvB,IAAIJ,UAAU,uCAADmM,OAAwCmf,IAG7D,OAFCunC,IAAAtvD,EAAA,QAAAsvD,IAAAzyD,EAAA,MAEMrD,KAAKkkC,mBAAmB,CAC7B1lB,OAAQmsC,EAAKnsC,OACbkiB,KAAMiqB,EAAKjqB,KACX6wB,KAAMlmC,EAAAA,QAAI2qC,aAAavxB,+BACrB,IAAIpZ,EAAAA,QAAI8qC,mBAAmB,CACzB9R,WAAYh5B,EAAAA,QAAI+qC,mBAAmB5b,iCACnCxtB,mBAAoB3B,EAAAA,QAAI4B,mBAAmBC,4BACzCqB,EAAMpB,mBAKhB,CAoBO,SAAS+lC,EAAmBvI,GACjC,OADuCmL,IAAAxyD,EAAA,KAAAwyD,IAAAzyD,EAAA,MAChCrD,KAAKkkC,mBAAmB,CAC7B1lB,OAAQmsC,EAAKnsC,OACbkiB,KAAMiqB,EAAKjqB,KACX6wB,KAAMlmC,EAAAA,QAAI2qC,aAAatxB,mCACrB5a,EAAOnmB,KAAKgnD,EAAK3lB,QAGvB,CAhNY8wB,ypGCAA,OAAAQ,EAAA,kBAAAzsC,CAAA,EAAAA,CAAA,CAQL,SAASma,IAAgC,IAAX2mB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAuoD,IAAA9vD,EAAA,QAAG,CAAC,GAAC8vD,IAAAhzD,EAAA,KAC5C,IAAA4/C,GAAAoT,IAAAjzD,EAAA,KAAwEsnD,GAAhEtuB,EAAe6mB,EAAf7mB,gBAAiB40B,EAAU/N,EAAV+N,WAAYC,EAAUhO,EAAVgO,WAAYC,EAAQjO,EAARiO,SAAUC,EAAQlO,EAARkO,SACrDmC,GAAU+C,IAAAjzD,EAAA,KAAG,CAAC,GAEpB,GAFsBizD,IAAAjzD,EAAA,MAEjBg5B,EACH,MADoBi6B,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,KACd,IAAIJ,UAAU,wCAItB,GAHCqzD,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,KACDkwD,EAAWl3B,gBAAkBhR,EAAAA,QAAIg8B,OAAOphD,QAAQo2B,EAAiB,OAAOi6B,IAAAjzD,EAAA,MAEnErD,KAAKi0D,cAAchD,GAAY,GAClC,MADyCqF,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,KACnC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAI5D,GAHCoC,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,KACDkwD,EAAWtC,WAAajxD,KAAKm0D,aAAalD,GAAYqF,IAAAjzD,EAAA,MAEjDrD,KAAKi0D,cAAc/C,GAAY,GAClC,MADyCoF,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,KACnC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAI5D,GAHCoC,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,MACDkwD,EAAWrC,WAAalxD,KAAKm0D,aAAajD,GAAYoF,IAAAjzD,EAAA,WAErC2R,IAAbm8C,EACF,MAD0BmF,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,MACpB,IAAIJ,UAAU,iCAItB,GAHCqzD,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,MACDkwD,EAAWpC,SAAWnxD,KAAKo1D,YAAYjE,GAAUmF,IAAAjzD,EAAA,WAEhC2R,IAAbo8C,EACF,MAD0BkF,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,MACpB,IAAIJ,UAAU,iCACrBqzD,IAAA9vD,EAAA,QAAA8vD,IAAAjzD,EAAA,MACDkwD,EAAWnC,SAAWpxD,KAAKo1D,YAAYhE,GAEvC,IAAM3qB,GAAsB6vB,IAAAjzD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIkrC,uBAAuBhD,IACxDnG,GAAYkJ,IAAAjzD,EAAA,MAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcpvB,qBAAqByC,KAI/C,OAHE6vB,IAAAjzD,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM2L,IAAAjzD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA5CYkJ,4tFCAA,OAAAE,EAAA,kBAAA3sC,CAAA,EAAAA,CAAA,CAGL,SAASoa,IAAiC,IAAX0mB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAyoD,IAAAhwD,EAAA,QAAG,CAAC,GAACgwD,IAAAlzD,EAAA,KAC7C,IAAMiwD,GAAUiD,IAAAnzD,EAAA,KAAG,CAAC,GACpB,GADsBmzD,IAAAnzD,EAAA,MACjBsnD,EAAKtuB,gBACR,MADyBm6B,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KACnB,IAAIJ,UAAU,wCAItB,GAHCuzD,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KACDkwD,EAAWl3B,gBAAkBhR,EAAAA,QAAIg8B,OAAOphD,QAAQ0kD,EAAKtuB,gBAAiB,OAAOm6B,IAAAnzD,EAAA,MAExErD,KAAKi0D,cAActJ,EAAKiD,QAC3B,MADoC4I,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAI5D,GAHCsC,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KACDkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAAQ4I,IAAAnzD,EAAA,MAE9CrD,KAAKi0D,cAActJ,EAAK0G,YAAY,GACvC,MAD8CmF,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KACxC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAI5D,GAHCsC,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,KACDkwD,EAAWlC,WAAarxD,KAAKm0D,aAAaxJ,EAAK0G,YAAYmF,IAAAnzD,EAAA,OAEtDrD,KAAKi0D,cAActJ,EAAK2G,YAAY,GACvC,MAD8CkF,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,MACxC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAC3DsC,IAAAhwD,EAAA,QAAAgwD,IAAAnzD,EAAA,MACDkwD,EAAWjC,WAAatxD,KAAKm0D,aAAaxJ,EAAK2G,YAE/C,IAAM5qB,GAAuB8vB,IAAAnzD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIorC,wBAAwBlD,IAC1DnG,GAAYoJ,IAAAnzD,EAAA,MAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcnvB,sBAAsByC,KAIhD,OAHE8vB,IAAAnzD,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6L,IAAAnzD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAhCYoJ,m6ECAA,OAAAE,EAAA,kBAAA7sC,CAAA,EAAAA,CAAA,CAIL,SAASyZ,EAAeqnB,GAAM+L,IAAApzD,EAAA,KACnC,IAAMiwD,GAAUmD,IAAArzD,EAAA,KAAG,CAAC,GAGpB,GAHsBqzD,IAAArzD,EAAA,KACtBkwD,EAAWlE,QAAU1E,EAAK0E,QAAQliC,cAAcupC,IAAArzD,EAAA,KAChDkwD,EAAWjE,OAAS3E,EAAK2E,OAAOniC,cAAcupC,IAAArzD,EAAA,MACzCrD,KAAKi0D,cAActJ,EAAK+E,WAAW,GACtC,MAD6CgH,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,KACvC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,cAG5D,GAFCwC,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,KACDkwD,EAAW7D,UAAY1vD,KAAKm0D,aAAaxJ,EAAK+E,WAAWgH,IAAArzD,EAAA,UACtC2R,IAAf21C,EAAK4E,MACP,MAD4BmH,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,KACtB,IAAIJ,UAAU,8BACrByzD,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,KACDkwD,EAAWhE,MAAQvvD,KAAKo1D,YAAYzK,EAAK4E,OAAOmH,IAAArzD,EAAA,UAE3B2R,IAAjB21C,EAAK8E,SAAuBiH,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,MAC9BsnD,EAAK8E,QAAU9E,EAAK8E,QAAQlpD,aACvBmwD,IAAAlwD,EAAA,QAAAkwD,IAAArzD,EAAA,MACLsnD,EAAK8E,QAAU,KAChBiH,IAAArzD,EAAA,MAEDkwD,EAAW9D,QAAU3uD,EAAAA,MAAM4G,WAAWijD,EAAK8E,SAC3C,IAAMzpB,GAAgB0wB,IAAArzD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIsrC,iBAAiBpD,IAE5CnG,GAAYsJ,IAAArzD,EAAA,MAAG,CAAC,GAItB,OAJwBqzD,IAAArzD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc9vB,eAAe0C,GAAkB0wB,IAAArzD,EAAA,MACvErD,KAAKqzD,iBAAiBjG,EAAczC,GAAM+L,IAAArzD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA/BYsJ,koGCAA,OAAAE,EAAA,kBAAA/sC,CAAA,EAAAA,CAAA,CAHL,SAASuZ,EAAWunB,GAAMiM,IAAAtzD,EAAA,KAC/B,IAAMiwD,GAAUqD,IAAAvzD,EAAA,KAAG,CAAC,GAEpB,GAFsBuzD,IAAAvzD,EAAA,KAEhBuzD,IAAApwD,EAAA,UAAqB,iBAAdmkD,EAAKljD,OAAiBmvD,IAAApwD,EAAA,QAAImkD,EAAKljD,KAAK3D,QAAU,KACzD,MAD8D8yD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KACxD,IAAI8J,MAAM,8CAIlB,GAHCypD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KACDkwD,EAAW5D,SAAWhF,EAAKljD,KAAKmvD,IAAAvzD,EAAA,KAG9BuzD,IAAApwD,EAAA,QAAsB,iBAAfmkD,EAAKniD,QAAkBouD,IAAApwD,EAAA,SAC7BsjB,EAAOvmB,SAASonD,EAAKniD,UAAMouD,IAAApwD,EAAA,QACb,OAAfmkD,EAAKniD,OAEL,MADAouD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KACM,IAAI8J,MAAM,0CASlB,GARCypD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KAEyB,iBAAfsnD,EAAKniD,OAAoBouD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KAClCkwD,EAAW3D,UAAY9lC,EAAOnmB,KAAKgnD,EAAKniD,SACnCouD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,KACLkwD,EAAW3D,UAAYjF,EAAKniD,OAC7BouD,IAAAvzD,EAAA,KAEGuzD,IAAApwD,EAAA,QAAyB,OAAzB+sD,EAAW3D,YAAkBgH,IAAApwD,EAAA,QAAI+sD,EAAW3D,UAAU9rD,OAAS,IACjE,MADqE8yD,IAAApwD,EAAA,QAAAowD,IAAAvzD,EAAA,MAC/D,IAAI8J,MAAM,wCACjBypD,IAAApwD,EAAA,QAED,IAAMs/B,GAAY8wB,IAAAvzD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIwrC,aAAatD,IAEpCnG,GAAYwJ,IAAAvzD,EAAA,MAAG,CAAC,GAItB,OAJwBuzD,IAAAvzD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAchwB,WAAW0C,GAAc8wB,IAAAvzD,EAAA,MAC/DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMiM,IAAAvzD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA9BYwJ,w6ECAA,OAAAE,EAAA,kBAAAjtC,CAAA,EAAAA,CAAA,CAIL,SAASgZ,EAAgB8nB,GAAMmM,IAAAxzD,EAAA,KACpC,IAAMiwD,GAAUuD,IAAAzzD,EAAA,KAAG,CAAC,GAGpB,GAHsByzD,IAAAzzD,EAAA,KACtBkwD,EAAWlE,QAAU1E,EAAK0E,QAAQliC,cAAc2pC,IAAAzzD,EAAA,KAChDkwD,EAAWjE,OAAS3E,EAAK2E,OAAOniC,cAAc2pC,IAAAzzD,EAAA,MACzCrD,KAAKi0D,cAActJ,EAAKiD,QAAQ,GACnC,MAD0CkJ,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,KACpC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAG5D,GAFC4C,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,KACDkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAAQkJ,IAAAzzD,EAAA,UAChC2R,IAAf21C,EAAK4E,MACP,MAD4BuH,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,KACtB,IAAIJ,UAAU,8BACrB6zD,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,KACDkwD,EAAWhE,MAAQvvD,KAAKo1D,YAAYzK,EAAK4E,OAAOuH,IAAAzzD,EAAA,UAE3B2R,IAAjB21C,EAAK8E,SAAuBqH,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,MAC9BsnD,EAAK8E,QAAU9E,EAAK8E,QAAQlpD,aACvBuwD,IAAAtwD,EAAA,QAAAswD,IAAAzzD,EAAA,MACLsnD,EAAK8E,QAAU,KAChBqH,IAAAzzD,EAAA,MAEDkwD,EAAW9D,QAAU3uD,EAAAA,MAAM4G,WAAWijD,EAAK8E,SAC3C,IAAMhqB,GAAiBqxB,IAAAzzD,EAAA,MAAG,IAAIgoB,EAAAA,QAAI0rC,kBAAkBxD,IAE9CnG,GAAY0J,IAAAzzD,EAAA,MAAG,CAAC,GAItB,OAJwByzD,IAAAzzD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcvwB,gBAAgB4C,GAAmBqxB,IAAAzzD,EAAA,MACzErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMmM,IAAAzzD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA/BY0J,kyFCAA,OAAAE,EAAA,kBAAAntC,CAAA,EAAAA,CAAA,CAcL,SAAS+Y,EAAyB+nB,GACvC,OAD6CqM,IAAA1zD,EAAA,KAAA0zD,IAAA3zD,EAAA,MACrC,GACN,KAAMsnD,EAAKkD,UACT,MADkBmJ,IAAAxwD,EAAA,QAAAwwD,IAAA3zD,EAAA,KACZ,IAAI8J,MAAM,6BAClB,KAAMnN,KAAKi0D,cAActJ,EAAKmD,SAC5B,MADoCkJ,IAAAxwD,EAAA,QAAAwwD,IAAA3zD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,YAC5D,KAAMvJ,EAAKoD,UACT,MADkBiJ,IAAAxwD,EAAA,QAAAwwD,IAAA3zD,EAAA,KACZ,IAAI8J,MAAM,oDAClB,KAAMnN,KAAKi0D,cAActJ,EAAKqD,YAC5B,MADuCgJ,IAAAxwD,EAAA,QAAAwwD,IAAA3zD,EAAA,KACjC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAC5D,QAAA8C,IAAAxwD,EAAA,QAAAwwD,IAAA3zD,EAAA,KAIF,IAAMkwD,GAAUyD,IAAA3zD,EAAA,KAAG,CAAC,GAAE2zD,IAAA3zD,EAAA,KACtBkwD,EAAW1F,UAAYlD,EAAKkD,UAAU1gC,cAAc6pC,IAAA3zD,EAAA,KACpDkwD,EAAWzF,QAAU9tD,KAAKm0D,aAAaxJ,EAAKmD,SAASkJ,IAAA3zD,EAAA,KACrD,IAAI2zD,IAAA3zD,EAAA,MACFkwD,EAAWh+B,aAAcqzB,EAAAA,EAAAA,6BAA4B+B,EAAKp1B,YAC5D,CAAE,MAAOp2B,GACP,MADU63D,IAAA3zD,EAAA,MACJ,IAAI8J,MAAM,yBAClB,CAAC6pD,IAAA3zD,EAAA,MAEDkwD,EAAWxF,UAAYpD,EAAKoD,UAAU5gC,cAAc6pC,IAAA3zD,EAAA,MACpDkwD,EAAWvF,WAAahuD,KAAKm0D,aAAaxJ,EAAKqD,YAE/C,IAAMC,GAAI+I,IAAA3zD,EAAA,MAAGsnD,EAAKsD,MAAI+I,IAAAxwD,EAAA,QAAGmkD,EAAKsD,OAAI+I,IAAAxwD,EAAA,QAAG,KAAGwwD,IAAA3zD,EAAA,MACxCkwD,EAAWtF,KAAOA,EAAKhrC,KAAI,SAACjb,GAAM,OAAAgvD,IAAA1zD,EAAA,KAAA0zD,IAAA3zD,EAAA,MAAA2E,EAAEmlB,aAAY,IAEhD,IAAMwV,GAAOq0B,IAAA3zD,EAAA,MAAG,IAAIgoB,EAAAA,QAAI4rC,2BAA2B1D,IAE7CnG,GAAY4J,IAAA3zD,EAAA,MAAG,CAAC,GAItB,OAJwB2zD,IAAA3zD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxwB,yBAAyBD,GAASq0B,IAAA3zD,EAAA,MACxErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMqM,IAAA3zD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAlDY4J,mxFCAA,OAAAE,EAAA,kBAAArtC,CAAA,EAAAA,CAAA,CAcL,SAAS0Z,EAAsBonB,GACpC,OAD0CuM,IAAA5zD,EAAA,KAAA4zD,IAAA7zD,EAAA,MAClC,GACN,KAAMsnD,EAAKkD,UACT,MADkBqJ,IAAA1wD,EAAA,QAAA0wD,IAAA7zD,EAAA,KACZ,IAAI8J,MAAM,6BAClB,KAAMnN,KAAKi0D,cAActJ,EAAKwD,YAC5B,MADuC+I,IAAA1wD,EAAA,QAAA0wD,IAAA7zD,EAAA,KACjC,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,eAC5D,KAAMvJ,EAAKoD,UACT,MADkBmJ,IAAA1wD,EAAA,QAAA0wD,IAAA7zD,EAAA,KACZ,IAAI8J,MAAM,oDAClB,KAAMnN,KAAKi0D,cAActJ,EAAKyD,SAC5B,MADoC8I,IAAA1wD,EAAA,QAAA0wD,IAAA7zD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,YAC5D,QAAAgD,IAAA1wD,EAAA,QAAA0wD,IAAA7zD,EAAA,KAIF,IAAMkwD,GAAU2D,IAAA7zD,EAAA,KAAG,CAAC,GAAE6zD,IAAA7zD,EAAA,KACtBkwD,EAAW1F,UAAYlD,EAAKkD,UAAU1gC,cAAc+pC,IAAA7zD,EAAA,KACpDkwD,EAAWpF,WAAanuD,KAAKm0D,aAAaxJ,EAAKwD,YAAY+I,IAAA7zD,EAAA,KAC3D,IAAI6zD,IAAA7zD,EAAA,MACFkwD,EAAWh+B,aAAcqzB,EAAAA,EAAAA,6BAA4B+B,EAAKp1B,YAC5D,CAAE,MAAOp2B,GACP,MADU+3D,IAAA7zD,EAAA,MACJ,IAAI8J,MAAM,yBAClB,CAAC+pD,IAAA7zD,EAAA,MACDkwD,EAAWxF,UAAYpD,EAAKoD,UAAU5gC,cAAc+pC,IAAA7zD,EAAA,MACpDkwD,EAAWnF,QAAUpuD,KAAKm0D,aAAaxJ,EAAKyD,SAE5C,IAAMH,GAAIiJ,IAAA7zD,EAAA,MAAGsnD,EAAKsD,MAAIiJ,IAAA1wD,EAAA,QAAGmkD,EAAKsD,OAAIiJ,IAAA1wD,EAAA,QAAG,KAAG0wD,IAAA7zD,EAAA,MACxCkwD,EAAWtF,KAAOA,EAAKhrC,KAAI,SAACjb,GAAM,OAAAkvD,IAAA5zD,EAAA,KAAA4zD,IAAA7zD,EAAA,MAAA2E,EAAEmlB,aAAY,IAEhD,IAAMwV,GAAOu0B,IAAA7zD,EAAA,MAAG,IAAIgoB,EAAAA,QAAI8rC,wBAAwB5D,IAE1CnG,GAAY8J,IAAA7zD,EAAA,MAAG,CAAC,GAItB,OAJwB6zD,IAAA7zD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAc7vB,sBAAsBZ,GAASu0B,IAAA7zD,EAAA,MACrErD,KAAKqzD,iBAAiBjG,EAAczC,GAAMuM,IAAA7zD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAjDY8J,ogECAA,OAAAE,EAAA,kBAAAvtC,CAAA,EAAAA,CAAA,CAKL,SAAS8Y,EAAQgoB,GACtB,GAD4ByM,IAAA9zD,EAAA,KAAA8zD,IAAA/zD,EAAA,MACvBsnD,EAAKp8B,MACR,MADe6oC,IAAA5wD,EAAA,QAAA4wD,IAAA/zD,EAAA,KACT,IAAI8J,MAAM,iDAElB,GADCiqD,IAAA5wD,EAAA,QAAA4wD,IAAA/zD,EAAA,MACIrD,KAAKi0D,cAActJ,EAAKiD,QAC3B,MADoCwJ,IAAA5wD,EAAA,QAAA4wD,IAAA/zD,EAAA,KAC9B,IAAIJ,UAAUjD,KAAKk0D,iCAAiC,WAC3DkD,IAAA5wD,EAAA,QAED,IAAM+sD,GAAU6D,IAAA/zD,EAAA,KAAG,CAAC,GAAE+zD,IAAA/zD,EAAA,KACtB,IAAI+zD,IAAA/zD,EAAA,KACFkwD,EAAWh+B,aAAcqzB,EAAAA,EAAAA,6BAA4B+B,EAAKp1B,YAC5D,CAAE,MAAOp2B,GACP,MADUi4D,IAAA/zD,EAAA,KACJ,IAAI8J,MAAM,yBAClB,CAACiqD,IAAA/zD,EAAA,KAEDkwD,EAAWhlC,MAAQo8B,EAAKp8B,MAAMpB,cAAciqC,IAAA/zD,EAAA,KAC5CkwD,EAAW3F,OAAS5tD,KAAKm0D,aAAaxJ,EAAKiD,QAC3C,IAAMroB,GAAS6xB,IAAA/zD,EAAA,MAAG,IAAIgoB,EAAAA,QAAIgsC,UAAU9D,IAE9BnG,GAAYgK,IAAA/zD,EAAA,MAAG,CAAC,GAItB,OAJwB+zD,IAAA/zD,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAczwB,QAAQ4C,GAAW6xB,IAAA/zD,EAAA,MACzDrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMyM,IAAA/zD,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA7BYgK,u0CCAA,OAAAE,EAAA,kBAAAztC,CAAA,EAAAA,CAAA,CAUL,SAASua,IAA4B,IAAA8e,EAAXyH,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAupD,IAAA9wD,EAAA,QAAG,CAAC,GAAC8wD,IAAAh0D,EAAA,KACxC,IAAMqwD,GAAE2D,IAAAj0D,EAAA,KAAG,IAAIgoB,EAAAA,QAAIksC,mBAAmB,CAAE7B,IAAK,IAAIrqC,EAAAA,QAAIsqC,eAAe,MAC9DvI,GAAYkK,IAAAj0D,EAAA,KAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAchvB,iBAAiBuvB,KAG3C,OAFE2D,IAAAj0D,EAAA,KACFrD,KAAKqzD,iBAAiBjG,EAAkB,QAANkK,IAAA9wD,EAAA,QAAA08C,EAAEyH,SAAI,IAAAzH,EAAAA,GAAAoU,IAAA9wD,EAAA,QAAI,CAAC,IAAG8wD,IAAAj0D,EAAA,KACzC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAjBYkK,6sZCAA,OAAAE,EAAA,kBAAA3tC,CAAA,EAAAA,CAAA,CAOL,SAAS4oC,IAAoC,IAAX9H,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,QAAG,CAAC,GAC/C,GADgDgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,MAC3C8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKn/B,SACvC,MADiDgsC,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,KAC3C,IAAI8J,MAAM,sBACjBqqD,IAAAhxD,EAAA,QAED,IAAM+9B,GAASizB,IAAAn0D,EAAA,KAAGgoB,EAAAA,QAAI6L,UAAU1L,QAC9B,IAAIH,EAAAA,QAAIosC,iBAAiB,CACvBxtC,UAAW+D,EAAAA,QAAQC,cAAc08B,EAAKn/B,SAAS0C,mBAG7CylC,GAAE6D,IAAAn0D,EAAA,KAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,KAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,KACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,KAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,KAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAuBO,SAASsF,IAAsC,IAKhDnkC,EALqCo8B,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,QAAG,CAAC,GACjD,GADkDgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,MAC7C8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKn/B,SACvC,MADiDgsC,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,KAC3C,IAAI8J,MAAM,sBAIlB,GAHCqqD,IAAAhxD,EAAA,QAESgxD,IAAAn0D,EAAA,MACNsnD,EAAKp8B,iBAAiBnC,EAAAA,MAAOorC,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MAC/BkrB,EAAQo8B,EAAKp8B,MAAMopC,2BACd,IAAAH,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,QAAIsnD,EAAKp8B,iBAAiB24B,EAAAA,iBAG/B,MADKsQ,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MACC,IAAIJ,UAAU,6CAH4Bu0D,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MAChDkrB,EAAQo8B,EAAKp8B,MAAMpB,aAGrB,CAEA,IAAMoX,GAASizB,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAI6L,UAAUkE,UAC9B,IAAI/P,EAAAA,QAAIusC,mBAAmB,CACzB3tC,UAAW+D,EAAAA,QAAQC,cAAc08B,EAAKn/B,SAAS0C,eAC/CK,MAAAA,MAGEolC,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,MAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,MAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAoBO,SAASuF,IAAkC,IAAXhI,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,QAAG,CAAC,GAC7C,GAD8CgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,OACzC8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKsF,QACvC,MADgDuH,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MAC1C,IAAI8J,MAAM,qBAElB,GADCqqD,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MAC2B,iBAAjBsnD,EAAK8E,QACd,MADoC+H,IAAAhxD,EAAA,QAAAgxD,IAAAn0D,EAAA,MAC9B,IAAI8J,MAAM,sBACjBqqD,IAAAhxD,EAAA,QAED,IAAM+9B,GAASizB,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAI6L,UAAUmE,MAC9B,IAAIhQ,EAAAA,QAAIwsC,eAAe,CACrB3H,SAAUliC,EAAAA,QAAQC,cAAc08B,EAAKsF,QAAQ/hC,eAC7CuhC,QAASpkC,EAAAA,QAAI0J,MAAMrtB,WAAWijD,EAAK8E,aAGjCkE,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,MAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,MAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAoBO,SAASwF,IAAiC,IAAXjI,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,QAAG,CAAC,GAC5C,GAD6CgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,OACxC8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKn/B,SACvC,MADiDgsC,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAC3C,IAAI8J,MAAM,sBAElB,GADCqqD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACGm0D,IAAAhxD,EAAA,SAAqB,iBAAdmkD,EAAKljD,OAAiB+vD,IAAAhxD,EAAA,SAAImkD,EAAKljD,KAAK3D,OAAS,IACtD,MAD0D0zD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACpD,IAAI8J,MAAM,8CACjBqqD,IAAAhxD,EAAA,SAED,IAAM+9B,GAASizB,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAI6L,UAAUrpB,KAC9B,IAAIwd,EAAAA,QAAIysC,cAAc,CACpB7tC,UAAW+D,EAAAA,QAAQC,cAAc08B,EAAKn/B,SAAS0C,eAC/CyhC,SAAUhF,EAAKljD,SAGbksD,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,MAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,MAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAkBO,SAASyF,IAA6C,IAAXlI,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,SAAG,CAAC,GACxD,GADyDgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,MAC3B,iBAAnBsnD,EAAK5a,UACd,MADsCynB,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAChC,IAAI8J,MAAM,wBACjBqqD,IAAAhxD,EAAA,SAED,IAAM+9B,GAASizB,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAI6L,UAAUoE,iBAC9B,IAAIjQ,EAAAA,QAAI0sC,0BAA0B,CAChChoB,UAAW1kB,EAAAA,QAAIopC,mBAAmBxuD,QAAQ0kD,EAAK5a,UAAW,WAGxD4jB,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,MAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,MAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAkBO,SAAS0F,IAA0C,IAAXnI,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,SAAG,CAAC,GACrD,GADsDgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,MAClB,iBAAzBsnD,EAAKtuB,gBACd,MAD4Cm7B,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACtC,IAAI8J,MAAM,8BACjBqqD,IAAAhxD,EAAA,SAED,IAAM+9B,GAASizB,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAI6L,UAAUqE,cAC9B,IAAIlQ,EAAAA,QAAI2sC,uBAAuB,CAC7B37B,gBAAiBhR,EAAAA,QAAIg8B,OAAOphD,QAAQ0kD,EAAKtuB,gBAAiB,WAIxDs3B,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBrzB,6BAA6BE,IAC1D6oB,GAAYoK,IAAAn0D,EAAA,MAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,KAI5C,OAHE6D,IAAAn0D,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAyBO,SAAS2F,IAAmC,IAI7Cn+C,EAJkC+1C,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAypD,IAAAhxD,EAAA,SAAG,CAAC,GAC9C,GAD+CgxD,IAAAl0D,EAAA,KAAAk0D,IAAAn0D,EAAA,OAC1C8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKn/B,SACvC,MADiDgsC,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAC3C,IAAI8J,MAAM,sBAGlB,GAFCqqD,IAAAhxD,EAAA,SACOgxD,IAAAn0D,EAAA,MACJsnD,EAAKh4B,OAAOq8B,iBAAkB,CAChC,GADgCwI,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,OAC3B8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKh4B,OAAOq8B,kBAC9C,MADiEwI,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAC3D,IAAI8J,MAAM,uCACjBqqD,IAAAhxD,EAAA,SACD,IAAMyxD,GAAMT,IAAAn0D,EAAA,MAAG8mB,EAAAA,OAAOU,uBAAuB8/B,EAAKh4B,OAAOq8B,mBAAkBwI,IAAAn0D,EAAA,MAE3EuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUzgB,qBAAqBwgB,EAC/C,MAAO,GAAAT,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAAIsnD,EAAKh4B,OAAOklB,UAAW,CAChC,IAAIpqC,EAOJ,GARgC+pD,IAAAhxD,EAAA,SACrBgxD,IAAAn0D,EAAA,MAC0B,iBAA1BsnD,EAAKh4B,OAAOklB,WAAwB2f,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAC7CoK,EAASqc,EAAOnmB,KAAKgnD,EAAKh4B,OAAOklB,UAAW,SACvC2f,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACLoK,EAASk9C,EAAKh4B,OAAOklB,WACtB2f,IAAAn0D,EAAA,MAEKm0D,IAAAhxD,EAAA,UAAAsjB,EAAOvmB,SAASkK,KAAO+pD,IAAAhxD,EAAA,SAAsB,KAAlBiH,EAAO3J,QACtC,MADsD0zD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAChD,IAAI8J,MAAM,6CACjBqqD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAEDuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUxgB,uBAAuBjqC,EACjD,KAAO,IAAA+pD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,OAAIsnD,EAAKh4B,OAAOs8B,WAcrB,MADKuI,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACC,IAAI8J,MAAM,qBAbhB,IAAIM,EAOJ,GARiC+pD,IAAAhxD,EAAA,SACtBgxD,IAAAn0D,EAAA,MAC2B,iBAA3BsnD,EAAKh4B,OAAOs8B,YAAyBuI,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAC9CoK,EAASqc,EAAOnmB,KAAKgnD,EAAKh4B,OAAOs8B,WAAY,SACxCuI,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MACLoK,EAASk9C,EAAKh4B,OAAOs8B,YACtBuI,IAAAn0D,EAAA,MAEKm0D,IAAAhxD,EAAA,UAAAsjB,EAAOvmB,SAASkK,KAAO+pD,IAAAhxD,EAAA,SAAsB,KAAlBiH,EAAO3J,QACtC,MADsD0zD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAChD,IAAI8J,MAAM,8CACjBqqD,IAAAhxD,EAAA,SAAAgxD,IAAAn0D,EAAA,MAEDuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUvgB,mBAAmBlqC,EAG7C,CAEA,IAAMklB,GAAM6kC,IAAAn0D,EAAA,MAAG,IAAIgoB,EAAAA,QAAI8sC,0BAA0B,CAC/CluC,UAAW+D,EAAAA,QAAQC,cAAc08B,EAAKn/B,SAAS0C,eAC/CiiC,UAAWv7C,KAGP++C,GAAE6D,IAAAn0D,EAAA,MAAGgoB,EAAAA,QAAIqsC,oBAAoBpzB,wBAAwB3R,IACrDy6B,GAAYoK,IAAAn0D,EAAA,MAAG,CAAC,GAItB,OAJwBm0D,IAAAn0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcxvB,kBAAkB+vB,GAAI6D,IAAAn0D,EAAA,MAC5DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAM6M,IAAAn0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CA5SYoK,s4QCAA,OAAAY,EAAA,kBAAAvuC,CAAA,EAAAA,CAAA,CATZ,SAASwuC,EAAoB7vD,EAAOf,GAClC,GADwC2wD,IAAA90D,EAAA,KAAA80D,IAAA/0D,EAAA,KACpC+0D,IAAA5xD,EAAA,QAAAgC,GAAS,IAAC4vD,IAAA5xD,EAAA,QAAIgC,GAAS,KACzB,OAD8B4vD,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MACvB,EAET,MADC+0D,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,KACK,IAAI8J,MAAM,GAADiC,OAAI3H,EAAI,oCACzB,CAqCO,SAASs7B,EAAW4nB,GAAMyN,IAAA90D,EAAA,KAC/B,IAAMiwD,GAAU6E,IAAA/0D,EAAA,KAAG,CAAC,GAEpB,GAFsB+0D,IAAA/0D,EAAA,KAElBsnD,EAAK6D,cAAe,CACtB,GADsB4J,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MACjB8mB,EAAAA,OAAOE,wBAAwBsgC,EAAK6D,eACvC,MADuD4J,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,KACjD,IAAI8J,MAAM,4BACjBirD,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,KACDkwD,EAAW/E,cAAgBxgC,EAAAA,QAAQC,cACjC08B,EAAK6D,eACLtgC,cACJ,MAACkqC,IAAA5xD,EAAA,QA4BD,GA5BC4xD,IAAA/0D,EAAA,KAEDkwD,EAAW9E,WAAazuD,KAAKs4D,uBAC3B,aACA3N,EAAK8D,YACL2J,IAAA/0D,EAAA,KACFkwD,EAAW7E,SAAW1uD,KAAKs4D,uBAAuB,WAAY3N,EAAK+D,UAAU0J,IAAA/0D,EAAA,MAC7EkwD,EAAW5E,aAAe3uD,KAAKs4D,uBAC7B,eACA3N,EAAKgE,aACL0J,GACAD,IAAA/0D,EAAA,MACFkwD,EAAW3E,aAAe5uD,KAAKs4D,uBAC7B,eACA3N,EAAKiE,aACLyJ,GACAD,IAAA/0D,EAAA,MACFkwD,EAAW1E,aAAe7uD,KAAKs4D,uBAC7B,eACA3N,EAAKkE,aACLwJ,GACAD,IAAA/0D,EAAA,MACFkwD,EAAWzE,cAAgB9uD,KAAKs4D,uBAC9B,gBACA3N,EAAKmE,cACLuJ,GACAD,IAAA/0D,EAAA,MAEE+0D,IAAA5xD,EAAA,aAAoBwO,IAApB21C,EAAKoE,aAAwBqJ,IAAA5xD,EAAA,QAA+B,iBAApBmkD,EAAKoE,YAC/C,MADwEqJ,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MAClE,IAAIJ,UAAU,8CAItB,GAHCm1D,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MACDkwD,EAAWxE,WAAapE,EAAKoE,WAAWqJ,IAAA/0D,EAAA,MAEpCsnD,EAAKh4B,OAAQ,CAAAylC,IAAA5xD,EAAA,QACf,IAKIoO,EALEw6C,GAAMgJ,IAAA/0D,EAAA,MAAGrD,KAAKs4D,uBAClB,gBACA3N,EAAKh4B,OAAOy8B,OACZiJ,IAIE/uC,GAAS8uC,IAAA/0D,EAAA,MAAG,GAEhB,GAFkB+0D,IAAA/0D,EAAA,MAEdsnD,EAAKh4B,OAAOq8B,iBAAkB,CAChC,GADgCoJ,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,OAC3B8mB,EAAAA,OAAOE,wBAAwBsgC,EAAKh4B,OAAOq8B,kBAC9C,MADiEoJ,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MAC3D,IAAI8J,MAAM,uCACjBirD,IAAA5xD,EAAA,QACD,IAAMyxD,GAAMG,IAAA/0D,EAAA,MAAG8mB,EAAAA,OAAOU,uBACpB8/B,EAAKh4B,OAAOq8B,mBAGdoJ,IAAA/0D,EAAA,MACAuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUzgB,qBAAqBwgB,GAAQG,IAAA/0D,EAAA,MACrDimB,GAAa,CACf,MAAC8uC,IAAA5xD,EAAA,QAED,GAFC4xD,IAAA/0D,EAAA,MAEGsnD,EAAKh4B,OAAOklB,UAAW,CAKzB,GALyBugB,IAAA5xD,EAAA,QAAA4xD,IAAA/0D,EAAA,MACY,iBAA1BsnD,EAAKh4B,OAAOklB,WAAwBugB,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAC7CsnD,EAAKh4B,OAAOklB,UAAY/tB,EAAOnmB,KAAKgnD,EAAKh4B,OAAOklB,UAAW,QAC5DugB,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAIG+0D,IAAA5xD,EAAA,UAAAsjB,EAAOvmB,SAASonD,EAAKh4B,OAAOklB,aAAUugB,IAAA5xD,EAAA,SACL,KAAjCmkD,EAAKh4B,OAAOklB,UAAU/zC,QAGxB,MADAs0D,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MACM,IAAI8J,MAAM,6CACjBirD,IAAA5xD,EAAA,SAED4xD,IAAA/0D,EAAA,MACAuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUxgB,uBAAuBiT,EAAKh4B,OAAOklB,WAAWugB,IAAA/0D,EAAA,MACtEimB,GAAa,CACf,MAAC8uC,IAAA5xD,EAAA,QAED,GAFC4xD,IAAA/0D,EAAA,MAEGsnD,EAAKh4B,OAAOs8B,WAAY,CAK1B,GAL0BmJ,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MACY,iBAA3BsnD,EAAKh4B,OAAOs8B,YAAyBmJ,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAC9CsnD,EAAKh4B,OAAOs8B,WAAanlC,EAAOnmB,KAAKgnD,EAAKh4B,OAAOs8B,WAAY,QAC9DmJ,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAIG+0D,IAAA5xD,EAAA,UAAAsjB,EAAOvmB,SAASonD,EAAKh4B,OAAOs8B,cAAWmJ,IAAA5xD,EAAA,SACL,KAAlCmkD,EAAKh4B,OAAOs8B,WAAWnrD,QAGzB,MADAs0D,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MACM,IAAI8J,MAAM,8CACjBirD,IAAA5xD,EAAA,SAED4xD,IAAA/0D,EAAA,MACAuR,EAAM,IAAIyW,EAAAA,QAAI6sC,UAAUvgB,mBAAmBgT,EAAKh4B,OAAOs8B,YAAYmJ,IAAA/0D,EAAA,MACnEimB,GAAa,CACf,MAAC8uC,IAAA5xD,EAAA,SAED,GAFC4xD,IAAA/0D,EAAA,MAEGsnD,EAAKh4B,OAAOolB,qBAAsB,CACpC,GADoCqgB,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,OAC/B8mB,EAAAA,OAAOouC,qBAAqB5N,EAAKh4B,OAAOolB,sBAC3C,MADkEqgB,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAC5D,IAAI8J,MAAM,2CACjBirD,IAAA5xD,EAAA,SACD,IAAMyxD,GAAMG,IAAA/0D,EAAA,MAAG8mB,EAAAA,OAAOquC,oBACpB7N,EAAKh4B,OAAOolB,uBAER0gB,GAAgBL,IAAA/0D,EAAA,MACpBgoB,EAAAA,QAAIqtC,8BAA8BzyD,QAAQgyD,IAE5CG,IAAA/0D,EAAA,MACAuR,EAAMyW,EAAAA,QAAI6sC,UAAUtgB,kCAAkC6gB,GAAkBL,IAAA/0D,EAAA,MACxEimB,GAAa,CACf,MAAC8uC,IAAA5xD,EAAA,SAED,GAFC4xD,IAAA/0D,EAAA,MAEiB,IAAdimB,EACF,MADmB8uC,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MACb,IAAI8J,MACR,2GAEHirD,IAAA5xD,EAAA,SAAA4xD,IAAA/0D,EAAA,MAEDkwD,EAAW5gC,OAAS,IAAItH,EAAAA,QAAIstC,OAAO,CAAE/jD,IAAAA,EAAKw6C,OAAAA,GAC5C,MAACgJ,IAAA5xD,EAAA,QAED,IAAMm/B,GAAYyyB,IAAA/0D,EAAA,MAAG,IAAIgoB,EAAAA,QAAIutC,aAAarF,IAEpCnG,GAAYgL,IAAA/0D,EAAA,MAAG,CAAC,GAItB,OAJwB+0D,IAAA/0D,EAAA,MACxB+pD,EAAap1B,KAAO3M,EAAAA,QAAI+nC,cAAcrwB,WAAW4C,GAAcyyB,IAAA/0D,EAAA,MAC/DrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMyN,IAAA/0D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAxKYgL,i2GCAA,OAAAS,EAAA,kBAAAhvC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,CAyBL,SAAS2gC,IAA6B,IAAX4mB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAA8qD,IAAAryD,EAAA,QAAG,CAAC,GAACqyD,IAAAv1D,EAAA,KACzC,IAAMiwD,GAAUsF,IAAAx1D,EAAA,KAAG,CAAC,GAEpB,GAFsBw1D,IAAAx1D,EAAA,KAElBw1D,IAAAryD,EAAA,QAAsB,WAAtB6N,EAAOs2C,EAAKvmC,SAAkBy0C,IAAAryD,EAAA,QAAuC,IAAnCvG,OAAO0Y,KAAKgyC,EAAKvmC,OAAOtgB,QAC5D,MAD0E+0D,IAAAryD,EAAA,QAAAqyD,IAAAx1D,EAAA,KACpE,IAAI8J,MAAM,uDACjB0rD,IAAAryD,EAAA,QAED,IAAMiqD,GAAOoI,IAAAx1D,EAAA,KAAG,CACdqtD,WAAYrlC,EAAAA,QAAIslC,eAAe10B,iBAC/B20B,gCACEvlC,EAAAA,QAAIslC,eAAez0B,sCACrB20B,gBAAiBxlC,EAAAA,QAAIslC,eAAex0B,iCAIlC28B,GAASD,IAAAx1D,EAAA,KAAG,GACZ01D,GAAOF,IAAAx1D,EAAA,KAAG,GAAEw1D,IAAAx1D,EAAA,KAEhBpD,OAAO0Y,KAAKgyC,EAAKvmC,OAAOrL,SAAQ,SAAC+3C,GAC/B,GAD4C+H,IAAAv1D,EAAA,KAAAu1D,IAAAx1D,EAAA,MACvCpD,OAAOJ,UAAUqU,eAAenU,KAAK0wD,EAASK,GACjD,MAD4D+H,IAAAryD,EAAA,QAAAqyD,IAAAx1D,EAAA,KACtD,IAAI8J,MAAM,oCAADiC,OAAqC0hD,IACrD+H,IAAAryD,EAAA,QAED,IAAMwyD,GAASH,IAAAx1D,EAAA,KAAGsnD,EAAKvmC,MAAM0sC,IACvBC,GAAG8H,IAAAx1D,EAAA,MAAGotD,EAAQK,GAAUtoD,OAAMqwD,IAAAx1D,EAAA,OAClB,IAAd21D,GAAoBH,IAAAryD,EAAA,QAAAqyD,IAAAx1D,EAAA,MACtB01D,GAAWhI,IACN8H,IAAAryD,EAAA,QAAAqyD,IAAAx1D,EAAA,OAAkB,IAAd21D,GAAqBH,IAAAryD,EAAA,QAAAqyD,IAAAx1D,EAAA,MAC9By1D,GAAa/H,GACd8H,IAAAryD,EAAA,QACH,IAAGqyD,IAAAx1D,EAAA,MAEHkwD,EAAWjF,QAAUtgC,EAAAA,QAAQC,cAAc08B,EAAK2D,SAASpgC,eAAe2qC,IAAAx1D,EAAA,MACxEkwD,EAAWhlC,MAAQo8B,EAAKp8B,MAAMpB,cAAc0rC,IAAAx1D,EAAA,MAC5CkwD,EAAW9E,WAAaqK,EAAUD,IAAAx1D,EAAA,MAClCkwD,EAAW7E,SAAWqK,EAEtB,IAAM3L,GAAYyL,IAAAx1D,EAAA,MAAG,CACnB20B,KAAM3M,EAAAA,QAAI+nC,cAAcrvB,kBACtB,IAAI1Y,EAAAA,QAAI4tC,oBAAoB1F,MAKhC,OAHEsF,IAAAx1D,EAAA,MACFrD,KAAKqzD,iBAAiBjG,EAAczC,GAAMkO,IAAAx1D,EAAA,MAEnC,IAAIgoB,EAAAA,QAAI0L,UAAUq2B,EAC3B,CAtEYyL,w6aCAA,OAAAK,EAAA,kBAAArvC,CAAA,EAAAA,CAAA,UAAAvG,EAAAjkB,EAAAF,GAAA,gBAAAE,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAA,CAAA,CAAAmkB,CAAAnkB,IAAA,SAAAA,EAAAwG,GAAA,IAAAzG,EAAA,MAAAC,EAAA,yBAAAgO,QAAAhO,EAAAgO,OAAAiH,WAAAjV,EAAA,uBAAAD,EAAA,KAAAD,EAAAM,EAAAD,EAAAoD,EAAA+B,EAAA,GAAArB,GAAA,EAAAF,GAAA,SAAA5D,GAAAJ,EAAAA,EAAAW,KAAAV,IAAAokB,KAAA,IAAA5d,EAAA,IAAA5F,OAAAb,KAAAA,EAAA,OAAAkE,GAAA,cAAAA,GAAAnE,EAAAK,EAAAO,KAAAX,IAAAskB,QAAA/e,EAAAsI,KAAA9N,EAAAqJ,OAAA7D,EAAAb,SAAA+B,GAAAvC,GAAA,UAAAjE,GAAA+D,GAAA,EAAA3D,EAAAJ,CAAA,iBAAAiE,GAAA,MAAAlE,EAAA,SAAAwD,EAAAxD,EAAA,SAAAa,OAAA2C,KAAAA,GAAA,kBAAAQ,EAAA,MAAA3D,CAAA,SAAAkF,CAAA,EAAAif,CAAAvkB,EAAAF,IAAA,SAAAE,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,EAAAF,IAAA,qBAAA8D,UAAA,6IAAAghB,EAAA,UAAAH,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,UAAA4U,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,CA2HL,SAASixB,EAAc3V,GAAgB,IAAA0lC,EAAA+U,EAAXxO,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAmrD,IAAA1yD,EAAA,QAAG,CAAC,GACzC,OAD0C0yD,IAAA51D,EAAA,KAAA41D,IAAA71D,EAAA,KAC1CgR,EAAeqK,IACb,IAAK,SACH,GADWw6C,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KACC,OAARqb,EACF,OADgBw6C,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KACTgoB,EAAAA,QAAIQ,MAAMosB,UAGnB,GAFCihB,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KAEGqb,aAAe2M,EAAAA,QAAIQ,MACrB,OAD4BqtC,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KACrBqb,EAGT,GAFCw6C,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KAEGqb,aAAegM,EAAAA,QACjB,OAD0BwuC,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KACnBqb,EAAI06C,UAGb,GAFCF,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KAEGqb,aAAekY,EAAAA,SACjB,OAD2BsiC,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KACpBqb,EAAIiM,UAAUyuC,UAGvB,GAFCF,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,KAEG61D,IAAA1yD,EAAA,QAAAkY,aAAe5e,aAAUo5D,IAAA1yD,EAAA,QAAIsjB,EAAOvmB,SAASmb,IAAM,KAAAwkC,EAAAgW,IAAA1yD,EAAA,QACrD,IAAMvB,GAAIi0D,IAAA71D,EAAA,MAAGvD,WAAW6D,KAAK+a,IAC7B,OADkCw6C,IAAA71D,EAAA,MAChB,QAAlB61D,IAAA1yD,EAAA,QAAA08C,EAAQyH,aAAI,EAAJA,EAAM/8C,YAAI,IAAAs1C,EAAAA,GAAAgW,IAAA1yD,EAAA,QAAI,UACpB,IAAK,QACH,OADU0yD,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACHgoB,EAAAA,QAAIQ,MAAMgtB,SAAS5zC,GAC5B,IAAK,SACH,OADWi0D,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACJgoB,EAAAA,QAAIQ,MAAMktB,UAAU9zC,GAC7B,IAAK,SACH,OADWi0D,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACJgoB,EAAAA,QAAIQ,MAAMitB,UAAU7zC,GAC7B,QACE,MADFi0D,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACQ,IAAIJ,UAAU,iBAADmM,OACAu7C,EAAK/8C,KAAI,qCAGlC,MAACsrD,IAAA1yD,EAAA,QAED,GAFC0yD,IAAA71D,EAAA,MAEGjD,MAAMoD,QAAQkb,GAAM,CACtB,GADsBw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAClB61D,IAAA1yD,EAAA,SAAAkY,EAAI5a,OAAS,IAACo1D,IAAA1yD,EAAA,SAAIkY,EAAI26C,MAAK,SAACzyD,GAAM,OAAAsyD,IAAA51D,EAAA,KAAA41D,IAAA71D,EAAA,MAAAgR,EAAOzN,KAACyN,EAAYqK,EAAI,GAAC,KAC7D,MADiEw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAC3D,IAAIJ,UAAU,iBAADmM,OACAsP,EAAG,sCAAAtP,OAAqCsP,EACtDuE,KAAI,SAACrc,GAAM,OAAAsyD,IAAA51D,EAAA,KAAA41D,IAAA71D,EAAA,MAAAgR,EAAOzN,EAAA,IAClBsG,KAAK,KAAI,MAGhB,OADCgsD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACMgoB,EAAAA,QAAIQ,MAAM0I,OAAO7V,EAAIuE,KAAI,SAACrc,GAAM,OAAAsyD,IAAA51D,EAAA,KAAA41D,IAAA71D,EAAA,MAAAgxB,EAAcztB,EAAG+jD,EAAI,IAC9D,CAEgD,IAAA2O,EAAhD,GAFCJ,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAEqC,YAAZ,QAAtB61D,IAAA1yD,EAAA,SAAA49C,EAAgB,QAAhB+U,EAACz6C,EAAIxb,mBAAW,IAAAi2D,OAAA,EAAfA,EAAiB1xD,YAAI,IAAA28C,EAAAA,GAAA8U,IAAA1yD,EAAA,SAAI,KAC5B,MAD8C0yD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACxC,IAAIJ,UAAU,oBAADmM,OAEA,QAFAkqD,EAEf56C,EAAIxb,mBAAW,IAAAo2D,OAAA,EAAfA,EAAiB7xD,KAAI,qBAAA2H,OACHm1C,KAAKC,UAAU9lC,GAAI,MAI3C,OAFCw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAEMgoB,EAAAA,QAAIQ,MAAMmtB,OACf/4C,OAAOiJ,QAAQwV,GAAKuE,KAAI,SAAAs2C,GAAY,IAAAC,EAAAC,EAAAC,EAAAp2C,EAAAi2C,EAAA,GAAV73D,EAACg4D,EAAA,GAAE9yD,EAAC8yD,EAAA,GAAAR,IAAA51D,EAAA,KAI5B,IAAgEq2D,EAAAr2C,GAAhE41C,IAAA71D,EAAA,MAAgD,QAAhD61D,IAAA1yD,EAAA,SAAAgzD,GAAsC,QAAXN,IAAA1yD,EAAA,SAAAizD,EAAC9O,aAAI,EAAJA,EAAM/8C,YAAI,IAAA6rD,EAAAA,GAAAP,IAAA1yD,EAAA,SAAI,CAAC,IAAG9E,UAAE,IAAA83D,EAAAA,GAAAN,IAAA1yD,EAAA,SAAI,CAAC,KAAM,QAAK,GAAzDozD,EAAOD,EAAA,GAAEE,EAAOF,EAAA,GACjBG,GAAOZ,IAAA71D,EAAA,MAAGu2D,GAAOV,IAAA1yD,EAAA,SAAG,CAAEoH,KAAMgsD,KAASV,IAAA1yD,EAAA,SAAG,CAAC,IACzCuzD,GAAOb,IAAA71D,EAAA,MAAGw2D,GAAOX,IAAA1yD,EAAA,SAAG,CAAEoH,KAAMisD,KAASX,IAAA1yD,EAAA,SAAG,CAAC,IAE/C,OAFiD0yD,IAAA71D,EAAA,MAE1C,IAAIgoB,EAAAA,QAAI2uC,WAAW,CACxBplD,IAAKyf,EAAc3yB,EAAGo4D,GACtBp7C,IAAK2V,EAAcztB,EAAGmzD,IAE1B,KAGJ,IAAK,SAAQb,IAAA1yD,EAAA,QACb,IAAK,SACH,OADW0yD,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACHsnD,aAAI,EAAJA,EAAM/8C,MACZ,IAAK,MACH,OADQsrD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACDgoB,EAAAA,QAAIQ,MAAMssB,OAAOz5B,GAE1B,IAAK,MACH,OADQw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACDgoB,EAAAA,QAAIQ,MAAMusB,OAAO15B,GAE1B,QAAAw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAIF,OAFC61D,IAAA71D,EAAA,MAEM,IAAIonD,EAAAA,MAAM/rC,EAAK,CAAE9Q,KAAM+8C,aAAI,EAAJA,EAAM/8C,OAAQwrD,UAE9C,IAAK,SAAQF,IAAA1yD,EAAA,QAAE,IAAAyzD,EACPC,GAAOhB,IAAA71D,EAAA,MAAa,QAAb61D,IAAA1yD,EAAA,SAAAyzD,EAAGtP,aAAI,EAAJA,EAAM/8C,YAAI,IAAAqsD,EAAAA,GAAAf,IAAA1yD,EAAA,SAAI,WAC9B,OADuC0yD,IAAA71D,EAAA,MAC/B62D,GACN,IAAK,SACH,OADWhB,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACJgoB,EAAAA,QAAIQ,MAAMitB,UAAUp6B,GAE7B,IAAK,SACH,OADWw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACJgoB,EAAAA,QAAIQ,MAAMktB,UAAUr6B,GAE7B,IAAK,UACH,OADYw6C,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACL,IAAIqnB,EAAAA,QAAQhM,GAAK06C,UAE1B,QACE,GADFF,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACMsmD,EAAAA,YAAYwQ,OAAOD,GACrB,OAD+BhB,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACxB,IAAIsmD,EAAAA,YAAYuQ,EAASx7C,GAAK06C,UAGvC,MAFCF,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAEK,IAAIJ,UAAU,iBAADmM,OACAu7C,EAAK/8C,KAAI,iCAKlC,IAAK,UACH,OADYsrD,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACLgoB,EAAAA,QAAIQ,MAAMmsB,QAAQt5B,GAE3B,IAAK,YACH,OADcw6C,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACPgoB,EAAAA,QAAIQ,MAAMosB,UAEnB,IAAK,WACH,OADaihB,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACNgxB,EAAc3V,KAEvB,QACE,MADFw6C,IAAA1yD,EAAA,QAAA0yD,IAAA71D,EAAA,MACQ,IAAIJ,UAAU,4BAADmM,OAAAiF,EAAoCqK,GAAG,MAAAtP,OAAKsP,EAAG,MAExE,CAyBO,SAASuZ,EAAcwxB,GAAK,IAAA2Q,EAAAC,EAIjC,OAJiCnB,IAAA51D,EAAA,KAAA41D,IAAA71D,EAAA,MAIzBomD,EAAG,SAAUjhD,OACnB,KAAK6iB,EAAAA,QAAIivC,UAAUriB,UAAUzvC,MAC3B,OADgC0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACzB,KAGT,KAAKgoB,EAAAA,QAAIivC,UAAUjiB,SAAS7vC,MAAK0wD,IAAA1yD,EAAA,SACjC,KAAK6kB,EAAAA,QAAIivC,UAAUhiB,SAAS9vC,MAC1B,OAD+B0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACxBomD,EAAIjhD,QAAQjB,WAKrB,KAAK8jB,EAAAA,QAAIivC,UAAU7hB,UAAUjwC,MAAK0wD,IAAA1yD,EAAA,SAClC,KAAK6kB,EAAAA,QAAIivC,UAAU5hB,UAAUlwC,MAAK0wD,IAAA1yD,EAAA,SAClC,KAAK6kB,EAAAA,QAAIivC,UAAU3hB,UAAUnwC,MAAK0wD,IAAA1yD,EAAA,SAClC,KAAK6kB,EAAAA,QAAIivC,UAAU1hB,UAAUpwC,MAC3B,OADgC0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,OACzBmmD,EAAAA,EAAAA,eAAcC,GAEvB,KAAKp+B,EAAAA,QAAIivC,UAAU/lC,SAAS/rB,MAC1B,OAD+B0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,OACd,QAAV61D,IAAA1yD,EAAA,SAAA4zD,EAAC3Q,EAAIpO,aAAK,IAAA+e,EAAAA,GAAAlB,IAAA1yD,EAAA,SAAI,KAAIyc,IAAIgV,GAE/B,KAAK5M,EAAAA,QAAIivC,UAAUxuC,aAAatjB,MAC9B,OADmC0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAC5BqnB,EAAAA,QAAQ6vC,UAAU9Q,GAAKljD,WAEhC,KAAK8kB,EAAAA,QAAIivC,UAAUthB,SAASxwC,MAC1B,OAD+B0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MACxBpD,OAAOu6D,aACF,QAAVtB,IAAA1yD,EAAA,SAAA6zD,EAAC5Q,EAAIxmC,aAAK,IAAAo3C,EAAAA,GAAAnB,IAAA1yD,EAAA,SAAI,KAAIyc,KAAI,SAACyP,GAAU,OAAAwmC,IAAA51D,EAAC,KAAD41D,IAAA71D,EAAC,MAAD,CAC/B40B,EAAcvF,EAAM9d,OACpBqjB,EAAcvF,EAAMhU,OACtB,KAIJ,KAAK2M,EAAAA,QAAIivC,UAAUtiB,UAAUxvC,MAAK0wD,IAAA1yD,EAAA,UAClC,KAAK6kB,EAAAA,QAAIivC,UAAUniB,SAAS3vC,MAAK0wD,IAAA1yD,EAAA,UACjC,KAAK6kB,EAAAA,QAAIivC,UAAUliB,SAAS5vC,MAAK0wD,IAAA1yD,EAAA,UACjC,KAAK6kB,EAAAA,QAAIivC,UAAUzhB,WAAWrwC,MAC5B,OADiC0wD,IAAA1yD,EAAA,UAAA0yD,IAAA71D,EAAA,MAC1BomD,EAAIjhD,QAWb,KAAK6iB,EAAAA,QAAIivC,UAAUvhB,YAAYvwC,MAAK0wD,IAAA1yD,EAAA,UACpC,KAAK6kB,EAAAA,QAAIivC,UAAUxhB,YAAYtwC,MAAK0wD,IAAA1yD,EAAA,UAClC,IAAMI,GAACsyD,IAAA71D,EAAA,MAAGomD,EAAIjhD,SACd,GADuB0wD,IAAA71D,EAAA,MACnB61D,IAAA1yD,EAAA,SAAAsjB,EAAOvmB,SAASqD,KAAEsyD,IAAA1yD,EAAA,SAAI/C,YAAYC,OAAOkD,IAAI,CAAAsyD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAC/C,IACE,OADE61D,IAAA71D,EAAA,OACK,IAAIo3D,aAAcC,OAAO9zD,EAClC,CAAE,MAAOzH,GACP,OADU+5D,IAAA71D,EAAA,MACH,IAAIvD,WAAW8G,EAAE6G,OAC1B,CACF,MAACyrD,IAAA1yD,EAAA,SACD,OADC0yD,IAAA71D,EAAA,MACMuD,EAIT,KAAKykB,EAAAA,QAAIivC,UAAU/hB,eAAe/vC,MAAK0wD,IAAA1yD,EAAA,UACvC,KAAK6kB,EAAAA,QAAIivC,UAAU9hB,cAAchwC,MAC/B,OADoC0wD,IAAA1yD,EAAA,UAAA0yD,IAAA71D,EAAA,MAC7B,IAAIgoB,EAAAA,QAAI66B,OAAOuD,EAAIjhD,SAASjB,WAErC,KAAK8jB,EAAAA,QAAIivC,UAAUpiB,WAAW1vC,MAC5B,GADiC0wD,IAAA1yD,EAAA,UAAA0yD,IAAA71D,EAAA,MACzBomD,EAAI76C,QAAO,SAAUpG,QAEtB6iB,EAAAA,QAAIsvC,YAAYxhB,cAAc3wC,MACjC,OADsC0wD,IAAA1yD,EAAA,SAAA0yD,IAAA71D,EAAA,MAC/B,CAAEuK,KAAM,WAAYsF,KAAMu2C,EAAI76C,QAAQ4sB,gBAC/C09B,IAAA1yD,EAAA,SACE,IAAM0Q,GAAGgiD,IAAA71D,EAAA,MAAGomD,EAAI76C,SAChB,OADwBsqD,IAAA71D,EAAA,MACjB,CACLuK,KAAM,SACNsF,KAAMgE,EAAIhE,OAAO1K,MACjBA,MAAO0O,EAAIhE,OAAOzL,MAM1B,QACE,OADFyxD,IAAA1yD,EAAA,UAAA0yD,IAAA71D,EAAA,MACSomD,EAAIjhD,QAEjB,CArWY0wD,qnGCAA,OAAA0B,EAAA,kBAAA/wC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAo7D,IAHL,IAAM1C,EAAS,kBAGV/4D,EAHU,SAAA+4D,KAGV,SAAAvzD,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAHU6V,CAAA,KAAAo/C,EAAA,EAGV94D,EAHU,EAAAwV,IAAA,gBAAApM,MAUpB,SAAqBmiB,GAASiwC,IAAAt3D,EAAA,KAC5B,IAAMu3D,GAAYD,IAAAv3D,EAAA,KAAG,CACnB2rD,iBAAkB3jC,EAAAA,QAAI6sC,UAAUzgB,qBAChCI,UAAWxsB,EAAAA,QAAI6sC,UAAUxgB,uBACzBuX,WAAY5jC,EAAAA,QAAI6sC,UAAUvgB,mBAC1BuX,cAAe7jC,EAAAA,QAAI6sC,UAAUtgB,oCAGzBkjB,GAAEF,IAAAv3D,EAAA,KAAG8mB,EAAAA,OAAO4wC,wBAAwBpwC,IACpCqwC,GAAOJ,IAAAv3D,EAAA,KAAGw3D,EAAaC,IAC7B,GADiCF,IAAAv3D,EAAA,MAC5B23D,EACH,MADYJ,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,KACN,IAAI8J,MAAM,4BAADiC,OAA6B0rD,EAAE,MAC/CF,IAAAp0D,EAAA,QAED,IAAMy0D,GAAGL,IAAAv3D,EAAA,MAAG63D,EAAAA,EAAAA,aAAYJ,EAAInwC,IAC5B,OADqCiwC,IAAAv3D,EAAA,KAC7By3D,GACN,IAAK,gBACH,OADkBF,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,KACX23D,EACL,IAAI3vC,EAAAA,QAAIqtC,8BAA8B,CACpCjtC,QAASwvC,EAAI5zD,MAAM,EAAG,IACtB0rB,QAASkoC,EAAI5zD,MAAM,OAIzB,IAAK,mBAAkBuzD,IAAAp0D,EAAA,QACvB,IAAK,YAAWo0D,IAAAp0D,EAAA,QAChB,IAAK,aAAYo0D,IAAAp0D,EAAA,QACjB,QACE,OADFo0D,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,KACS23D,EAAQC,GAErB,GAEA,CAAArmD,IAAA,kBAAApM,MAMA,SAAuB2nD,GACrB,IAAIgL,EACAF,EAEJ,OAJgCL,IAAAt3D,EAAA,KAExBs3D,IAAAv3D,EAAA,KAEA8sD,EAAS,UACf,KAAK9kC,EAAAA,QAAI+kC,cAAc3Y,uBAAsBmjB,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,MAC3C83D,EAAa,mBAAmBP,IAAAv3D,EAAA,MAChC43D,EAAM9K,EAAU3nD,QAAQoyD,IAAAv3D,EAAA,MACxB,MAEF,KAAKgoB,EAAAA,QAAI+kC,cAAc1Y,yBAAwBkjB,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,MAC7C83D,EAAa,YAAYP,IAAAv3D,EAAA,MACzB43D,EAAM9K,EAAU3nD,QAAQoyD,IAAAv3D,EAAA,MACxB,MAEF,KAAKgoB,EAAAA,QAAI+kC,cAAczY,qBAAoBijB,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,MACzC83D,EAAa,aAAaP,IAAAv3D,EAAA,MAC1B43D,EAAM9K,EAAU3nD,QAAQoyD,IAAAv3D,EAAA,MACxB,MAEF,KAAKgoB,EAAAA,QAAI+kC,cAAcxY,oCAAmCgjB,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,MACxD83D,EAAa,gBAAgBP,IAAAv3D,EAAA,MAC7B43D,EAAM9K,EAAUpY,uBAAuBhyC,MAAM,OAAO60D,IAAAv3D,EAAA,MACpD,MAEF,QACE,MADFu3D,IAAAp0D,EAAA,QAAAo0D,IAAAv3D,EAAA,MACQ,IAAI8J,MAAM,4BAADiC,OAA6B+gD,EAAS,SAAS,MAGlE,OAFCyK,IAAAv3D,EAAA,OAEM+3D,EAAAA,EAAAA,aAAYD,EAAYF,EACjC,KA3EU57D,EAHU,OAGVkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CA2ET,CA9EmB,k0KCGV,OAAAi8D,EAAA,kBAAAxxC,CAAA,EAAAA,CAAA,CAAAwxC,IATZ,IAAMC,GAAaD,IAAAh4D,EAAA,KAAG,CAAC,GAOVk4D,GAAWF,IAAAh4D,EAAA,KAcIg4D,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,KACD,oBAAX4Q,QAAsBonD,IAAA70D,EAAA,QAKtC,WAGE,IAAIg1D,EAH0BH,IAAA/3D,EAAA,KAGnB+3D,IAAAh4D,EAAA,KACX,IAAIg4D,IAAAh4D,EAAA,KAEFm4D,EAASC,EAAQ,8GACnB,CAAE,MAAOvkD,GACP,OADYmkD,IAAAh4D,EAAA,KACLq4D,GACT,CAEA,OAFCL,IAAAh4D,EAAA,KAEIpD,OAAO0Y,KAAK6iD,GAAQ13D,QAExBu3D,IAAA70D,EAAA,QAAA60D,IAAAh4D,EAAA,MAEDi4D,EAAc/V,SAAW,SAACH,GAAciW,IAAA/3D,EAAA,KACtC,IAAM4xB,GAAEmmC,IAAAh4D,EAAA,MAAGymB,EAAOnqB,MAAM67D,EAAOG,6BACzBC,GAAEP,IAAAh4D,EAAA,MAAGymB,EAAOnqB,MAAM67D,EAAOK,6BAE/B,OAF2DR,IAAAh4D,EAAA,MAC3Dm4D,EAAOM,yBAAyB5mC,EAAI0mC,EAAIxW,GAAWiW,IAAAh4D,EAAA,MAC5C6xB,CACT,EAAEmmC,IAAAh4D,EAAA,MAEFi4D,EAAcnnC,KAAO,SAACtmB,EAAMu3C,GAAciW,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,MACxCwK,EAAOic,EAAOnmB,KAAKkK,GACnB,IAAMmlB,GAASqoC,IAAAh4D,EAAA,MAAGymB,EAAOnqB,MAAM67D,EAAOO,oBAEtC,OAFyDV,IAAAh4D,EAAA,MACzDm4D,EAAOQ,qBAAqBhpC,EAAWnlB,EAAMu3C,GAAWiW,IAAAh4D,EAAA,MACjD2vB,CACT,EAAEqoC,IAAAh4D,EAAA,MAEFi4D,EAAclnC,OAAS,SAACvmB,EAAMmlB,EAAWC,GAAcooC,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,MACrDwK,EAAOic,EAAOnmB,KAAKkK,GAAMwtD,IAAAh4D,EAAA,MACzB,IACE,OADEg4D,IAAAh4D,EAAA,MACKm4D,EAAOS,4BAA4BjpC,EAAWnlB,EAAMolB,EAC7D,CAAE,MAAO9zB,GACP,OADUk8D,IAAAh4D,EAAA,OACH,CACT,CACF,EAAEg4D,IAAAh4D,EAAA,OAEK,IA3B0Bg4D,IAAA70D,EAAA,QAAA60D,IAAAh4D,EAAA,MACxBq4D,IA2BX,CA3CMQ,KAAsBb,IAAA70D,EAAA,QACtBk1D,MAfC,SAASvnC,EAAKtmB,EAAMu3C,GACzB,OADoCiW,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,KAC7Bi4D,EAAcnnC,KAAKtmB,EAAMu3C,EAClC,CAEO,SAAShxB,EAAOvmB,EAAMmlB,EAAWC,GACtC,OADiDooC,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,KAC1Ci4D,EAAclnC,OAAOvmB,EAAMmlB,EAAWC,EAC/C,CAEO,SAASsyB,EAASH,GACvB,OADkCiW,IAAA/3D,EAAA,KAAA+3D,IAAAh4D,EAAA,KAC3Bi4D,EAAc/V,SAASH,EAChC,CAiDA,SAASsW,IAA0BL,IAAA/3D,EAAA,KAIjC,IAAMwiD,GAAIuV,IAAAh4D,EAAA,MAAGo4D,EAAQ,0CA2BrB,OA3BkCJ,IAAAh4D,EAAA,MAElCi4D,EAAc/V,SAAW,SAACH,GAAciW,IAAA/3D,EAAA,KACtC,IAAM64D,GAAcd,IAAAh4D,EAAA,MAAG,IAAIvD,WAAWslD,IAChCgX,GAAQf,IAAAh4D,EAAA,MAAGyiD,EAAK3xB,KAAKkoC,QAAQC,SAASH,IAC5C,OAD4Dd,IAAAh4D,EAAA,MACrDymB,EAAOnmB,KAAKy4D,EAASnpC,UAC9B,EAAEooC,IAAAh4D,EAAA,MAEFi4D,EAAcnnC,KAAO,SAACtmB,EAAMu3C,GAAciW,IAAA/3D,EAAA,MAAA+3D,IAAAh4D,EAAA,MACxCwK,EAAOic,EAAOnmB,KAAKkK,GAAMwtD,IAAAh4D,EAAA,MACzBwK,EAAO,IAAI/N,WAAW+N,EAAKvG,SAASuG,MAAMwtD,IAAAh4D,EAAA,MAC1C+hD,EAAY,IAAItlD,WAAWslD,EAAU99C,SAASuG,MAE9C,IAAMmlB,GAASqoC,IAAAh4D,EAAA,MAAGyiD,EAAK3xB,KAAKooC,SAAS1uD,EAAMu3C,IAE3C,OAFsDiW,IAAAh4D,EAAA,MAE/CymB,EAAOnmB,KAAKqvB,EACrB,EAAEqoC,IAAAh4D,EAAA,MAEFi4D,EAAclnC,OAAS,SAACvmB,EAAMmlB,EAAWC,GAMvC,OANqDooC,IAAA/3D,EAAA,MAAA+3D,IAAAh4D,EAAA,MACrDwK,EAAOic,EAAOnmB,KAAKkK,GAAMwtD,IAAAh4D,EAAA,MACzBwK,EAAO,IAAI/N,WAAW+N,EAAKvG,SAASuG,MAAMwtD,IAAAh4D,EAAA,MAC1C2vB,EAAY,IAAIlzB,WAAWkzB,EAAU1rB,SAASuG,MAAMwtD,IAAAh4D,EAAA,MACpD4vB,EAAY,IAAInzB,WAAWmzB,EAAU3rB,SAASuG,MAAMwtD,IAAAh4D,EAAA,MAE7CyiD,EAAK3xB,KAAKooC,SAASnoC,OAAOvmB,EAAMmlB,EAAWC,EACpD,EAAEooC,IAAAh4D,EAAA,OAEK,CACT,qgFC3FY,OAAAm5D,EAAA,kBAAA3yC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAq5D,EAAAp9D,GAAA,gBAAAA,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAA,CAAA,CAAAmkB,CAAAnkB,IAAA,SAAAA,GAAA,uBAAAgO,QAAA,MAAAhO,EAAAgO,OAAAiH,WAAA,MAAAjV,EAAA,qBAAAe,MAAAuD,KAAAtE,EAAA,CAAAq9D,CAAAr9D,IAAA,SAAAA,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,IAAA,qBAAA4D,UAAA,6IAAAghB,EAAA,UAAAH,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,UAAA8U,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,iCAAAg9D,IAdL,IAAMG,EAAO,kBAcRx9D,EAdQ,SAAAw9D,KAcR,SAAAh4D,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAdQ6V,CAAA,KAAA6jD,EAAA,EAcRv9D,EAdQ,EAAAwV,IAAA,oBAAApM,MAgBlB,SAAyBolD,EAAQgP,GAC/B,GADyCJ,IAAAl5D,EAAA,KAAAk5D,IAAAn5D,EAAA,KACrCuqD,EAAO/9C,SAAS,KAClB,MADwB2sD,IAAAh2D,EAAA,QAAAg2D,IAAAn5D,EAAA,KAClB,IAAIJ,UAAU,2BACrBu5D,IAAAh2D,EAAA,QAED,IAAIq2D,GAASL,IAAAn5D,EAAA,KAAGuqD,GAehB,OAfuB4O,IAAAn5D,EAAA,KACnBu5D,EAAW,GAAGJ,IAAAh2D,EAAA,QAAAg2D,IAAAn5D,EAAA,KACZu5D,EAAWC,EAAU/4D,QAAQ04D,IAAAh2D,EAAA,QAAAg2D,IAAAn5D,EAAA,KAC/Bw5D,EAAY,CAAC,IAAKA,EAAUt2D,WAAWu2D,SAASF,EAAU,MAAM1vD,KAC9D,OAEGsvD,IAAAh2D,EAAA,QAAAg2D,IAAAn5D,EAAA,KACLw5D,EAAY,CACVA,EAAUx1D,MAAM,GAAIu1D,GACpBC,EAAUx1D,OAAOu1D,IACjB1vD,KAAK,OAEVsvD,IAAAh2D,EAAA,QAEDg2D,IAAAn5D,EAAA,KACOw5D,EAAUltD,QAAQ,cAAe,KAC1C,GAEA,CAAAiF,IAAA,mBAAApM,MAoBA,SAAwBA,EAAOo0D,GAAU,IAAArD,EAAAiD,IAAAl5D,EAAA,KACvC,IAA2D8gD,EAAAqY,GAA3DD,IAAAn5D,EAAA,KAAmCmF,EAAMkL,MAAM,KAAKrM,UAA7C01D,EAAK3Y,EAAA,GAAE4Y,EAAQ5Y,EAAA,GAAK6Y,EAAI7Y,EAAA/8C,MAAA,GAE/B,GAF4Dm1D,IAAAn5D,EAAA,KAExD45D,EAAKn5D,OACP,MADe04D,IAAAh2D,EAAA,QAAAg2D,IAAAn5D,EAAA,MACT,IAAI8J,MAAM,0BAADiC,OAA2B5G,IAC3Cg0D,IAAAh2D,EAAA,QAED,IAAM02D,GAAOV,IAAAn5D,EAAA,MAAGqD,OACdq2D,GAAwC,QAAnCP,IAAAh2D,EAAA,QAAA+yD,EAAIyD,aAAQ,EAARA,EAAUnvC,OAAO+uC,EAAU,YAAI,IAAArD,EAAAA,GAAAiD,IAAAh2D,EAAA,QAAI,IAAI4Z,OAAOw8C,OAGzD,OAFEJ,IAAAn5D,EAAA,MAEK65D,EAAQ32D,UACjB,KAzDUlH,EAdQ,OAcRkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAyDT,CAvEiB,qmLCcR,OAAA+9D,EAAA,kBAAAtzC,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA29D,IAiBL,IAAMC,EAAkB,WA8B7B,OA/CUj+D,EAoBV,SAAAi+D,EAAYv1B,GApBF,IAAA1oC,EAAAE,EAAAD,EAqBJyO,GArBI,SAAAlJ,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAoBe6V,CAAA,KAAAskD,GApBfj+D,EAoBe,KApBfC,OAoBe,GApBfC,EAAA+c,EAAA/c,EAoBe,YApBfF,EAAAc,OAAA4O,eAAA1P,EAAAE,EAAA,CAAAmJ,MAAApJ,EAAA0P,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA5T,EAAAE,GAAAD,EAoBe+9D,IAAA75D,EAAA,KACd65D,IAAA95D,EAAA,KAEJwkC,GAWEs1B,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,KACL85D,IAAA32D,EAAA,QAAuB,iBAAhBqhC,IAAwBs1B,IAAA32D,EAAA,QAC/B/C,YAAYC,OAAOmkC,KACnBs1B,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,KACAwK,EAAOuvD,EAAmBn3D,QAAQ4hC,KAC7Bs1B,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,KACLwK,EAAOuvD,EAAmBn3D,QAAQ4hC,EAAY9hC,YAjB9Bo3D,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,KAChBwK,EAAO,IAAIwd,EAAAA,QAAIgyC,uBAAuB,CACpCC,UAAW,IAAIjyC,EAAAA,QAAIkyC,iBAAiB,CAClCC,UAAW,IAAInyC,EAAAA,QAAIoyC,gBAAgB,CAAEC,SAAU,GAAIC,UAAW,KAC9DC,aAAc,EACdC,UAAW,EACXC,WAAY,IAEdpI,IAAK,IAAIrqC,EAAAA,QAAIsqC,eAAe,GAC5BoI,YAAa,IAAI1yC,EAAAA,QAAI0J,MAAM,MAS9BooC,IAAA95D,EAAA,KAEDrD,KAAKg+D,MAAQnwD,EAAKsvD,IAAA95D,EAAA,KAClBrD,KAAKg+D,MAAMD,YAAY,IAAI1yC,EAAAA,QAAI0J,MAAM,KACvC,EA7CU31B,EAoLT,EAAAwV,IAAA,UAAApM,MAhID,SAAeqF,GACb,OADmBsvD,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,KACZgoB,EAAAA,QAAIgyC,uBAAuBp3D,QAChC4H,EACgB,iBAATA,GAAiBsvD,IAAA32D,EAAA,QAAG,WAAQ22D,IAAA32D,EAAA,QAAG,OAE1C,KAzDUnH,EA+CV,EAAAuV,IAAA,iBAAApM,MAiBA,SAAeqwB,GAEb,OAFkBskC,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,KAClBrD,KAAKg+D,MAAMD,YAAY,IAAI1yC,EAAAA,QAAI0J,MAAM8D,IAAMskC,IAAA95D,EAAA,KACpCrD,IACT,GAEA,CAAA4U,IAAA,eAAApM,MAYA,SAAay1D,EAAWJ,EAAWC,GAKjC,OAL6CX,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MAC7CrD,KAAKg+D,MAAMV,YAAYM,aAAaK,GAAWd,IAAA95D,EAAA,MAC/CrD,KAAKg+D,MAAMV,YAAYO,UAAUA,GAAWV,IAAA95D,EAAA,MAC5CrD,KAAKg+D,MAAMV,YAAYQ,WAAWA,GAAYX,IAAA95D,EAAA,MAEvCrD,IACT,GAEA,CAAA4U,IAAA,kBAAApM,MAMA,SAAgBk1D,EAAUC,GACxB,OADmCR,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MAC5BrD,KAAKk+D,aACVl+D,KAAKm+D,cAAc/uD,OAAOsuD,GAC1B19D,KAAKo+D,eAAehvD,OAAOuuD,GAE/B,GAEA,CAAA/oD,IAAA,eAAApM,MAmBA,SAAak1D,EAAUC,GAQrB,OARgCR,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MACf,OAAbq6D,GAAmBP,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,MAErBrD,KAAKq+D,YAAYX,IAClBP,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,MACiB,OAAds6D,GAAoBR,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,MACtBrD,KAAKs+D,aAAaX,IACnBR,IAAA32D,EAAA,QAAA22D,IAAA95D,EAAA,MACMrD,IACT,GAEA,CAAA4U,IAAA,cAAApM,MAIA,SAAYk1D,GAAU,IAAAxa,EAKpB,OALoBia,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MACpBrD,KAAKg+D,MACFV,YACAE,YACAE,SAAiB,QAATP,IAAA32D,EAAA,QAAA08C,EAACwa,SAAQ,IAAAxa,EAAAA,GAAAia,IAAA32D,EAAA,QAAI,KAAI22D,IAAA95D,EAAA,MACrBrD,IACT,GAEA,CAAA4U,IAAA,eAAApM,MAIA,SAAam1D,GAAW,IAAAvZ,EAKtB,OALsB+Y,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MACtBrD,KAAKg+D,MACFV,YACAE,YACAG,UAAmB,QAAVR,IAAA32D,EAAA,QAAA49C,EAACuZ,SAAS,IAAAvZ,EAAAA,GAAA+Y,IAAA32D,EAAA,QAAI,KAAI22D,IAAA95D,EAAA,MACvBrD,IACT,GAEA,CAAA4U,IAAA,QAAApM,MAGA,WACE,OADM20D,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MACCgoB,EAAAA,QAAIgyC,uBAAuBp3D,QAAQjG,KAAKg+D,MAAMj4D,QACvD,GAMA,CAAA6O,IAAA,cAAApM,MACA,WACE,OADY20D,IAAA75D,EAAA,KAAA65D,IAAA95D,EAAA,MACLrD,KAAKu+D,eAAeb,UAC7B,GAEA,CAAA9oD,IAAA,eAAApM,MACA,WACE,OADa20D,IAAA75D,EAAA,MAAA65D,IAAA95D,EAAA,MACNrD,KAAKu+D,eAAeZ,WAC7B,GAEA,CAAA/oD,IAAA,eAAApM,MACA,WACE,OADa20D,IAAA75D,EAAA,MAAA65D,IAAA95D,EAAA,MACNrD,KAAKg+D,MAAMV,YAAYE,WAChC,MApLUjpD,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAyDT,CAxC4B,yxaCjBnB,OAAAo/D,EAAA,kBAAA30C,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAg/D,IAVZ,IAAMC,GAAYD,IAAAn7D,EAAA,KAAG,CACnB2rD,iBAAkB,GAClB0P,kBAAmB,IACnBC,kBAAmB,GACnB9mB,UAAW,IACXoX,WAAY,IACZC,cAAe,IACfvjC,SAAU,KAGNizC,GAAWJ,IAAAn7D,EAAA,KAAG,CAClBkG,EAAG,mBACHtB,EAAG,oBACH7G,EAAG,oBACHP,EAAG,YACHF,EAAG,aACH+B,EAAG,gBACH4F,EAAG,aAQQ6hB,EAAM,kBAfPhrB,EAeO,SAAAgrB,KAfP,SAAAxlB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAeO6V,CAAA,KAAAqR,EAAA,EAfP/qB,EAeO,EAAAwV,IAAA,yBAAApM,MAOjB,SAA8BqF,GAC5B,OADkC2wD,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC3B+3D,EAAY,mBAAoBvtD,EACzC,GAEA,CAAA+G,IAAA,yBAAApM,MASA,SAA8BqF,GAC5B,OADkC2wD,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC3B63D,EAAY,mBAAoBrtD,EACzC,GAEA,CAAA+G,IAAA,0BAAApM,MAKA,SAA+ByqB,GAC7B,OADwCurC,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KACjC+C,EAAQ,mBAAoB6sB,EACrC,GAEA,CAAAre,IAAA,0BAAApM,MAKA,SAA+BqF,GAC7B,OADmC2wD,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC5B+3D,EAAY,oBAAqBvtD,EAC1C,GAEA,CAAA+G,IAAA,0BAAApM,MAKA,SAA+BmiB,GAC7B,OADsC6zC,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC/B63D,EAAY,oBAAqBvwC,EAC1C,GAEA,CAAA/V,IAAA,2BAAApM,MAKA,SAAgCq2D,GAC9B,OADoCL,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC7B+C,EAAQ,oBAAqBy4D,EACtC,GAEA,CAAAjqD,IAAA,0BAAApM,MAKA,SAA+BqF,GAC7B,OADmC2wD,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC5B+3D,EAAY,oBAAqBvtD,EAC1C,GAEA,CAAA+G,IAAA,0BAAApM,MAKA,SAA+BmiB,GAC7B,OADsC6zC,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,KAC/B63D,EAAY,oBAAqBvwC,EAC1C,GAEA,CAAA/V,IAAA,2BAAApM,MAKA,SAAgCyqB,GAC9B,OADyCurC,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,MAClC+C,EAAQ,oBAAqB6sB,EACtC,GAEA,CAAAre,IAAA,kBAAApM,MAKA,SAAuBqF,GACrB,OAD2B2wD,IAAAl7D,EAAA,KAAAk7D,IAAAn7D,EAAA,MACpB+3D,EAAY,YAAavtD,EAClC,GAEA,CAAA+G,IAAA,kBAAApM,MAKA,SAAuBmiB,GACrB,OAD8B6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACvB63D,EAAY,YAAavwC,EAClC,GAEA,CAAA/V,IAAA,mBAAApM,MAKA,SAAwBqF,GACtB,OAD4B2wD,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACrB+3D,EAAY,aAAcvtD,EACnC,GAEA,CAAA+G,IAAA,mBAAApM,MAKA,SAAwBmiB,GACtB,OAD+B6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACxB63D,EAAY,aAAcvwC,EACnC,GAEA,CAAA/V,IAAA,sBAAApM,MAKA,SAA2BqF,GACzB,OAD+B2wD,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACxB+3D,EAAY,gBAAiBvtD,EACtC,GAEA,CAAA+G,IAAA,sBAAApM,MAKA,SAA2BmiB,GACzB,OADkC6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAC3B63D,EAAY,gBAAiBvwC,EACtC,GAEA,CAAA/V,IAAA,uBAAApM,MAKA,SAA4BmiB,GAC1B,OADmC6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAC5B+C,EAAQ,gBAAiBukB,EAClC,GAEA,CAAA/V,IAAA,iBAAApM,MAKA,SAAsBqF,GACpB,OAD0B2wD,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACnB+3D,EAAY,WAAYvtD,EACjC,GAEA,CAAA+G,IAAA,iBAAApM,MAKA,SAAsBmiB,GACpB,OAD6B6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACtB63D,EAAY,WAAYvwC,EACjC,GAEA,CAAA/V,IAAA,kBAAApM,MAKA,SAAuBmiB,GACrB,OAD8B6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MACvB+C,EAAQ,WAAYukB,EAC7B,GAAC,CAAA/V,IAAA,0BAAApM,MAED,SAA+BmiB,GAC7B,OADsC6zC,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAC/Bu7D,EAAYj0C,EAAQ,GAC7B,KAlMUtrB,EAeO,OAfPkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAkMT,CAnLgB,GAmMnB,SAASgH,EAAQ04D,EAAiBC,GAChC,GADyCP,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAClB,iBAAZ07D,EACT,OAD+BP,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OACxB,EAIT,OAHCm7D,IAAAh4D,EAAA,QAEDg4D,IAAAn7D,EAAA,MACQy7D,GACN,IAAK,mBAAkBN,IAAAh4D,EAAA,QACvB,IAAK,oBAAmBg4D,IAAAh4D,EAAA,QACxB,IAAK,YAAWg4D,IAAAh4D,EAAA,QAChB,IAAK,aAAYg4D,IAAAh4D,EAAA,QACjB,IAAK,WACH,GADag4D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACU,KAAnB07D,EAAQj7D,OACV,OADyB06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OAClB,EACRm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACD,MAEF,IAAK,oBACH,GADsBm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACC,KAAnB07D,EAAQj7D,OACV,OADyB06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OAClB,EACRm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACD,MAEF,IAAK,gBACH,GADkBm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACdm7D,IAAAh4D,EAAA,QAAAu4D,EAAQj7D,OAAS,KAAE06D,IAAAh4D,EAAA,QAAIu4D,EAAQj7D,OAAS,KAC1C,OAD+C06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OACxC,EACRm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACD,MAEF,QACE,OADFm7D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OACS,EAGX,IAAI27D,GAAOR,IAAAn7D,EAAA,MAAG,IAAGm7D,IAAAn7D,EAAA,MACjB,IAAIm7D,IAAAn7D,EAAA,MACF27D,EAAU9D,EAAY4D,EAAiBC,EACzC,CAAE,MAAO7nD,GACP,OADYsnD,IAAAn7D,EAAA,OACL,CACT,CAGA,OADAm7D,IAAAn7D,EAAA,MACQy7D,GACN,IAAK,mBAAkBN,IAAAh4D,EAAA,QACvB,IAAK,oBAAmBg4D,IAAAh4D,EAAA,QACxB,IAAK,YAAWg4D,IAAAh4D,EAAA,QAChB,IAAK,aAAYg4D,IAAAh4D,EAAA,QACjB,IAAK,WACH,OADag4D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACa,KAAnB27D,EAAQl7D,OAEjB,IAAK,oBACH,OADsB06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACI,KAAnB27D,EAAQl7D,OAEjB,IAAK,gBACH,OADkB06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MAIhBm7D,IAAAh4D,EAAA,QAAAw4D,EAAQl7D,QAAU,KAAU06D,IAAAh4D,EAAA,QAAIw4D,EAAQl7D,QAAU,KAGtD,QACE,OADF06D,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,OACS,EAEb,CAEO,SAAS63D,EAAY4D,EAAiBC,GAC3C,GADoDP,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAC7B,iBAAZ07D,EACT,MAD+BP,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MACzB,IAAIJ,UAAU,2CACrBu7D,IAAAh4D,EAAA,QAED,IAAMw4D,GAAOR,IAAAn7D,EAAA,MAAG47D,EAAAA,OAAcF,IACxBG,GAAWV,IAAAn7D,EAAA,MAAG27D,EAAQ,IACtBjsC,GAAOyrC,IAAAn7D,EAAA,MAAG27D,EAAQ33D,MAAM,GAAI,IAC5BwG,GAAI2wD,IAAAn7D,EAAA,MAAG0vB,EAAQ1rB,MAAM,IACrB83D,GAAQX,IAAAn7D,EAAA,MAAG27D,EAAQ33D,OAAO,IAEhC,GAFmCm3D,IAAAn7D,EAAA,MAE/B07D,IAAYE,EAAAA,OAAcD,GAC5B,MADsCR,IAAAh4D,EAAA,QAAAg4D,IAAAn7D,EAAA,MAChC,IAAI8J,MAAM,0BACjBqxD,IAAAh4D,EAAA,QAED,IAAM44D,GAAeZ,IAAAn7D,EAAA,MAAGo7D,EAAaK,IAErC,GAFsDN,IAAAn7D,EAAA,WAE9B2R,IAApBoqD,EACF,MADiCZ,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MAC3B,IAAI8J,MACR,GAAAiC,OAAG0vD,EAAe,0DAAA1vD,OACGnP,OAAO0Y,KAAK8lD,GAAcvxD,KAAK,QAIxD,GAFCsxD,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MAEG67D,IAAgBE,EAClB,MADmCZ,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MAC7B,IAAI8J,MAAM,kCAADiC,OACqBgwD,EAAe,UAAAhwD,OAAS8vD,IAE7DV,IAAAh4D,EAAA,SAED,IAAM64D,GAAgBb,IAAAn7D,EAAA,MAAGi8D,EAAkBvsC,IAE3C,GAFoDyrC,IAAAn7D,EAAA,QAE/Ck8D,EAAAA,EAAAA,gBAAeF,EAAkBF,GACpC,MAD+CX,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MACzC,IAAI8J,MAAM,oBAGlB,OAFCqxD,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MAEMymB,EAAOnmB,KAAKkK,EACrB,CAEO,SAASutD,EAAY0D,EAAiBjxD,GAC3C,GADiD2wD,IAAAl7D,EAAA,MAAAk7D,IAAAn7D,EAAA,MAC7Cm7D,IAAAh4D,EAAA,SAAS,OAATqH,IAAa2wD,IAAAh4D,EAAA,cAAawO,IAATnH,GACnB,MADuC2wD,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MACjC,IAAI8J,MAAM,2BACjBqxD,IAAAh4D,EAAA,SAED,IAAM04D,GAAWV,IAAAn7D,EAAA,MAAGo7D,EAAaK,IAEjC,GAFkDN,IAAAn7D,EAAA,WAE9B2R,IAAhBkqD,EACF,MAD6BV,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MACvB,IAAI8J,MACR,GAAAiC,OAAG0vD,EAAe,0DAAA1vD,OACGnP,OAAO0Y,KAAK8lD,GAAcvxD,KAAK,QAEvDsxD,IAAAh4D,EAAA,SAAAg4D,IAAAn7D,EAAA,MACDwK,EAAOic,EAAOnmB,KAAKkK,GAEnB,IAAM2xD,GAAahB,IAAAn7D,EAAA,MAAGymB,EAAOnmB,KAAK,CAACu7D,KAC7BnsC,GAAOyrC,IAAAn7D,EAAA,MAAGymB,EAAO1a,OAAO,CAACowD,EAAe3xD,KACxCsxD,GAAQX,IAAAn7D,EAAA,MAAGymB,EAAOnmB,KAAK27D,EAAkBvsC,KACzC0sC,GAASjB,IAAAn7D,EAAA,MAAGymB,EAAO1a,OAAO,CAAC2jB,EAASosC,KAE1C,OAFqDX,IAAAn7D,EAAA,MAE9C47D,EAAAA,OAAcQ,EACvB,CAGA,SAASH,EAAkBvsC,GAASyrC,IAAAl7D,EAAA,MAClC,IAAMo8D,GAAQlB,IAAAn7D,EAAA,MAAG,CACf,EAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAChE,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,KAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,KAAQ,IAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,IAChE,KAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAChE,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,KAAQ,KAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,KAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAChE,MAAQ,MAAQ,KAAQ,OAGtBs8D,GAAKnB,IAAAn7D,EAAA,MAAG,GAAIm7D,IAAAn7D,EAAA,MAEhB,IAAK,IAAI7D,GAACg/D,IAAAn7D,EAAA,MAAG,GAAG7D,EAAIuzB,EAAQjvB,OAAQtE,GAAK,EAAG,CAC1C,IAAMgnD,GAAIgY,IAAAn7D,EAAA,MAAG0vB,EAAQvzB,IACfogE,GAAWpB,IAAAn7D,EAAA,MAAIs8D,GAAS,EAAKnZ,GAAKgY,IAAAn7D,EAAA,MACxCs8D,EAASA,GAAS,EAAKD,EAASE,GAAapB,IAAAn7D,EAAA,MAC7Cs8D,GAAS,KACX,CACA,IAAMR,GAAQX,IAAAn7D,EAAA,MAAG,IAAIvD,WAAW,IAGhC,OAHmC0+D,IAAAn7D,EAAA,MACnC87D,EAAS,GAAa,IAARQ,EAAanB,IAAAn7D,EAAA,MAC3B87D,EAAS,GAAMQ,GAAS,EAAK,IAAKnB,IAAAn7D,EAAA,MAC3B87D,CACT,6ybC9XY,OAAAU,EAAA,kBAAAh2C,CAAA,EAAAA,CAAA,UAAAtV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,YAAA24B,EAAA/4B,EAAAgE,EAAAjE,GAAA,OAAAiE,EAAA2Z,EAAA3Z,GAAA,SAAAhE,EAAAD,GAAA,GAAAA,IAAA,UAAAkV,EAAAlV,IAAA,mBAAAA,GAAA,OAAAA,EAAA,YAAAA,EAAA,UAAA8D,UAAA,4EAAA9D,GAAA,YAAAA,EAAA,UAAAqd,eAAA,oEAAArd,CAAA,CAAAod,CAAAnd,EAAA,CAAAid,CAAAjd,EAAA8d,IAAAC,QAAAC,UAAAha,EAAAjE,GAAA,GAAA4d,EAAA3d,GAAA8D,aAAAE,EAAAoL,MAAApP,EAAAD,GAAA,UAAA+d,IAAA,QAAA9d,GAAAme,QAAA1d,UAAAoH,QAAAlH,KAAAod,QAAAC,UAAAG,QAAA,0BAAAne,GAAA,QAAA8d,EAAA,mBAAA9d,CAAA,cAAA2d,EAAA3d,GAAA,OAAA2d,EAAA9c,OAAAC,eAAAD,OAAAwd,eAAAzF,OAAA,SAAA5Y,GAAA,OAAAA,EAAAoe,WAAAvd,OAAAwd,eAAAre,EAAA,EAAA2d,EAAA3d,EAAA,UAAA4d,EAAA5d,EAAAD,GAAA,OAAA6d,EAAA/c,OAAAC,eAAAD,OAAAC,eAAA8X,OAAA,SAAA5Y,EAAAD,GAAA,OAAAC,EAAAoe,UAAAre,EAAAC,CAAA,EAAA4d,EAAA5d,EAAAD,EAAA,CAAA0gE,IAgBL,IAAMtmC,EAAW,SAAAlB,GACtB,SAAAkB,EAAYjB,EAAU7L,GAAmB,IAAA7T,EACvC,GAlBQ,SAAAjU,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAiB+B6V,CAAA,KAAAygB,GAAAsmC,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,KACf,iBAAbi1B,EAAuB,CAAAunC,IAAAr5D,EAAA,QAChC,IAAMiH,GAAMoyD,IAAAx8D,EAAA,KAAGymB,EAAOnmB,KAAK20B,EAAU,WAAUunC,IAAAx8D,EAAA,KAC/Ci1B,EAAWjN,EAAAA,QAAIkN,oBAAoBtyB,QAAQwH,EAC7C,MAACoyD,IAAAr5D,EAAA,QAED,IAAMgyB,GAAYqnC,IAAAx8D,EAAA,KAAGi1B,EAAQ,UAC7B,GADuCunC,IAAAx8D,EAAA,KAGnCw8D,IAAAr5D,EAAA,QAAAgyB,IAAiBnN,EAAAA,QAAIoN,aAAauE,qBAAkB6iC,IAAAr5D,EAAA,QACpDgyB,IAAiBnN,EAAAA,QAAIoN,aAAaO,kBAGpC,MADA6mC,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,KACM,IAAI8J,MAAM,+FAADiC,OACkFopB,EAAa/wB,KAAI,MAEnHo4D,IAAAr5D,EAAA,QAED,IAAMmyB,GAAUknC,IAAAx8D,EAAA,KAAGi1B,EAAS9vB,SACtBowB,GAAEinC,IAAAx8D,EAAA,KAAGs1B,EAAWC,MAChBC,GAAGgnC,IAAAx8D,EAAA,KAAGu1B,EAAGC,MAAMtyB,YACfuyB,GAAU+mC,IAAAx8D,EAAA,MAAIw8D,IAAAr5D,EAAA,QAAAmyB,EAAWG,eAAY+mC,IAAAr5D,EAAA,QAAI,KAAIa,SAQnD,GAR2Dw4D,IAAAx8D,EAAA,MAE3DuV,EAAAuf,EAAA,KAAAoB,EAAA,CAAMX,EAAIE,EAAYD,EAAKpM,IAAmBozC,IAAAx8D,EAAA,MAE9CuV,EAAKknD,cAAgBtnC,EAAaqnC,IAAAx8D,EAAA,MAClCuV,EAAKmnD,MAAQnnC,EAAG9Q,OAAO+3C,IAAAx8D,EAAA,MACvBuV,EAAKonD,UAAYpnC,EAAGqnC,SAAS15D,WAAWs5D,IAAAx8D,EAAA,MAEhCuV,EAAKknD,gBACNz0C,EAAAA,QAAIoN,aAAauE,mBAAkB6iC,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACtCuV,EAAKsnD,QAAU/1C,EAAAA,OAAOa,uBACpBpS,EAAKggB,GAAGunC,wBACRN,IAAAx8D,EAAA,WAEJw8D,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACEuV,EAAKsnD,SAAU9mC,EAAAA,EAAAA,6BAA4BxgB,EAAKggB,GAAGy0B,iBAAiBwS,IAAAx8D,EAAA,MAIxE,IAAI+8D,GAAIP,IAAAx8D,EAAA,MAAG,MACPukC,GAAUi4B,IAAAx8D,EAAA,MAAG,MACjB,OADsBw8D,IAAAx8D,EAAA,MACduV,EAAKknD,eACX,KAAKz0C,EAAAA,QAAIoN,aAAauE,mBAAkB6iC,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACtCukC,EAAahP,EAAGgP,aAAai4B,IAAAx8D,EAAA,MAC7B,MAEF,KAAKgoB,EAAAA,QAAIoN,aAAaO,iBACpB,OADoC6mC,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MAC5Bu1B,EAAGwnC,OAAM,UACf,KAAK/0C,EAAAA,QAAIg1C,iBAAiB34B,cAAam4B,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACrCukC,EAAahP,EAAGwnC,OAAOx4B,aAAai4B,IAAAx8D,EAAA,MACpC,MAEF,KAAKgoB,EAAAA,QAAIg1C,iBAAiB14B,YAAWk4B,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACnC+8D,EAAOxnC,EAAGwnC,OAAOpkC,KAAK6jC,IAAAx8D,EAAA,MACtBukC,EAAaw4B,EAAKx4B,aAAai4B,IAAAx8D,EAAA,MAC/B,MAEF,QAAAw8D,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MAEDw8D,IAAAx8D,EAAA,MACD,MAEF,QAAAw8D,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MAWF,GATCw8D,IAAAx8D,EAAA,MAEGukC,GAAYi4B,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MACduV,EAAK0nD,YAAc,CACjBC,QAAS34B,EAAW24B,UAAUh6D,WAC9Bi6D,QAAS54B,EAAW44B,UAAUj6D,aAEjCs5D,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MAEG+8D,EAAM,CAAAP,IAAAr5D,EAAA,QACR,IAAMi6D,GAAYZ,IAAAx8D,EAAA,MAAG+8D,EAAKK,gBAAeZ,IAAAx8D,EAAA,MACrCo9D,GAAcZ,IAAAr5D,EAAA,QAAAq5D,IAAAx8D,EAAA,MAChBuV,EAAK8nD,cAAgB,CACnBC,UAAWF,EAAaE,YACxBC,UAAWH,EAAaG,cAE3Bf,IAAAr5D,EAAA,QAED,IAAMq6D,GAAMhB,IAAAx8D,EAAA,MAAG+8D,EAAKU,aAAYjB,IAAAx8D,EAAA,MAC5Bw9D,GAAQhB,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MACVuV,EAAKmoD,oBAAsBF,EAAOt6D,YACnCs5D,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MAEDuV,EAAKooD,uBAAyBZ,EAAKa,YAAYpB,IAAAx8D,EAAA,MAC/CuV,EAAKsoD,6BAA+Bd,EAAKe,kBAAkBtB,IAAAx8D,EAAA,MAC3DuV,EAAKwoD,cAAgBhB,EAAKiB,cAC5B,MAACxB,IAAAr5D,EAAA,QAED,IAAMgzB,GAAUqmC,IAAAx8D,EAAA,MAAGw8D,IAAAr5D,EAAA,SAAAoyB,EAAGY,eAAYqmC,IAAAr5D,EAAA,SAAI,KACiC,OAD9Bq5D,IAAAx8D,EAAA,MACzCuV,EAAK0oD,YAAc9nC,EAAWvW,KAAI,SAAC0wC,GAAO,OAAAkM,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MAAA0zB,EAAAA,UAAUwqC,cAAc5N,EAAE,IAAG/6C,CACzE,CAEA,OAlHU,SAAAxZ,EAAAD,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA8D,UAAA,sDAAA7D,EAAAS,UAAAI,OAAA+I,OAAA7J,GAAAA,EAAAU,UAAA,CAAAqD,YAAA,CAAAsF,MAAApJ,EAAA2T,UAAA,EAAAC,cAAA,KAAA/S,OAAA4O,eAAAzP,EAAA,aAAA2T,UAAA,IAAA5T,GAAA6d,EAAA5d,EAAAD,EAAA,CAkHVgiB,CAAAoY,EAAAlB,GAlHUl5B,EAkHVo6B,GAlHUl6B,EAkHV,EAAAuV,IAAA,aAAA7K,IAMA,WACE,OADe81D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACRrD,KAAKsgE,WACd,EAAC92D,IACD,SAAehB,GACb,MADoBq3D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACd,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,eAAA7K,IAMA,WACE,OADiB81D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACVrD,KAAK0gE,aACd,EAACl3D,IACD,SAAiBhB,GACf,MADsBq3D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MAChB,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,qBAAA7K,IAKA,WACE,OADuB81D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MAChBrD,KAAK+gE,mBACd,EAACv3D,IACD,SAAuBhB,GACrB,MAD4Bq3D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACtB,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,wBAAA7K,IAKA,WACE,OAD0B81D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACnBrD,KAAKghE,sBACd,EAACx3D,IACD,SAA0BhB,GACxB,MAD+Bq3D,IAAAv8D,EAAA,KAAAu8D,IAAAx8D,EAAA,MACzB,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,8BAAA7K,IAKA,WACE,OADgC81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACzBrD,KAAKkhE,4BACd,EAAC13D,IACD,SAAgChB,GAC9B,MADqCq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MAC/B,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,eAAA7K,IAKA,WACE,OADiB81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACVrD,KAAKohE,aACd,EAAC53D,IACD,SAAiBhB,GACf,MADsBq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MAChB,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,WAAA7K,IAIA,WACE,OADa81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACNrD,KAAKggE,SACd,EAACx2D,IACD,SAAahB,GACX,MADkBq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACZ,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,SAAA7K,IAIA,WACE,OADW81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACJrD,KAAKkgE,OACd,EAAC12D,IACD,SAAWhB,GACT,MADgBq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACV,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,aAAA7K,IAIA,WACE,OADe81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACRrD,KAAKshE,WACd,EAAC93D,IACD,SAAehB,GACb,MADoBq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACd,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,OAAA7K,IAIA,WACE,OADS81D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACFukD,EAAAA,KAAK2Z,cAAcvhE,KAAK+/D,MACjC,EAACv2D,IACD,SAAShB,GACP,MADcq3D,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MACR,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,gBAAApM,MASA,WAAgBq3D,IAAAv8D,EAAA,MACd,IAAIs1B,GAAEinC,IAAAx8D,EAAA,MAAGrD,KAAK44B,IAGdinC,IAAAx8D,EAAA,MACIrD,KAAK8/D,gBAAkBz0C,EAAAA,QAAIoN,aAAauE,oBAAoB6iC,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MAC9Du1B,EAAKvN,EAAAA,QAAIkO,YAAYtzB,QACnB6jB,EAAO1a,OAAO,CAIZic,EAAAA,QAAIm2C,cAAct1C,uBAAuBnmB,QACzC6yB,EAAG7yB,YAGR85D,IAAAr5D,EAAA,SAED,IAAMizB,GAAiBomC,IAAAx8D,EAAA,MACrB,IAAIgoB,EAAAA,QAAIqO,6CAA6CV,eAAeJ,IAEhEe,GAAWkmC,IAAAx8D,EAAA,MAAG,IAAIgoB,EAAAA,QAAIuO,4BAA4B,CACtDlN,UAAWrB,EAAAA,QAAIwO,KAAK5zB,SAAQ0mB,EAAAA,EAAAA,MAAK3sB,KAAKysB,oBACtCgN,kBAAAA,KAGF,OAFGomC,IAAAx8D,EAAA,MAEIs2B,EAAY5zB,OACrB,GAEA,CAAA6O,IAAA,aAAApM,MAIA,WAAaq3D,IAAAv8D,EAAA,MACX,IAGIg1B,EAHEmpC,GAAK5B,IAAAx8D,EAAA,MAAGrD,KAAK44B,GAAG7yB,SAChB+yB,GAAU+mC,IAAAx8D,EAAA,MAAGrD,KAAK84B,WAAWzxB,SAGnC,OADaw4D,IAAAx8D,EAAA,MACLrD,KAAK8/D,eACX,KAAKz0C,EAAAA,QAAIoN,aAAauE,mBAAkB6iC,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MACtCi1B,EAAW,IAAIjN,EAAAA,QAAIkN,oBAAoByE,iBACrC,IAAI3R,EAAAA,QAAIq2C,sBAAsB,CAC5B9oC,GAAIvN,EAAAA,QAAIs2C,cAAc17D,QAAQw7D,GAC9B3oC,WAAAA,KAEF+mC,IAAAx8D,EAAA,MACF,MACF,KAAKgoB,EAAAA,QAAIoN,aAAaO,iBAAgB6mC,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MACpCi1B,EAAW,IAAIjN,EAAAA,QAAIkN,oBAAoBS,eACrC,IAAI3N,EAAAA,QAAIu2C,sBAAsB,CAC5BhpC,GAAIvN,EAAAA,QAAIkO,YAAYtzB,QAAQw7D,GAC5B3oC,WAAAA,KAEF+mC,IAAAx8D,EAAA,MACF,MACF,QACE,MADFw8D,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MACQ,IAAI8J,MAAM,+FAADiC,OACkFpP,KAAK8/D,cAAcr4D,KAAI,MAI5H,OAFCo4D,IAAAx8D,EAAA,MAEMi1B,CACT,GAEA,CAAA1jB,IAAA,wBAAApM,MAaA,SAAsBq5D,GAEpB,GAF6BhC,IAAAv8D,EAAA,MAAAu8D,IAAAx8D,EAAA,MAG3Bw8D,IAAAr5D,EAAA,UAACqB,OAAO2L,UAAUquD,KAAQhC,IAAAr5D,EAAA,SAC1Bq7D,EAAU,KAAChC,IAAAr5D,EAAA,SACXq7D,GAAW7hE,KAAKw5B,WAAW11B,QAE3B,MADA+7D,IAAAr5D,EAAA,SAAAq5D,IAAAx8D,EAAA,MACM,IAAI2D,WAAW,2BACtB64D,IAAAr5D,EAAA,SAED,IAAImtD,GAAEkM,IAAAx8D,EAAA,MAAGrD,KAAKw5B,WAAWqoC,IAAShC,IAAAx8D,EAAA,MAClC,IAAIw8D,IAAAx8D,EAAA,MACFswD,EAAK58B,EAAAA,UAAUyM,uBAAuBmwB,EACxC,CAAE,MAAOz8C,GACP,MADY2oD,IAAAx8D,EAAA,MACN,IAAIJ,UAAU,wCAADmM,OACuBukD,EAAG/lD,KAAI,MAAAwB,OAAK8H,GAExD,CAGA,IAAMsU,GAAOq0C,IAAAx8D,EAAA,MAAG8mB,EAAAA,OAAOU,wBACrBi+B,EAAAA,EAAAA,oBAAmB9oD,KAAKwe,UAEpBsoB,GAAW+4B,IAAAx8D,EAAA,MAAGgoB,EAAAA,QAAIwB,eAAeuQ,iBACrC,IAAI/R,EAAAA,QAAIy2C,0BAA0B,CAChCzU,cAAehiC,EAAAA,QAAI06B,UAAU75B,qBAAqBV,GAClDy0C,OAAQ50C,EAAAA,QAAI02C,eAAer6D,WAAW1H,KAAKkqB,UAC3C83C,MAAOH,MAILI,GAAQpC,IAAAx8D,EAAA,OAAGspB,EAAAA,EAAAA,MAAKma,EAAY/gC,MAAM,SAClCgqC,GAAS8vB,IAAAx8D,EAAA,MAAGgoB,EAAAA,QAAIopC,mBAAmB93B,yBAAyBslC,IAClE,OAD4EpC,IAAAx8D,EAAA,MACrE0sC,EAAUhqC,MAAM,MACzB,MA/VUwO,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CA+VT,CA/UqB,CAAS26B,EAAAA,ghQChBrB,OAAAmoC,EAAA,kBAAAr4C,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAAmR,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAA0iE,IARL,IAAMnoC,EAAe,WAc1B,OANU56B,EAPV,SAAA46B,EAAYnB,EAAIE,EAAYD,EAAKpM,GAC/B,GAMQ,SAAA9nB,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCAP0C6V,CAAA,KAAAihB,GAAAmoC,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,KACjB,iBAAtBopB,EACT,MADyCy1C,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,KACnC,IAAI8J,MAAM,2EAADiC,OAAAiF,EACqEoY,KAErFy1C,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,KAEDrD,KAAKmiE,mBAAqB11C,EAAkBy1C,IAAA7+D,EAAA,KAC5CrD,KAAKoiE,IAAMxpC,EAAGspC,IAAA7+D,EAAA,KACdrD,KAAKqiE,YAAcvpC,EAAWopC,IAAA7+D,EAAA,KAC9BrD,KAAKsiE,KAAOzpC,CACd,EAJUx5B,EAMV,EAAAuV,IAAA,aAAA7K,IAIA,WACE,OADem4D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,KACRrD,KAAKqiE,WACd,EAAC74D,IAED,SAAehB,GACb,MADoB05D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,KACd,IAAI8J,MAAM,2BAClB,GAAC,CAAAyH,IAAA,KAAA7K,IAED,WACE,OADOm4D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,KACArD,KAAKoiE,GACd,EAAC54D,IAED,SAAOhB,GACL,MADY05D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,KACN,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,MAAA7K,IAIA,WACE,OADQm4D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,MACDrD,KAAKsiE,IACd,EAAC94D,IAED,SAAQhB,GACN,MADa05D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,MACP,IAAI8J,MAAM,2BAClB,GAEA,CAAAyH,IAAA,oBAAA7K,IAIA,WACE,OADsBm4D,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,MACfrD,KAAKmiE,kBACd,EAAC34D,IAED,SAAsBijB,GAAmBy1C,IAAA5+D,EAAA,KAAA4+D,IAAA7+D,EAAA,MACvCrD,KAAKmiE,mBAAqB11C,CAC5B,GAEA,CAAA7X,IAAA,OAAApM,MAKA,WAAkB,IAAAoQ,EAAA,KAAAspD,IAAA5+D,EAAA,KAChB,IAAMi/D,GAAML,IAAA7+D,EAAA,MAAGrD,KAAK2sB,QAAOu1C,IAAA7+D,EAAA,cAAAkU,EAAAxJ,UAAAjK,OADrB0+D,EAAQ,IAAApiE,MAAAmX,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAR+qD,EAAQ/qD,GAAA1J,UAAA0J,GAEd+qD,EAASzpD,SAAQ,SAAC6b,GAAOstC,IAAA5+D,EAAA,MACvB,IAAMm/D,GAAGP,IAAA7+D,EAAA,MAAGuxB,EAAG8tC,cAAcH,IAAQL,IAAA7+D,EAAA,MACrCuV,EAAKkgB,WAAW7rB,KAAKw1D,EACvB,GACF,GAEA,CAAA7tD,IAAA,sBAAApM,MAsBA,SAAoBm6D,GAClB,OAD2BT,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACpBs/D,EAAQxuC,KAAKn0B,KAAK2sB,QAAQpmB,SAAS,SAC5C,GAEA,CAAAqO,IAAA,eAAApM,MAwBA,WAA6C,IASvCm6D,EACA7tD,EAVOme,EAASllB,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAm0D,IAAA17D,EAAA,QAAG,IAAIwsB,EAASjlB,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAm0D,IAAA17D,EAAA,QAAG,IACvC,GADyC07D,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACrC6+D,IAAA17D,EAAA,SAACwsB,IAASkvC,IAAA17D,EAAA,QAAyB,iBAAdwsB,GACvB,MAD+CkvC,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MACzC,IAAI8J,MAAM,qBAGlB,GAFC+0D,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAEG6+D,IAAA17D,EAAA,SAACysB,IAASivC,IAAA17D,EAAA,QAAyB,iBAAdysB,GACvB,MAD+CivC,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MACzC,IAAI8J,MAAM,qBACjB+0D,IAAA17D,EAAA,QAID,IAAMo8D,GAAeV,IAAA7+D,EAAA,MAAGymB,EAAOnmB,KAAKqvB,EAAW,WAAUkvC,IAAA7+D,EAAA,MAEzD,IAAI6+D,IAAA7+D,EAAA,MACFs/D,EAAU30C,EAAAA,QAAQC,cAAcgF,GAAWivC,IAAA7+D,EAAA,MAC3CyR,EAAO6tD,EAAQtc,eACjB,CAAE,MAAOlnD,GACP,MADU+iE,IAAA7+D,EAAA,MACJ,IAAI8J,MAAM,oBAClB,CAEA,GAFC+0D,IAAA7+D,EAAA,OAEIs/D,EAAQvuC,OAAOp0B,KAAK2sB,OAAQi2C,GAC/B,MADiDV,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAC3C,IAAI8J,MAAM,qBACjB+0D,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAEDrD,KAAK84B,WAAW7rB,KACd,IAAIoe,EAAAA,QAAIi7B,mBAAmB,CACzBxxC,KAAAA,EACAke,UAAW4vC,IAGjB,GAEA,CAAAhuD,IAAA,wBAAApM,MASA,SAAsBwqB,GAAWkvC,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MAC/BrD,KAAK84B,WAAW7rB,KAAK+lB,EACvB,GAEA,CAAApe,IAAA,YAAApM,MAKA,SAAUokB,GAKR,GALkBs1C,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACM,iBAAbupB,GAAuBs1C,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAChCupB,EAAW9C,EAAOnmB,KAAKipB,EAAU,QAClCs1C,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAEGupB,EAAS9oB,OAAS,GACpB,MADwBo+D,IAAA17D,EAAA,QAAA07D,IAAA7+D,EAAA,MAClB,IAAI8J,MAAM,4CACjB+0D,IAAA17D,EAAA,QAED,IAAMwsB,GAASkvC,IAAA7+D,EAAA,MAAGupB,GACZkrB,GAAKoqB,IAAA7+D,EAAA,OAAGspB,EAAAA,EAAAA,MAAKC,IACb9X,GAAIotD,IAAA7+D,EAAA,MAAGy0C,EAAMzwC,MAAMywC,EAAMh0C,OAAS,IAAGo+D,IAAA7+D,EAAA,MAC3CrD,KAAK84B,WAAW7rB,KAAK,IAAIoe,EAAAA,QAAIi7B,mBAAmB,CAAExxC,KAAAA,EAAMke,UAAAA,IAC1D,GAEA,CAAApe,IAAA,OAAApM,MAIA,WACE,OADK05D,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,OACEspB,EAAAA,EAAAA,MAAK3sB,KAAK6iE,gBACnB,GAAC,CAAAjuD,IAAA,gBAAApM,MAED,WACE,MADc05D,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACR,IAAI8J,MAAM,wBAClB,GAAC,CAAAyH,IAAA,aAAApM,MAED,WACE,MADW05D,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACL,IAAI8J,MAAM,wBAClB,GAEA,CAAAyH,IAAA,QAAApM,MAIA,WACE,OADM05D,IAAA5+D,EAAA,MAAA4+D,IAAA7+D,EAAA,MACCrD,KAAK8iE,aAAa/8D,QAAQQ,SAAS,SAC5C,IAxMUlH,GAAAkV,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAwMT,CAhNyB,242BCQhB,OAAA2jE,EAAA,kBAAAl5C,CAAA,EAAAA,CAAA,UAAAxV,EAAAjR,GAAA,OAAAiR,EAAA,mBAAAhH,QAAA,iBAAAA,OAAAiH,SAAA,SAAAlR,GAAA,cAAAA,CAAA,WAAAA,GAAA,OAAAA,GAAA,mBAAAiK,QAAAjK,EAAAF,cAAAmK,QAAAjK,IAAAiK,OAAAxN,UAAA,gBAAAuD,CAAA,EAAAiR,EAAAjR,EAAA,UAAA4/D,EAAA3jE,GAAA,gBAAAA,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAykB,EAAAzkB,EAAA,CAAA4jE,CAAA5jE,IAAA,SAAAA,GAAA,uBAAAgO,QAAA,MAAAhO,EAAAgO,OAAAiH,WAAA,MAAAjV,EAAA,qBAAAe,MAAAuD,KAAAtE,EAAA,CAAAq9D,CAAAr9D,IAAA,SAAAA,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,IAAA,qBAAA4D,UAAA,wIAAAigE,EAAA,UAAAp/C,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,UAAAmc,EAAAzc,EAAAE,GAAA,IAAAD,EAAAa,OAAA0Y,KAAAxZ,GAAA,GAAAc,OAAA4b,sBAAA,KAAAzY,EAAAnD,OAAA4b,sBAAA1c,GAAAE,IAAA+D,EAAAA,EAAA0Y,QAAA,SAAAzc,GAAA,OAAAY,OAAA8b,yBAAA5c,EAAAE,GAAAyP,UAAA,KAAA1P,EAAA6N,KAAAuB,MAAApP,EAAAgE,EAAA,QAAAhE,CAAA,UAAA4c,EAAA7c,GAAA,QAAAE,EAAA,EAAAA,EAAA0O,UAAAjK,OAAAzE,IAAA,KAAAD,EAAA,MAAA2O,UAAA1O,GAAA0O,UAAA1O,GAAA,GAAAA,EAAA,EAAAuc,EAAA3b,OAAAb,IAAA,GAAA2Z,SAAA,SAAA1Z,GAAA4c,EAAA9c,EAAAE,EAAAD,EAAAC,GAAA,IAAAY,OAAAic,0BAAAjc,OAAAkc,iBAAAhd,EAAAc,OAAAic,0BAAA9c,IAAAwc,EAAA3b,OAAAb,IAAA2Z,SAAA,SAAA1Z,GAAAY,OAAA4O,eAAA1P,EAAAE,EAAAY,OAAA8b,yBAAA3c,EAAAC,GAAA,WAAAF,CAAA,UAAA8c,EAAA9c,EAAAE,EAAAD,GAAA,OAAAC,EAAA+c,EAAA/c,MAAAF,EAAAc,OAAA4O,eAAA1P,EAAAE,EAAA,CAAAmJ,MAAApJ,EAAA0P,YAAA,EAAAkE,cAAA,EAAAD,UAAA,IAAA5T,EAAAE,GAAAD,EAAAD,CAAA,UAAAoV,EAAApV,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAyE,OAAA1E,IAAA,KAAAgE,EAAA/D,EAAAD,GAAAgE,EAAA0L,WAAA1L,EAAA0L,aAAA,EAAA1L,EAAA4P,cAAA,YAAA5P,IAAAA,EAAA2P,UAAA,GAAA9S,OAAA4O,eAAA1P,EAAAid,EAAAhZ,EAAAwR,KAAAxR,EAAA,WAAAgZ,EAAAhd,GAAA,IAAAI,EAAA,SAAAJ,EAAAC,GAAA,aAAAgV,EAAAjV,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAiO,OAAAS,aAAA,YAAA3O,EAAA,KAAAK,EAAAL,EAAAY,KAAAX,EAAAC,GAAA,wBAAAgV,EAAA7U,GAAA,OAAAA,EAAA,UAAAyD,UAAA,kEAAA5D,EAAAsC,OAAAkG,QAAAzI,EAAA,CAAA8V,CAAA9V,EAAA,0BAAAiV,EAAA7U,GAAAA,EAAAA,EAAA,GAAAujE,IAYL,IAAMI,GAAQJ,IAAA1/D,EAAA,KAAG,OAOX+/D,GAAeL,IAAA1/D,EAAA,KAAG,GA2FlBggE,EAAkB,WAC7B,SAAAA,EAAYhW,GAA0B,IAAX1C,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAg1D,IAAAv8D,EAAA,QAAG,CAAC,GACjC,GAhHQ,SAAA7B,EAAAlF,GAAA,KAAAkF,aAAAlF,GAAA,UAAAwD,UAAA,qCA+G0B6V,CAAA,KAAAuqD,GAAAN,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MAC7BgqD,EACH,MADkB0V,IAAAv8D,EAAA,QAAAu8D,IAAA1/D,EAAA,KACZ,IAAI8J,MAAM,mDAGlB,GAFC41D,IAAAv8D,EAAA,QAAAu8D,IAAA1/D,EAAA,UAEgB2R,IAAb21C,EAAK9xB,IACP,MAD0BkqC,IAAAv8D,EAAA,QAAAu8D,IAAA1/D,EAAA,KACpB,IAAI8J,MAAM,qDACjB41D,IAAAv8D,EAAA,QAAAu8D,IAAA1/D,EAAA,KAEDrD,KAAKwe,OAAS6uC,EAAc0V,IAAA1/D,EAAA,KAC5BrD,KAAKw5B,WAAa,GAAGupC,IAAA1/D,EAAA,KAErBrD,KAAKsjE,QAAU3Y,EAAK9xB,IAAIkqC,IAAA1/D,EAAA,KACxBrD,KAAKujE,WAAa5Y,EAAK4Y,YAAUR,IAAAv8D,EAAA,QAAAwV,EAAA,GAAQ2uC,EAAK4Y,cAAUR,IAAAv8D,EAAA,QAAK,MAAKu8D,IAAA1/D,EAAA,MAClErD,KAAKwjE,aAAe7Y,EAAK6Y,cAAYT,IAAAv8D,EAAA,QAAAwV,EAAA,GAAQ2uC,EAAK6Y,gBAAYT,IAAAv8D,EAAA,QAAK,MAAKu8D,IAAA1/D,EAAA,MACxErD,KAAKyjE,oBAAqBV,IAAAv8D,EAAA,QAAAmkD,EAAK8Y,qBAAkBV,IAAAv8D,EAAA,QAAI,OAAKu8D,IAAA1/D,EAAA,MAC1DrD,KAAK0jE,uBAAwBX,IAAAv8D,EAAA,QAAAmkD,EAAK+Y,wBAAqBX,IAAAv8D,EAAA,QAAI,OAAKu8D,IAAA1/D,EAAA,MAChErD,KAAK2jE,6BAA8BZ,IAAAv8D,EAAA,QAAAmkD,EAAKgZ,8BAA2BZ,IAAAv8D,EAAA,QAAI,OAAKu8D,IAAA1/D,EAAA,MAC5ErD,KAAKqhE,aAAe1W,EAAK0W,cAAY0B,IAAAv8D,EAAA,QAAAw8D,EAAOrY,EAAK0W,gBAAY0B,IAAAv8D,EAAA,QAAI,MAAKu8D,IAAA1/D,EAAA,MACtErD,KAAK8nB,MAAOi7C,IAAAv8D,EAAA,QAAAmkD,EAAK7iC,OAAIi7C,IAAAv8D,EAAA,QAAIohD,EAAAA,KAAKO,SAAO4a,IAAA1/D,EAAA,MACrCrD,KAAKysB,mBAAoBs2C,IAAAv8D,EAAA,SAAAmkD,EAAKl+B,oBAAiBs2C,IAAAv8D,EAAA,SAAI,OAAKu8D,IAAA1/D,EAAA,MAExDrD,KAAK6nC,YAAc8iB,EAAK9iB,aAAWk7B,IAAAv8D,EAAA,SAC/B,IAAI42D,EAAAA,mBAAmBzS,EAAK9iB,aAAa+7B,UAAOb,IAAAv8D,EAAA,SAChD,KACN,CAEA,OA1IUrH,EA0IVkkE,EA1IUjkE,EA4oBV,EAAAwV,IAAA,YAAApM,MAzeA,SAAiBowB,GAAe,IAAX+xB,EAAI58C,UAAAjK,OAAA,QAAAkR,IAAAjH,UAAA,GAAAA,UAAA,IAAAg1D,IAAAv8D,EAAA,SAAG,CAAC,GAC3B,GAD4Bu8D,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,QACtBu1B,aAAcW,EAAAA,aAClB,MADgCwpC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC1B,IAAIJ,UAAU,kCAADmM,OAAmCwpB,IACvDmqC,IAAAv8D,EAAA,SAED,IAEIgY,EAFEkqC,GAAWqa,IAAA1/D,EAAA,OAAIqD,OAAOkyB,EAAG1O,UAAY,IAAI3jB,YAI/C,GADAw8D,IAAA1/D,EAAA,MACI8mB,EAAAA,OAAOC,yBAAyBwO,EAAGpa,QAASukD,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC9Cmb,EAASwnC,EAAAA,aAAaphB,YAAYhM,EAAGpa,OAAQkqC,OACxC,IAAAqa,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAAI8mB,EAAAA,OAAOE,wBAAwBuO,EAAGpa,QAG3C,MADKukD,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACC,IAAIJ,UAAU,kCAADmM,OAAmCwpB,EAAGpa,SAHLukD,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACpDmb,EAAS,IAAIwL,EAAAA,QAAQ4O,EAAGpa,OAAQkqC,EAGlC,CAIA,IAAMmb,GAAWd,IAAA1/D,EAAA,MAAG+K,SAASwqB,EAAGC,IAAK,IAAMD,EAAGY,WAAW11B,QAEnDggE,GAAOf,IAAA1/D,EAAA,MAAG,IAAIggE,EAAmB7kD,EAAMxC,EAAA,CAC3C6c,KAAMkqC,IAAAv8D,EAAA,SAAAq9D,IAAWd,IAAAv8D,EAAA,SAAI28D,IAAU58D,WAC/BuhB,KAAM8Q,EAAG9Q,KACT2E,kBAAmBmM,EAAGnM,kBACtB82C,WAAY3qC,EAAGgP,WACf47B,aAAc5qC,EAAG6nC,aACjBgD,mBAAoB7qC,EAAG6qC,mBACvBC,sBAAuB9qC,EAAG8qC,sBAC1BC,4BAA6B/qC,EAAG+qC,4BAChCtC,aAAczoC,EAAGyoC,cACd1W,KAKL,OAJGoY,IAAA1/D,EAAA,MAEHu1B,EAAGwpC,IAAI5oC,aAAazgB,SAAQ,SAAC46C,GAAO,OAAAoP,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MAAAygE,EAAQC,aAAapQ,EAAE,IAAGoP,IAAA1/D,EAAA,MAEvDygE,CACT,GAAC,CAAAlvD,IAAA,0BAAApM,MA4dD,SACE6wB,EACAiqC,EACArqC,EACAxM,GACAs2C,IAAAz/D,EAAA,MACA,IAAM0gE,GAAQjB,IAAA1/D,EAAA,OAAG41B,EAAQO,WAAW11B,QAC9BmgE,GAAgBlB,IAAA1/D,EAAA,OAAG,IAAIknB,EAAAA,QAAU0O,EAAQJ,KAAKq5B,IAAI8R,IAClDniD,GAAIkhD,IAAA1/D,EAAA,OAAG,IAAIknB,EAAAA,QAAU+4C,IAG3B,GADAP,IAAA1/D,EAAA,OACIwe,EAAKqiD,GAAGD,GACV,MAD6BlB,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACvB,IAAI8J,MAAM,0CAADiC,OAC6B60D,EAAgB,cAE7DlB,IAAAv8D,EAAA,SAED,IAAM29D,GAAUpB,IAAA1/D,EAAA,OAAG,IAAIknB,EAAAA,QAAU44C,IAGjC,GADAJ,IAAA1/D,EAAA,OACIwe,EAAKqiD,GAAGC,GACV,MADuBpB,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACjB,IAAI8J,MAAM,0CAADiC,OAC6B+0D,EAAU,cAEvDpB,IAAAv8D,EAAA,SAED,IAsBI49D,EAtBArrC,GAAegqC,IAAA1/D,EAAA,OAAG41B,EAAQ6pC,cAC9B,GAD2CC,IAAA1/D,EAAA,OACvC01B,EAAe,WAAc1N,EAAAA,QAAIoN,aAAauE,mBAAoB,CAAA+lC,IAAAv8D,EAAA,SACpE,IAAM69D,GAAItB,IAAA1/D,EAAA,OAAG01B,EAAgBvC,KAAKoC,MAC5B0rC,GAAIvB,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIkO,YAAY,CAC/B8zB,cAAe,IAAIhiC,EAAAA,QAAI26B,aAAa5O,eAClCitB,EAAKlE,wBAEPtnC,IAAKwrC,EAAKxrC,MACVonC,OAAQoE,EAAKpE,SACbG,KAAM/0C,EAAAA,QAAIk5C,cAAc78B,YAAY28B,EAAKz8B,cACzC9f,KAAMu8C,EAAKv8C,OACX0R,WAAY6qC,EAAK7qC,aACjBk8B,IAAK,IAAIrqC,EAAAA,QAAIm5C,eAAe,MAC3BzB,IAAA1/D,EAAA,OACH01B,EAAkB,IAAI1N,EAAAA,QAAIkN,oBAAoBS,eAC5C,IAAI3N,EAAAA,QAAIu2C,sBAAsB,CAC5BhpC,GAAI0rC,EACJxrC,WAAYC,EAAgBvC,KAAKsC,eAGvC,MAACiqC,IAAAv8D,EAAA,SAEoBu8D,IAAA1/D,EAAA,OACI,iBAAdg2B,GAAwB0pC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACjC+gE,GAAmBxb,EAAAA,EAAAA,6BAA4BvvB,KAC1C0pC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACL+gE,EAAmB/qC,EAAUorC,mBAG/B,IAAM7rC,GAAEmqC,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAI+M,mBAAmB,CACpCiB,UAAW+qC,EACXvrC,IAAKxN,EAAAA,QAAI0J,MAAMrtB,WAAWma,EAAKgwC,MAAMmS,EAAW,GAAGz9D,YACnD0yB,QAAS5N,EAAAA,QAAIq5C,0BAA0B1rC,eACrCD,EAAgBG,MAElBw8B,IAAK,IAAIrqC,EAAAA,QAAIs5C,sBAAsB,MAE/BC,GAAiB7B,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIyO,2BAA2B,CAC3DlB,GAAAA,EACAE,WAAY,MAERR,GAAQyqC,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIkN,oBAAoBG,sBAC3CksC,IAGF,OAFE7B,IAAA1/D,EAAA,OAEK,IAAI+0B,EAAAA,mBAAmBE,EAAU7L,EAC1C,GAEA,CAAA7X,IAAA,UAAApM,MAYA,SAAe8vB,EAAU7L,GAKvB,OAL0Cs2C,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OAClB,iBAAbi1B,GAAuByqC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAChCi1B,EAAWjN,EAAAA,QAAIkN,oBAAoBtyB,QAAQqyB,EAAU,WACtDyqC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAEGi1B,EAAQ,WAAcjN,EAAAA,QAAIoN,aAAaC,yBAAyBqqC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAC3D,IAAI+0B,EAAAA,mBAAmBE,EAAU7L,KACzCs2C,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAEM,IAAIk2B,EAAAA,YAAYjB,EAAU7L,GACnC,KApwBUptB,EA0IV,EAAAuV,IAAA,eAAApM,MAwEA,SAAa8kD,GAEX,OAFsByV,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MACtBrD,KAAKw5B,WAAWvsB,KAAKqgD,GAAWyV,IAAA1/D,EAAA,MACzBrD,IACT,GAEA,CAAA4U,IAAA,kBAAApM,MAIA,WAEE,OAFgBu6D,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MAChBrD,KAAKw5B,WAAa,GAAGupC,IAAA1/D,EAAA,MACdrD,IACT,GAEA,CAAA4U,IAAA,UAAApM,MAKA,SAAQsf,GAEN,OAFYi7C,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MACZrD,KAAK8nB,KAAOA,EAAKi7C,IAAA1/D,EAAA,MACVrD,IACT,GAEA,CAAA4U,IAAA,aAAApM,MA+BA,SAAWq8D,GACT,GADyB9B,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MACrB0/D,IAAAv8D,EAAA,SAAoB,OAApBxG,KAAKujE,aAAmBR,IAAAv8D,EAAA,SAAIxG,KAAKujE,WAAW/C,QAAU,GACxD,MAD2DuC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACrD,IAAI8J,MACR,kFAIJ,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEGwhE,EAAiB,EACnB,MADsB9B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAChB,IAAI8J,MAAM,8BAGlB,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEGwhE,EAAiB,EAAG,CAAA9B,IAAAv8D,EAAA,SACtB,IAAMs+D,GAAgB/B,IAAA1/D,EAAA,MAAG0B,KAAKuO,MAAMqT,KAAKo+C,MAAQ,KAAQF,GAAe9B,IAAA1/D,EAAA,MAChD,OAApBrD,KAAKujE,YAAqBR,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC5BrD,KAAKujE,WAAa,CAAEhD,QAAS,EAAGC,QAASsE,KACpC/B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACLrD,KAAKujE,WAAa,CAChBhD,QAASvgE,KAAKujE,WAAWhD,QACzBC,QAASsE,GAGf,MAAO/B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACLrD,KAAKujE,WAAa,CAChBhD,QAAS,EACTC,QAAS,GAIb,OAFCuC,IAAA1/D,EAAA,MAEMrD,IACT,GAEA,CAAA4U,IAAA,gBAAApM,MAiBA,SAAcw8D,EAAgBC,GAS5B,GAT4ClC,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MAEd,iBAAnB2hE,GAA6BjC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACtC2hE,EAAiB,IAAIr+C,KAAsB,IAAjBq+C,IAC3BjC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC6B,iBAAnB4hE,GAA6BlC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACtC4hE,EAAiB,IAAIt+C,KAAsB,IAAjBs+C,IAC3BlC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEuB,OAApBrD,KAAKujE,WACP,MAD4BR,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACtB,IAAI8J,MACR,4EAEH41D,IAAAv8D,EAAA,SAGD,IAAM+5D,GAAOwC,IAAA1/D,EAAA,MAAG0B,KAAKuO,MAAM0xD,EAAe/9D,UAAY,MAChDu5D,GAAOuC,IAAA1/D,EAAA,MAAG0B,KAAKuO,MAAM2xD,EAAeh+D,UAAY,MACtD,GAD4D87D,IAAA1/D,EAAA,MACxDk9D,EAAU,EACZ,MADewC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACT,IAAI8J,MAAM,+BAElB,GADC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACGm9D,EAAU,EACZ,MADeuC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACT,IAAI8J,MAAM,+BAElB,GADC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACG0/D,IAAAv8D,EAAA,SAAAg6D,EAAU,IAACuC,IAAAv8D,EAAA,SAAI+5D,EAAUC,GAC3B,MADoCuC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC9B,IAAI8J,MAAM,4CAKlB,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAKujE,WAAa,CAAEhD,QAAAA,EAASC,QAAAA,GAAUuC,IAAA1/D,EAAA,MAEhCrD,IACT,GAEA,CAAA4U,IAAA,kBAAApM,MAeA,SAAgBm4D,EAAWC,GACzB,GADoCmC,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MACV,OAAtBrD,KAAKwjE,aACP,MAD8BT,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACxB,IAAI8J,MACR,gFAIJ,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEGs9D,EAAY,EACd,MADiBoC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACX,IAAI8J,MAAM,iCAElB,GADC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACGu9D,EAAY,EACd,MADiBmC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACX,IAAI8J,MAAM,iCAElB,GADC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACG0/D,IAAAv8D,EAAA,SAAAo6D,EAAY,IAACmC,IAAAv8D,EAAA,SAAIm6D,EAAYC,GAC/B,MAD0CmC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACpC,IAAI8J,MAAM,gDAKlB,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAKwjE,aAAe,CAAE7C,UAAAA,EAAWC,UAAAA,GAAYmC,IAAA1/D,EAAA,MAEtCrD,IACT,GAEA,CAAA4U,IAAA,wBAAApM,MAiBA,SAAsBi7D,GACpB,GADwCV,IAAAz/D,EAAA,KAAAy/D,IAAA1/D,EAAA,MACR,OAA5BrD,KAAKyjE,mBACP,MADoCV,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC9B,IAAI8J,MACR,gGAMJ,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAKyjE,mBAAqBA,EAAmBV,IAAA1/D,EAAA,MAEtCrD,IACT,GAEA,CAAA4U,IAAA,2BAAApM,MAYA,SAAyB08D,GACvB,GAD0CnC,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,MACT,iBAAtB6hE,EACT,MADyCnC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACnC,IAAI8J,MAAM,6CAElB,GADC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACkC,OAA/BrD,KAAK0jE,sBACP,MADuCX,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACjC,IAAI8J,MACR,wGAIJ,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEG6hE,EAAoB,EACtB,MADyBnC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACnB,IAAI8J,MAAM,+CAKlB,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAK0jE,sBAAwBwB,EAAkBnC,IAAA1/D,EAAA,MAExCrD,IACT,GAEA,CAAA4U,IAAA,iCAAApM,MAYA,SAA+B28D,GAC7B,GADkCpC,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,MACO,OAArCrD,KAAK2jE,4BACP,MAD6CZ,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACvC,IAAI8J,MACR,sHAIJ,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEG8hE,EAAM,EACR,MADWpC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACL,IAAI8J,MAAM,sDAKlB,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAK2jE,4BAA8BwB,EAAIpC,IAAA1/D,EAAA,MAEhCrD,IACT,GAEA,CAAA4U,IAAA,kBAAApM,MAUA,SAAgB64D,GACd,GAD4B0B,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OACvBjD,MAAMoD,QAAQ69D,GACjB,MADgC0B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAC1B,IAAI8J,MAAM,8CAGlB,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEyB,OAAtBrD,KAAKqhE,aACP,MAD8B0B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACxB,IAAI8J,MACR,kFAIJ,GAFC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEGg+D,EAAav9D,OAAS,EACxB,MAD2Bi/D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MACrB,IAAI8J,MAAM,mDAKlB,OAJC41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,MAEDrD,KAAKqhE,aAAY2B,EAAO3B,GAAc0B,IAAA1/D,EAAA,MAE/BrD,IACT,GAEA,CAAA4U,IAAA,uBAAApM,MAQA,SAAqBikB,GAEnB,OAFsCs2C,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OACtCrD,KAAKysB,kBAAoBA,EAAkBs2C,IAAA1/D,EAAA,OACpCrD,IACT,GAEA,CAAA4U,IAAA,iBAAApM,MAmBA,SAAeq/B,GAEb,OAF0Bk7B,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OAC1BrD,KAAK6nC,YAAc,IAAIu1B,EAAAA,mBAAmBv1B,GAAa+7B,QAAQb,IAAA1/D,EAAA,OACxDrD,IACT,GAEA,CAAA4U,IAAA,QAAApM,MAKA,WAAQu6D,IAAAz/D,EAAA,MACN,IAAMylD,GAAcga,IAAA1/D,EAAA,OAAG,IAAIknB,EAAAA,QAAUvqB,KAAKwe,OAAOuqC,kBAAkBv+B,KAAK,IAClEqO,GAAGkqC,IAAA1/D,EAAA,OAAG,IAAIknB,EAAAA,QAAUvqB,KAAKsjE,SAC5BzR,MAAM7xD,KAAKw5B,WAAW11B,QACtBshE,YACG7X,GAAKwV,IAAA1/D,EAAA,OAAG,CACZw1B,IAAAA,EACAonC,OAAQ50C,EAAAA,QAAI02C,eAAer6D,WAAWqhD,EAAexiD,YACrDuhB,KAAM9nB,KAAK8nB,MAAIi7C,IAAAv8D,EAAA,SAAGxG,KAAK8nB,KAAKqF,gBAAa41C,IAAAv8D,EAAA,SAAG,QAG9C,GAFEu8D,IAAA1/D,EAAA,OAGA0/D,IAAAv8D,EAAA,SAAoB,OAApBxG,KAAKujE,aAAmBR,IAAAv8D,EAAA,cACW,IAA5BxG,KAAKujE,WAAWhD,WAAuBwC,IAAAv8D,EAAA,cACX,IAA5BxG,KAAKujE,WAAW/C,SAEvB,MADAuC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACM,IAAI8J,MACR,0EAEH41D,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAEGgiE,EAAYrlE,KAAKujE,WAAWhD,UAAUwC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACxCrD,KAAKujE,WAAWhD,QAAUvgE,KAAKujE,WAAWhD,QAAQ35C,UAAY,KAC/Dm8C,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACGgiE,EAAYrlE,KAAKujE,WAAW/C,UAAUuC,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACxCrD,KAAKujE,WAAW/C,QAAUxgE,KAAKujE,WAAW/C,QAAQ55C,UAAY,KAC/Dm8C,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAEDrD,KAAKujE,WAAWhD,QAAUt+D,EAAAA,cAAcyF,WACtC1H,KAAKujE,WAAWhD,QAAQh6D,YACxBw8D,IAAA1/D,EAAA,OACFrD,KAAKujE,WAAW/C,QAAUv+D,EAAAA,cAAcyF,WACtC1H,KAAKujE,WAAW/C,QAAQj6D,YAG1B,IAAMqhC,GAAUm7B,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIi6C,WAAWtlE,KAAKujE,aAE3C,GAFuDR,IAAA1/D,EAAA,OAEnDrD,KAAKulE,qBAAsB,CAAAxC,IAAAv8D,EAAA,SAC7B,IAAIi6D,GAAYsC,IAAA1/D,EAAA,OAAG,MAAK0/D,IAAA1/D,EAAA,OACE,OAAtBrD,KAAKwjE,cAAuBT,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAC9Bo9D,EAAe,IAAIp1C,EAAAA,QAAIm6C,aAAaxlE,KAAKwjE,eAC1CT,IAAAv8D,EAAA,SAED,IAAIs6D,GAASiC,IAAA1/D,EAAA,OAAG0/D,IAAAv8D,EAAA,SAAAxG,KAAKyjE,qBAAkBV,IAAAv8D,EAAA,SAAI,MAAIu8D,IAAA1/D,EAAA,OAC/Cy9D,EAAYz1C,EAAAA,QAAI02C,eAAer6D,WAAWo5D,GAE1C,IAAMG,GAAS8B,IAAA1/D,EAAA,OAAGpB,EAAAA,cAAcyF,WACC,OAA/B1H,KAAK0jE,uBAA8BX,IAAAv8D,EAAA,SAC/BxG,KAAK0jE,sBAAsBn9D,aAAUw8D,IAAAv8D,EAAA,SACrC,OAGA26D,GAAe4B,IAAA1/D,EAAA,OAAG0/D,IAAAv8D,EAAA,SAAAxG,KAAK2jE,8BAA2BZ,IAAAv8D,EAAA,SAAI,IAEtD66D,GAAY0B,IAAA1/D,EAAA,OACM,OAAtBrD,KAAKqhE,cAAqB0B,IAAAv8D,EAAA,SACtBxG,KAAKqhE,aAAap+C,IAAIi1C,EAAAA,UAAUuN,iBAAc1C,IAAAv8D,EAAA,SAC9C,KAAGu8D,IAAA1/D,EAAA,OAETkqD,EAAM6S,KAAO/0C,EAAAA,QAAIk5C,cAAc58B,UAC7B,IAAItc,EAAAA,QAAIq6C,gBAAgB,CACtB99B,WAAAA,EACA64B,aAAAA,EACAK,UAAAA,EACAG,UAAAA,EACAE,gBAAAA,EACAE,aAAAA,IAGN,MAAO0B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OACLkqD,EAAM6S,KAAO/0C,EAAAA,QAAIk5C,cAAc78B,YAAYE,GAC5Cm7B,IAAA1/D,EAAA,OAEDkqD,EAAMF,eAAgBzE,EAAAA,EAAAA,6BAA4B5oD,KAAKwe,OAAOyL,aAI9D84C,IAAA1/D,EAAA,OACIrD,KAAK6nC,aAAak7B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAEpBkqD,EAAMmI,IAAM,IAAIrqC,EAAAA,QAAIm5C,eAAe,EAAGxkE,KAAK6nC,eACtCk7B,IAAAv8D,EAAA,SAAAu8D,IAAA1/D,EAAA,OAELkqD,EAAMmI,IAAM,IAAIrqC,EAAAA,QAAIm5C,eAAe,EAAGn5C,EAAAA,QAAI5oB,OAG5C,IAAMkjE,GAAG5C,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIkO,YAAYg0B,IAAOwV,IAAA1/D,EAAA,OACvCsiE,EAAInsC,WAAWx5B,KAAKw5B,YACpB,IAAMb,GAAUoqC,IAAA1/D,EAAA,OAAG,IAAIgoB,EAAAA,QAAIkN,oBAAoBS,eAC7C,IAAI3N,EAAAA,QAAIu2C,sBAAsB,CAAEhpC,GAAI+sC,MAGhC/sC,GAAEmqC,IAAA1/D,EAAA,OAAG,IAAIk2B,EAAAA,YAAYZ,EAAY34B,KAAKysB,oBAI5C,OAJ+Ds2C,IAAA1/D,EAAA,OAE/DrD,KAAKwe,OAAOwqC,0BAA0B+Z,IAAA1/D,EAAA,OAE/Bu1B,CACT,GAAC,CAAAhkB,IAAA,qBAAApM,MAED,WACE,OADmBu6D,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OAEjB0/D,IAAAv8D,EAAA,SAAsB,OAAtBxG,KAAKwjE,eAAqBT,IAAAv8D,EAAA,SACE,OAA5BxG,KAAKyjE,sBAA2BV,IAAAv8D,EAAA,SACD,OAA/BxG,KAAK0jE,yBAA8BX,IAAAv8D,EAAA,SACE,OAArCxG,KAAK2jE,+BACJZ,IAAAv8D,EAAA,SAAsB,OAAtBxG,KAAKqhE,eAAqB0B,IAAAv8D,EAAA,SAAIxG,KAAKqhE,aAAav9D,OAAS,GAE9D,MA1oBUyQ,EAAApV,EAAAU,UAAAR,GAAAD,GAAAmV,EAAApV,EAAAC,GAAAa,OAAA4O,eAAA1P,EAAA,aAAA4T,UAAA,IAAA5T,EAAA,IAAAA,EAAAE,EAAAD,CAowBT,CAtpB4B,GA8pBxB,SAASimE,EAAY/lE,GAG1B,OAH6ByjE,IAAAz/D,EAAA,MAAAy/D,IAAA1/D,EAAA,OAGtB0/D,IAAAv8D,EAAA,SAAAlH,aAAaqnB,OAAIo8C,IAAAv8D,EAAA,UAAKoN,MAAMtU,GACrC,qrBChxBY,OAAAsmE,EAAA,kBAAA/7C,CAAA,EAAAA,CAAA,CAAA+7C,IAbZ,IAAMr7C,GAASq7C,IAAAviE,EAAA,KAAGwiE,EAAAA,QAAgBhzC,SAAQ+yC,IAAAviE,EAAA,KAE1CknB,EAAUu7C,OAAQ,EAElB,wvDCSY,OAAAC,EAAA,kBAAAl8C,CAAA,EAAAA,CAAA,CAfL,SAAS01C,EAAenoD,EAAUD,GACvC,GAD+C4uD,IAAAziE,EAAA,KAAAyiE,IAAA1iE,EAAA,KAC3C+T,EAAStT,SAAWqT,EAAOrT,OAC7B,OADqCiiE,IAAAv/D,EAAA,QAAAu/D,IAAA1iE,EAAA,MAC9B,EAGT,GAFC0iE,IAAAv/D,EAAA,QAAAu/D,IAAA1iE,EAAA,KAEuB,IAApB+T,EAAStT,OACX,OADyBiiE,IAAAv/D,EAAA,QAAAu/D,IAAA1iE,EAAA,MAClB,EACR0iE,IAAAv/D,EAAA,QAAAu/D,IAAA1iE,EAAA,KAED,IAAK,IAAI7D,GAACumE,IAAA1iE,EAAA,KAAG,GAAG7D,EAAI4X,EAAStT,OAAQtE,GAAK,EAAG,CAC3C,GAD2CumE,IAAA1iE,EAAA,KACvC+T,EAAS5X,KAAO2X,EAAO3X,GACzB,OAD6BumE,IAAAv/D,EAAA,QAAAu/D,IAAA1iE,EAAA,MACtB,EACR0iE,IAAAv/D,EAAA,OACH,CAEA,OAFCu/D,IAAA1iE,EAAA,MAEM,CACT,sCADY0iE,qtGCAA,OAAAC,EAAA,kBAAAn8C,CAAA,EAAAA,CAAA,UAAAvG,EAAAjkB,EAAAF,GAAA,gBAAAE,GAAA,GAAAe,MAAAoD,QAAAnE,GAAA,OAAAA,CAAA,CAAAmkB,CAAAnkB,IAAA,SAAAA,EAAAwG,GAAA,IAAAzG,EAAA,MAAAC,EAAA,yBAAAgO,QAAAhO,EAAAgO,OAAAiH,WAAAjV,EAAA,uBAAAD,EAAA,KAAAD,EAAAM,EAAAD,EAAAoD,EAAA+B,EAAA,GAAArB,GAAA,EAAAF,GAAA,SAAA5D,GAAAJ,EAAAA,EAAAW,KAAAV,IAAAokB,KAAA,IAAA5d,EAAA,IAAA5F,OAAAb,KAAAA,EAAA,OAAAkE,GAAA,cAAAA,GAAAnE,EAAAK,EAAAO,KAAAX,IAAAskB,QAAA/e,EAAAsI,KAAA9N,EAAAqJ,OAAA7D,EAAAb,SAAA+B,GAAAvC,GAAA,UAAAjE,GAAA+D,GAAA,EAAA3D,EAAAJ,CAAA,iBAAAiE,GAAA,MAAAlE,EAAA,SAAAwD,EAAAxD,EAAA,SAAAa,OAAA2C,KAAAA,GAAA,kBAAAQ,EAAA,MAAA3D,CAAA,SAAAkF,CAAA,EAAAif,CAAAvkB,EAAAF,IAAA,SAAAE,EAAAsF,GAAA,GAAAtF,EAAA,qBAAAA,EAAA,OAAAykB,EAAAzkB,EAAAsF,GAAA,IAAAvF,EAAA,GAAAmH,SAAAxG,KAAAV,GAAAgI,MAAA,uBAAAjI,GAAAC,EAAA6D,cAAA9D,EAAAC,EAAA6D,YAAAuE,MAAA,QAAArI,GAAA,QAAAA,EAAAgB,MAAAuD,KAAAtE,GAAA,cAAAD,GAAA,2CAAA2kB,KAAA3kB,GAAA0kB,EAAAzkB,EAAAsF,QAAA,GAAAqf,CAAA3kB,EAAAF,IAAA,qBAAA8D,UAAA,6IAAAghB,EAAA,UAAAH,EAAAzkB,EAAAsF,IAAA,MAAAA,GAAAA,EAAAtF,EAAAyE,UAAAa,EAAAtF,EAAAyE,QAAA,QAAA3E,EAAA,EAAAM,EAAAW,MAAAuE,GAAAxF,EAAAwF,EAAAxF,IAAAM,EAAAN,GAAAE,EAAAF,GAAA,OAAAM,CAAA,CAAAumE,IAZZ,IAAMC,GAAOD,IAAA3iE,EAAA,KAAG,YAST,SAASkvD,EAAO2T,GAAWF,IAAA1iE,EAAA,KAChC,IACIqB,EACArB,EAFA0kD,GAAMge,IAAA3iE,EAAA,KAAG,IAAIknB,EAAAA,QAAU27C,IAGrBC,GAASH,IAAA3iE,EAAA,KAAG,CAChB,CAAC,IAAIknB,EAAAA,QAAU,GAAI,IAAIA,EAAAA,QAAU,IACjC,CAAC,IAAIA,EAAAA,QAAU,GAAI,IAAIA,EAAAA,QAAU,MAE/B/qB,GAACwmE,IAAA3iE,EAAA,KAAG,GAGR,IADA2iE,IAAA3iE,EAAA,OACa,CACX,GADW2iE,IAAA3iE,EAAA,KACP2kD,EAAO8J,GAAGmU,GAAU,CAAAD,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,KACtB,KACF,CAAC2iE,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,KACDsB,EAAIqjD,EAAOoe,aAAa77C,EAAAA,QAAU87C,aAAaL,IAAA3iE,EAAA,KAC/CC,EAAI0kD,EAAOse,MAAM3hE,GACjB,IAAMC,GAACohE,IAAA3iE,EAAA,KAAGsB,EAAEktD,MAAMsU,EAAU3mE,EAAI,GAAG,IAAIgrB,KAAK27C,EAAU3mE,EAAI,GAAG,KACvDkC,GAACskE,IAAA3iE,EAAA,MAAGsB,EAAEktD,MAAMsU,EAAU3mE,EAAI,GAAG,IAAIgrB,KAAK27C,EAAU3mE,EAAI,GAAG,KAC7D,GADiEwmE,IAAA3iE,EAAA,MAC7D2iE,IAAAx/D,EAAA,QAAA5B,EAAEktD,GAAGmU,KAAQD,IAAAx/D,EAAA,QAAI9E,EAAEowD,GAAGmU,IAAU,CAAAD,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MAClC,KACF,CAEA,GAFC2iE,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MACD8iE,EAAUl5D,KAAK,CAACrI,EAAGlD,IAAIskE,IAAA3iE,EAAA,MACnBC,EAAEijE,GAAG,GAAI,CAAAP,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MACX,KACF,CAAC2iE,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MACD2kD,EAAS,IAAIz9B,EAAAA,QAAU,GAAG2nC,IAAI5uD,GAAG0iE,IAAA3iE,EAAA,MACjC7D,GAAK,CACP,CACA,IAA8C4kD,EAAA9gC,GAA9C0iD,IAAA3iE,EAAA,MAAe8iE,EAAUA,EAAUriE,OAAS,IAAE,GAAvCrE,EAAC2kD,EAAA,GAAE9kD,EAAC8kD,EAAA,GAEX,GAF+C4hB,IAAA3iE,EAAA,MAE3C2iE,IAAAx/D,EAAA,QAAA/G,EAAEkyD,WAAQqU,IAAAx/D,EAAA,QAAIlH,EAAEqyD,UAClB,MAD4BqU,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MACtB,IAAI8J,MAAM,+BAGlB,OAFC64D,IAAAx/D,EAAA,QAAAw/D,IAAA3iE,EAAA,MAEM,CAAC5D,EAAE2lE,WAAY9lE,EAAE8lE,WAC1B,0+ICjCY,OAAAoB,EAAA,kBAAA38C,CAAA,EAAAA,CAAA,CAFL,SAAS++B,EAA4Bj+B,GAC1C,OADmD67C,IAAAljE,EAAA,KAAAkjE,IAAAnjE,EAAA,KAC/C8mB,EAAAA,OAAOC,yBAAyBO,IAAU67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KA2EhD,SAA2CsnB,GAAS67C,IAAAljE,EAAA,KAClD,IAAMmjE,GAAQD,IAAAnjE,EAAA,MAAG8mB,EAAAA,OAAOu8C,wBAAwB/7C,IAehD,OADA67C,IAAAnjE,EAAA,MACOgoB,EAAAA,QAAI26B,aAAaxO,oBACtB,IAAInsB,EAAAA,QAAI46B,qBAAqB,CAC3B1e,GAAIlc,EAAAA,QAAI66B,OAAOjgD,QAAQwgE,EAAS7mE,UAAU,IAC1C6rB,QAASg7C,EAAS7mE,SAAS,GAAI,KAGrC,CAhGW+mE,CAAkCh8C,KAC1C67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KAEMgoB,EAAAA,QAAI26B,aAAa5O,eACtBjtB,EAAAA,OAAOU,uBAAuBF,IAElC,CAcO,SAASyO,EAA4BuvB,GAC1C,OADwD6d,IAAAljE,EAAA,KAAAkjE,IAAAnjE,EAAA,KAEtDslD,EAAY,SAAUngD,QACtB6iB,EAAAA,QAAIu7C,cAAcpvB,sBAAsBhvC,OACxCg+D,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KA2EJ,SAA2CslD,GACzC,GADuD6d,IAAAljE,EAAA,KAAAkjE,IAAAnjE,EAAA,MACnDslD,EAAY,WAAct9B,EAAAA,QAAIu7C,cAAcxvB,iBAC9C,OADgEovB,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,MACzD+1B,EAA4BuvB,GACpC6d,IAAAhgE,EAAA,QAED,IAAMqgE,GAAKL,IAAAnjE,EAAA,MAAGslD,EAAalmB,YAC3B,OADsC+jC,IAAAnjE,EAAA,MAC/B8mB,EAAAA,OAAO28C,wBACZh9C,EAAO1a,OAAO,CAACy3D,EAAMp7C,UAAWo7C,EAAMt/B,KAAKxhC,MAAM,SAErD,CAnFWghE,CAAkCpe,KAC1C6d,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KAEM8mB,EAAAA,OAAOa,uBAAuB29B,EAAal9B,WACpD,CAUO,SAAS88B,EAAmB59B,EAAS4c,GAC1C,GAD8Ci/B,IAAAljE,EAAA,KAAAkjE,IAAAnjE,EAAA,MACzC8mB,EAAAA,OAAOE,wBAAwBM,GAClC,MAD4C67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KACtC,IAAI8J,MAAM,iDAElB,GADCq5D,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KACiB,iBAAPkkC,EACT,MAD0Bi/B,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,KACpB,IAAI8J,MAAM,wDAGlB,OAFCq5D,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,MAEMgoB,EAAAA,QAAI26B,aAAaxO,oBACtB,IAAInsB,EAAAA,QAAI46B,qBAAqB,CAC3B1e,GAAIlc,EAAAA,QAAI66B,OAAOx+C,WAAW6/B,GAC1B9b,QAAStB,EAAAA,OAAOU,uBAAuBF,KAG7C,CAOO,SAASm+B,EAAmBn+B,GACjC,GAD0C67C,IAAAljE,EAAA,KAAAkjE,IAAAnjE,EAAA,MACtC8mB,EAAAA,OAAOE,wBAAwBM,GACjC,OAD2C67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,MACpCsnB,EAGT,GAFC67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,OAEI8mB,EAAAA,OAAOC,yBAAyBO,GACnC,MAD6C67C,IAAAhgE,EAAA,QAAAggE,IAAAnjE,EAAA,MACvC,IAAIJ,UAAU,sCAADmM,OAAuCub,IAC3D67C,IAAAhgE,EAAA,QAED,IAAMmiD,GAAY6d,IAAAnjE,EAAA,MAAGulD,EAA4Bj+B,IACjD,OAD0D67C,IAAAnjE,EAAA,MACnD8mB,EAAAA,OAAOa,uBAAuB29B,EAAalmB,WAAWhX,UAC/D,CAvEY+6C,woCCAA,OAAAQ,EAAA,kBAAAn9C,CAAA,EAAAA,CAAA,+BAAAm9C,IAAAA,IAAA3jE,EAAA,KAfL,IAAMyrB,EAAU,SAACja,EAAOoyD,GAASD,IAAA1jE,EAAA,KACtC,IAAM4jE,GAAQF,IAAA3jE,EAAA,KAAoB,iBAAVwR,GACpB8I,GAAGqpD,IAAA3jE,EAAA,KAAG1B,OAAOkT,IAEjB,IAFwBmyD,IAAA3jE,EAAA,KAEjBsa,EAAID,SAASupD,IAAOD,IAAA3jE,EAAA,KACzBsa,EAAMA,EAAItW,MAAM,GAAI,GAGtB,OAFC2/D,IAAA3jE,EAAA,KAEM6jE,GAAQF,IAAAxgE,EAAA,QAAGqB,OAAO8V,KAAIqpD,IAAAxgE,EAAA,QAAGmX,EAClC,6hBCMY,OAAAwpD,EAAA,kBAAAt9C,CAAA,EAAAA,CAAA,CAAAs9C,IAbZ,QAAe97C,EAAG,mECOlB,IAAI+7C,EAAU,SAAUC,EAAUC,GAKhC,OAJAA,IAAaA,EAAW,CAAC,GACzBD,EAAS3zD,MAAM,IAAIqF,SAAQ,SAAUjW,EAAGtD,GAChCsD,KAAKwkE,IAAWA,EAASxkE,GAAKtD,EACtC,IACO8nE,CACT,EAOIC,EAAU,CACZF,SAAU,mCACVD,QAAS,CACP,EAAG,GACH,EAAG,IAIPG,EAAQH,QAAUA,EAAQG,EAAQF,SAAUE,EAAQH,SAOpD,IAAII,EAAY,CACdH,SAAU,mCACVD,QAAS,CACP7mE,EAAG,EACHQ,EAAG,EACHS,EAAG,IAIPgmE,EAAUJ,QAAUA,EAAQI,EAAUH,SAAUG,EAAUJ,SAO1D,IAAIK,EAAY,CACdJ,SAAU,mCACVD,QAAS,CAAC,GAeZ,SAASM,EAASjmD,GAKhB,GAJAzhB,KAAK2nE,IAAM,GACX3nE,KAAKwb,MAAQ,EACbxb,KAAK4nE,MAAQ,EAETnmD,EAAS,CAEX,OAAQA,EAAQ7T,MACd,IAAK,UACH5N,KAAKonE,QAAUjnE,EAAQonE,QAAQH,QAC/B,MACF,IAAK,YACHpnE,KAAKonE,QAAUjnE,EAAQqnE,UAAUJ,QACjC,MACF,IAAK,YACHpnE,KAAKonE,QAAUjnE,EAAQsnE,UAAUL,QACjC,MACF,QACE,MAAM,IAAIj6D,MAAM,gBAGhBsU,EAAQ2lD,UAASpnE,KAAKonE,QAAU3lD,EAAQ2lD,QAC9C,CACF,CAyFA,SAASS,EAASpmD,GAKhB,GAJAzhB,KAAK2nE,IAAM,GACX3nE,KAAKwb,MAAQ,EACbxb,KAAK4nE,MAAQ,EAETnmD,EAAS,CAEX,OAAQA,EAAQ7T,MACd,IAAK,UACH5N,KAAKqnE,SAAWlnE,EAAQonE,QAAQF,SAChC,MACF,IAAK,YACHrnE,KAAKqnE,SAAWlnE,EAAQqnE,UAAUH,SAClC,MACF,IAAK,YACHrnE,KAAKqnE,SAAWlnE,EAAQsnE,UAAUJ,SAClC,MACF,QACE,MAAM,IAAIl6D,MAAM,gBAGhBsU,EAAQ4lD,SAAUrnE,KAAKqnE,SAAW5lD,EAAQ4lD,SACrC5lD,EAAQqmD,KAAI9nE,KAAKqnE,SAAWrnE,KAAKqnE,SAASr5D,cACrD,CACF,CApJAy5D,EAAUL,QAAUA,EAAQK,EAAUJ,SAAUI,EAAUL,SAyC1DM,EAAQ7nE,UAAUunE,QAAUG,EAAQH,QASpCM,EAAQ7nE,UAAUuF,MAAQ,SAAUuY,GAClC,IAAIypD,EAAUpnE,KAAKonE,QACfO,EAAM3nE,KAAK2nE,IACXnsD,EAAQxb,KAAKwb,MACbosD,EAAQ5nE,KAAK4nE,MAsCjB,OAnCAjqD,EAAIoqD,cAAcr0D,MAAM,IAAIqF,SAAQ,SAAUkuD,GAG5C,GAAY,KAARA,EAAJ,CAGA,IAAIe,EAAyB,IAAhBZ,EAAQH,IAUrBzrD,GAAS,GACG,EACVosD,GAASI,GAAUxsD,EACVA,EAAQ,GACjBmsD,EAAI16D,KAAK26D,EAASI,IAAWxsD,GAE7BosD,EAASI,IADTxsD,GAAS,GACmB,MAE5BmsD,EAAI16D,KAAK26D,EAAQI,GACjBxsD,EAAQ,EACRosD,EAAQ,EAvBa,CAyBzB,IAGA5nE,KAAKwb,MAAQA,EACbxb,KAAK4nE,MAAQA,EAGN5nE,IACT,EASA0nE,EAAQ7nE,UAAUqF,SAAW,SAAUyY,GASrC,OARIA,GACF3d,KAAKoF,MAAMuY,GAEM,IAAf3d,KAAKwb,OAA8B,IAAfxb,KAAK4nE,QAC3B5nE,KAAK2nE,IAAI16D,KAAKjN,KAAK4nE,OACnB5nE,KAAKwb,MAAQ,EACbxb,KAAK4nE,MAAQ,GAER5nE,KAAK2nE,GACd,EA0CAE,EAAQhoE,UAAUwnE,SAAWE,EAAQF,SASrCQ,EAAQhoE,UAAUuF,MAAQ,SAAUuiE,GAClC,IAEIK,EACAxhB,EACAhnD,EAJAgc,EAAQxb,KAAKwb,MACbosD,EAAQ5nE,KAAK4nE,MAMjB,IAAKpoE,EAAI,EAAGA,EAAImoE,EAAI7jE,OAAQtE,IAW1BwoE,EAASJ,GAVTphB,EAAOmhB,EAAInoE,KAUegc,EAC1Bxb,KAAK2nE,KAAO3nE,KAAKqnE,SAAkB,GAATW,GAEtBxsD,EAAQ,IAEVwsD,EAASxhB,IADThrC,GAAS,GAETxb,KAAK2nE,KAAO3nE,KAAKqnE,SAAkB,GAATW,IAI5BJ,EAAQphB,IADRhrC,EAAQ,EAAIA,GAEZA,EAAQ,EAAIA,EAQd,OAJAxb,KAAKwb,MAAQA,EACbxb,KAAK4nE,MAAQA,EAGN5nE,IACT,EASA6nE,EAAQhoE,UAAUqF,SAAW,SAAUyiE,GASrC,OARIA,GACF3nE,KAAKoF,MAAMuiE,GAEM,IAAf3nE,KAAKwb,QACPxb,KAAK2nE,KAAO3nE,KAAKqnE,SAAsB,GAAbrnE,KAAK4nE,OAC/B5nE,KAAKwb,MAAQ,EACbxb,KAAK4nE,MAAQ,GAER5nE,KAAK2nE,GACd,EAUAxnE,EAAQ8nE,OAAS,SAAUN,EAAKlmD,GAC9B,OAAO,IAAIomD,EAAQpmD,GAASvc,SAASyiE,EACvC,EAUAxnE,EAAQu6D,OAAS,SAAU/8C,EAAK8D,GAC9B,OAAO,IAAIimD,EAAQjmD,GAASvc,SAASyY,EACvC,EAGAxd,EAAQunE,QAAUA,EAClBvnE,EAAQ0nE,QAAUA,EAClB1nE,EAAQinE,QAAUA,EAClBjnE,EAAQqnE,UAAYA,EACpBrnE,EAAQonE,QAAUA,EAClBpnE,EAAQsnE,UAAYA,4DCrTpBtnE,EAAQiI,WAuCR,SAAqB8/D,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,CAClD,EA3CAnoE,EAAQ2M,YAiDR,SAAsBo7D,GACpB,IAAIK,EAcA/oE,EAbA2oE,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvB5kD,EAAM,IAAIilD,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,CAClD,CAQoBG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGV1lD,EAAMslD,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAK7oE,EAAI,EAAGA,EAAIwjB,EAAKxjB,GAAK,EACxB+oE,EACGI,EAAUT,EAAIn7D,WAAWvN,KAAO,GAChCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,KAAO,GACpCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,KAAO,EACrCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,IAC/B+jB,EAAImlD,KAAcH,GAAO,GAAM,IAC/BhlD,EAAImlD,KAAcH,GAAO,EAAK,IAC9BhlD,EAAImlD,KAAmB,IAANH,EAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIn7D,WAAWvN,KAAO,EAChCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,KAAO,EACvC+jB,EAAImlD,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGI,EAAUT,EAAIn7D,WAAWvN,KAAO,GAChCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,KAAO,EACpCmpE,EAAUT,EAAIn7D,WAAWvN,EAAI,KAAO,EACvC+jB,EAAImlD,KAAcH,GAAO,EAAK,IAC9BhlD,EAAImlD,KAAmB,IAANH,GAGnB,OAAOhlD,CACT,EA5FApjB,EAAQ6M,cAkHR,SAAwB47D,GAQtB,IAPA,IAAIL,EACAvlD,EAAM4lD,EAAM9kE,OACZ+kE,EAAa7lD,EAAM,EACnB8lD,EAAQ,GACRC,EAAiB,MAGZvpE,EAAI,EAAGwpE,EAAOhmD,EAAM6lD,EAAYrpE,EAAIwpE,EAAMxpE,GAAKupE,EACtDD,EAAM77D,KAAKg8D,EAAYL,EAAOppE,EAAIA,EAAIupE,EAAkBC,EAAOA,EAAQxpE,EAAIupE,IAI1D,IAAfF,GACFN,EAAMK,EAAM5lD,EAAM,GAClB8lD,EAAM77D,KACJJ,EAAO07D,GAAO,GACd17D,EAAQ07D,GAAO,EAAK,IACpB,OAEsB,IAAfM,IACTN,GAAOK,EAAM5lD,EAAM,IAAM,GAAK4lD,EAAM5lD,EAAM,GAC1C8lD,EAAM77D,KACJJ,EAAO07D,GAAO,IACd17D,EAAQ07D,GAAO,EAAK,IACpB17D,EAAQ07D,GAAO,EAAK,IACpB,MAIJ,OAAOO,EAAM57D,KAAK,GACpB,EA1IA,IALA,IAAIL,EAAS,GACT87D,EAAY,GACZH,EAA4B,oBAAf1oE,WAA6BA,WAAaM,MAEvD8S,EAAO,mEACF1T,EAAI,EAAsBA,EAAb0T,KAAwB1T,EAC5CqN,EAAOrN,GAAK0T,EAAK1T,GACjBmpE,EAAUz1D,EAAKnG,WAAWvN,IAAMA,EAQlC,SAAS4oE,EAASF,GAChB,IAAIllD,EAAMklD,EAAIpkE,OAEd,GAAIkf,EAAM,EAAI,EACZ,MAAM,IAAI7V,MAAM,kDAKlB,IAAIk7D,EAAWH,EAAI96D,QAAQ,KAO3B,OANkB,IAAdi7D,IAAiBA,EAAWrlD,GAMzB,CAACqlD,EAJcA,IAAarlD,EAC/B,EACA,EAAKqlD,EAAW,EAGtB,CAmEA,SAASY,EAAaL,EAAOzlD,EAAO3D,GAGlC,IAFA,IAAI+oD,EARoBW,EASpBllB,EAAS,GACJxkD,EAAI2jB,EAAO3jB,EAAIggB,EAAKhgB,GAAK,EAChC+oE,GACIK,EAAMppE,IAAM,GAAM,WAClBopE,EAAMppE,EAAI,IAAM,EAAK,QACP,IAAfopE,EAAMppE,EAAI,IACbwkD,EAAO/2C,KAdFJ,GADiBq8D,EAeMX,IAdT,GAAK,IACxB17D,EAAOq8D,GAAO,GAAK,IACnBr8D,EAAOq8D,GAAO,EAAI,IAClBr8D,EAAa,GAANq8D,IAaT,OAAOllB,EAAO92C,KAAK,GACrB,CAlGAy7D,EAAU,IAAI57D,WAAW,IAAM,GAC/B47D,EAAU,IAAI57D,WAAW,IAAM,kHCT/B,MAAMo8D,EAAS,EAAQ,qCACjBC,EAAU,EAAQ,mCAClBC,EACe,mBAAXh8D,QAAkD,mBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENlN,EAAQ2pB,OAASA,EACjB3pB,EAAQmpE,WAyTR,SAAqBxlE,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOgmB,EAAOnqB,OAAOmE,EACvB,EA7TA3D,EAAQopE,kBAAoB,GAE5B,MAAMC,EAAe,WAwDrB,SAASC,EAAc3lE,GACrB,GAAIA,EAAS0lE,EACX,MAAM,IAAIxiE,WAAW,cAAgBlD,EAAS,kCAGhD,MAAM6jE,EAAM,IAAI7nE,WAAWgE,GAE3B,OADA7D,OAAOC,eAAeynE,EAAK79C,EAAOjqB,WAC3B8nE,CACT,CAYA,SAAS79C,EAAQnV,EAAK+0D,EAAkB5lE,GAEtC,GAAmB,iBAAR6Q,EAAkB,CAC3B,GAAgC,iBAArB+0D,EACT,MAAM,IAAIzmE,UACR,sEAGJ,OAAO4B,EAAY8P,EACrB,CACA,OAAOhR,EAAKgR,EAAK+0D,EAAkB5lE,EACrC,CAIA,SAASH,EAAM6E,EAAOkhE,EAAkB5lE,GACtC,GAAqB,iBAAV0E,EACT,OAqHJ,SAAqB+D,EAAQo9D,GACH,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAK7/C,EAAOtc,WAAWm8D,GACrB,MAAM,IAAI1mE,UAAU,qBAAuB0mE,GAG7C,MAAM7lE,EAAwC,EAA/BsE,EAAWmE,EAAQo9D,GAClC,IAAIhC,EAAM8B,EAAa3lE,GAEvB,MAAMqT,EAASwwD,EAAIviE,MAAMmH,EAAQo9D,GAE7BxyD,IAAWrT,IAIb6jE,EAAMA,EAAItgE,MAAM,EAAG8P,IAGrB,OAAOwwD,CACT,CA3IWjgE,CAAWc,EAAOkhE,GAG3B,GAAIjmE,YAAYC,OAAO8E,GACrB,OAkJJ,SAAwBohE,GACtB,GAAIC,EAAWD,EAAW9pE,YAAa,CACrC,MAAMmF,EAAO,IAAInF,WAAW8pE,GAC5B,OAAOE,EAAgB7kE,EAAKwI,OAAQxI,EAAKyI,WAAYzI,EAAKmD,WAC5D,CACA,OAAO2hE,EAAcH,EACvB,CAxJWI,CAAcxhE,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIvF,UACR,yHACiDuF,GAIrD,GAAIqhE,EAAWrhE,EAAO/E,cACjB+E,GAASqhE,EAAWrhE,EAAMiF,OAAQhK,aACrC,OAAOqmE,EAAgBthE,EAAOkhE,EAAkB5lE,GAGlD,GAAiC,oBAAtB6J,oBACNk8D,EAAWrhE,EAAOmF,oBAClBnF,GAASqhE,EAAWrhE,EAAMiF,OAAQE,oBACrC,OAAOm8D,EAAgBthE,EAAOkhE,EAAkB5lE,GAGlD,GAAqB,iBAAV0E,EACT,MAAM,IAAIvF,UACR,yEAIJ,MAAMgE,EAAUuB,EAAMvB,SAAWuB,EAAMvB,UACvC,GAAe,MAAXA,GAAmBA,IAAYuB,EACjC,OAAOshB,EAAOnmB,KAAKsD,EAASyiE,EAAkB5lE,GAGhD,MAAM0C,EAkJR,SAAqBqQ,GACnB,GAAIiT,EAAOvmB,SAASsT,GAAM,CACxB,MAAMmM,EAA4B,EAAtBinD,EAAQpzD,EAAI/S,QAClB6jE,EAAM8B,EAAazmD,GAEzB,OAAmB,IAAf2kD,EAAI7jE,QAIR+S,EAAI5R,KAAK0iE,EAAK,EAAG,EAAG3kD,GAHX2kD,CAKX,CAEA,QAAmB3yD,IAAf6B,EAAI/S,OACN,MAA0B,iBAAf+S,EAAI/S,QAAuB2gB,EAAY5N,EAAI/S,QAC7C2lE,EAAa,GAEfM,EAAclzD,GAGvB,GAAiB,WAAbA,EAAIjJ,MAAqBxN,MAAMoD,QAAQqT,EAAIhJ,MAC7C,OAAOk8D,EAAclzD,EAAIhJ,KAE7B,CAzKYq8D,CAAW1hE,GACrB,GAAIhC,EAAG,OAAOA,EAEd,GAAsB,oBAAX6G,QAAgD,MAAtBA,OAAOS,aACH,mBAA9BtF,EAAM6E,OAAOS,aACtB,OAAOgc,EAAOnmB,KAAK6E,EAAM6E,OAAOS,aAAa,UAAW47D,EAAkB5lE,GAG5E,MAAM,IAAIb,UACR,yHACiDuF,EAErD,CAmBA,SAAS2hE,EAAYhjE,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIlE,UAAU,0CACf,GAAIkE,EAAO,EAChB,MAAM,IAAIH,WAAW,cAAgBG,EAAO,iCAEhD,CA0BA,SAAStC,EAAasC,GAEpB,OADAgjE,EAAWhjE,GACJsiE,EAAatiE,EAAO,EAAI,EAAoB,EAAhB8iE,EAAQ9iE,GAC7C,CAuCA,SAAS4iE,EAAer9D,GACtB,MAAM5I,EAAS4I,EAAM5I,OAAS,EAAI,EAA4B,EAAxBmmE,EAAQv9D,EAAM5I,QAC9C6jE,EAAM8B,EAAa3lE,GACzB,IAAK,IAAItE,EAAI,EAAGA,EAAIsE,EAAQtE,GAAK,EAC/BmoE,EAAInoE,GAAgB,IAAXkN,EAAMlN,GAEjB,OAAOmoE,CACT,CAUA,SAASmC,EAAiBp9D,EAAOgB,EAAY5J,GAC3C,GAAI4J,EAAa,GAAKhB,EAAMtE,WAAasF,EACvC,MAAM,IAAI1G,WAAW,wCAGvB,GAAI0F,EAAMtE,WAAasF,GAAc5J,GAAU,GAC7C,MAAM,IAAIkD,WAAW,wCAGvB,IAAI2gE,EAYJ,OAVEA,OADiB3yD,IAAftH,QAAuCsH,IAAXlR,EACxB,IAAIhE,WAAW4M,QACDsI,IAAXlR,EACH,IAAIhE,WAAW4M,EAAOgB,GAEtB,IAAI5N,WAAW4M,EAAOgB,EAAY5J,GAI1C7D,OAAOC,eAAeynE,EAAK79C,EAAOjqB,WAE3B8nE,CACT,CA2BA,SAASsC,EAASnmE,GAGhB,GAAIA,GAAU0lE,EACZ,MAAM,IAAIxiE,WAAW,0DACawiE,EAAajjE,SAAS,IAAM,UAEhE,OAAgB,EAATzC,CACT,CAsGA,SAASsE,EAAYmE,EAAQo9D,GAC3B,GAAI7/C,EAAOvmB,SAASgJ,GAClB,OAAOA,EAAOzI,OAEhB,GAAIL,YAAYC,OAAO6I,IAAWs9D,EAAWt9D,EAAQ9I,aACnD,OAAO8I,EAAOnE,WAEhB,GAAsB,iBAAXmE,EACT,MAAM,IAAItJ,UACR,kGAC0BsJ,GAI9B,MAAMyW,EAAMzW,EAAOzI,OACbsmE,EAAar8D,UAAUjK,OAAS,IAAsB,IAAjBiK,UAAU,GACrD,IAAKq8D,GAAqB,IAARpnD,EAAW,OAAO,EAGpC,IAAIqnD,GAAc,EAClB,OACE,OAAQV,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO3mD,EACT,IAAK,OACL,IAAK,QACH,OAAOsnD,EAAY/9D,GAAQzI,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANkf,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOunD,EAAch+D,GAAQzI,OAC/B,QACE,GAAIumE,EACF,OAAOD,GAAa,EAAIE,EAAY/9D,GAAQzI,OAE9C6lE,GAAY,GAAKA,GAAU37D,cAC3Bq8D,GAAc,EAGtB,CAGA,SAASG,EAAcb,EAAUxmD,EAAO3D,GACtC,IAAI6qD,GAAc,EAclB,SALcr1D,IAAVmO,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQnjB,KAAK8D,OACf,MAAO,GAOT,SAJYkR,IAARwK,GAAqBA,EAAMxf,KAAK8D,UAClC0b,EAAMxf,KAAK8D,QAGT0b,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACT2D,KAAW,GAGT,MAAO,GAKT,IAFKwmD,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOc,EAASzqE,KAAMmjB,EAAO3D,GAE/B,IAAK,OACL,IAAK,QACH,OAAOkrD,EAAU1qE,KAAMmjB,EAAO3D,GAEhC,IAAK,QACH,OAAOmrD,EAAW3qE,KAAMmjB,EAAO3D,GAEjC,IAAK,SACL,IAAK,SACH,OAAOorD,EAAY5qE,KAAMmjB,EAAO3D,GAElC,IAAK,SACH,OAAOqrD,EAAY7qE,KAAMmjB,EAAO3D,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOsrD,EAAa9qE,KAAMmjB,EAAO3D,GAEnC,QACE,GAAI6qD,EAAa,MAAM,IAAIpnE,UAAU,qBAAuB0mE,GAC5DA,GAAYA,EAAW,IAAI37D,cAC3Bq8D,GAAc,EAGtB,CAUA,SAASU,EAAMvkE,EAAG/G,EAAGyG,GACnB,MAAM1G,EAAIgH,EAAE/G,GACZ+G,EAAE/G,GAAK+G,EAAEN,GACTM,EAAEN,GAAK1G,CACT,CA2IA,SAASwrE,EAAsBv9D,EAAQiR,EAAKhR,EAAYi8D,EAAUsB,GAEhE,GAAsB,IAAlBx9D,EAAO3J,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAf4J,GACTi8D,EAAWj8D,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZ+W,EADJ/W,GAAcA,KAGZA,EAAau9D,EAAM,EAAKx9D,EAAO3J,OAAS,GAItC4J,EAAa,IAAGA,EAAaD,EAAO3J,OAAS4J,GAC7CA,GAAcD,EAAO3J,OAAQ,CAC/B,GAAImnE,EAAK,OAAQ,EACZv9D,EAAaD,EAAO3J,OAAS,CACpC,MAAO,GAAI4J,EAAa,EAAG,CACzB,IAAIu9D,EACC,OAAQ,EADJv9D,EAAa,CAExB,CAQA,GALmB,iBAARgR,IACTA,EAAMoL,EAAOnmB,KAAK+a,EAAKirD,IAIrB7/C,EAAOvmB,SAASmb,GAElB,OAAmB,IAAfA,EAAI5a,QACE,EAEHonE,EAAaz9D,EAAQiR,EAAKhR,EAAYi8D,EAAUsB,GAClD,GAAmB,iBAARvsD,EAEhB,OADAA,GAAY,IACgC,mBAAjC5e,WAAWD,UAAUuN,QAC1B69D,EACKnrE,WAAWD,UAAUuN,QAAQrN,KAAK0N,EAAQiR,EAAKhR,GAE/C5N,WAAWD,UAAUoO,YAAYlO,KAAK0N,EAAQiR,EAAKhR,GAGvDw9D,EAAaz9D,EAAQ,CAACiR,GAAMhR,EAAYi8D,EAAUsB,GAG3D,MAAM,IAAIhoE,UAAU,uCACtB,CAEA,SAASioE,EAAc3nD,EAAK7E,EAAKhR,EAAYi8D,EAAUsB,GACrD,IA0BIzrE,EA1BA2rE,EAAY,EACZC,EAAY7nD,EAAIzf,OAChBunE,EAAY3sD,EAAI5a,OAEpB,QAAiBkR,IAAb20D,IAEe,UADjBA,EAAWhoE,OAAOgoE,GAAU37D,gBACY,UAAb27D,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIpmD,EAAIzf,OAAS,GAAK4a,EAAI5a,OAAS,EACjC,OAAQ,EAEVqnE,EAAY,EACZC,GAAa,EACbC,GAAa,EACb39D,GAAc,CAChB,CAGF,SAASvJ,EAAMwjE,EAAKnoE,GAClB,OAAkB,IAAd2rE,EACKxD,EAAInoE,GAEJmoE,EAAIz5D,aAAa1O,EAAI2rE,EAEhC,CAGA,GAAIF,EAAK,CACP,IAAIK,GAAc,EAClB,IAAK9rE,EAAIkO,EAAYlO,EAAI4rE,EAAW5rE,IAClC,GAAI2E,EAAKof,EAAK/jB,KAAO2E,EAAKua,GAAqB,IAAhB4sD,EAAoB,EAAI9rE,EAAI8rE,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa9rE,GAChCA,EAAI8rE,EAAa,IAAMD,EAAW,OAAOC,EAAaH,OAEtC,IAAhBG,IAAmB9rE,GAAKA,EAAI8rE,GAChCA,GAAc,CAGpB,MAEE,IADI59D,EAAa29D,EAAYD,IAAW19D,EAAa09D,EAAYC,GAC5D7rE,EAAIkO,EAAYlO,GAAK,EAAGA,IAAK,CAChC,IAAI+rE,GAAQ,EACZ,IAAK,IAAIlrE,EAAI,EAAGA,EAAIgrE,EAAWhrE,IAC7B,GAAI8D,EAAKof,EAAK/jB,EAAIa,KAAO8D,EAAKua,EAAKre,GAAI,CACrCkrE,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAO/rE,CACpB,CAGF,OAAQ,CACV,CAcA,SAASgsE,EAAU7D,EAAKp7D,EAAQ4C,EAAQrL,GACtCqL,EAAStH,OAAOsH,IAAW,EAC3B,MAAMs8D,EAAY9D,EAAI7jE,OAASqL,EAC1BrL,GAGHA,EAAS+D,OAAO/D,IACH2nE,IACX3nE,EAAS2nE,GAJX3nE,EAAS2nE,EAQX,MAAMC,EAASn/D,EAAOzI,OAKtB,IAAItE,EACJ,IAJIsE,EAAS4nE,EAAS,IACpB5nE,EAAS4nE,EAAS,GAGflsE,EAAI,EAAGA,EAAIsE,IAAUtE,EAAG,CAC3B,MAAMmsE,EAASv9D,SAAS7B,EAAO8B,OAAW,EAAJ7O,EAAO,GAAI,IACjD,GAAIilB,EAAYknD,GAAS,OAAOnsE,EAChCmoE,EAAIx4D,EAAS3P,GAAKmsE,CACpB,CACA,OAAOnsE,CACT,CAEA,SAASosE,EAAWjE,EAAKp7D,EAAQ4C,EAAQrL,GACvC,OAAO+nE,EAAWvB,EAAY/9D,EAAQo7D,EAAI7jE,OAASqL,GAASw4D,EAAKx4D,EAAQrL,EAC3E,CAEA,SAASgoE,EAAYnE,EAAKp7D,EAAQ4C,EAAQrL,GACxC,OAAO+nE,EAypCT,SAAuBluD,GACrB,MAAMouD,EAAY,GAClB,IAAK,IAAIvsE,EAAI,EAAGA,EAAIme,EAAI7Z,SAAUtE,EAEhCusE,EAAU9+D,KAAyB,IAApB0Q,EAAI5Q,WAAWvN,IAEhC,OAAOusE,CACT,CAhqCoBC,CAAaz/D,GAASo7D,EAAKx4D,EAAQrL,EACvD,CAEA,SAASmoE,EAAatE,EAAKp7D,EAAQ4C,EAAQrL,GACzC,OAAO+nE,EAAWtB,EAAch+D,GAASo7D,EAAKx4D,EAAQrL,EACxD,CAEA,SAASooE,EAAWvE,EAAKp7D,EAAQ4C,EAAQrL,GACvC,OAAO+nE,EA0pCT,SAAyBluD,EAAKwuD,GAC5B,IAAIrpE,EAAGgnD,EAAID,EACX,MAAMkiB,EAAY,GAClB,IAAK,IAAIvsE,EAAI,EAAGA,EAAIme,EAAI7Z,WACjBqoE,GAAS,GAAK,KADa3sE,EAGhCsD,EAAI6a,EAAI5Q,WAAWvN,GACnBsqD,EAAKhnD,GAAK,EACV+mD,EAAK/mD,EAAI,IACTipE,EAAU9+D,KAAK48C,GACfkiB,EAAU9+D,KAAK68C,GAGjB,OAAOiiB,CACT,CAxqCoBK,CAAe7/D,EAAQo7D,EAAI7jE,OAASqL,GAASw4D,EAAKx4D,EAAQrL,EAC9E,CA8EA,SAAS+mE,EAAalD,EAAKxkD,EAAO3D,GAChC,OAAc,IAAV2D,GAAe3D,IAAQmoD,EAAI7jE,OACtBqlE,EAAOn8D,cAAc26D,GAErBwB,EAAOn8D,cAAc26D,EAAItgE,MAAM8b,EAAO3D,GAEjD,CAEA,SAASkrD,EAAW/C,EAAKxkD,EAAO3D,GAC9BA,EAAMza,KAAKuJ,IAAIq5D,EAAI7jE,OAAQ0b,GAC3B,MAAMvK,EAAM,GAEZ,IAAIzV,EAAI2jB,EACR,KAAO3jB,EAAIggB,GAAK,CACd,MAAM6sD,EAAY1E,EAAInoE,GACtB,IAAI8sE,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAI7sE,EAAI+sE,GAAoB/sD,EAAK,CAC/B,IAAIgtD,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAa7E,EAAInoE,EAAI,GACO,MAAV,IAAbgtE,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAa7E,EAAInoE,EAAI,GACrBitE,EAAY9E,EAAInoE,EAAI,GACQ,MAAV,IAAbgtE,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAa7E,EAAInoE,EAAI,GACrBitE,EAAY9E,EAAInoE,EAAI,GACpBktE,EAAa/E,EAAInoE,EAAI,GACO,MAAV,IAAbgtE,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbr3D,EAAIhI,KAAKq/D,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBr3D,EAAIhI,KAAKq/D,GACT9sE,GAAK+sE,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAM5pD,EAAM4pD,EAAW9oE,OACvB,GAAIkf,GAAO6pD,EACT,OAAOlrE,OAAO4M,aAAaC,MAAM7M,OAAQirE,GAI3C,IAAI33D,EAAM,GACNzV,EAAI,EACR,KAAOA,EAAIwjB,GACT/N,GAAOtT,OAAO4M,aAAaC,MACzB7M,OACAirE,EAAWvlE,MAAM7H,EAAGA,GAAKqtE,IAG7B,OAAO53D,CACT,CAxBS63D,CAAsB73D,EAC/B,CA3+BA9U,EAAQ4sE,WAAavD,EAgBrB1/C,EAAOrb,oBAUP,WAEE,IACE,MAAM8U,EAAM,IAAIzjB,WAAW,GACrBktE,EAAQ,CAAEt+D,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFAzO,OAAOC,eAAe8sE,EAAOltE,WAAWD,WACxCI,OAAOC,eAAeqjB,EAAKypD,GACN,KAAdzpD,EAAI7U,KACb,CAAE,MAAOvP,GACP,OAAO,CACT,CACF,CArB6B8tE,GAExBnjD,EAAOrb,0BAA0C,IAAZE,GACb,mBAAlBA,EAAQC,OACjBD,EAAQC,MACN,iJAkBJ3O,OAAO4O,eAAeib,EAAOjqB,UAAW,SAAU,CAChDiP,YAAY,EACZ/E,IAAK,WACH,GAAK+f,EAAOvmB,SAASvD,MACrB,OAAOA,KAAKyN,MACd,IAGFxN,OAAO4O,eAAeib,EAAOjqB,UAAW,SAAU,CAChDiP,YAAY,EACZ/E,IAAK,WACH,GAAK+f,EAAOvmB,SAASvD,MACrB,OAAOA,KAAK0N,UACd,IAoCFoc,EAAO/a,SAAW,KA8DlB+a,EAAOnmB,KAAO,SAAU6E,EAAOkhE,EAAkB5lE,GAC/C,OAAOH,EAAK6E,EAAOkhE,EAAkB5lE,EACvC,EAIA7D,OAAOC,eAAe4pB,EAAOjqB,UAAWC,WAAWD,WACnDI,OAAOC,eAAe4pB,EAAQhqB,YA8B9BgqB,EAAOnqB,MAAQ,SAAUwH,EAAM9B,EAAMskE,GACnC,OArBF,SAAgBxiE,EAAM9B,EAAMskE,GAE1B,OADAQ,EAAWhjE,GACPA,GAAQ,EACHsiE,EAAatiE,QAET6N,IAAT3P,EAIyB,iBAAbskE,EACVF,EAAatiE,GAAM9B,KAAKA,EAAMskE,GAC9BF,EAAatiE,GAAM9B,KAAKA,GAEvBokE,EAAatiE,EACtB,CAOSxH,CAAMwH,EAAM9B,EAAMskE,EAC3B,EAUA7/C,EAAOjlB,YAAc,SAAUsC,GAC7B,OAAOtC,EAAYsC,EACrB,EAIA2iB,EAAO9a,gBAAkB,SAAU7H,GACjC,OAAOtC,EAAYsC,EACrB,EA6GA2iB,EAAOvmB,SAAW,SAAmBiD,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEyI,WACpBzI,IAAMsjB,EAAOjqB,SACjB,EAEAiqB,EAAO5a,QAAU,SAAkBvK,EAAG6B,GAGpC,GAFIqjE,EAAWllE,EAAG7E,cAAa6E,EAAImlB,EAAOnmB,KAAKgB,EAAGA,EAAEwK,OAAQxK,EAAEyD,aAC1DyhE,EAAWrjE,EAAG1G,cAAa0G,EAAIsjB,EAAOnmB,KAAK6C,EAAGA,EAAE2I,OAAQ3I,EAAE4B,cACzD0hB,EAAOvmB,SAASoB,KAAOmlB,EAAOvmB,SAASiD,GAC1C,MAAM,IAAIvD,UACR,yEAIJ,GAAI0B,IAAM6B,EAAG,OAAO,EAEpB,IAAIwB,EAAIrD,EAAEb,OACNkC,EAAIQ,EAAE1C,OAEV,IAAK,IAAItE,EAAI,EAAGwjB,EAAMje,KAAKuJ,IAAItG,EAAGhC,GAAIxG,EAAIwjB,IAAOxjB,EAC/C,GAAImF,EAAEnF,KAAOgH,EAAEhH,GAAI,CACjBwI,EAAIrD,EAAEnF,GACNwG,EAAIQ,EAAEhH,GACN,KACF,CAGF,OAAIwI,EAAIhC,GAAW,EACfA,EAAIgC,EAAU,EACX,CACT,EAEA8hB,EAAOtc,WAAa,SAAqBm8D,GACvC,OAAQhoE,OAAOgoE,GAAU37D,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEA8b,EAAO1a,OAAS,SAAiB89D,EAAMppE,GACrC,IAAK1D,MAAMoD,QAAQ0pE,GACjB,MAAM,IAAIjqE,UAAU,+CAGtB,GAAoB,IAAhBiqE,EAAKppE,OACP,OAAOgmB,EAAOnqB,MAAM,GAGtB,IAAIH,EACJ,QAAewV,IAAXlR,EAEF,IADAA,EAAS,EACJtE,EAAI,EAAGA,EAAI0tE,EAAKppE,SAAUtE,EAC7BsE,GAAUopE,EAAK1tE,GAAGsE,OAItB,MAAM2J,EAASqc,EAAOjlB,YAAYf,GAClC,IAAI4X,EAAM,EACV,IAAKlc,EAAI,EAAGA,EAAI0tE,EAAKppE,SAAUtE,EAAG,CAChC,IAAImoE,EAAMuF,EAAK1tE,GACf,GAAIqqE,EAAWlC,EAAK7nE,YACd4b,EAAMisD,EAAI7jE,OAAS2J,EAAO3J,QACvBgmB,EAAOvmB,SAASokE,KAAMA,EAAM79C,EAAOnmB,KAAKgkE,IAC7CA,EAAI1iE,KAAKwI,EAAQiO,IAEjB5b,WAAWD,UAAU2J,IAAIzJ,KACvB0N,EACAk6D,EACAjsD,OAGC,KAAKoO,EAAOvmB,SAASokE,GAC1B,MAAM,IAAI1kE,UAAU,+CAEpB0kE,EAAI1iE,KAAKwI,EAAQiO,EACnB,CACAA,GAAOisD,EAAI7jE,MACb,CACA,OAAO2J,CACT,EAiDAqc,EAAO1hB,WAAaA,EA8EpB0hB,EAAOjqB,UAAUoP,WAAY,EAQ7B6a,EAAOjqB,UAAUwP,OAAS,WACxB,MAAM2T,EAAMhjB,KAAK8D,OACjB,GAAIkf,EAAM,GAAM,EACd,MAAM,IAAIhc,WAAW,6CAEvB,IAAK,IAAIxH,EAAI,EAAGA,EAAIwjB,EAAKxjB,GAAK,EAC5BurE,EAAK/qE,KAAMR,EAAGA,EAAI,GAEpB,OAAOQ,IACT,EAEA8pB,EAAOjqB,UAAUyP,OAAS,WACxB,MAAM0T,EAAMhjB,KAAK8D,OACjB,GAAIkf,EAAM,GAAM,EACd,MAAM,IAAIhc,WAAW,6CAEvB,IAAK,IAAIxH,EAAI,EAAGA,EAAIwjB,EAAKxjB,GAAK,EAC5BurE,EAAK/qE,KAAMR,EAAGA,EAAI,GAClBurE,EAAK/qE,KAAMR,EAAI,EAAGA,EAAI,GAExB,OAAOQ,IACT,EAEA8pB,EAAOjqB,UAAU0P,OAAS,WACxB,MAAMyT,EAAMhjB,KAAK8D,OACjB,GAAIkf,EAAM,GAAM,EACd,MAAM,IAAIhc,WAAW,6CAEvB,IAAK,IAAIxH,EAAI,EAAGA,EAAIwjB,EAAKxjB,GAAK,EAC5BurE,EAAK/qE,KAAMR,EAAGA,EAAI,GAClBurE,EAAK/qE,KAAMR,EAAI,EAAGA,EAAI,GACtBurE,EAAK/qE,KAAMR,EAAI,EAAGA,EAAI,GACtBurE,EAAK/qE,KAAMR,EAAI,EAAGA,EAAI,GAExB,OAAOQ,IACT,EAEA8pB,EAAOjqB,UAAU0G,SAAW,WAC1B,MAAMzC,EAAS9D,KAAK8D,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBiK,UAAUjK,OAAqB4mE,EAAU1qE,KAAM,EAAG8D,GAC/C0mE,EAAah8D,MAAMxO,KAAM+N,UAClC,EAEA+b,EAAOjqB,UAAU2P,eAAiBsa,EAAOjqB,UAAU0G,SAEnDujB,EAAOjqB,UAAU4P,OAAS,SAAiBjJ,GACzC,IAAKsjB,EAAOvmB,SAASiD,GAAI,MAAM,IAAIvD,UAAU,6BAC7C,OAAIjD,OAASwG,GACsB,IAA5BsjB,EAAO5a,QAAQlP,KAAMwG,EAC9B,EAEAsjB,EAAOjqB,UAAU6P,QAAU,WACzB,IAAIiO,EAAM,GACV,MAAM4C,EAAMpgB,EAAQopE,kBAGpB,OAFA5rD,EAAM3d,KAAKuG,SAAS,MAAO,EAAGga,GAAK5Q,QAAQ,UAAW,OAAOC,OACzD5P,KAAK8D,OAASyc,IAAK5C,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACI0rD,IACFv/C,EAAOjqB,UAAUwpE,GAAuBv/C,EAAOjqB,UAAU6P,SAG3Doa,EAAOjqB,UAAUqP,QAAU,SAAkBsF,EAAQ2O,EAAO3D,EAAK2tD,EAAWC,GAI1E,GAHIvD,EAAWr1D,EAAQ1U,cACrB0U,EAASsV,EAAOnmB,KAAK6Q,EAAQA,EAAOrF,OAAQqF,EAAOpM,cAEhD0hB,EAAOvmB,SAASiR,GACnB,MAAM,IAAIvR,UACR,wFAC2BuR,GAiB/B,QAbcQ,IAAVmO,IACFA,EAAQ,QAEEnO,IAARwK,IACFA,EAAMhL,EAASA,EAAO1Q,OAAS,QAEfkR,IAAdm4D,IACFA,EAAY,QAEEn4D,IAAZo4D,IACFA,EAAUptE,KAAK8D,QAGbqf,EAAQ,GAAK3D,EAAMhL,EAAO1Q,QAAUqpE,EAAY,GAAKC,EAAUptE,KAAK8D,OACtE,MAAM,IAAIkD,WAAW,sBAGvB,GAAImmE,GAAaC,GAAWjqD,GAAS3D,EACnC,OAAO,EAET,GAAI2tD,GAAaC,EACf,OAAQ,EAEV,GAAIjqD,GAAS3D,EACX,OAAO,EAQT,GAAIxf,OAASwU,EAAQ,OAAO,EAE5B,IAAIxM,GAJJolE,KAAa,IADbD,KAAe,GAMXnnE,GAPJwZ,KAAS,IADT2D,KAAW,GASX,MAAMH,EAAMje,KAAKuJ,IAAItG,EAAGhC,GAElBqnE,EAAWrtE,KAAKqH,MAAM8lE,EAAWC,GACjCE,EAAa94D,EAAOnN,MAAM8b,EAAO3D,GAEvC,IAAK,IAAIhgB,EAAI,EAAGA,EAAIwjB,IAAOxjB,EACzB,GAAI6tE,EAAS7tE,KAAO8tE,EAAW9tE,GAAI,CACjCwI,EAAIqlE,EAAS7tE,GACbwG,EAAIsnE,EAAW9tE,GACf,KACF,CAGF,OAAIwI,EAAIhC,GAAW,EACfA,EAAIgC,EAAU,EACX,CACT,EA2HA8hB,EAAOjqB,UAAUgQ,SAAW,SAAmB6O,EAAKhR,EAAYi8D,GAC9D,OAAoD,IAA7C3pE,KAAKoN,QAAQsR,EAAKhR,EAAYi8D,EACvC,EAEA7/C,EAAOjqB,UAAUuN,QAAU,SAAkBsR,EAAKhR,EAAYi8D,GAC5D,OAAOqB,EAAqBhrE,KAAM0e,EAAKhR,EAAYi8D,GAAU,EAC/D,EAEA7/C,EAAOjqB,UAAUoO,YAAc,SAAsByQ,EAAKhR,EAAYi8D,GACpE,OAAOqB,EAAqBhrE,KAAM0e,EAAKhR,EAAYi8D,GAAU,EAC/D,EA4CA7/C,EAAOjqB,UAAUuF,MAAQ,SAAgBmH,EAAQ4C,EAAQrL,EAAQ6lE,GAE/D,QAAe30D,IAAX7F,EACFw6D,EAAW,OACX7lE,EAAS9D,KAAK8D,OACdqL,EAAS,OAEJ,QAAe6F,IAAXlR,GAA0C,iBAAXqL,EACxCw6D,EAAWx6D,EACXrL,EAAS9D,KAAK8D,OACdqL,EAAS,MAEJ,KAAIW,SAASX,GAUlB,MAAM,IAAIhC,MACR,2EAVFgC,KAAoB,EAChBW,SAAShM,IACXA,KAAoB,OACHkR,IAAb20D,IAAwBA,EAAW,UAEvCA,EAAW7lE,EACXA,OAASkR,EAMb,CAEA,MAAMy2D,EAAYzrE,KAAK8D,OAASqL,EAGhC,SAFe6F,IAAXlR,GAAwBA,EAAS2nE,KAAW3nE,EAAS2nE,GAEpDl/D,EAAOzI,OAAS,IAAMA,EAAS,GAAKqL,EAAS,IAAOA,EAASnP,KAAK8D,OACrE,MAAM,IAAIkD,WAAW,0CAGlB2iE,IAAUA,EAAW,QAE1B,IAAIU,GAAc,EAClB,OACE,OAAQV,GACN,IAAK,MACH,OAAO6B,EAASxrE,KAAMuM,EAAQ4C,EAAQrL,GAExC,IAAK,OACL,IAAK,QACH,OAAO8nE,EAAU5rE,KAAMuM,EAAQ4C,EAAQrL,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOgoE,EAAW9rE,KAAMuM,EAAQ4C,EAAQrL,GAE1C,IAAK,SAEH,OAAOmoE,EAAYjsE,KAAMuM,EAAQ4C,EAAQrL,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOooE,EAAUlsE,KAAMuM,EAAQ4C,EAAQrL,GAEzC,QACE,GAAIumE,EAAa,MAAM,IAAIpnE,UAAU,qBAAuB0mE,GAC5DA,GAAY,GAAKA,GAAU37D,cAC3Bq8D,GAAc,EAGtB,EAEAvgD,EAAOjqB,UAAUyH,OAAS,WACxB,MAAO,CACLsG,KAAM,SACNC,KAAMzN,MAAMP,UAAUwH,MAAMtH,KAAKC,KAAK+P,MAAQ/P,KAAM,GAExD,EAyFA,MAAM6sE,EAAuB,KAoB7B,SAASlC,EAAYhD,EAAKxkD,EAAO3D,GAC/B,IAAI+tD,EAAM,GACV/tD,EAAMza,KAAKuJ,IAAIq5D,EAAI7jE,OAAQ0b,GAE3B,IAAK,IAAIhgB,EAAI2jB,EAAO3jB,EAAIggB,IAAOhgB,EAC7B+tE,GAAO5rE,OAAO4M,aAAsB,IAATo5D,EAAInoE,IAEjC,OAAO+tE,CACT,CAEA,SAAS3C,EAAajD,EAAKxkD,EAAO3D,GAChC,IAAI+tD,EAAM,GACV/tD,EAAMza,KAAKuJ,IAAIq5D,EAAI7jE,OAAQ0b,GAE3B,IAAK,IAAIhgB,EAAI2jB,EAAO3jB,EAAIggB,IAAOhgB,EAC7B+tE,GAAO5rE,OAAO4M,aAAao5D,EAAInoE,IAEjC,OAAO+tE,CACT,CAEA,SAAS9C,EAAU9C,EAAKxkD,EAAO3D,GAC7B,MAAMwD,EAAM2kD,EAAI7jE,SAEXqf,GAASA,EAAQ,KAAGA,EAAQ,KAC5B3D,GAAOA,EAAM,GAAKA,EAAMwD,KAAKxD,EAAMwD,GAExC,IAAIwqD,EAAM,GACV,IAAK,IAAIhuE,EAAI2jB,EAAO3jB,EAAIggB,IAAOhgB,EAC7BguE,GAAOC,EAAoB9F,EAAInoE,IAEjC,OAAOguE,CACT,CAEA,SAAS1C,EAAcnD,EAAKxkD,EAAO3D,GACjC,MAAMmV,EAAQgzC,EAAItgE,MAAM8b,EAAO3D,GAC/B,IAAIvK,EAAM,GAEV,IAAK,IAAIzV,EAAI,EAAGA,EAAIm1B,EAAM7wB,OAAS,EAAGtE,GAAK,EACzCyV,GAAOtT,OAAO4M,aAAaomB,EAAMn1B,GAAqB,IAAfm1B,EAAMn1B,EAAI,IAEnD,OAAOyV,CACT,CAiCA,SAASy4D,EAAav+D,EAAQumD,EAAK5xD,GACjC,GAAKqL,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAInI,WAAW,sBAC3D,GAAImI,EAASumD,EAAM5xD,EAAQ,MAAM,IAAIkD,WAAW,wCAClD,CAyQA,SAAS2mE,EAAUhG,EAAKn/D,EAAO2G,EAAQumD,EAAKn1C,EAAKjS,GAC/C,IAAKwb,EAAOvmB,SAASokE,GAAM,MAAM,IAAI1kE,UAAU,+CAC/C,GAAIuF,EAAQ+X,GAAO/X,EAAQ8F,EAAK,MAAM,IAAItH,WAAW,qCACrD,GAAImI,EAASumD,EAAMiS,EAAI7jE,OAAQ,MAAM,IAAIkD,WAAW,qBACtD,CA+FA,SAAS4mE,EAAgBjG,EAAKn/D,EAAO2G,EAAQb,EAAKiS,GAChDstD,EAAWrlE,EAAO8F,EAAKiS,EAAKonD,EAAKx4D,EAAQ,GAEzC,IAAI06C,EAAKhiD,OAAOW,EAAQ9B,OAAO,aAC/BihE,EAAIx4D,KAAY06C,EAChBA,IAAW,EACX8d,EAAIx4D,KAAY06C,EAChBA,IAAW,EACX8d,EAAIx4D,KAAY06C,EAChBA,IAAW,EACX8d,EAAIx4D,KAAY06C,EAChB,IAAIC,EAAKjiD,OAAOW,GAAS9B,OAAO,IAAMA,OAAO,aAQ7C,OAPAihE,EAAIx4D,KAAY26C,EAChBA,IAAW,EACX6d,EAAIx4D,KAAY26C,EAChBA,IAAW,EACX6d,EAAIx4D,KAAY26C,EAChBA,IAAW,EACX6d,EAAIx4D,KAAY26C,EACT36C,CACT,CAEA,SAAS2+D,EAAgBnG,EAAKn/D,EAAO2G,EAAQb,EAAKiS,GAChDstD,EAAWrlE,EAAO8F,EAAKiS,EAAKonD,EAAKx4D,EAAQ,GAEzC,IAAI06C,EAAKhiD,OAAOW,EAAQ9B,OAAO,aAC/BihE,EAAIx4D,EAAS,GAAK06C,EAClBA,IAAW,EACX8d,EAAIx4D,EAAS,GAAK06C,EAClBA,IAAW,EACX8d,EAAIx4D,EAAS,GAAK06C,EAClBA,IAAW,EACX8d,EAAIx4D,EAAS,GAAK06C,EAClB,IAAIC,EAAKjiD,OAAOW,GAAS9B,OAAO,IAAMA,OAAO,aAQ7C,OAPAihE,EAAIx4D,EAAS,GAAK26C,EAClBA,IAAW,EACX6d,EAAIx4D,EAAS,GAAK26C,EAClBA,IAAW,EACX6d,EAAIx4D,EAAS,GAAK26C,EAClBA,IAAW,EACX6d,EAAIx4D,GAAU26C,EACP36C,EAAS,CAClB,CAkHA,SAAS4+D,EAAcpG,EAAKn/D,EAAO2G,EAAQumD,EAAKn1C,EAAKjS,GACnD,GAAIa,EAASumD,EAAMiS,EAAI7jE,OAAQ,MAAM,IAAIkD,WAAW,sBACpD,GAAImI,EAAS,EAAG,MAAM,IAAInI,WAAW,qBACvC,CAEA,SAASgnE,EAAYrG,EAAKn/D,EAAO2G,EAAQ8+D,EAAcC,GAOrD,OANA1lE,GAASA,EACT2G,KAAoB,EACf++D,GACHH,EAAapG,EAAKn/D,EAAO2G,EAAQ,GAEnCi6D,EAAQhkE,MAAMuiE,EAAKn/D,EAAO2G,EAAQ8+D,EAAc,GAAI,GAC7C9+D,EAAS,CAClB,CAUA,SAASg/D,EAAaxG,EAAKn/D,EAAO2G,EAAQ8+D,EAAcC,GAOtD,OANA1lE,GAASA,EACT2G,KAAoB,EACf++D,GACHH,EAAapG,EAAKn/D,EAAO2G,EAAQ,GAEnCi6D,EAAQhkE,MAAMuiE,EAAKn/D,EAAO2G,EAAQ8+D,EAAc,GAAI,GAC7C9+D,EAAS,CAClB,CAzkBA2a,EAAOjqB,UAAUwH,MAAQ,SAAgB8b,EAAO3D,GAC9C,MAAMwD,EAAMhjB,KAAK8D,QACjBqf,IAAUA,GAGE,GACVA,GAASH,GACG,IAAGG,EAAQ,GACdA,EAAQH,IACjBG,EAAQH,IANVxD,OAAcxK,IAARwK,EAAoBwD,IAAQxD,GASxB,GACRA,GAAOwD,GACG,IAAGxD,EAAM,GACVA,EAAMwD,IACfxD,EAAMwD,GAGJxD,EAAM2D,IAAO3D,EAAM2D,GAEvB,MAAMirD,EAASpuE,KAAKJ,SAASujB,EAAO3D,GAIpC,OAFAvf,OAAOC,eAAekuE,EAAQtkD,EAAOjqB,WAE9BuuE,CACT,EAUAtkD,EAAOjqB,UAAUmQ,WACjB8Z,EAAOjqB,UAAUoQ,WAAa,SAAqBd,EAAQ/G,EAAY8lE,GACrE/+D,KAAoB,EACpB/G,KAA4B,EACvB8lE,GAAUR,EAAYv+D,EAAQ/G,EAAYpI,KAAK8D,QAEpD,IAAI4a,EAAM1e,KAAKmP,GACXk/D,EAAM,EACN7uE,EAAI,EACR,OAASA,EAAI4I,IAAeimE,GAAO,MACjC3vD,GAAO1e,KAAKmP,EAAS3P,GAAK6uE,EAG5B,OAAO3vD,CACT,EAEAoL,EAAOjqB,UAAUqQ,WACjB4Z,EAAOjqB,UAAUsQ,WAAa,SAAqBhB,EAAQ/G,EAAY8lE,GACrE/+D,KAAoB,EACpB/G,KAA4B,EACvB8lE,GACHR,EAAYv+D,EAAQ/G,EAAYpI,KAAK8D,QAGvC,IAAI4a,EAAM1e,KAAKmP,IAAW/G,GACtBimE,EAAM,EACV,KAAOjmE,EAAa,IAAMimE,GAAO,MAC/B3vD,GAAO1e,KAAKmP,IAAW/G,GAAcimE,EAGvC,OAAO3vD,CACT,EAEAoL,EAAOjqB,UAAUuQ,UACjB0Z,EAAOjqB,UAAUwQ,UAAY,SAAoBlB,EAAQ++D,GAGvD,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpC9D,KAAKmP,EACd,EAEA2a,EAAOjqB,UAAUyQ,aACjBwZ,EAAOjqB,UAAU0Q,aAAe,SAAuBpB,EAAQ++D,GAG7D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpC9D,KAAKmP,GAAWnP,KAAKmP,EAAS,IAAM,CAC7C,EAEA2a,EAAOjqB,UAAU2Q,aACjBsZ,EAAOjqB,UAAUqO,aAAe,SAAuBiB,EAAQ++D,GAG7D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACnC9D,KAAKmP,IAAW,EAAKnP,KAAKmP,EAAS,EAC7C,EAEA2a,EAAOjqB,UAAU4Q,aACjBqZ,EAAOjqB,UAAU6Q,aAAe,SAAuBvB,EAAQ++D,GAI7D,OAHA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,SAElC9D,KAAKmP,GACTnP,KAAKmP,EAAS,IAAM,EACpBnP,KAAKmP,EAAS,IAAM,IACD,SAAnBnP,KAAKmP,EAAS,EACrB,EAEA2a,EAAOjqB,UAAU8Q,aACjBmZ,EAAOjqB,UAAUwE,aAAe,SAAuB8K,EAAQ++D,GAI7D,OAHA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QAEpB,SAAf9D,KAAKmP,IACTnP,KAAKmP,EAAS,IAAM,GACrBnP,KAAKmP,EAAS,IAAM,EACrBnP,KAAKmP,EAAS,GAClB,EAEA2a,EAAOjqB,UAAU+Q,gBAAkB09D,GAAmB,SAA0Bn/D,GAE9Eo/D,EADAp/D,KAAoB,EACG,UACvB,MAAMq/D,EAAQxuE,KAAKmP,GACbs/D,EAAOzuE,KAAKmP,EAAS,QACb6F,IAAVw5D,QAAgCx5D,IAATy5D,GACzBC,EAAYv/D,EAAQnP,KAAK8D,OAAS,GAGpC,MAAM+lD,EAAK2kB,EACQ,IAAjBxuE,OAAOmP,GACU,MAAjBnP,OAAOmP,GACPnP,OAAOmP,GAAU,GAAK,GAElB26C,EAAK9pD,OAAOmP,GACC,IAAjBnP,OAAOmP,GACU,MAAjBnP,OAAOmP,GACPs/D,EAAO,GAAK,GAEd,OAAO/nE,OAAOmjD,IAAOnjD,OAAOojD,IAAOpjD,OAAO,IAC5C,IAEAojB,EAAOjqB,UAAU0E,gBAAkB+pE,GAAmB,SAA0Bn/D,GAE9Eo/D,EADAp/D,KAAoB,EACG,UACvB,MAAMq/D,EAAQxuE,KAAKmP,GACbs/D,EAAOzuE,KAAKmP,EAAS,QACb6F,IAAVw5D,QAAgCx5D,IAATy5D,GACzBC,EAAYv/D,EAAQnP,KAAK8D,OAAS,GAGpC,MAAMgmD,EAAK0kB,EAAQ,GAAK,GACL,MAAjBxuE,OAAOmP,GACU,IAAjBnP,OAAOmP,GACPnP,OAAOmP,GAEH06C,EAAK7pD,OAAOmP,GAAU,GAAK,GACd,MAAjBnP,OAAOmP,GACU,IAAjBnP,OAAOmP,GACPs/D,EAEF,OAAQ/nE,OAAOojD,IAAOpjD,OAAO,KAAOA,OAAOmjD,EAC7C,IAEA//B,EAAOjqB,UAAUgR,UAAY,SAAoB1B,EAAQ/G,EAAY8lE,GACnE/+D,KAAoB,EACpB/G,KAA4B,EACvB8lE,GAAUR,EAAYv+D,EAAQ/G,EAAYpI,KAAK8D,QAEpD,IAAI4a,EAAM1e,KAAKmP,GACXk/D,EAAM,EACN7uE,EAAI,EACR,OAASA,EAAI4I,IAAeimE,GAAO,MACjC3vD,GAAO1e,KAAKmP,EAAS3P,GAAK6uE,EAM5B,OAJAA,GAAO,IAEH3vD,GAAO2vD,IAAK3vD,GAAO3Z,KAAK+L,IAAI,EAAG,EAAI1I,IAEhCsW,CACT,EAEAoL,EAAOjqB,UAAUkR,UAAY,SAAoB5B,EAAQ/G,EAAY8lE,GACnE/+D,KAAoB,EACpB/G,KAA4B,EACvB8lE,GAAUR,EAAYv+D,EAAQ/G,EAAYpI,KAAK8D,QAEpD,IAAItE,EAAI4I,EACJimE,EAAM,EACN3vD,EAAM1e,KAAKmP,IAAW3P,GAC1B,KAAOA,EAAI,IAAM6uE,GAAO,MACtB3vD,GAAO1e,KAAKmP,IAAW3P,GAAK6uE,EAM9B,OAJAA,GAAO,IAEH3vD,GAAO2vD,IAAK3vD,GAAO3Z,KAAK+L,IAAI,EAAG,EAAI1I,IAEhCsW,CACT,EAEAoL,EAAOjqB,UAAUmR,SAAW,SAAmB7B,EAAQ++D,GAGrD,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACtB,IAAf9D,KAAKmP,IAC0B,GAA5B,IAAOnP,KAAKmP,GAAU,GADKnP,KAAKmP,EAE3C,EAEA2a,EAAOjqB,UAAUoR,YAAc,SAAsB9B,EAAQ++D,GAC3D/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QAC3C,MAAM4a,EAAM1e,KAAKmP,GAAWnP,KAAKmP,EAAS,IAAM,EAChD,OAAc,MAANuP,EAAsB,WAANA,EAAmBA,CAC7C,EAEAoL,EAAOjqB,UAAUqR,YAAc,SAAsB/B,EAAQ++D,GAC3D/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QAC3C,MAAM4a,EAAM1e,KAAKmP,EAAS,GAAMnP,KAAKmP,IAAW,EAChD,OAAc,MAANuP,EAAsB,WAANA,EAAmBA,CAC7C,EAEAoL,EAAOjqB,UAAUsR,YAAc,SAAsBhC,EAAQ++D,GAI3D,OAHA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QAEnC9D,KAAKmP,GACVnP,KAAKmP,EAAS,IAAM,EACpBnP,KAAKmP,EAAS,IAAM,GACpBnP,KAAKmP,EAAS,IAAM,EACzB,EAEA2a,EAAOjqB,UAAUuE,YAAc,SAAsB+K,EAAQ++D,GAI3D,OAHA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QAEnC9D,KAAKmP,IAAW,GACrBnP,KAAKmP,EAAS,IAAM,GACpBnP,KAAKmP,EAAS,IAAM,EACpBnP,KAAKmP,EAAS,EACnB,EAEA2a,EAAOjqB,UAAUuR,eAAiBk9D,GAAmB,SAAyBn/D,GAE5Eo/D,EADAp/D,KAAoB,EACG,UACvB,MAAMq/D,EAAQxuE,KAAKmP,GACbs/D,EAAOzuE,KAAKmP,EAAS,QACb6F,IAAVw5D,QAAgCx5D,IAATy5D,GACzBC,EAAYv/D,EAAQnP,KAAK8D,OAAS,GAGpC,MAAM4a,EAAM1e,KAAKmP,EAAS,GACL,IAAnBnP,KAAKmP,EAAS,GACK,MAAnBnP,KAAKmP,EAAS,IACbs/D,GAAQ,IAEX,OAAQ/nE,OAAOgY,IAAQhY,OAAO,KAC5BA,OAAO8nE,EACU,IAAjBxuE,OAAOmP,GACU,MAAjBnP,OAAOmP,GACPnP,OAAOmP,GAAU,GAAK,GAC1B,IAEA2a,EAAOjqB,UAAUyE,eAAiBgqE,GAAmB,SAAyBn/D,GAE5Eo/D,EADAp/D,KAAoB,EACG,UACvB,MAAMq/D,EAAQxuE,KAAKmP,GACbs/D,EAAOzuE,KAAKmP,EAAS,QACb6F,IAAVw5D,QAAgCx5D,IAATy5D,GACzBC,EAAYv/D,EAAQnP,KAAK8D,OAAS,GAGpC,MAAM4a,GAAO8vD,GAAS,IACH,MAAjBxuE,OAAOmP,GACU,IAAjBnP,OAAOmP,GACPnP,OAAOmP,GAET,OAAQzI,OAAOgY,IAAQhY,OAAO,KAC5BA,OAAO1G,OAAOmP,GAAU,GAAK,GACZ,MAAjBnP,OAAOmP,GACU,IAAjBnP,OAAOmP,GACPs/D,EACJ,IAEA3kD,EAAOjqB,UAAUwR,YAAc,SAAsBlC,EAAQ++D,GAG3D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpCslE,EAAQjlE,KAAKnE,KAAMmP,GAAQ,EAAM,GAAI,EAC9C,EAEA2a,EAAOjqB,UAAU2E,YAAc,SAAsB2K,EAAQ++D,GAG3D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpCslE,EAAQjlE,KAAKnE,KAAMmP,GAAQ,EAAO,GAAI,EAC/C,EAEA2a,EAAOjqB,UAAUyR,aAAe,SAAuBnC,EAAQ++D,GAG7D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpCslE,EAAQjlE,KAAKnE,KAAMmP,GAAQ,EAAM,GAAI,EAC9C,EAEA2a,EAAOjqB,UAAU4E,aAAe,SAAuB0K,EAAQ++D,GAG7D,OAFA/+D,KAAoB,EACf++D,GAAUR,EAAYv+D,EAAQ,EAAGnP,KAAK8D,QACpCslE,EAAQjlE,KAAKnE,KAAMmP,GAAQ,EAAO,GAAI,EAC/C,EAQA2a,EAAOjqB,UAAU0R,YACjBuY,EAAOjqB,UAAU2R,YAAc,SAAsBhJ,EAAO2G,EAAQ/G,EAAY8lE,GAI9E,GAHA1lE,GAASA,EACT2G,KAAoB,EACpB/G,KAA4B,GACvB8lE,EAAU,CAEbP,EAAS3tE,KAAMwI,EAAO2G,EAAQ/G,EADbrD,KAAK+L,IAAI,EAAG,EAAI1I,GAAc,EACK,EACtD,CAEA,IAAIimE,EAAM,EACN7uE,EAAI,EAER,IADAQ,KAAKmP,GAAkB,IAAR3G,IACNhJ,EAAI4I,IAAeimE,GAAO,MACjCruE,KAAKmP,EAAS3P,GAAMgJ,EAAQ6lE,EAAO,IAGrC,OAAOl/D,EAAS/G,CAClB,EAEA0hB,EAAOjqB,UAAU4R,YACjBqY,EAAOjqB,UAAU6R,YAAc,SAAsBlJ,EAAO2G,EAAQ/G,EAAY8lE,GAI9E,GAHA1lE,GAASA,EACT2G,KAAoB,EACpB/G,KAA4B,GACvB8lE,EAAU,CAEbP,EAAS3tE,KAAMwI,EAAO2G,EAAQ/G,EADbrD,KAAK+L,IAAI,EAAG,EAAI1I,GAAc,EACK,EACtD,CAEA,IAAI5I,EAAI4I,EAAa,EACjBimE,EAAM,EAEV,IADAruE,KAAKmP,EAAS3P,GAAa,IAARgJ,IACVhJ,GAAK,IAAM6uE,GAAO,MACzBruE,KAAKmP,EAAS3P,GAAMgJ,EAAQ6lE,EAAO,IAGrC,OAAOl/D,EAAS/G,CAClB,EAEA0hB,EAAOjqB,UAAU8R,WACjBmY,EAAOjqB,UAAU+R,WAAa,SAAqBpJ,EAAO2G,EAAQ++D,GAKhE,OAJA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,IAAM,GACtDnP,KAAKmP,GAAmB,IAAR3G,EACT2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAUgS,cACjBiY,EAAOjqB,UAAUiS,cAAgB,SAAwBtJ,EAAO2G,EAAQ++D,GAMtE,OALA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,MAAQ,GACxDnP,KAAKmP,GAAmB,IAAR3G,EAChBxI,KAAKmP,EAAS,GAAM3G,IAAU,EACvB2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAUkS,cACjB+X,EAAOjqB,UAAUmS,cAAgB,SAAwBxJ,EAAO2G,EAAQ++D,GAMtE,OALA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,MAAQ,GACxDnP,KAAKmP,GAAW3G,IAAU,EAC1BxI,KAAKmP,EAAS,GAAc,IAAR3G,EACb2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAUoS,cACjB6X,EAAOjqB,UAAUqS,cAAgB,SAAwB1J,EAAO2G,EAAQ++D,GAQtE,OAPA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,WAAY,GAC5DnP,KAAKmP,EAAS,GAAM3G,IAAU,GAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,GAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,EAC9BxI,KAAKmP,GAAmB,IAAR3G,EACT2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAUsS,cACjB2X,EAAOjqB,UAAU0F,cAAgB,SAAwBiD,EAAO2G,EAAQ++D,GAQtE,OAPA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,WAAY,GAC5DnP,KAAKmP,GAAW3G,IAAU,GAC1BxI,KAAKmP,EAAS,GAAM3G,IAAU,GAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,EAC9BxI,KAAKmP,EAAS,GAAc,IAAR3G,EACb2G,EAAS,CAClB,EA8CA2a,EAAOjqB,UAAUuS,iBAAmBk8D,GAAmB,SAA2B9lE,EAAO2G,EAAS,GAChG,OAAOy+D,EAAe5tE,KAAMwI,EAAO2G,EAAQzI,OAAO,GAAIA,OAAO,sBAC/D,IAEAojB,EAAOjqB,UAAU4F,iBAAmB6oE,GAAmB,SAA2B9lE,EAAO2G,EAAS,GAChG,OAAO2+D,EAAe9tE,KAAMwI,EAAO2G,EAAQzI,OAAO,GAAIA,OAAO,sBAC/D,IAEAojB,EAAOjqB,UAAUwS,WAAa,SAAqB7J,EAAO2G,EAAQ/G,EAAY8lE,GAG5E,GAFA1lE,GAASA,EACT2G,KAAoB,GACf++D,EAAU,CACb,MAAMxsD,EAAQ3c,KAAK+L,IAAI,EAAI,EAAI1I,EAAc,GAE7CulE,EAAS3tE,KAAMwI,EAAO2G,EAAQ/G,EAAYsZ,EAAQ,GAAIA,EACxD,CAEA,IAAIliB,EAAI,EACJ6uE,EAAM,EACNM,EAAM,EAEV,IADA3uE,KAAKmP,GAAkB,IAAR3G,IACNhJ,EAAI4I,IAAeimE,GAAO,MAC7B7lE,EAAQ,GAAa,IAARmmE,GAAsC,IAAzB3uE,KAAKmP,EAAS3P,EAAI,KAC9CmvE,EAAM,GAER3uE,KAAKmP,EAAS3P,IAAOgJ,EAAQ6lE,EAAQ,GAAKM,EAAM,IAGlD,OAAOx/D,EAAS/G,CAClB,EAEA0hB,EAAOjqB,UAAUyS,WAAa,SAAqB9J,EAAO2G,EAAQ/G,EAAY8lE,GAG5E,GAFA1lE,GAASA,EACT2G,KAAoB,GACf++D,EAAU,CACb,MAAMxsD,EAAQ3c,KAAK+L,IAAI,EAAI,EAAI1I,EAAc,GAE7CulE,EAAS3tE,KAAMwI,EAAO2G,EAAQ/G,EAAYsZ,EAAQ,GAAIA,EACxD,CAEA,IAAIliB,EAAI4I,EAAa,EACjBimE,EAAM,EACNM,EAAM,EAEV,IADA3uE,KAAKmP,EAAS3P,GAAa,IAARgJ,IACVhJ,GAAK,IAAM6uE,GAAO,MACrB7lE,EAAQ,GAAa,IAARmmE,GAAsC,IAAzB3uE,KAAKmP,EAAS3P,EAAI,KAC9CmvE,EAAM,GAER3uE,KAAKmP,EAAS3P,IAAOgJ,EAAQ6lE,EAAQ,GAAKM,EAAM,IAGlD,OAAOx/D,EAAS/G,CAClB,EAEA0hB,EAAOjqB,UAAU0S,UAAY,SAAoB/J,EAAO2G,EAAQ++D,GAM9D,OALA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,KAAO,KACnD3G,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCxI,KAAKmP,GAAmB,IAAR3G,EACT2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAU2S,aAAe,SAAuBhK,EAAO2G,EAAQ++D,GAMpE,OALA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,OAAS,OACzDnP,KAAKmP,GAAmB,IAAR3G,EAChBxI,KAAKmP,EAAS,GAAM3G,IAAU,EACvB2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAU4S,aAAe,SAAuBjK,EAAO2G,EAAQ++D,GAMpE,OALA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,OAAS,OACzDnP,KAAKmP,GAAW3G,IAAU,EAC1BxI,KAAKmP,EAAS,GAAc,IAAR3G,EACb2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAU6S,aAAe,SAAuBlK,EAAO2G,EAAQ++D,GAQpE,OAPA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,YAAa,YAC7DnP,KAAKmP,GAAmB,IAAR3G,EAChBxI,KAAKmP,EAAS,GAAM3G,IAAU,EAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,GAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,GACvB2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAUyF,aAAe,SAAuBkD,EAAO2G,EAAQ++D,GASpE,OARA1lE,GAASA,EACT2G,KAAoB,EACf++D,GAAUP,EAAS3tE,KAAMwI,EAAO2G,EAAQ,EAAG,YAAa,YACzD3G,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CxI,KAAKmP,GAAW3G,IAAU,GAC1BxI,KAAKmP,EAAS,GAAM3G,IAAU,GAC9BxI,KAAKmP,EAAS,GAAM3G,IAAU,EAC9BxI,KAAKmP,EAAS,GAAc,IAAR3G,EACb2G,EAAS,CAClB,EAEA2a,EAAOjqB,UAAU8S,gBAAkB27D,GAAmB,SAA0B9lE,EAAO2G,EAAS,GAC9F,OAAOy+D,EAAe5tE,KAAMwI,EAAO2G,GAASzI,OAAO,sBAAuBA,OAAO,sBACnF,IAEAojB,EAAOjqB,UAAU2F,gBAAkB8oE,GAAmB,SAA0B9lE,EAAO2G,EAAS,GAC9F,OAAO2+D,EAAe9tE,KAAMwI,EAAO2G,GAASzI,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAojB,EAAOjqB,UAAU+S,aAAe,SAAuBpK,EAAO2G,EAAQ++D,GACpE,OAAOF,EAAWhuE,KAAMwI,EAAO2G,GAAQ,EAAM++D,EAC/C,EAEApkD,EAAOjqB,UAAU6F,aAAe,SAAuB8C,EAAO2G,EAAQ++D,GACpE,OAAOF,EAAWhuE,KAAMwI,EAAO2G,GAAQ,EAAO++D,EAChD,EAYApkD,EAAOjqB,UAAUgT,cAAgB,SAAwBrK,EAAO2G,EAAQ++D,GACtE,OAAOC,EAAYnuE,KAAMwI,EAAO2G,GAAQ,EAAM++D,EAChD,EAEApkD,EAAOjqB,UAAU8F,cAAgB,SAAwB6C,EAAO2G,EAAQ++D,GACtE,OAAOC,EAAYnuE,KAAMwI,EAAO2G,GAAQ,EAAO++D,EACjD,EAGApkD,EAAOjqB,UAAUoF,KAAO,SAAeuP,EAAQo6D,EAAazrD,EAAO3D,GACjE,IAAKsK,EAAOvmB,SAASiR,GAAS,MAAM,IAAIvR,UAAU,+BAQlD,GAPKkgB,IAAOA,EAAQ,GACf3D,GAAe,IAARA,IAAWA,EAAMxf,KAAK8D,QAC9B8qE,GAAep6D,EAAO1Q,SAAQ8qE,EAAcp6D,EAAO1Q,QAClD8qE,IAAaA,EAAc,GAC5BpvD,EAAM,GAAKA,EAAM2D,IAAO3D,EAAM2D,GAG9B3D,IAAQ2D,EAAO,OAAO,EAC1B,GAAsB,IAAlB3O,EAAO1Q,QAAgC,IAAhB9D,KAAK8D,OAAc,OAAO,EAGrD,GAAI8qE,EAAc,EAChB,MAAM,IAAI5nE,WAAW,6BAEvB,GAAImc,EAAQ,GAAKA,GAASnjB,KAAK8D,OAAQ,MAAM,IAAIkD,WAAW,sBAC5D,GAAIwY,EAAM,EAAG,MAAM,IAAIxY,WAAW,2BAG9BwY,EAAMxf,KAAK8D,SAAQ0b,EAAMxf,KAAK8D,QAC9B0Q,EAAO1Q,OAAS8qE,EAAcpvD,EAAM2D,IACtC3D,EAAMhL,EAAO1Q,OAAS8qE,EAAczrD,GAGtC,MAAMH,EAAMxD,EAAM2D,EAalB,OAXInjB,OAASwU,GAAqD,mBAApC1U,WAAWD,UAAUiT,WAEjD9S,KAAK8S,WAAW87D,EAAazrD,EAAO3D,GAEpC1f,WAAWD,UAAU2J,IAAIzJ,KACvByU,EACAxU,KAAKJ,SAASujB,EAAO3D,GACrBovD,GAIG5rD,CACT,EAMA8G,EAAOjqB,UAAUwF,KAAO,SAAeqZ,EAAKyE,EAAO3D,EAAKmqD,GAEtD,GAAmB,iBAARjrD,EAAkB,CAS3B,GARqB,iBAAVyE,GACTwmD,EAAWxmD,EACXA,EAAQ,EACR3D,EAAMxf,KAAK8D,QACa,iBAAR0b,IAChBmqD,EAAWnqD,EACXA,EAAMxf,KAAK8D,aAEIkR,IAAb20D,GAA8C,iBAAbA,EACnC,MAAM,IAAI1mE,UAAU,6BAEtB,GAAwB,iBAAb0mE,IAA0B7/C,EAAOtc,WAAWm8D,GACrD,MAAM,IAAI1mE,UAAU,qBAAuB0mE,GAE7C,GAAmB,IAAfjrD,EAAI5a,OAAc,CACpB,MAAMoP,EAAOwL,EAAI3R,WAAW,IACV,SAAb48D,GAAuBz2D,EAAO,KAClB,WAAby2D,KAEFjrD,EAAMxL,EAEV,CACF,KAA0B,iBAARwL,EAChBA,GAAY,IACY,kBAARA,IAChBA,EAAM7W,OAAO6W,IAIf,GAAIyE,EAAQ,GAAKnjB,KAAK8D,OAASqf,GAASnjB,KAAK8D,OAAS0b,EACpD,MAAM,IAAIxY,WAAW,sBAGvB,GAAIwY,GAAO2D,EACT,OAAOnjB,KAQT,IAAIR,EACJ,GANA2jB,KAAkB,EAClB3D,OAAcxK,IAARwK,EAAoBxf,KAAK8D,OAAS0b,IAAQ,EAE3Cd,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKlf,EAAI2jB,EAAO3jB,EAAIggB,IAAOhgB,EACzBQ,KAAKR,GAAKkf,MAEP,CACL,MAAMiW,EAAQ7K,EAAOvmB,SAASmb,GAC1BA,EACAoL,EAAOnmB,KAAK+a,EAAKirD,GACf3mD,EAAM2R,EAAM7wB,OAClB,GAAY,IAARkf,EACF,MAAM,IAAI/f,UAAU,cAAgByb,EAClC,qCAEJ,IAAKlf,EAAI,EAAGA,EAAIggB,EAAM2D,IAAS3jB,EAC7BQ,KAAKR,EAAI2jB,GAASwR,EAAMn1B,EAAIwjB,EAEhC,CAEA,OAAOhjB,IACT,EAMA,MAAM6uE,EAAS,CAAC,EAChB,SAASpoE,EAAG20C,EAAKv4B,EAAYN,GAC3BssD,EAAOzzB,GAAO,cAAwB74B,EACpC,WAAArf,GACEC,QAEAlD,OAAO4O,eAAe7O,KAAM,UAAW,CACrCwI,MAAOqa,EAAWrU,MAAMxO,KAAM+N,WAC9BgF,UAAU,EACVC,cAAc,IAIhBhT,KAAKyH,KAAO,GAAGzH,KAAKyH,SAAS2zC,KAG7Bp7C,KAAKiT,aAEEjT,KAAKyH,IACd,CAEA,QAAIyL,GACF,OAAOkoC,CACT,CAEA,QAAIloC,CAAM1K,GACRvI,OAAO4O,eAAe7O,KAAM,OAAQ,CAClCgT,cAAc,EACdlE,YAAY,EACZtG,QACAuK,UAAU,GAEd,CAEA,QAAAxM,GACE,MAAO,GAAGvG,KAAKyH,SAAS2zC,OAASp7C,KAAKmT,SACxC,EAEJ,CA+BA,SAAS27D,EAAuBpwD,GAC9B,IAAIzJ,EAAM,GACNzV,EAAIkf,EAAI5a,OACZ,MAAMqf,EAAmB,MAAXzE,EAAI,GAAa,EAAI,EACnC,KAAOlf,GAAK2jB,EAAQ,EAAG3jB,GAAK,EAC1ByV,EAAM,IAAIyJ,EAAIrX,MAAM7H,EAAI,EAAGA,KAAKyV,IAElC,MAAO,GAAGyJ,EAAIrX,MAAM,EAAG7H,KAAKyV,GAC9B,CAYA,SAAS44D,EAAYrlE,EAAO8F,EAAKiS,EAAKonD,EAAKx4D,EAAQ/G,GACjD,GAAII,EAAQ+X,GAAO/X,EAAQ8F,EAAK,CAC9B,MAAM7O,EAAmB,iBAAR6O,EAAmB,IAAM,GAC1C,IAAIygE,EAWJ,MARIA,EAFA3mE,EAAa,EACH,IAARkG,GAAaA,IAAQ5H,OAAO,GACtB,OAAOjH,YAAYA,QAA2B,GAAlB2I,EAAa,KAAS3I,IAElD,SAASA,QAA2B,GAAlB2I,EAAa,GAAS,IAAI3I,iBACtB,GAAlB2I,EAAa,GAAS,IAAI3I,IAGhC,MAAM6O,IAAM7O,YAAY8gB,IAAM9gB,IAElC,IAAIovE,EAAOz7D,iBAAiB,QAAS27D,EAAOvmE,EACpD,EAtBF,SAAsBm/D,EAAKx4D,EAAQ/G,GACjCmmE,EAAep/D,EAAQ,eACH6F,IAAhB2yD,EAAIx4D,SAAsD6F,IAA7B2yD,EAAIx4D,EAAS/G,IAC5CsmE,EAAYv/D,EAAQw4D,EAAI7jE,QAAUsE,EAAa,GAEnD,CAkBE4mE,CAAYrH,EAAKx4D,EAAQ/G,EAC3B,CAEA,SAASmmE,EAAgB/lE,EAAOf,GAC9B,GAAqB,iBAAVe,EACT,MAAM,IAAIqmE,EAAOx7D,qBAAqB5L,EAAM,SAAUe,EAE1D,CAEA,SAASkmE,EAAalmE,EAAO1E,EAAQ8J,GACnC,GAAI7I,KAAKuO,MAAM9K,KAAWA,EAExB,MADA+lE,EAAe/lE,EAAOoF,GAChB,IAAIihE,EAAOz7D,iBAAiBxF,GAAQ,SAAU,aAAcpF,GAGpE,GAAI1E,EAAS,EACX,MAAM,IAAI+qE,EAAOt7D,yBAGnB,MAAM,IAAIs7D,EAAOz7D,iBAAiBxF,GAAQ,SACR,MAAMA,EAAO,EAAI,YAAY9J,IAC7B0E,EACpC,CAvFA/B,EAAE,4BACA,SAAUgB,GACR,OAAIA,EACK,GAAGA,gCAGL,gDACT,GAAGT,YACLP,EAAE,wBACA,SAAUgB,EAAM0P,GACd,MAAO,QAAQ1P,4DAA+D0P,GAChF,GAAGlU,WACLwD,EAAE,oBACA,SAAUkX,EAAKoxD,EAAOl6D,GACpB,IAAIoE,EAAM,iBAAiB0E,sBACvBsxD,EAAWp6D,EAWf,OAVIhN,OAAO2L,UAAUqB,IAAU9P,KAAK0O,IAAIoB,GAAS,GAAK,GACpDo6D,EAAWH,EAAsBntE,OAAOkT,IACd,iBAAVA,IAChBo6D,EAAWttE,OAAOkT,IACdA,EAAQnO,OAAO,IAAMA,OAAO,KAAOmO,IAAUnO,OAAO,IAAMA,OAAO,QACnEuoE,EAAWH,EAAsBG,IAEnCA,GAAY,KAEdh2D,GAAO,eAAe81D,eAAmBE,IAClCh2D,CACT,GAAGjS,YAiEL,MAAMkoE,EAAoB,oBAgB1B,SAAS5E,EAAa/9D,EAAQ4/D,GAE5B,IAAIG,EADJH,EAAQA,GAASptD,IAEjB,MAAMjb,EAASyI,EAAOzI,OACtB,IAAIqrE,EAAgB,KACpB,MAAMx6C,EAAQ,GAEd,IAAK,IAAIn1B,EAAI,EAAGA,EAAIsE,IAAUtE,EAAG,CAI/B,GAHA8sE,EAAY//D,EAAOQ,WAAWvN,GAG1B8sE,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAK6C,EAAe,CAElB,GAAI7C,EAAY,MAAQ,EAEjBH,GAAS,IAAM,GAAGx3C,EAAM1nB,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAIzN,EAAI,IAAMsE,EAAQ,EAEtBqoE,GAAS,IAAM,GAAGx3C,EAAM1nB,KAAK,IAAM,IAAM,KAC9C,QACF,CAGAkiE,EAAgB7C,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBH,GAAS,IAAM,GAAGx3C,EAAM1nB,KAAK,IAAM,IAAM,KAC9CkiE,EAAgB7C,EAChB,QACF,CAGAA,EAAkE,OAArD6C,EAAgB,OAAU,GAAK7C,EAAY,MAC1D,MAAW6C,IAEJhD,GAAS,IAAM,GAAGx3C,EAAM1nB,KAAK,IAAM,IAAM,KAMhD,GAHAkiE,EAAgB,KAGZ7C,EAAY,IAAM,CACpB,IAAKH,GAAS,GAAK,EAAG,MACtBx3C,EAAM1nB,KAAKq/D,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKH,GAAS,GAAK,EAAG,MACtBx3C,EAAM1nB,KACJq/D,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKH,GAAS,GAAK,EAAG,MACtBx3C,EAAM1nB,KACJq/D,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIn/D,MAAM,sBARhB,IAAKg/D,GAAS,GAAK,EAAG,MACtBx3C,EAAM1nB,KACJq/D,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAO33C,CACT,CA2BA,SAAS41C,EAAe5sD,GACtB,OAAOwrD,EAAOr8D,YAxHhB,SAAsB6Q,GAMpB,IAFAA,GAFAA,EAAMA,EAAIjK,MAAM,KAAK,IAEX9D,OAAOD,QAAQu/D,EAAmB,KAEpCprE,OAAS,EAAG,MAAO,GAE3B,KAAO6Z,EAAI7Z,OAAS,GAAM,GACxB6Z,GAAY,IAEd,OAAOA,CACT,CA4G4ByxD,CAAYzxD,GACxC,CAEA,SAASkuD,EAAYwD,EAAKC,EAAKngE,EAAQrL,GACrC,IAAItE,EACJ,IAAKA,EAAI,EAAGA,EAAIsE,KACTtE,EAAI2P,GAAUmgE,EAAIxrE,QAAYtE,GAAK6vE,EAAIvrE,UADpBtE,EAExB8vE,EAAI9vE,EAAI2P,GAAUkgE,EAAI7vE,GAExB,OAAOA,CACT,CAKA,SAASqqE,EAAYhzD,EAAKjJ,GACxB,OAAOiJ,aAAejJ,GACZ,MAAPiJ,GAAkC,MAAnBA,EAAI3T,aAA+C,MAAxB2T,EAAI3T,YAAYuE,MACzDoP,EAAI3T,YAAYuE,OAASmG,EAAKnG,IACpC,CACA,SAASgd,EAAa5N,GAEpB,OAAOA,GAAQA,CACjB,CAIA,MAAM42D,EAAsB,WAC1B,MAAMpG,EAAW,mBACXkI,EAAQ,IAAInvE,MAAM,KACxB,IAAK,IAAIZ,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMgwE,EAAU,GAAJhwE,EACZ,IAAK,IAAIa,EAAI,EAAGA,EAAI,KAAMA,EACxBkvE,EAAMC,EAAMnvE,GAAKgnE,EAAS7nE,GAAK6nE,EAAShnE,EAE5C,CACA,OAAOkvE,CACR,CAV2B,GAa5B,SAASjB,EAAoBv3D,GAC3B,MAAyB,oBAAXrQ,OAAyB+oE,GAAyB14D,CAClE,CAEA,SAAS04D,KACP,MAAM,IAAItiE,MAAM,uBAClB,kECvjEA,IAAIuiE,EAAe,EAAQ,yCAEvBC,EAAW,EAAQ,qCAEnBC,EAAWD,EAASD,EAAa,6BAErCt7D,EAAOjU,QAAU,SAA4BsH,EAAMooE,GAClD,IAAIC,EAAYJ,EAAajoE,IAAQooE,GACrC,MAAyB,mBAAdC,GAA4BF,EAASnoE,EAAM,gBAAkB,EAChEkoE,EAASG,GAEVA,CACR,8DCZA,IAAI93D,EAAO,EAAQ,yCACf03D,EAAe,EAAQ,yCACvBK,EAAoB,EAAQ,+CAE5BC,EAAa,EAAQ,oCACrBC,EAASP,EAAa,8BACtBQ,EAAQR,EAAa,6BACrBS,EAAgBT,EAAa,mBAAmB,IAAS13D,EAAKjY,KAAKmwE,EAAOD,GAE1EG,EAAkB,EAAQ,8CAC1BC,EAAOX,EAAa,cAExBt7D,EAAOjU,QAAU,SAAkBmwE,GAClC,GAAgC,mBAArBA,EACV,MAAM,IAAIN,EAAW,0BAEtB,IAAIze,EAAO4e,EAAcn4D,EAAMk4D,EAAOniE,WACtC,OAAOgiE,EACNxe,EACA,EAAI8e,EAAK,EAAGC,EAAiBxsE,QAAUiK,UAAUjK,OAAS,KAC1D,EAEF,EAEA,IAAIysE,EAAY,WACf,OAAOJ,EAAcn4D,EAAMi4D,EAAQliE,UACpC,EAEIqiE,EACHA,EAAgBh8D,EAAOjU,QAAS,QAAS,CAAEqI,MAAO+nE,IAElDn8D,EAAOjU,QAAQqO,MAAQ+hE,0DChCxB,IAAIluD,EAAO,EAAQ,+BACf5L,EAAS,EAAQ,yCACrB,SAASsuD,IAAQ,OAAO,IAAIp+C,MAAOC,SAAU,CAE7C,IACIjY,EADAtH,EAAQjH,MAAMP,UAAUwH,MAExBwqD,EAAQ,CAAC,EAGTljD,OADkB,IAAX,EAAAtI,GAA0B,EAAAA,EAAOsI,QAC9B,EAAAtI,EAAOsI,QACQ,oBAAXsF,QAA0BA,OAAOtF,QACrCsF,OAAOtF,QAEP,CAAC,EAef,IAZA,IAAI6hE,EAAY,CACZ,CAuBJ,WAAgB,EAvBN,OACN,CAwBJ,WACI7hE,EAAQkF,IAAIrF,MAAMG,EAASZ,UAC/B,EA1BW,QACP,CA2BJ,WACIY,EAAQkF,IAAIrF,MAAMG,EAASZ,UAC/B,EA7BW,QACP,CA8BJ,WACIY,EAAQoJ,KAAKvJ,MAAMG,EAASZ,UAChC,EAhCY,SACR,CAiCJ,SAAc0iE,GACV5e,EAAM4e,GAAS1L,GACnB,EAnCW,QACP,CAoCJ,SAAiB0L,GACb,IAAIC,EAAO7e,EAAM4e,GACjB,IAAKC,EACD,MAAM,IAAIvjE,MAAM,kBAAoBsjE,UAGjC5e,EAAM4e,GACb,IAAI11B,EAAWgqB,IAAQ2L,EACvB/hE,EAAQkF,IAAI48D,EAAQ,KAAO11B,EAAW,KAC1C,EA7Cc,WACV,CA8CJ,WACI,IAAI7jC,EAAM,IAAI/J,MACd+J,EAAIzP,KAAO,QACXyP,EAAI/D,QAAUkP,EAAKsuD,OAAOniE,MAAM,KAAMT,WACtCY,EAAQC,MAAMsI,EAAIjE,MACtB,EAnDY,SACR,CAoDJ,SAAai1C,GACTv5C,EAAQkF,IAAIwO,EAAK3S,QAAQw4C,GAAU,KACvC,EAtDU,OACN,CAuDJ,SAAuB0oB,GACnB,IAAKA,EAAY,CACb,IAAIrtD,EAAMlc,EAAMtH,KAAKgO,UAAW,GAChC0I,EAAOC,IAAG,EAAO2L,EAAKsuD,OAAOniE,MAAM,KAAM+U,GAC7C,CACJ,EA5DoB,WAGX/jB,EAAI,EAAGA,EAAIgxE,EAAU1sE,OAAQtE,IAAK,CACvC,IAAI29C,EAAQqzB,EAAUhxE,GAClB8D,EAAI65C,EAAM,GACV11C,EAAO01C,EAAM,GAEZxuC,EAAQlH,KACTkH,EAAQlH,GAAQnE,EAExB,CAEA8Q,EAAOjU,QAAUwO,yECrCjB,IAAIyhE,EAAkB,EAAQ,8CAE1BS,EAAe,EAAQ,sCACvBb,EAAa,EAAQ,oCAErBc,EAAO,EAAQ,gCAGnB18D,EAAOjU,QAAU,SAChB0W,EACAk6D,EACAvoE,GAEA,IAAKqO,GAAuB,iBAARA,GAAmC,mBAARA,EAC9C,MAAM,IAAIm5D,EAAW,0CAEtB,GAAwB,iBAAbe,GAA6C,iBAAbA,EAC1C,MAAM,IAAIf,EAAW,4CAEtB,GAAIjiE,UAAUjK,OAAS,GAA6B,kBAAjBiK,UAAU,IAAqC,OAAjBA,UAAU,GAC1E,MAAM,IAAIiiE,EAAW,2DAEtB,GAAIjiE,UAAUjK,OAAS,GAA6B,kBAAjBiK,UAAU,IAAqC,OAAjBA,UAAU,GAC1E,MAAM,IAAIiiE,EAAW,yDAEtB,GAAIjiE,UAAUjK,OAAS,GAA6B,kBAAjBiK,UAAU,IAAqC,OAAjBA,UAAU,GAC1E,MAAM,IAAIiiE,EAAW,6DAEtB,GAAIjiE,UAAUjK,OAAS,GAA6B,kBAAjBiK,UAAU,GAC5C,MAAM,IAAIiiE,EAAW,2CAGtB,IAAIgB,EAAgBjjE,UAAUjK,OAAS,EAAIiK,UAAU,GAAK,KACtDkjE,EAAcljE,UAAUjK,OAAS,EAAIiK,UAAU,GAAK,KACpDmjE,EAAkBnjE,UAAUjK,OAAS,EAAIiK,UAAU,GAAK,KACxDojE,EAAQpjE,UAAUjK,OAAS,GAAIiK,UAAU,GAGzCqjE,IAASN,GAAQA,EAAKj6D,EAAKk6D,GAE/B,GAAIX,EACHA,EAAgBv5D,EAAKk6D,EAAU,CAC9B/9D,aAAkC,OAApBk+D,GAA4BE,EAAOA,EAAKp+D,cAAgBk+D,EACtEpiE,WAA8B,OAAlBkiE,GAA0BI,EAAOA,EAAKtiE,YAAckiE,EAChExoE,MAAOA,EACPuK,SAA0B,OAAhBk+D,GAAwBG,EAAOA,EAAKr+D,UAAYk+D,QAErD,KAAIE,IAAWH,GAAkBC,GAAgBC,GAIvD,MAAM,IAAIL,EAAa,+GAFvBh6D,EAAIk6D,GAAYvoE,CAGjB,CACD,sECrDA,IAAImQ,EAAO,EAAQ,uCACf04D,EAA+B,mBAAXhkE,QAAkD,iBAAlBA,OAAO,OAE3DikE,EAAQrxE,OAAOJ,UAAU0G,SACzB6I,EAAShP,MAAMP,UAAUuP,OACzBmiE,EAAqB,EAAQ,gDAM7BC,EAAsB,EAAQ,mDAAR,GAEtB3iE,EAAiB,SAAUq5C,EAAQzgD,EAAMe,EAAOgtB,GACnD,GAAI/tB,KAAQygD,EACX,IAAkB,IAAd1yB,GACH,GAAI0yB,EAAOzgD,KAAUe,EACpB,YAEK,GAXa,mBADKuO,EAYFye,IAX8B,sBAAnB87C,EAAMvxE,KAAKgX,KAWPye,IACrC,OAbc,IAAUze,EAiBtBy6D,EACHD,EAAmBrpB,EAAQzgD,EAAMe,GAAO,GAExC+oE,EAAmBrpB,EAAQzgD,EAAMe,EAEnC,EAEI2T,EAAmB,SAAU+rC,EAAQjlC,GACxC,IAAIwuD,EAAa1jE,UAAUjK,OAAS,EAAIiK,UAAU,GAAK,CAAC,EACpD0G,EAAQkE,EAAKsK,GACbouD,IACH58D,EAAQrF,EAAOrP,KAAK0U,EAAOxU,OAAO4b,sBAAsBoH,KAEzD,IAAK,IAAIzjB,EAAI,EAAGA,EAAIiV,EAAM3Q,OAAQtE,GAAK,EACtCqP,EAAeq5C,EAAQzzC,EAAMjV,GAAIyjB,EAAIxO,EAAMjV,IAAKiyE,EAAWh9D,EAAMjV,IAEnE,EAEA2c,EAAiBq1D,sBAAwBA,EAEzCp9D,EAAOjU,QAAUgc,uEC5CjB,IAGIi0D,EAHe,EAAQ,wCAGLV,CAAa,2BAA2B,KAAS,EACvE,GAAIU,EACH,IACCA,EAAgB,CAAC,EAAG,IAAK,CAAE5nE,MAAO,GACnC,CAAE,MAAOrJ,GAERixE,GAAkB,CACnB,CAGDh8D,EAAOjU,QAAUiwE,uDCZjBh8D,EAAOjU,QAAUuxE,gECAjBt9D,EAAOjU,QAAUgN,4DCAjBiH,EAAOjU,QAAU6G,+DCAjBoN,EAAOjU,QAAUqc,sECAjBpI,EAAOjU,QAAUwxE,iECAjBv9D,EAAOjU,QAAU8C,8DCAjBmR,EAAOjU,QAAUyxE,oECDjB,IAAIC,EAAa,EAAQ,uCAErBP,EAAQrxE,OAAOJ,UAAU0G,SACzB2N,EAAiBjU,OAAOJ,UAAUqU,eAwDtCE,EAAOjU,QAnBO,SAAiB+sE,EAAM54D,EAAUw9D,GAC3C,IAAKD,EAAWv9D,GACZ,MAAM,IAAIrR,UAAU,+BAGxB,IAAI8uE,EACAhkE,UAAUjK,QAAU,IACpBiuE,EAAWD,GAGU,mBAArBR,EAAMvxE,KAAKmtE,GA7CA,SAAsBxgE,EAAO4H,EAAUy9D,GACtD,IAAK,IAAIvyE,EAAI,EAAGwjB,EAAMtW,EAAM5I,OAAQtE,EAAIwjB,EAAKxjB,IACrC0U,EAAenU,KAAK2M,EAAOlN,KACX,MAAZuyE,EACAz9D,EAAS5H,EAAMlN,GAAIA,EAAGkN,GAEtB4H,EAASvU,KAAKgyE,EAAUrlE,EAAMlN,GAAIA,EAAGkN,GAIrD,CAoCQslE,CAAa9E,EAAM54D,EAAUy9D,GACN,iBAAT7E,EAnCF,SAAuB3gE,EAAQ+H,EAAUy9D,GACzD,IAAK,IAAIvyE,EAAI,EAAGwjB,EAAMzW,EAAOzI,OAAQtE,EAAIwjB,EAAKxjB,IAE1B,MAAZuyE,EACAz9D,EAAS/H,EAAOqlB,OAAOpyB,GAAIA,EAAG+M,GAE9B+H,EAASvU,KAAKgyE,EAAUxlE,EAAOqlB,OAAOpyB,GAAIA,EAAG+M,EAGzD,CA2BQ0lE,CAAc/E,EAAM54D,EAAUy9D,GAzBlB,SAAuB7pB,EAAQ5zC,EAAUy9D,GACzD,IAAK,IAAIrwE,KAAKwmD,EACNh0C,EAAenU,KAAKmoD,EAAQxmD,KACZ,MAAZqwE,EACAz9D,EAAS4zC,EAAOxmD,GAAIA,EAAGwmD,GAEvB5zC,EAASvU,KAAKgyE,EAAU7pB,EAAOxmD,GAAIA,EAAGwmD,GAItD,CAiBQgqB,CAAchF,EAAM54D,EAAUy9D,EAEtC,qECvDA,IACIT,EAAQrxE,OAAOJ,UAAU0G,SACzBga,EAAMxb,KAAKwb,IAGX4xD,EAAW,SAAkBxtE,EAAG6B,GAGhC,IAFA,IAAI+c,EAAM,GAED/jB,EAAI,EAAGA,EAAImF,EAAEb,OAAQtE,GAAK,EAC/B+jB,EAAI/jB,GAAKmF,EAAEnF,GAEf,IAAK,IAAIa,EAAI,EAAGA,EAAImG,EAAE1C,OAAQzD,GAAK,EAC/BkjB,EAAIljB,EAAIsE,EAAEb,QAAU0C,EAAEnG,GAG1B,OAAOkjB,CACX,EAqBAnP,EAAOjU,QAAU,SAAciyE,GAC3B,IAAI59D,EAASxU,KACb,GAAsB,mBAAXwU,GApCA,sBAoCyB88D,EAAM9iE,MAAMgG,GAC5C,MAAM,IAAIvR,UAxCE,kDAwCwBuR,GAyBxC,IAvBA,IAEI69D,EAFA76D,EAxBI,SAAe86D,EAASnjE,GAEhC,IADA,IAAIoU,EAAM,GACD/jB,EAAI2P,GAAU,EAAG9O,EAAI,EAAGb,EAAI8yE,EAAQxuE,OAAQtE,GAAK,EAAGa,GAAK,EAC9DkjB,EAAIljB,GAAKiyE,EAAQ9yE,GAErB,OAAO+jB,CACX,CAkBegvD,CAAMxkE,UAAW,GAqBxBykE,EAAcjyD,EAAI,EAAG/L,EAAO1Q,OAAS0T,EAAK1T,QAC1C2uE,EAAY,GACPjzE,EAAI,EAAGA,EAAIgzE,EAAahzE,IAC7BizE,EAAUjzE,GAAK,IAAMA,EAKzB,GAFA6yE,EAAQr+D,SAAS,SAAU,oBA3CnB,SAAUuP,EAAKmvD,GAEvB,IADA,IAAI/0D,EAAM,GACDne,EAAI,EAAGA,EAAI+jB,EAAIzf,OAAQtE,GAAK,EACjCme,GAAO4F,EAAI/jB,GACPA,EAAI,EAAI+jB,EAAIzf,SACZ6Z,GAAO+0D,GAGf,OAAO/0D,CACX,CAkCqDg1D,CAAMF,EAAW,KAAO,4CAAjEz+D,EAxBK,WACT,GAAIhU,gBAAgBqyE,EAAO,CACvB,IAAIx3D,EAASrG,EAAOhG,MAChBxO,KACAmyE,EAAS36D,EAAMzJ,YAEnB,OAAI9N,OAAO4a,KAAYA,EACZA,EAEJ7a,IACX,CACA,OAAOwU,EAAOhG,MACV4jE,EACAD,EAAS36D,EAAMzJ,WAGvB,IAUIyG,EAAO3U,UAAW,CAClB,IAAI+yE,EAAQ,WAAkB,EAC9BA,EAAM/yE,UAAY2U,EAAO3U,UACzBwyE,EAAMxyE,UAAY,IAAI+yE,EACtBA,EAAM/yE,UAAY,IACtB,CAEA,OAAOwyE,CACX,kECjFA,IAAIQ,EAAiB,EAAQ,kDAE7Bz+D,EAAOjU,QAAU6T,SAASnU,UAAUmY,MAAQ66D,kECF5C,IAAI79D,EAEA89D,EAAS,EAAQ,qCACjBC,EAAa,EAAQ,oCACrBC,EAAc,EAAQ,qCACtBC,EAAkB,EAAQ,mCAC1BpC,EAAe,EAAQ,sCACvBb,EAAa,EAAQ,oCACrBkD,EAAY,EAAQ,mCAEpBC,EAAYn/D,SAGZo/D,EAAwB,SAAUC,GACrC,IACC,OAAOF,EAAU,yBAA2BE,EAAmB,iBAAxDF,EACR,CAAE,MAAOh0E,GAAI,CACd,EAEIm0E,EAAQrzE,OAAO8b,yBACnB,GAAIu3D,EACH,IACCA,EAAM,CAAC,EAAG,GACX,CAAE,MAAOn0E,GACRm0E,EAAQ,IACT,CAGD,IAAIC,EAAiB,WACpB,MAAM,IAAIvD,CACX,EACIwD,EAAiBF,EACjB,WACF,IAGC,OAAOC,CACR,CAAE,MAAOE,GACR,IAEC,OAAOH,EAAMvlE,UAAW,UAAUhE,GACnC,CAAE,MAAO2pE,GACR,OAAOH,CACR,CACD,CACD,CAbE,GAcAA,EAEClC,EAAa,EAAQ,sCAAR,GACbsC,EAAW,EAAQ,oCAAR,GAEXC,EAAW3zE,OAAOwd,iBACrBk2D,EACG,SAAU3rE,GAAK,OAAOA,EAAEwV,SAAW,EACnC,MAGAq2D,EAAY,CAAC,EAEbC,EAAmC,oBAAfh0E,YAA+B8zE,EAAuBA,EAAS9zE,YAArBkV,EAE9D++D,EAAa,CAChBv2D,UAAW,KACX,mBAA8C,oBAAnBw2D,eAAiCh/D,EAAYg/D,eACxE,UAAW5zE,MACX,gBAAwC,oBAAhBqD,YAA8BuR,EAAYvR,YAClE,2BAA4B4tE,GAAcuC,EAAWA,EAAS,GAAGvmE,OAAOiH,aAAeU,EACvF,mCAAoCA,EACpC,kBAAmB6+D,EACnB,mBAAoBA,EACpB,2BAA4BA,EAC5B,2BAA4BA,EAC5B,YAAgC,oBAAZI,QAA0Bj/D,EAAYi/D,QAC1D,WAA8B,oBAAXvtE,OAAyBsO,EAAYtO,OACxD,kBAA4C,oBAAlBwtE,cAAgCl/D,EAAYk/D,cACtE,mBAA8C,oBAAnBC,eAAiCn/D,EAAYm/D,eACxE,YAAa52D,QACb,aAAkC,oBAAb62D,SAA2Bp/D,EAAYo/D,SAC5D,SAAUztD,KACV,cAAe0tD,UACf,uBAAwBC,mBACxB,cAAeC,UACf,uBAAwBC,mBACxB,UAAW1B,EACX,SAAU2B,KACV,cAAe1B,EACf,iBAA0C,oBAAjB2B,aAA+B1/D,EAAY0/D,aACpE,iBAA0C,oBAAjBC,aAA+B3/D,EAAY2/D,aACpE,yBAA0D,oBAAzBC,qBAAuC5/D,EAAY4/D,qBACpF,aAAczB,EACd,sBAAuBU,EACvB,cAAoC,oBAAdgB,UAA4B7/D,EAAY6/D,UAC9D,eAAsC,oBAAfC,WAA6B9/D,EAAY8/D,WAChE,eAAsC,oBAAfC,WAA6B//D,EAAY+/D,WAChE,aAAcjlE,SACd,UAAW8D,MACX,sBAAuBy9D,GAAcuC,EAAWA,EAASA,EAAS,GAAGvmE,OAAOiH,cAAgBU,EAC5F,SAA0B,iBAATuvC,KAAoBA,KAAOvvC,EAC5C,QAAwB,oBAARxK,IAAsBwK,EAAYxK,IAClD,yBAAyC,oBAARA,KAAwB6mE,GAAeuC,EAAuBA,GAAS,IAAIppE,KAAM6C,OAAOiH,aAAtCU,EACnF,SAAUjQ,KACV,WAAY8C,OACZ,WAAY5H,OACZ,eAAgBgyD,WAChB,aAAc7jD,SACd,YAAgC,oBAAZsL,QAA0B1E,EAAY0E,QAC1D,UAA4B,oBAAV4D,MAAwBtI,EAAYsI,MACtD,eAAgB01D,EAChB,mBAAoBC,EACpB,YAAgC,oBAAZ91D,QAA0BnI,EAAYmI,QAC1D,WAAY0J,OACZ,QAAwB,oBAARmB,IAAsBhT,EAAYgT,IAClD,yBAAyC,oBAARA,KAAwBqpD,GAAeuC,EAAuBA,GAAS,IAAI5rD,KAAM3a,OAAOiH,aAAtCU,EACnF,sBAAoD,oBAAtBrH,kBAAoCqH,EAAYrH,kBAC9E,WAAYhM,OACZ,4BAA6B0vE,GAAcuC,EAAWA,EAAS,GAAGvmE,OAAOiH,aAAeU,EACxF,WAAYq8D,EAAahkE,OAAS2H,EAClC,gBAAiB67D,EACjB,mBAAoB2C,EACpB,eAAgBM,EAChB,cAAe9D,EACf,eAAsC,oBAAflwE,WAA6BkV,EAAYlV,WAChE,sBAAoD,oBAAtBk1E,kBAAoChgE,EAAYggE,kBAC9E,gBAAwC,oBAAhBC,YAA8BjgE,EAAYigE,YAClE,gBAAwC,oBAAhBC,YAA8BlgE,EAAYkgE,YAClE,aAAchC,EACd,YAAgC,oBAAZiC,QAA0BngE,EAAYmgE,QAC1D,YAAgC,oBAAZC,QAA0BpgE,EAAYogE,QAC1D,YAAgC,oBAAZC,QAA0BrgE,EAAYqgE,SAG3D,GAAIzB,EACH,IACC,KAAKhlE,KACN,CAAE,MAAOzP,GAER,IAAIm2E,EAAa1B,EAASA,EAASz0E,IACnC40E,EAAW,qBAAuBuB,CACnC,CAGD,IAAIC,EAAS,SAASA,EAAO9tE,GAC5B,IAAIe,EACJ,GAAa,oBAATf,EACHe,EAAQ4qE,EAAsB,6BACxB,GAAa,wBAAT3rE,EACVe,EAAQ4qE,EAAsB,wBACxB,GAAa,6BAAT3rE,EACVe,EAAQ4qE,EAAsB,8BACxB,GAAa,qBAAT3rE,EAA6B,CACvC,IAAIsP,EAAKw+D,EAAO,4BACZx+D,IACHvO,EAAQuO,EAAGlX,UAEb,MAAO,GAAa,6BAAT4H,EAAqC,CAC/C,IAAI+tE,EAAMD,EAAO,oBACbC,GAAO5B,IACVprE,EAAQorE,EAAS4B,EAAI31E,WAEvB,CAIA,OAFAk0E,EAAWtsE,GAAQe,EAEZA,CACR,EAEIitE,EAAiB,CACpBj4D,UAAW,KACX,yBAA0B,CAAC,cAAe,aAC1C,mBAAoB,CAAC,QAAS,aAC9B,uBAAwB,CAAC,QAAS,YAAa,WAC/C,uBAAwB,CAAC,QAAS,YAAa,WAC/C,oBAAqB,CAAC,QAAS,YAAa,QAC5C,sBAAuB,CAAC,QAAS,YAAa,UAC9C,2BAA4B,CAAC,gBAAiB,aAC9C,mBAAoB,CAAC,yBAA0B,aAC/C,4BAA6B,CAAC,yBAA0B,YAAa,aACrE,qBAAsB,CAAC,UAAW,aAClC,sBAAuB,CAAC,WAAY,aACpC,kBAAmB,CAAC,OAAQ,aAC5B,mBAAoB,CAAC,QAAS,aAC9B,uBAAwB,CAAC,YAAa,aACtC,0BAA2B,CAAC,eAAgB,aAC5C,0BAA2B,CAAC,eAAgB,aAC5C,sBAAuB,CAAC,WAAY,aACpC,cAAe,CAAC,oBAAqB,aACrC,uBAAwB,CAAC,oBAAqB,YAAa,aAC3D,uBAAwB,CAAC,YAAa,aACtC,wBAAyB,CAAC,aAAc,aACxC,wBAAyB,CAAC,aAAc,aACxC,cAAe,CAAC,OAAQ,SACxB,kBAAmB,CAAC,OAAQ,aAC5B,iBAAkB,CAAC,MAAO,aAC1B,oBAAqB,CAAC,SAAU,aAChC,oBAAqB,CAAC,SAAU,aAChC,sBAAuB,CAAC,SAAU,YAAa,YAC/C,qBAAsB,CAAC,SAAU,YAAa,WAC9C,qBAAsB,CAAC,UAAW,aAClC,sBAAuB,CAAC,UAAW,YAAa,QAChD,gBAAiB,CAAC,UAAW,OAC7B,mBAAoB,CAAC,UAAW,UAChC,oBAAqB,CAAC,UAAW,WACjC,wBAAyB,CAAC,aAAc,aACxC,4BAA6B,CAAC,iBAAkB,aAChD,oBAAqB,CAAC,SAAU,aAChC,iBAAkB,CAAC,MAAO,aAC1B,+BAAgC,CAAC,oBAAqB,aACtD,oBAAqB,CAAC,SAAU,aAChC,oBAAqB,CAAC,SAAU,aAChC,yBAA0B,CAAC,cAAe,aAC1C,wBAAyB,CAAC,aAAc,aACxC,uBAAwB,CAAC,YAAa,aACtC,wBAAyB,CAAC,aAAc,aACxC,+BAAgC,CAAC,oBAAqB,aACtD,yBAA0B,CAAC,cAAe,aAC1C,yBAA0B,CAAC,cAAe,aAC1C,sBAAuB,CAAC,WAAY,aACpC,qBAAsB,CAAC,UAAW,aAClC,qBAAsB,CAAC,UAAW,cAG/BxF,EAAO,EAAQ,yCACf09D,EAAS,EAAQ,kCACjBC,EAAU39D,EAAKjY,KAAKiU,SAASjU,KAAMK,MAAMP,UAAUuP,QACnDwmE,EAAe59D,EAAKjY,KAAKiU,SAASxF,MAAOpO,MAAMP,UAAUg2E,QACzDC,EAAW99D,EAAKjY,KAAKiU,SAASjU,KAAM4B,OAAO9B,UAAU8P,SACrDomE,EAAY/9D,EAAKjY,KAAKiU,SAASjU,KAAM4B,OAAO9B,UAAUwH,OACtD2uE,EAAQh+D,EAAKjY,KAAKiU,SAASjU,KAAM8mB,OAAOhnB,UAAUykD,MAGlD2xB,EAAa,qGACbC,EAAe,WAiBfC,EAAmB,SAA0B1uE,EAAMooE,GACtD,IACIuG,EADAC,EAAgB5uE,EAOpB,GALIiuE,EAAOD,EAAgBY,KAE1BA,EAAgB,KADhBD,EAAQX,EAAeY,IACK,GAAK,KAG9BX,EAAO3B,EAAYsC,GAAgB,CACtC,IAAI7tE,EAAQurE,EAAWsC,GAIvB,GAHI7tE,IAAUqrE,IACbrrE,EAAQ+sE,EAAOc,SAEK,IAAV7tE,IAA0BqnE,EACpC,MAAM,IAAIG,EAAW,aAAevoE,EAAO,wDAG5C,MAAO,CACN2uE,MAAOA,EACP3uE,KAAM4uE,EACN7tE,MAAOA,EAET,CAEA,MAAM,IAAIqoE,EAAa,aAAeppE,EAAO,mBAC9C,EAEA2M,EAAOjU,QAAU,SAAsBsH,EAAMooE,GAC5C,GAAoB,iBAATpoE,GAAqC,IAAhBA,EAAK3D,OACpC,MAAM,IAAIksE,EAAW,6CAEtB,GAAIjiE,UAAUjK,OAAS,GAA6B,kBAAjB+rE,EAClC,MAAM,IAAIG,EAAW,6CAGtB,GAAmC,OAA/BgG,EAAM,cAAevuE,GACxB,MAAM,IAAIopE,EAAa,sFAExB,IAAI/H,EAtDc,SAAsBv8D,GACxC,IAAIiiE,EAAQuH,EAAUxpE,EAAQ,EAAG,GAC7BkiE,EAAOsH,EAAUxpE,GAAS,GAC9B,GAAc,MAAViiE,GAA0B,MAATC,EACpB,MAAM,IAAIoC,EAAa,kDACjB,GAAa,MAATpC,GAA0B,MAAVD,EAC1B,MAAM,IAAIqC,EAAa,kDAExB,IAAIh2D,EAAS,GAIb,OAHAi7D,EAASvpE,EAAQ0pE,GAAY,SAAU97D,EAAO6tC,EAAQsuB,EAAOC,GAC5D17D,EAAOA,EAAO/W,QAAUwyE,EAAQR,EAASS,EAAWL,EAAc,MAAQluB,GAAU7tC,CACrF,IACOU,CACR,CAyCa27D,CAAa/uE,GACrBgvE,EAAoB3N,EAAMhlE,OAAS,EAAIglE,EAAM,GAAK,GAElDgH,EAAYqG,EAAiB,IAAMM,EAAoB,IAAK5G,GAC5D6G,EAAoB5G,EAAUroE,KAC9Be,EAAQsnE,EAAUtnE,MAClBmuE,GAAqB,EAErBP,EAAQtG,EAAUsG,MAClBA,IACHK,EAAoBL,EAAM,GAC1BR,EAAa9M,EAAO6M,EAAQ,CAAC,EAAG,GAAIS,KAGrC,IAAK,IAAI52E,EAAI,EAAGo3E,GAAQ,EAAMp3E,EAAIspE,EAAMhlE,OAAQtE,GAAK,EAAG,CACvD,IAAIq3E,EAAO/N,EAAMtpE,GACbgvE,EAAQuH,EAAUc,EAAM,EAAG,GAC3BpI,EAAOsH,EAAUc,GAAO,GAC5B,IAEa,MAAVrI,GAA2B,MAAVA,GAA2B,MAAVA,GACtB,MAATC,GAAyB,MAATA,GAAyB,MAATA,IAElCD,IAAUC,EAEb,MAAM,IAAIoC,EAAa,wDASxB,GAPa,gBAATgG,GAA2BD,IAC9BD,GAAqB,GAMlBjB,EAAO3B,EAFX2C,EAAoB,KADpBD,GAAqB,IAAMI,GACmB,KAG7CruE,EAAQurE,EAAW2C,QACb,GAAa,MAATluE,EAAe,CACzB,KAAMquE,KAAQruE,GAAQ,CACrB,IAAKqnE,EACJ,MAAM,IAAIG,EAAW,sBAAwBvoE,EAAO,+CAErD,MACD,CACA,GAAI6rE,GAAU9zE,EAAI,GAAMspE,EAAMhlE,OAAQ,CACrC,IAAIstE,EAAOkC,EAAM9qE,EAAOquE,GAWvBruE,GAVDouE,IAAUxF,IASG,QAASA,KAAU,kBAAmBA,EAAKrnE,KAC/CqnE,EAAKrnE,IAELvB,EAAMquE,EAEhB,MACCD,EAAQlB,EAAOltE,EAAOquE,GACtBruE,EAAQA,EAAMquE,GAGXD,IAAUD,IACb5C,EAAW2C,GAAqBluE,EAElC,CACD,CACA,OAAOA,CACR,yDCpWA,IAEI8qE,EAFe,EAAQ,wCAEf5D,CAAa,qCAAqC,GAE9D,GAAI4D,EACH,IACCA,EAAM,GAAI,SACX,CAAE,MAAOn0E,GAERm0E,EAAQ,IACT,CAGDl/D,EAAOjU,QAAUmzE,6ECbjB,IAAIlD,EAAkB,EAAQ,8CAE1B0G,EAAyB,WAC5B,QAAS1G,CACV,EAEA0G,EAAuBC,wBAA0B,WAEhD,IAAK3G,EACJ,OAAO,KAER,IACC,OAA8D,IAAvDA,EAAgB,GAAI,SAAU,CAAE5nE,MAAO,IAAK1E,MACpD,CAAE,MAAO3E,GAER,OAAO,CACR,CACD,EAEAiV,EAAOjU,QAAU22E,wDCnBjB,IAAI/yD,EAAO,CACVvG,UAAW,KACX9O,IAAK,CAAC,GAGHsoE,EAAU/2E,OAGdmU,EAAOjU,QAAU,WAEhB,MAAO,CAAEqd,UAAWuG,GAAOrV,MAAQqV,EAAKrV,OAClCqV,aAAgBizD,EACvB,gECZA,IAAIC,EAA+B,oBAAX5pE,QAA0BA,OAC9C6pE,EAAgB,EAAQ,uCAE5B9iE,EAAOjU,QAAU,WAChB,MAA0B,mBAAf82E,IACW,mBAAX5pE,SACsB,iBAAtB4pE,EAAW,SACO,iBAAlB5pE,OAAO,QAEX6pE,MACR,0DCTA9iE,EAAOjU,QAAU,WAChB,GAAsB,mBAAXkN,QAAiE,mBAAjCpN,OAAO4b,sBAAwC,OAAO,EACjG,GAA+B,iBAApBxO,OAAOiH,SAAyB,OAAO,EAElD,IAAIuC,EAAM,CAAC,EACPukC,EAAM/tC,OAAO,QACb8pE,EAASl3E,OAAOm7C,GACpB,GAAmB,iBAARA,EAAoB,OAAO,EAEtC,GAA4C,oBAAxCn7C,OAAOJ,UAAU0G,SAASxG,KAAKq7C,GAA8B,OAAO,EACxE,GAA+C,oBAA3Cn7C,OAAOJ,UAAU0G,SAASxG,KAAKo3E,GAAiC,OAAO,EAY3E,IAAK/7B,KADLvkC,EAAIukC,GADS,GAEDvkC,EAAO,OAAO,EAC1B,GAA2B,mBAAhB5W,OAAO0Y,MAAmD,IAA5B1Y,OAAO0Y,KAAK9B,GAAK/S,OAAgB,OAAO,EAEjF,GAA0C,mBAA/B7D,OAAOm3E,qBAAiF,IAA3Cn3E,OAAOm3E,oBAAoBvgE,GAAK/S,OAAgB,OAAO,EAE/G,IAAIuzE,EAAOp3E,OAAO4b,sBAAsBhF,GACxC,GAAoB,IAAhBwgE,EAAKvzE,QAAgBuzE,EAAK,KAAOj8B,EAAO,OAAO,EAEnD,IAAKn7C,OAAOJ,UAAU8kB,qBAAqB5kB,KAAK8W,EAAKukC,GAAQ,OAAO,EAEpE,GAA+C,mBAApCn7C,OAAO8b,yBAAyC,CAC1D,IAAIrH,EAAazU,OAAO8b,yBAAyBlF,EAAKukC,GACtD,GAdY,KAcR1mC,EAAWlM,QAA8C,IAA1BkM,EAAW5F,WAAuB,OAAO,CAC7E,CAEA,OAAO,CACR,oECvCA,IAAIuiE,EAAa,EAAQ,uCAGzBj9D,EAAOjU,QAAU,WAChB,OAAOkxE,OAAkBhkE,OAAO8G,WACjC,2DCLA,IAAIpU,EAAOiU,SAASnU,UAAUE,KAC1Bu3E,EAAUr3E,OAAOJ,UAAUqU,eAC3B8D,EAAO,EAAQ,yCAGnB5D,EAAOjU,QAAU6X,EAAKjY,KAAKA,EAAMu3E,8CCNjCn3E,EAAQgE,KAAO,SAAUsJ,EAAQ0B,EAAQooE,EAAMC,EAAMC,GACnD,IAAIt4E,EAAG+G,EACHwxE,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTr4E,EAAI+3E,EAAQE,EAAS,EAAK,EAC1Bn4E,EAAIi4E,GAAQ,EAAI,EAChBl0E,EAAIoK,EAAO0B,EAAS3P,GAOxB,IALAA,GAAKF,EAELH,EAAIkE,GAAM,IAAOw0E,GAAU,EAC3Bx0E,KAAQw0E,EACRA,GAASH,EACFG,EAAQ,EAAG14E,EAAS,IAAJA,EAAWsO,EAAO0B,EAAS3P,GAAIA,GAAKF,EAAGu4E,GAAS,GAKvE,IAHA3xE,EAAI/G,GAAM,IAAO04E,GAAU,EAC3B14E,KAAQ04E,EACRA,GAASL,EACFK,EAAQ,EAAG3xE,EAAS,IAAJA,EAAWuH,EAAO0B,EAAS3P,GAAIA,GAAKF,EAAGu4E,GAAS,GAEvE,GAAU,IAAN14E,EACFA,EAAI,EAAIy4E,MACH,IAAIz4E,IAAMw4E,EACf,OAAOzxE,EAAIyN,IAAsBoL,KAAd1b,GAAK,EAAI,GAE5B6C,GAAQnB,KAAK+L,IAAI,EAAG0mE,GACpBr4E,GAAQy4E,CACV,CACA,OAAQv0E,GAAK,EAAI,GAAK6C,EAAInB,KAAK+L,IAAI,EAAG3R,EAAIq4E,EAC5C,EAEAr3E,EAAQiF,MAAQ,SAAUqI,EAAQjF,EAAO2G,EAAQooE,EAAMC,EAAMC,GAC3D,IAAIt4E,EAAG+G,EAAGpD,EACN40E,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChB30E,EAAe,KAATw0E,EAAczyE,KAAK+L,IAAI,GAAI,IAAM/L,KAAK+L,IAAI,GAAI,IAAM,EAC1DtR,EAAI+3E,EAAO,EAAKE,EAAS,EACzBn4E,EAAIi4E,EAAO,GAAK,EAChBl0E,EAAImF,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQzD,KAAK0O,IAAIjL,GAEboL,MAAMpL,IAAUA,IAAUuW,KAC5B7Y,EAAI0N,MAAMpL,GAAS,EAAI,EACvBrJ,EAAIw4E,IAEJx4E,EAAI4F,KAAKuO,MAAMvO,KAAK8O,IAAIrL,GAASzD,KAAK+O,KAClCtL,GAAS1F,EAAIiC,KAAK+L,IAAI,GAAI3R,IAAM,IAClCA,IACA2D,GAAK,IAGL0F,GADErJ,EAAIy4E,GAAS,EACN50E,EAAKF,EAELE,EAAK+B,KAAK+L,IAAI,EAAG,EAAI8mE,IAEpB90E,GAAK,IACf3D,IACA2D,GAAK,GAGH3D,EAAIy4E,GAASD,GACfzxE,EAAI,EACJ/G,EAAIw4E,GACKx4E,EAAIy4E,GAAS,GACtB1xE,GAAMsC,EAAQ1F,EAAK,GAAKiC,KAAK+L,IAAI,EAAG0mE,GACpCr4E,GAAQy4E,IAER1xE,EAAIsC,EAAQzD,KAAK+L,IAAI,EAAG8mE,EAAQ,GAAK7yE,KAAK+L,IAAI,EAAG0mE,GACjDr4E,EAAI,IAIDq4E,GAAQ,EAAG/pE,EAAO0B,EAAS3P,GAAS,IAAJ0G,EAAU1G,GAAKF,EAAG4G,GAAK,IAAKsxE,GAAQ,GAI3E,IAFAr4E,EAAKA,GAAKq4E,EAAQtxE,EAClBwxE,GAAQF,EACDE,EAAO,EAAGjqE,EAAO0B,EAAS3P,GAAS,IAAJL,EAAUK,GAAKF,EAAGH,GAAK,IAAKu4E,GAAQ,GAE1EjqE,EAAO0B,EAAS3P,EAAIF,IAAU,IAAJ+D,CAC5B,qDCpF6B,mBAAlBpD,OAAO+I,OAEhBoL,EAAOjU,QAAU,SAAkB23E,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAKj4E,UAAYI,OAAO+I,OAAO+uE,EAAUl4E,UAAW,CAClDqD,YAAa,CACXsF,MAAOsvE,EACPhpE,YAAY,EACZiE,UAAU,EACVC,cAAc,KAItB,EAGAoB,EAAOjU,QAAU,SAAkB23E,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAASp4E,UAAYk4E,EAAUl4E,UAC/Bi4E,EAAKj4E,UAAY,IAAIo4E,EACrBH,EAAKj4E,UAAUqD,YAAc40E,CAC/B,CACF,iECvBF,IAAII,EAAiB,EAAQ,0CAAR,GAGjBC,EAFY,EAAQ,wCAERC,CAAU,6BAEtBC,EAAsB,SAAqB7vE,GAC9C,QAAI0vE,GAAkB1vE,GAA0B,iBAAVA,GAAsB6E,OAAO8G,eAAe3L,IAGtD,uBAArB2vE,EAAU3vE,EAClB,EAEI8vE,EAAoB,SAAqB9vE,GAC5C,QAAI6vE,EAAoB7vE,IAGP,OAAVA,GACW,iBAAVA,GACiB,iBAAjBA,EAAM1E,QACb0E,EAAM1E,QAAU,GACK,mBAArBq0E,EAAU3vE,IACkB,sBAA5B2vE,EAAU3vE,EAAM+vE,OAClB,EAEIC,EAA6B,WAChC,OAAOH,EAAoBtqE,UAC5B,CAFgC,GAIhCsqE,EAAoBC,kBAAoBA,EAExClkE,EAAOjU,QAAUq4E,EAA4BH,EAAsBC,0DC9BnE,IAEIG,EACAC,EAHAC,EAAU3kE,SAASnU,UAAU0G,SAC7BqyE,EAAkC,iBAAZz7D,SAAoC,OAAZA,SAAoBA,QAAQ3O,MAG9E,GAA4B,mBAAjBoqE,GAAgE,mBAA1B34E,OAAO4O,eACvD,IACC4pE,EAAex4E,OAAO4O,eAAe,CAAC,EAAG,SAAU,CAClD9E,IAAK,WACJ,MAAM2uE,CACP,IAEDA,EAAmB,CAAC,EAEpBE,GAAa,WAAc,MAAM,EAAI,GAAG,KAAMH,EAC/C,CAAE,MAAOtqE,GACJA,IAAMuqE,IACTE,EAAe,KAEjB,MAEAA,EAAe,KAGhB,IAAIC,EAAmB,cACnBC,EAAe,SAA4BtwE,GAC9C,IACC,IAAIuwE,EAAQJ,EAAQ54E,KAAKyI,GACzB,OAAOqwE,EAAiB90D,KAAKg1D,EAC9B,CAAE,MAAO55E,GACR,OAAO,CACR,CACD,EAEI65E,EAAoB,SAA0BxwE,GACjD,IACC,OAAIswE,EAAatwE,KACjBmwE,EAAQ54E,KAAKyI,IACN,EACR,CAAE,MAAOrJ,GACR,OAAO,CACR,CACD,EACImyE,EAAQrxE,OAAOJ,UAAU0G,SAOzB2xE,EAAmC,mBAAX7qE,UAA2BA,OAAO8G,YAE1D8kE,IAAW,IAAK,CAAC,IAEjBC,EAAQ,WAA8B,OAAO,CAAO,EACxD,GAAwB,iBAAbC,SAAuB,CAEjC,IAAIC,EAAMD,SAASC,IACf9H,EAAMvxE,KAAKq5E,KAAS9H,EAAMvxE,KAAKo5E,SAASC,OAC3CF,EAAQ,SAA0B1wE,GAGjC,IAAKywE,IAAWzwE,UAA4B,IAAVA,GAA0C,iBAAVA,GACjE,IACC,IAAImV,EAAM2zD,EAAMvxE,KAAKyI,GACrB,OAlBU,+BAmBTmV,GAlBU,qCAmBPA,GAlBO,4BAmBPA,GAxBS,oBAyBTA,IACc,MAAbnV,EAAM,GACZ,CAAE,MAAOrJ,GAAU,CAEpB,OAAO,CACR,EAEF,CAEAiV,EAAOjU,QAAUy4E,EACd,SAAoBpwE,GACrB,GAAI0wE,EAAM1wE,GAAU,OAAO,EAC3B,IAAKA,EAAS,OAAO,EACrB,GAAqB,mBAAVA,GAAyC,iBAAVA,EAAsB,OAAO,EACvE,IACCowE,EAAapwE,EAAO,KAAMiwE,EAC3B,CAAE,MAAOt5E,GACR,GAAIA,IAAMu5E,EAAoB,OAAO,CACtC,CACA,OAAQI,EAAatwE,IAAUwwE,EAAkBxwE,EAClD,EACE,SAAoBA,GACrB,GAAI0wE,EAAM1wE,GAAU,OAAO,EAC3B,IAAKA,EAAS,OAAO,EACrB,GAAqB,mBAAVA,GAAyC,iBAAVA,EAAsB,OAAO,EACvE,GAAI0vE,EAAkB,OAAOc,EAAkBxwE,GAC/C,GAAIswE,EAAatwE,GAAU,OAAO,EAClC,IAAI6wE,EAAW/H,EAAMvxE,KAAKyI,GAC1B,QApDY,sBAoDR6wE,GAnDS,+BAmDeA,IAA0B,iBAAmBt1D,KAAKs1D,KACvEL,EAAkBxwE,EAC1B,0EClGD,IAcIonB,EAdA0hD,EAAQrxE,OAAOJ,UAAU0G,SACzBoyE,EAAU3kE,SAASnU,UAAU0G,SAC7B+yE,EAAY,sBACZpB,EAAiB,EAAQ,0CAAR,GACjBtE,EAAW3zE,OAAOwd,eAYtBrJ,EAAOjU,QAAU,SAA6B4W,GAC7C,GAAkB,mBAAPA,EACV,OAAO,EAER,GAAIuiE,EAAUv1D,KAAK40D,EAAQ54E,KAAKgX,IAC/B,OAAO,EAER,IAAKmhE,EAEJ,MAAe,+BADL5G,EAAMvxE,KAAKgX,GAGtB,IAAK68D,EACJ,OAAO,EAER,QAAiC,IAAtBhkD,EAAmC,CAC7C,IAAI2pD,EA1BiB,WACtB,IAAKrB,EACJ,OAAO,EAER,IACC,OAAOlkE,SAAS,wBAATA,EACR,CAAE,MAAO7U,GACT,CACD,CAkBsBq6E,GACpB5pD,IAAoB2pD,GAAgB3F,EAAS2F,EAC9C,CACA,OAAO3F,EAAS78D,KAAQ6Y,CACzB,8DCjCAxb,EAAOjU,QAAU,SAAeqI,GAC/B,OAAOA,GAAUA,CAClB,2DCJA,IAAImnE,EAAW,EAAQ,qCACnBhkE,EAAS,EAAQ,6CAEjBknE,EAAiB,EAAQ,2CACzB4G,EAAc,EAAQ,qCACtBC,EAAO,EAAQ,iCAEfC,EAAWhK,EAAS8J,IAAe5xE,QAIvC8D,EAAOguE,EAAU,CAChBF,YAAaA,EACb5G,eAAgBA,EAChB6G,KAAMA,IAGPtlE,EAAOjU,QAAUw5E,8DCjBjB,IAAI9G,EAAiB,EAAQ,2CAE7Bz+D,EAAOjU,QAAU,WAChB,OAAI0H,OAAO+L,OAAS/L,OAAO+L,MAAMD,OAAS9L,OAAO+L,MAAM,KAC/C/L,OAAO+L,MAERi/D,CACR,0DCPA,IAAIlnE,EAAS,EAAQ,6CACjB8tE,EAAc,EAAQ,qCAI1BrlE,EAAOjU,QAAU,WAChB,IAAIw5E,EAAWF,IAMf,OALA9tE,EAAO9D,OAAQ,CAAE+L,MAAO+lE,GAAY,CACnC/lE,MAAO,WACN,OAAO/L,OAAO+L,QAAU+lE,CACzB,IAEMA,CACR,mECbA,IAAIC,EAAkB,EAAQ,6CAG9BxlE,EAAOjU,QAAU,SAAsBqI,GACtC,QAASoxE,EAAgBpxE,EAC1B,iECLA,IAAIic,EAAc,SAAUjc,GAC3B,OAAOA,GAAUA,CAClB,EAEA4L,EAAOjU,QAAU,SAAYwE,EAAG6B,GAC/B,OAAU,IAAN7B,GAAiB,IAAN6B,EACP,EAAI7B,GAAM,EAAI6B,EAElB7B,IAAM6B,MAGNie,EAAY9f,KAAM8f,EAAYje,GAInC,8DCfA,IAAImF,EAAS,EAAQ,6CACjBgkE,EAAW,EAAQ,qCAEnBkD,EAAiB,EAAQ,8CACzB4G,EAAc,EAAQ,wCACtBC,EAAO,EAAQ,oCAEfC,EAAWhK,EAAS8J,IAAex5E,QAEvC0L,EAAOguE,EAAU,CAChBF,YAAaA,EACb5G,eAAgBA,EAChB6G,KAAMA,IAGPtlE,EAAOjU,QAAUw5E,iECfjB,IAAI9G,EAAiB,EAAQ,8CAE7Bz+D,EAAOjU,QAAU,WAChB,MAA4B,mBAAdF,OAAOskB,GAAoBtkB,OAAOskB,GAAKsuD,CACtD,6DCJA,IAAI4G,EAAc,EAAQ,wCACtB9tE,EAAS,EAAQ,6CAErByI,EAAOjU,QAAU,WAChB,IAAIw5E,EAAWF,IAMf,OALA9tE,EAAO1L,OAAQ,CAAEskB,GAAIo1D,GAAY,CAChCp1D,GAAI,WACH,OAAOtkB,OAAOskB,KAAOo1D,CACtB,IAEMA,CACR,yECXA,IAAIE,EACJ,IAAK55E,OAAO0Y,KAAM,CAEjB,IAAIiE,EAAM3c,OAAOJ,UAAUqU,eACvBo9D,EAAQrxE,OAAOJ,UAAU0G,SACzBuzE,EAAS,EAAQ,6CACjBC,EAAe95E,OAAOJ,UAAU8kB,qBAChCq1D,GAAkBD,EAAah6E,KAAK,CAAEwG,SAAU,MAAQ,YACxD0zE,EAAkBF,EAAah6E,MAAK,WAAa,GAAG,aACpDm6E,EAAY,CACf,WACA,iBACA,UACA,iBACA,gBACA,uBACA,eAEGC,EAA6B,SAAU/2E,GAC1C,IAAI00E,EAAO10E,EAAEF,YACb,OAAO40E,GAAQA,EAAKj4E,YAAcuD,CACnC,EACIg3E,EAAe,CAClBC,mBAAmB,EACnBC,UAAU,EACVC,WAAW,EACXC,QAAQ,EACRC,eAAe,EACfC,SAAS,EACTC,cAAc,EACdC,aAAa,EACbC,wBAAwB,EACxBC,uBAAuB,EACvBC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,aAAa,EACbC,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,EACpBC,SAAS,GAENC,EAA4B,WAE/B,GAAsB,oBAAX3nE,OAA0B,OAAO,EAC5C,IAAK,IAAIvS,KAAKuS,OACb,IACC,IAAKmmE,EAAa,IAAM14E,IAAMkb,EAAI7c,KAAKkU,OAAQvS,IAAoB,OAAduS,OAAOvS,IAAoC,iBAAduS,OAAOvS,GACxF,IACCy4E,EAA2BlmE,OAAOvS,GACnC,CAAE,MAAOvC,GACR,OAAO,CACR,CAEF,CAAE,MAAOA,GACR,OAAO,CACR,CAED,OAAO,CACR,CAjB+B,GA8B/B06E,EAAW,SAAc3xB,GACxB,IAAI2zB,EAAsB,OAAX3zB,GAAqC,iBAAXA,EACrC4zB,EAAoC,sBAAvBxK,EAAMvxE,KAAKmoD,GACxB6zB,EAAcjC,EAAO5xB,GACrB8zB,EAAWH,GAAmC,oBAAvBvK,EAAMvxE,KAAKmoD,GAClC+zB,EAAU,GAEd,IAAKJ,IAAaC,IAAeC,EAChC,MAAM,IAAI94E,UAAU,sCAGrB,IAAIi5E,EAAYjC,GAAmB6B,EACnC,GAAIE,GAAY9zB,EAAOpkD,OAAS,IAAM8Y,EAAI7c,KAAKmoD,EAAQ,GACtD,IAAK,IAAI1oD,EAAI,EAAGA,EAAI0oD,EAAOpkD,SAAUtE,EACpCy8E,EAAQhvE,KAAKtL,OAAOnC,IAItB,GAAIu8E,GAAe7zB,EAAOpkD,OAAS,EAClC,IAAK,IAAIzD,EAAI,EAAGA,EAAI6nD,EAAOpkD,SAAUzD,EACpC47E,EAAQhvE,KAAKtL,OAAOtB,SAGrB,IAAK,IAAIoH,KAAQygD,EACVg0B,GAAsB,cAATz0E,IAAyBmV,EAAI7c,KAAKmoD,EAAQzgD,IAC5Dw0E,EAAQhvE,KAAKtL,OAAO8F,IAKvB,GAAIuyE,EAGH,IAFA,IAAImC,EA3CqC,SAAU/4E,GAEpD,GAAsB,oBAAX6Q,SAA2B2nE,EACrC,OAAOzB,EAA2B/2E,GAEnC,IACC,OAAO+2E,EAA2B/2E,EACnC,CAAE,MAAOjE,GACR,OAAO,CACR,CACD,CAiCwBi9E,CAAqCl0B,GAElDxmD,EAAI,EAAGA,EAAIw4E,EAAUp2E,SAAUpC,EACjCy6E,GAAoC,gBAAjBjC,EAAUx4E,KAAyBkb,EAAI7c,KAAKmoD,EAAQgyB,EAAUx4E,KACtFu6E,EAAQhvE,KAAKitE,EAAUx4E,IAI1B,OAAOu6E,CACR,CACD,CACA7nE,EAAOjU,QAAU05E,gECvHjB,IAAIxyE,EAAQjH,MAAMP,UAAUwH,MACxByyE,EAAS,EAAQ,6CAEjBuC,EAAWp8E,OAAO0Y,KAClBkhE,EAAWwC,EAAW,SAAcj5E,GAAK,OAAOi5E,EAASj5E,EAAI,EAAI,EAAQ,gDAEzEk5E,EAAer8E,OAAO0Y,KAE1BkhE,EAASH,KAAO,WACf,GAAIz5E,OAAO0Y,KAAM,CAChB,IAAI4jE,EAA0B,WAE7B,IAAI/kE,EAAOvX,OAAO0Y,KAAK5K,WACvB,OAAOyJ,GAAQA,EAAK1T,SAAWiK,UAAUjK,MAC1C,CAJ6B,CAI3B,EAAG,GACAy4E,IACJt8E,OAAO0Y,KAAO,SAAcuvC,GAC3B,OAAI4xB,EAAO5xB,GACHo0B,EAAaj1E,EAAMtH,KAAKmoD,IAEzBo0B,EAAap0B,EACrB,EAEF,MACCjoD,OAAO0Y,KAAOkhE,EAEf,OAAO55E,OAAO0Y,MAAQkhE,CACvB,EAEAzlE,EAAOjU,QAAU05E,gEC7BjB,IAAIvI,EAAQrxE,OAAOJ,UAAU0G,SAE7B6N,EAAOjU,QAAU,SAAqBqI,GACrC,IAAImV,EAAM2zD,EAAMvxE,KAAKyI,GACjBsxE,EAAiB,uBAARn8D,EASb,OARKm8D,IACJA,EAAiB,mBAARn8D,GACE,OAAVnV,GACiB,iBAAVA,GACiB,iBAAjBA,EAAM1E,QACb0E,EAAM1E,QAAU,GACa,sBAA7BwtE,EAAMvxE,KAAKyI,EAAM+vE,SAEZuB,CACR,2ECbA,IAAI0C,EAAa,EAAQ,uCACrBnL,EAAa,EAAQ,sCAAR,GACb+G,EAAY,EAAQ,yCACpBqE,EAAWx8E,OACXy8E,EAAQtE,EAAU,wBAClBuE,EAAoBvE,EAAU,yCAC9BwE,EAAqBvL,EAAapxE,OAAO4b,sBAAwB,KAGrEzH,EAAOjU,QAAU,SAAgBqU,EAAQqoE,GACxC,GAAc,MAAVroE,EAAkB,MAAM,IAAIvR,UAAU,4BAC1C,IAAI65E,EAAKL,EAASjoE,GAClB,GAAyB,IAArBzG,UAAUjK,OACb,OAAOg5E,EAER,IAAK,IAAIz5E,EAAI,EAAGA,EAAI0K,UAAUjK,SAAUT,EAAG,CAC1C,IAAIM,EAAO84E,EAAS1uE,UAAU1K,IAG1BsV,EAAO6jE,EAAW74E,GAClBo5E,EAAa1L,IAAepxE,OAAO4b,uBAAyB+gE,GAChE,GAAIG,EAEH,IADA,IAAI1F,EAAO0F,EAAWp5E,GACbtD,EAAI,EAAGA,EAAIg3E,EAAKvzE,SAAUzD,EAAG,CACrC,IAAIuU,EAAMyiE,EAAKh3E,GACXs8E,EAAkBh5E,EAAMiR,IAC3B8nE,EAAM/jE,EAAM/D,EAEd,CAID,IAAK,IAAIpV,EAAI,EAAGA,EAAImZ,EAAK7U,SAAUtE,EAAG,CACrC,IAAIw9E,EAAUrkE,EAAKnZ,GACnB,GAAIm9E,EAAkBh5E,EAAMq5E,GAAU,CACrC,IAAIC,EAAYt5E,EAAKq5E,GACrBF,EAAGE,GAAWC,CACf,CACD,CACD,CAEA,OAAOH,CACR,qEC3CA,IAAIjK,EAAiB,EAAQ,kDAyC7Bz+D,EAAOjU,QAAU,WAChB,OAAKF,OAAOi9E,OAxCqB,WACjC,IAAKj9E,OAAOi9E,OACX,OAAO,EASR,IAHA,IAAIv/D,EAAM,uBACNw/D,EAAUx/D,EAAIjK,MAAM,IACpBuP,EAAM,CAAC,EACFzjB,EAAI,EAAGA,EAAI29E,EAAQr5E,SAAUtE,EACrCyjB,EAAIk6D,EAAQ39E,IAAM29E,EAAQ39E,GAE3B,IAAIqX,EAAM5W,OAAOi9E,OAAO,CAAC,EAAGj6D,GACxB9L,EAAS,GACb,IAAK,IAAIzV,KAAKmV,EACbM,GAAUzV,EAEX,OAAOic,IAAQxG,CAChB,CAuBKimE,IArB4B,WAChC,IAAKn9E,OAAOi9E,SAAWj9E,OAAOo9E,kBAC7B,OAAO,EAMR,IAAIC,EAAUr9E,OAAOo9E,kBAAkB,CAAE,EAAG,IAC5C,IACCp9E,OAAOi9E,OAAOI,EAAS,KACxB,CAAE,MAAOn+E,GACR,MAAsB,MAAfm+E,EAAQ,EAChB,CACA,OAAO,CACR,CASKC,GAFI1K,EAKD5yE,OAAOi9E,OARNrK,CAST,yECnDAz+D,EAAOjU,QAAU,CAChB,eACA,eACA,YACA,aACA,aACA,aACA,oBACA,cACA,cACA,gBACA,2DCbD,IAOIq9E,EACAC,EARA5lE,EAAUzD,EAAOjU,QAAU,CAAC,EAUhC,SAASu9E,IACL,MAAM,IAAIvwE,MAAM,kCACpB,CACA,SAASwwE,IACL,MAAM,IAAIxwE,MAAM,oCACpB,CAqBA,SAASywE,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,EACjC,CAAE,MAAM1+E,GACJ,IAEI,OAAOq+E,EAAiBz9E,KAAK,KAAM89E,EAAK,EAC5C,CAAE,MAAM1+E,GAEJ,OAAOq+E,EAAiBz9E,KAAKC,KAAM69E,EAAK,EAC5C,CACJ,CAGJ,EA5CC,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,CAE3B,CAAE,MAAOv+E,GACLq+E,EAAmBE,CACvB,CACA,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,CAE7B,CAAE,MAAOx+E,GACLs+E,EAAqBE,CACzB,CACJ,CAnBA,GAwEA,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAal6E,OACbm6E,EAAQD,EAAa5uE,OAAO6uE,GAE5BE,GAAc,EAEdF,EAAMn6E,QACNu6E,IAER,CAEA,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAIl7D,EAAMi7D,EAAMn6E,OACVkf,GAAK,CAGP,IAFAg7D,EAAeC,EACfA,EAAQ,KACCE,EAAan7D,GACdg7D,GACAA,EAAaG,GAAYI,MAGjCJ,GAAc,EACdn7D,EAAMi7D,EAAMn6E,MAChB,CACAk6E,EAAe,KACfE,GAAW,EAnEf,SAAyBM,GACrB,GAAIf,IAAuBM,aAEvB,OAAOA,aAAaS,GAGxB,IAAKf,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAaS,GAExB,IAEI,OAAOf,EAAmBe,EAC9B,CAAE,MAAOr/E,GACL,IAEI,OAAOs+E,EAAmB19E,KAAK,KAAMy+E,EACzC,CAAE,MAAOr/E,GAGL,OAAOs+E,EAAmB19E,KAAKC,KAAMw+E,EACzC,CACJ,CAIJ,CA0CIC,CAAgBH,EAlBhB,CAmBJ,CAgBA,SAASI,EAAKb,EAAKnxE,GACf1M,KAAK69E,IAAMA,EACX79E,KAAK0M,MAAQA,CACjB,CAWA,SAASiyE,IAAQ,CA5BjB9mE,EAAQ+mE,SAAW,SAAUf,GACzB,IAAIrmE,EAAO,IAAIpX,MAAM2N,UAAUjK,OAAS,GACxC,GAAIiK,UAAUjK,OAAS,EACnB,IAAK,IAAItE,EAAI,EAAGA,EAAIuO,UAAUjK,OAAQtE,IAClCgY,EAAKhY,EAAI,GAAKuO,UAAUvO,GAGhCy+E,EAAMhxE,KAAK,IAAIyxE,EAAKb,EAAKrmE,IACJ,IAAjBymE,EAAMn6E,QAAiBo6E,GACvBN,EAAWS,EAEnB,EAOAK,EAAK7+E,UAAU0+E,IAAM,WACjBv+E,KAAK69E,IAAIrvE,MAAM,KAAMxO,KAAK0M,MAC9B,EACAmL,EAAQgnE,MAAQ,UAChBhnE,EAAQinE,SAAU,EAClBjnE,EAAQknE,IAAM,CAAC,EACflnE,EAAQmnE,KAAO,GACfnnE,EAAQonE,QAAU,GAClBpnE,EAAQqnE,SAAW,CAAC,EAIpBrnE,EAAQsnE,GAAKR,EACb9mE,EAAQunE,YAAcT,EACtB9mE,EAAQwnE,KAAOV,EACf9mE,EAAQynE,IAAMX,EACd9mE,EAAQ0nE,eAAiBZ,EACzB9mE,EAAQ2nE,mBAAqBb,EAC7B9mE,EAAQ4nE,KAAOd,EACf9mE,EAAQ6nE,gBAAkBf,EAC1B9mE,EAAQ8nE,oBAAsBhB,EAE9B9mE,EAAQ+nE,UAAY,SAAUn4E,GAAQ,MAAO,EAAG,EAEhDoQ,EAAQgoE,QAAU,SAAUp4E,GACxB,MAAM,IAAI0F,MAAM,mCACpB,EAEA0K,EAAQioE,IAAM,WAAc,MAAO,GAAI,EACvCjoE,EAAQkoE,MAAQ,SAAU9U,GACtB,MAAM,IAAI99D,MAAM,iCACpB,EACA0K,EAAQmoE,MAAQ,WAAa,OAAO,CAAG,mDCrLvC,IAAIvyE,EAAS,EAAQ,kCACjBqc,EAASrc,EAAOqc,OAGpB,SAASm2D,EAAW5Q,EAAKC,GACvB,IAAK,IAAI16D,KAAOy6D,EACdC,EAAI16D,GAAOy6D,EAAIz6D,EAEnB,CASA,SAASsrE,EAAYvrE,EAAK+0D,EAAkB5lE,GAC1C,OAAOgmB,EAAOnV,EAAK+0D,EAAkB5lE,EACvC,CAVIgmB,EAAOnmB,MAAQmmB,EAAOnqB,OAASmqB,EAAOjlB,aAAeilB,EAAO9a,gBAC9DoF,EAAOjU,QAAUsN,GAGjBwyE,EAAUxyE,EAAQtN,GAClBA,EAAQ2pB,OAASo2D,GAOnBA,EAAWrgF,UAAYI,OAAO+I,OAAO8gB,EAAOjqB,WAG5CogF,EAAUn2D,EAAQo2D,GAElBA,EAAWv8E,KAAO,SAAUgR,EAAK+0D,EAAkB5lE,GACjD,GAAmB,iBAAR6Q,EACT,MAAM,IAAI1R,UAAU,iCAEtB,OAAO6mB,EAAOnV,EAAK+0D,EAAkB5lE,EACvC,EAEAo8E,EAAWvgF,MAAQ,SAAUwH,EAAM9B,EAAMskE,GACvC,GAAoB,iBAATxiE,EACT,MAAM,IAAIlE,UAAU,6BAEtB,IAAI0kE,EAAM79C,EAAO3iB,GAUjB,YATa6N,IAAT3P,EACsB,iBAAbskE,EACThC,EAAItiE,KAAKA,EAAMskE,GAEfhC,EAAItiE,KAAKA,GAGXsiE,EAAItiE,KAAK,GAEJsiE,CACT,EAEAuY,EAAWr7E,YAAc,SAAUsC,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIlE,UAAU,6BAEtB,OAAO6mB,EAAO3iB,EAChB,EAEA+4E,EAAWlxE,gBAAkB,SAAU7H,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIlE,UAAU,6BAEtB,OAAOwK,EAAO67D,WAAWniE,EAC3B,wEC9DA,IAAIuoE,EAAe,EAAQ,yCACvB/jE,EAAS,EAAQ,gDACjBw0E,EAAiB,EAAQ,mDAAR,GACjBC,EAAO,EAAQ,gCAEfpQ,EAAa,EAAQ,oCACrBqQ,EAAS3Q,EAAa,gBAG1Bt7D,EAAOjU,QAAU,SAA2B4W,EAAIjT,GAC/C,GAAkB,mBAAPiT,EACV,MAAM,IAAIi5D,EAAW,0BAEtB,GAAsB,iBAAXlsE,GAAuBA,EAAS,GAAKA,EAAS,YAAcu8E,EAAOv8E,KAAYA,EACzF,MAAM,IAAIksE,EAAW,8CAGtB,IAAImB,EAAQpjE,UAAUjK,OAAS,KAAOiK,UAAU,GAE5CuyE,GAA+B,EAC/BC,GAA2B,EAC/B,GAAI,WAAYxpE,GAAMqpE,EAAM,CAC3B,IAAIhP,EAAOgP,EAAKrpE,EAAI,UAChBq6D,IAASA,EAAKp+D,eACjBstE,GAA+B,GAE5BlP,IAASA,EAAKr+D,WACjBwtE,GAA2B,EAE7B,CASA,OAPID,GAAgCC,IAA6BpP,KAC5DgP,EACHx0E,EAA4C,EAAM,SAAU7H,GAAQ,GAAM,GAE1E6H,EAA4C,EAAM,SAAU7H,IAGvDiT,CACR,6CCzCA,IAAI+S,EAAS,gDAGb,SAAS+P,EAAM2mD,EAAWC,GACxBzgF,KAAK0gF,OAAS52D,EAAOnqB,MAAM6gF,GAC3BxgF,KAAK2gF,WAAaF,EAClBzgF,KAAK4gF,WAAaJ,EAClBxgF,KAAKuX,KAAO,CACd,CAEAsiB,EAAKh6B,UAAU6jD,OAAS,SAAU71C,EAAMgzE,GAClB,iBAAThzE,IACTgzE,EAAMA,GAAO,OACbhzE,EAAOic,EAAOnmB,KAAKkK,EAAMgzE,IAQ3B,IALA,IAAIC,EAAQ9gF,KAAK0gF,OACbF,EAAYxgF,KAAK4gF,WACjB98E,EAAS+J,EAAK/J,OACdmxB,EAAQj1B,KAAKuX,KAERpI,EAAS,EAAGA,EAASrL,GAAS,CAIrC,IAHA,IAAIi9E,EAAW9rD,EAAQurD,EACnBQ,EAAYj8E,KAAKuJ,IAAIxK,EAASqL,EAAQqxE,EAAYO,GAE7CvhF,EAAI,EAAGA,EAAIwhF,EAAWxhF,IAC7BshF,EAAMC,EAAWvhF,GAAKqO,EAAKsB,EAAS3P,GAItC2P,GAAU6xE,GADV/rD,GAAS+rD,GAGIR,GAAe,GAC1BxgF,KAAKihF,QAAQH,EAEjB,CAGA,OADA9gF,KAAKuX,MAAQzT,EACN9D,IACT,EAEA65B,EAAKh6B,UAAU8jD,OAAS,SAAUk9B,GAChC,IAAIK,EAAMlhF,KAAKuX,KAAOvX,KAAK4gF,WAE3B5gF,KAAK0gF,OAAOQ,GAAO,IAInBlhF,KAAK0gF,OAAOr7E,KAAK,EAAG67E,EAAM,GAEtBA,GAAOlhF,KAAK2gF,aACd3gF,KAAKihF,QAAQjhF,KAAK0gF,QAClB1gF,KAAK0gF,OAAOr7E,KAAK,IAGnB,IAAIunD,EAAmB,EAAZ5sD,KAAKuX,KAGhB,GAAIq1C,GAAQ,WACV5sD,KAAK0gF,OAAOn7E,cAAcqnD,EAAM5sD,KAAK4gF,WAAa,OAG7C,CACL,IAAIO,GAAkB,WAAPv0B,KAAuB,EAClCw0B,GAAYx0B,EAAOu0B,GAAW,WAElCnhF,KAAK0gF,OAAOn7E,cAAc67E,EAAUphF,KAAK4gF,WAAa,GACtD5gF,KAAK0gF,OAAOn7E,cAAc47E,EAASnhF,KAAK4gF,WAAa,EACvD,CAEA5gF,KAAKihF,QAAQjhF,KAAK0gF,QAClB,IAAI/zD,EAAO3sB,KAAKqhF,QAEhB,OAAOR,EAAMl0D,EAAKpmB,SAASs6E,GAAOl0D,CACpC,EAEAkN,EAAKh6B,UAAUohF,QAAU,WACvB,MAAM,IAAI9zE,MAAM,0CAClB,EAEAiH,EAAOjU,QAAU05B,8CChFjB,IAAI15B,EAAUiU,EAAOjU,QAAU,SAAcmhF,GAC3CA,EAAYA,EAAUtzE,cAEtB,IAAIuzE,EAAYphF,EAAQmhF,GACxB,IAAKC,EAAW,MAAM,IAAIp0E,MAAMm0E,EAAY,+CAE5C,OAAO,IAAIC,CACb,EAEAphF,EAAQqhF,IAAM,EAAQ,gCACtBrhF,EAAQshF,KAAO,EAAQ,iCACvBthF,EAAQuhF,OAAS,EAAQ,mCACzBvhF,EAAQsjD,OAAS,EAAQ,mCACzBtjD,EAAQwhF,OAAS,EAAQ,mCACzBxhF,EAAQyhF,OAAS,EAAQ,6ECNzB,IAAIC,EAAW,EAAQ,+CACnBhoD,EAAO,EAAQ,iCACf/P,EAAS,gDAETze,EAAI,CACN,WAAY,YAAY,YAAgB,WAGtCT,EAAI,IAAIxK,MAAM,IAElB,SAAS0hF,IACP9hF,KAAK+hF,OACL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,GAAI,GACtB,CAkBA,SAASiiF,EAAQ/Y,GACf,OAAQA,GAAO,GAAOA,IAAQ,CAChC,CAEA,SAASgZ,EAAI7+E,EAAGmD,EAAG1D,EAAGxD,GACpB,OAAU,IAAN+D,EAAiBmD,EAAI1D,GAAQ0D,EAAKlH,EAC5B,IAAN+D,EAAiBmD,EAAI1D,EAAM0D,EAAIlH,EAAMwD,EAAIxD,EACtCkH,EAAI1D,EAAIxD,CACjB,CAxBAuiF,EAASC,EAAKjoD,GAEdioD,EAAIjiF,UAAUkiF,KAAO,WAOnB,OANA/hF,KAAKmiF,GAAK,WACVniF,KAAKoiF,GAAK,WACVpiF,KAAKqiF,GAAK,WACVriF,KAAKsiF,GAAK,UACVtiF,KAAKuiF,GAAK,WAEHviF,IACT,EAgBA8hF,EAAIjiF,UAAUohF,QAAU,SAAU7/E,GAShC,IARA,IAfc8nE,EAeVt+D,EAAI5K,KAAKgiF,GAETr9E,EAAc,EAAV3E,KAAKmiF,GACT37E,EAAc,EAAVxG,KAAKoiF,GACTt/E,EAAc,EAAV9C,KAAKqiF,GACT/iF,EAAc,EAAVU,KAAKsiF,GACTnjF,EAAc,EAAVa,KAAKuiF,GAEJ/iF,EAAI,EAAGA,EAAI,KAAMA,EAAGoL,EAAEpL,GAAK4B,EAAEgD,YAAgB,EAAJ5E,GAClD,KAAOA,EAAI,KAAMA,EAAGoL,EAAEpL,GAAKoL,EAAEpL,EAAI,GAAKoL,EAAEpL,EAAI,GAAKoL,EAAEpL,EAAI,IAAMoL,EAAEpL,EAAI,IAEnE,IAAK,IAAIa,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,IAAIgD,KAAOhD,EAAI,IACXjB,EAAoD,IA5B5C8pE,EA4BGvkE,IA3BF,EAAMukE,IAAQ,IA2BPgZ,EAAG7+E,EAAGmD,EAAG1D,EAAGxD,GAAKH,EAAIyL,EAAEvK,GAAKgL,EAAEhI,GAElDlE,EAAIG,EACJA,EAAIwD,EACJA,EAAIm/E,EAAOz7E,GACXA,EAAI7B,EACJA,EAAIvF,CACN,CAEAY,KAAKmiF,GAAMx9E,EAAI3E,KAAKmiF,GAAM,EAC1BniF,KAAKoiF,GAAM57E,EAAIxG,KAAKoiF,GAAM,EAC1BpiF,KAAKqiF,GAAMv/E,EAAI9C,KAAKqiF,GAAM,EAC1BriF,KAAKsiF,GAAMhjF,EAAIU,KAAKsiF,GAAM,EAC1BtiF,KAAKuiF,GAAMpjF,EAAIa,KAAKuiF,GAAM,CAC5B,EAEAT,EAAIjiF,UAAUwhF,MAAQ,WACpB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAQ3B,OANAiG,EAAExF,aAAuB,EAAVtF,KAAKmiF,GAAQ,GAC5Br3E,EAAExF,aAAuB,EAAVtF,KAAKoiF,GAAQ,GAC5Bt3E,EAAExF,aAAuB,EAAVtF,KAAKqiF,GAAQ,GAC5Bv3E,EAAExF,aAAuB,EAAVtF,KAAKsiF,GAAQ,IAC5Bx3E,EAAExF,aAAuB,EAAVtF,KAAKuiF,GAAQ,IAErBz3E,CACT,EAEAsJ,EAAOjU,QAAU2hF,6CCpFjB,IAAID,EAAW,EAAQ,+CACnBhoD,EAAO,EAAQ,iCACf/P,EAAS,gDAETze,EAAI,CACN,WAAY,YAAY,YAAgB,WAGtCT,EAAI,IAAIxK,MAAM,IAElB,SAASoiF,IACPxiF,KAAK+hF,OACL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,GAAI,GACtB,CAkBA,SAASyiF,EAAOvZ,GACd,OAAQA,GAAO,EAAMA,IAAQ,EAC/B,CAEA,SAAS+Y,EAAQ/Y,GACf,OAAQA,GAAO,GAAOA,IAAQ,CAChC,CAEA,SAASgZ,EAAI7+E,EAAGmD,EAAG1D,EAAGxD,GACpB,OAAU,IAAN+D,EAAiBmD,EAAI1D,GAAQ0D,EAAKlH,EAC5B,IAAN+D,EAAiBmD,EAAI1D,EAAM0D,EAAIlH,EAAMwD,EAAIxD,EACtCkH,EAAI1D,EAAIxD,CACjB,CA5BAuiF,EAASW,EAAM3oD,GAEf2oD,EAAK3iF,UAAUkiF,KAAO,WAOpB,OANA/hF,KAAKmiF,GAAK,WACVniF,KAAKoiF,GAAK,WACVpiF,KAAKqiF,GAAK,WACVriF,KAAKsiF,GAAK,UACVtiF,KAAKuiF,GAAK,WAEHviF,IACT,EAoBAwiF,EAAK3iF,UAAUohF,QAAU,SAAU7/E,GASjC,IARA,IAnBc8nE,EAmBVt+D,EAAI5K,KAAKgiF,GAETr9E,EAAc,EAAV3E,KAAKmiF,GACT37E,EAAc,EAAVxG,KAAKoiF,GACTt/E,EAAc,EAAV9C,KAAKqiF,GACT/iF,EAAc,EAAVU,KAAKsiF,GACTnjF,EAAc,EAAVa,KAAKuiF,GAEJ/iF,EAAI,EAAGA,EAAI,KAAMA,EAAGoL,EAAEpL,GAAK4B,EAAEgD,YAAgB,EAAJ5E,GAClD,KAAOA,EAAI,KAAMA,EAAGoL,EAAEpL,IA5BR0pE,EA4BmBt+D,EAAEpL,EAAI,GAAKoL,EAAEpL,EAAI,GAAKoL,EAAEpL,EAAI,IAAMoL,EAAEpL,EAAI,MA3B1D,EAAM0pE,IAAQ,GA6B7B,IAAK,IAAI7oE,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,IAAIgD,KAAOhD,EAAI,IACXjB,EAAKqjF,EAAM99E,GAAKu9E,EAAG7+E,EAAGmD,EAAG1D,EAAGxD,GAAKH,EAAIyL,EAAEvK,GAAKgL,EAAEhI,GAAM,EAExDlE,EAAIG,EACJA,EAAIwD,EACJA,EAAIm/E,EAAOz7E,GACXA,EAAI7B,EACJA,EAAIvF,CACN,CAEAY,KAAKmiF,GAAMx9E,EAAI3E,KAAKmiF,GAAM,EAC1BniF,KAAKoiF,GAAM57E,EAAIxG,KAAKoiF,GAAM,EAC1BpiF,KAAKqiF,GAAMv/E,EAAI9C,KAAKqiF,GAAM,EAC1BriF,KAAKsiF,GAAMhjF,EAAIU,KAAKsiF,GAAM,EAC1BtiF,KAAKuiF,GAAMpjF,EAAIa,KAAKuiF,GAAM,CAC5B,EAEAC,EAAK3iF,UAAUwhF,MAAQ,WACrB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAQ3B,OANAiG,EAAExF,aAAuB,EAAVtF,KAAKmiF,GAAQ,GAC5Br3E,EAAExF,aAAuB,EAAVtF,KAAKoiF,GAAQ,GAC5Bt3E,EAAExF,aAAuB,EAAVtF,KAAKqiF,GAAQ,GAC5Bv3E,EAAExF,aAAuB,EAAVtF,KAAKsiF,GAAQ,IAC5Bx3E,EAAExF,aAAuB,EAAVtF,KAAKuiF,GAAQ,IAErBz3E,CACT,EAEAsJ,EAAOjU,QAAUqiF,+CC1FjB,IAAIX,EAAW,EAAQ,+CACnBa,EAAS,EAAQ,mCACjB7oD,EAAO,EAAQ,iCACf/P,EAAS,gDAETlf,EAAI,IAAIxK,MAAM,IAElB,SAASuiF,IACP3iF,KAAK+hF,OAEL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,GAAI,GACtB,CAEA6hF,EAASc,EAAQD,GAEjBC,EAAO9iF,UAAUkiF,KAAO,WAUtB,OATA/hF,KAAKmiF,GAAK,WACVniF,KAAKoiF,GAAK,UACVpiF,KAAKqiF,GAAK,UACVriF,KAAKsiF,GAAK,WACVtiF,KAAKuiF,GAAK,WACVviF,KAAK4iF,GAAK,WACV5iF,KAAK6iF,GAAK,WACV7iF,KAAK8iF,GAAK,WAEH9iF,IACT,EAEA2iF,EAAO9iF,UAAUwhF,MAAQ,WACvB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAU3B,OARAiG,EAAExF,aAAatF,KAAKmiF,GAAI,GACxBr3E,EAAExF,aAAatF,KAAKoiF,GAAI,GACxBt3E,EAAExF,aAAatF,KAAKqiF,GAAI,GACxBv3E,EAAExF,aAAatF,KAAKsiF,GAAI,IACxBx3E,EAAExF,aAAatF,KAAKuiF,GAAI,IACxBz3E,EAAExF,aAAatF,KAAK4iF,GAAI,IACxB93E,EAAExF,aAAatF,KAAK6iF,GAAI,IAEjB/3E,CACT,EAEAsJ,EAAOjU,QAAUwiF,+CC5CjB,IAAId,EAAW,EAAQ,+CACnBhoD,EAAO,EAAQ,iCACf/P,EAAS,gDAETze,EAAI,CACN,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,YAGlCT,EAAI,IAAIxK,MAAM,IAElB,SAASsiF,IACP1iF,KAAK+hF,OAEL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,GAAI,GACtB,CAiBA,SAAS+iF,EAAI/6E,EAAGhC,EAAG1D,GACjB,OAAOA,EAAK0F,GAAKhC,EAAI1D,EACvB,CAEA,SAAS0gF,EAAKh7E,EAAGhC,EAAG1D,GAClB,OAAQ0F,EAAIhC,EAAM1D,GAAK0F,EAAIhC,EAC7B,CAEA,SAASi9E,EAAQj7E,GACf,OAAQA,IAAM,EAAIA,GAAK,KAAOA,IAAM,GAAKA,GAAK,KAAOA,IAAM,GAAKA,GAAK,GACvE,CAEA,SAASk7E,EAAQl7E,GACf,OAAQA,IAAM,EAAIA,GAAK,KAAOA,IAAM,GAAKA,GAAK,KAAOA,IAAM,GAAKA,GAAK,EACvE,CAEA,SAASm7E,EAAQn7E,GACf,OAAQA,IAAM,EAAIA,GAAK,KAAOA,IAAM,GAAKA,GAAK,IAAOA,IAAM,CAC7D,CAjCA65E,EAASa,EAAQ7oD,GAEjB6oD,EAAO7iF,UAAUkiF,KAAO,WAUtB,OATA/hF,KAAKmiF,GAAK,WACVniF,KAAKoiF,GAAK,WACVpiF,KAAKqiF,GAAK,WACVriF,KAAKsiF,GAAK,WACVtiF,KAAKuiF,GAAK,WACVviF,KAAK4iF,GAAK,WACV5iF,KAAK6iF,GAAK,UACV7iF,KAAK8iF,GAAK,WAEH9iF,IACT,EA0BA0iF,EAAO7iF,UAAUohF,QAAU,SAAU7/E,GAYnC,IAXA,IALe4G,EAKX4C,EAAI5K,KAAKgiF,GAETr9E,EAAc,EAAV3E,KAAKmiF,GACT37E,EAAc,EAAVxG,KAAKoiF,GACTt/E,EAAc,EAAV9C,KAAKqiF,GACT/iF,EAAc,EAAVU,KAAKsiF,GACTnjF,EAAc,EAAVa,KAAKuiF,GACTj/E,EAAc,EAAVtD,KAAK4iF,GACTv8E,EAAc,EAAVrG,KAAK6iF,GACTj+E,EAAc,EAAV5E,KAAK8iF,GAEJtjF,EAAI,EAAGA,EAAI,KAAMA,EAAGoL,EAAEpL,GAAK4B,EAAEgD,YAAgB,EAAJ5E,GAClD,KAAOA,EAAI,KAAMA,EAAGoL,EAAEpL,GAAqE,KAjB5EwI,EAiBoB4C,EAAEpL,EAAI,MAhB3B,GAAKwI,GAAK,KAAOA,IAAM,GAAKA,GAAK,IAAOA,IAAM,IAgBb4C,EAAEpL,EAAI,GAAK2jF,EAAOv4E,EAAEpL,EAAI,KAAOoL,EAAEpL,EAAI,IAEpF,IAAK,IAAIa,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,IAAI+iF,EAAMx+E,EAAIs+E,EAAO/jF,GAAK4jF,EAAG5jF,EAAGmE,EAAG+C,GAAKgF,EAAEhL,GAAKuK,EAAEvK,GAAM,EACnDgjF,EAAMJ,EAAOt+E,GAAKq+E,EAAIr+E,EAAG6B,EAAG1D,GAAM,EAEtC8B,EAAIyB,EACJA,EAAI/C,EACJA,EAAInE,EACJA,EAAKG,EAAI8jF,EAAM,EACf9jF,EAAIwD,EACJA,EAAI0D,EACJA,EAAI7B,EACJA,EAAKy+E,EAAKC,EAAM,CAClB,CAEArjF,KAAKmiF,GAAMx9E,EAAI3E,KAAKmiF,GAAM,EAC1BniF,KAAKoiF,GAAM57E,EAAIxG,KAAKoiF,GAAM,EAC1BpiF,KAAKqiF,GAAMv/E,EAAI9C,KAAKqiF,GAAM,EAC1BriF,KAAKsiF,GAAMhjF,EAAIU,KAAKsiF,GAAM,EAC1BtiF,KAAKuiF,GAAMpjF,EAAIa,KAAKuiF,GAAM,EAC1BviF,KAAK4iF,GAAMt/E,EAAItD,KAAK4iF,GAAM,EAC1B5iF,KAAK6iF,GAAMx8E,EAAIrG,KAAK6iF,GAAM,EAC1B7iF,KAAK8iF,GAAMl+E,EAAI5E,KAAK8iF,GAAM,CAC5B,EAEAJ,EAAO7iF,UAAUwhF,MAAQ,WACvB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAW3B,OATAiG,EAAExF,aAAatF,KAAKmiF,GAAI,GACxBr3E,EAAExF,aAAatF,KAAKoiF,GAAI,GACxBt3E,EAAExF,aAAatF,KAAKqiF,GAAI,GACxBv3E,EAAExF,aAAatF,KAAKsiF,GAAI,IACxBx3E,EAAExF,aAAatF,KAAKuiF,GAAI,IACxBz3E,EAAExF,aAAatF,KAAK4iF,GAAI,IACxB93E,EAAExF,aAAatF,KAAK6iF,GAAI,IACxB/3E,EAAExF,aAAatF,KAAK8iF,GAAI,IAEjBh4E,CACT,EAEAsJ,EAAOjU,QAAUuiF,+CCtIjB,IAAIb,EAAW,EAAQ,+CACnByB,EAAS,EAAQ,mCACjBzpD,EAAO,EAAQ,iCACf/P,EAAS,gDAETlf,EAAI,IAAIxK,MAAM,KAElB,SAASmjF,IACPvjF,KAAK+hF,OACL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,IAAK,IACvB,CAEA6hF,EAAS0B,EAAQD,GAEjBC,EAAO1jF,UAAUkiF,KAAO,WAmBtB,OAlBA/hF,KAAKwjF,IAAM,WACXxjF,KAAKyjF,IAAM,WACXzjF,KAAK0jF,IAAM,WACX1jF,KAAK2jF,IAAM,UACX3jF,KAAK4jF,IAAM,WACX5jF,KAAK6jF,IAAM,WACX7jF,KAAK8jF,IAAM,WACX9jF,KAAK+jF,IAAM,WAEX/jF,KAAKgkF,IAAM,WACXhkF,KAAKikF,IAAM,UACXjkF,KAAKkkF,IAAM,UACXlkF,KAAKmkF,IAAM,WACXnkF,KAAKokF,IAAM,WACXpkF,KAAKqkF,IAAM,WACXrkF,KAAKskF,IAAM,WACXtkF,KAAKukF,IAAM,WAEJvkF,IACT,EAEAujF,EAAO1jF,UAAUwhF,MAAQ,WACvB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAE3B,SAAS2/E,EAAc5/E,EAAGiB,EAAGsJ,GAC3BrE,EAAExF,aAAaV,EAAGuK,GAClBrE,EAAExF,aAAaO,EAAGsJ,EAAS,EAC7B,CASA,OAPAq1E,EAAaxkF,KAAKwjF,IAAKxjF,KAAKgkF,IAAK,GACjCQ,EAAaxkF,KAAKyjF,IAAKzjF,KAAKikF,IAAK,GACjCO,EAAaxkF,KAAK0jF,IAAK1jF,KAAKkkF,IAAK,IACjCM,EAAaxkF,KAAK2jF,IAAK3jF,KAAKmkF,IAAK,IACjCK,EAAaxkF,KAAK4jF,IAAK5jF,KAAKokF,IAAK,IACjCI,EAAaxkF,KAAK6jF,IAAK7jF,KAAKqkF,IAAK,IAE1Bv5E,CACT,EAEAsJ,EAAOjU,QAAUojF,+CCxDjB,IAAI1B,EAAW,EAAQ,+CACnBhoD,EAAO,EAAQ,iCACf/P,EAAS,gDAETze,EAAI,CACN,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,YAGlCT,EAAI,IAAIxK,MAAM,KAElB,SAASqkF,IACPzkF,KAAK+hF,OACL/hF,KAAKgiF,GAAKp3E,EAEVivB,EAAK95B,KAAKC,KAAM,IAAK,IACvB,CA0BA,SAAS0kF,EAAI18E,EAAGhC,EAAG1D,GACjB,OAAOA,EAAK0F,GAAKhC,EAAI1D,EACvB,CAEA,SAAS0gF,EAAKh7E,EAAGhC,EAAG1D,GAClB,OAAQ0F,EAAIhC,EAAM1D,GAAK0F,EAAIhC,EAC7B,CAEA,SAASi9E,EAAQj7E,EAAG28E,GAClB,OAAQ38E,IAAM,GAAK28E,GAAM,IAAMA,IAAO,EAAI38E,GAAK,KAAO28E,IAAO,EAAI38E,GAAK,GACxE,CAEA,SAASk7E,EAAQl7E,EAAG28E,GAClB,OAAQ38E,IAAM,GAAK28E,GAAM,KAAO38E,IAAM,GAAK28E,GAAM,KAAOA,IAAO,EAAI38E,GAAK,GAC1E,CAEA,SAAS48E,EAAQ58E,EAAG28E,GAClB,OAAQ38E,IAAM,EAAI28E,GAAM,KAAO38E,IAAM,EAAI28E,GAAM,IAAO38E,IAAM,CAC9D,CAEA,SAAS68E,EAAS78E,EAAG28E,GACnB,OAAQ38E,IAAM,EAAI28E,GAAM,KAAO38E,IAAM,EAAI28E,GAAM,KAAO38E,IAAM,EAAI28E,GAAM,GACxE,CAEA,SAASG,EAAQ98E,EAAG28E,GAClB,OAAQ38E,IAAM,GAAK28E,GAAM,KAAOA,IAAO,GAAK38E,GAAK,GAAMA,IAAM,CAC/D,CAEA,SAAS+8E,EAAS/8E,EAAG28E,GACnB,OAAQ38E,IAAM,GAAK28E,GAAM,KAAOA,IAAO,GAAK38E,GAAK,IAAMA,IAAM,EAAI28E,GAAM,GACzE,CAEA,SAASK,EAAUrgF,EAAG6B,GACpB,OAAQ7B,IAAM,EAAM6B,IAAM,EAAK,EAAI,CACrC,CA1DAq7E,EAAS4C,EAAQ5qD,GAEjB4qD,EAAO5kF,UAAUkiF,KAAO,WAmBtB,OAlBA/hF,KAAKwjF,IAAM,WACXxjF,KAAKyjF,IAAM,WACXzjF,KAAK0jF,IAAM,WACX1jF,KAAK2jF,IAAM,WACX3jF,KAAK4jF,IAAM,WACX5jF,KAAK6jF,IAAM,WACX7jF,KAAK8jF,IAAM,UACX9jF,KAAK+jF,IAAM,WAEX/jF,KAAKgkF,IAAM,WACXhkF,KAAKikF,IAAM,WACXjkF,KAAKkkF,IAAM,WACXlkF,KAAKmkF,IAAM,WACXnkF,KAAKokF,IAAM,WACXpkF,KAAKqkF,IAAM,UACXrkF,KAAKskF,IAAM,WACXtkF,KAAKukF,IAAM,UAEJvkF,IACT,EAsCAykF,EAAO5kF,UAAUohF,QAAU,SAAU7/E,GAqBnC,IApBA,IAAIwJ,EAAI5K,KAAKgiF,GAETiD,EAAgB,EAAXjlF,KAAKwjF,IACV0B,EAAgB,EAAXllF,KAAKyjF,IACVV,EAAgB,EAAX/iF,KAAK0jF,IACVyB,EAAgB,EAAXnlF,KAAK2jF,IACVyB,EAAgB,EAAXplF,KAAK4jF,IACVyB,EAAgB,EAAXrlF,KAAK6jF,IACVyB,EAAgB,EAAXtlF,KAAK8jF,IACVyB,EAAgB,EAAXvlF,KAAK+jF,IAEVyB,EAAgB,EAAXxlF,KAAKgkF,IACVyB,EAAgB,EAAXzlF,KAAKikF,IACVyB,EAAgB,EAAX1lF,KAAKkkF,IACVyB,EAAgB,EAAX3lF,KAAKmkF,IACVyB,EAAgB,EAAX5lF,KAAKokF,IACVyB,EAAgB,EAAX7lF,KAAKqkF,IACVyB,EAAgB,EAAX9lF,KAAKskF,IACVyB,EAAgB,EAAX/lF,KAAKukF,IAEL/kF,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BoL,EAAEpL,GAAK4B,EAAEgD,YAAgB,EAAJ5E,GACrBoL,EAAEpL,EAAI,GAAK4B,EAAEgD,YAAgB,EAAJ5E,EAAQ,GAEnC,KAAOA,EAAI,IAAKA,GAAK,EAAG,CACtB,IAAIwmF,EAAKp7E,EAAEpL,EAAI,IACXmlF,EAAK/5E,EAAEpL,EAAI,GAAS,GACpB2jF,EAASyB,EAAOoB,EAAIrB,GACpBsB,EAAUpB,EAAQF,EAAIqB,GAItBE,EAASpB,EAFbkB,EAAKp7E,EAAEpL,EAAI,GACXmlF,EAAK/5E,EAAEpL,EAAI,EAAQ,IAEf2mF,EAAUpB,EAAQJ,EAAIqB,GAGtBI,EAAOx7E,EAAEpL,EAAI,IACb6mF,EAAOz7E,EAAEpL,EAAI,GAAQ,GAErB8mF,EAAQ17E,EAAEpL,EAAI,IACd+mF,EAAQ37E,EAAEpL,EAAI,GAAS,GAEvBgnF,EAAOP,EAAUI,EAAQ,EACzBI,EAAOtD,EAASiD,EAAOpB,EAASwB,EAAKP,GAAY,EAIrDQ,GAFAA,EAAOA,EAAMP,EAASlB,EADtBwB,EAAOA,EAAML,EAAW,EACYA,GAAY,GAEnCG,EAAQtB,EADrBwB,EAAOA,EAAMD,EAAS,EACaA,GAAU,EAE7C37E,EAAEpL,GAAKinF,EACP77E,EAAEpL,EAAI,GAAKgnF,CACb,CAEA,IAAK,IAAInmF,EAAI,EAAGA,EAAI,IAAKA,GAAK,EAAG,CAC/BomF,EAAM77E,EAAEvK,GACRmmF,EAAM57E,EAAEvK,EAAI,GAEZ,IAAIqmF,EAAO1D,EAAIiC,EAAIC,EAAInC,GACnB4D,EAAO3D,EAAIwC,EAAIC,EAAIC,GAEnBkB,EAAU3D,EAAOgC,EAAIO,GACrBqB,EAAU5D,EAAOuC,EAAIP,GACrB6B,EAAU5D,EAAOkC,EAAIQ,GACrBmB,EAAU7D,EAAO0C,EAAIR,GAGrB4B,EAAM37E,EAAEhL,GACR4mF,EAAM57E,EAAEhL,EAAI,GAEZ6mF,EAAMxC,EAAGU,EAAIC,EAAIC,GACjB6B,EAAMzC,EAAGkB,EAAIC,EAAIC,GAEjBsB,EAAOrB,EAAKgB,EAAW,EACvBM,EAAO9B,EAAKuB,EAAU9B,EAASoC,EAAKrB,GAAO,EAM/CsB,GAFAA,GAFAA,EAAOA,EAAMH,EAAMlC,EADnBoC,EAAOA,EAAMD,EAAO,EACaA,GAAQ,GAE5BH,EAAMhC,EADnBoC,EAAOA,EAAMH,EAAO,EACaA,GAAQ,GAE5BR,EAAMzB,EADnBoC,EAAOA,EAAMZ,EAAO,EACaA,GAAQ,EAGzC,IAAIc,GAAOT,EAAUF,EAAQ,EACzBY,GAAOX,EAAUF,EAAO1B,EAASsC,GAAKT,GAAY,EAEtDtB,EAAKD,EACLS,EAAKD,EACLR,EAAKD,EACLS,EAAKD,EACLR,EAAKD,EACLS,EAAKD,EAELR,EAAMD,EAAKkC,EAAMrC,EADjBY,EAAMD,EAAKyB,EAAO,EACYzB,GAAO,EACrCR,EAAKpC,EACL4C,EAAKD,EACL3C,EAAKmC,EACLQ,EAAKD,EACLP,EAAKD,EACLQ,EAAKD,EAELP,EAAMoC,EAAME,GAAMvC,EADlBQ,EAAM4B,EAAME,GAAO,EACYF,GAAQ,CACzC,CAEApnF,KAAKgkF,IAAOhkF,KAAKgkF,IAAMwB,EAAM,EAC7BxlF,KAAKikF,IAAOjkF,KAAKikF,IAAMwB,EAAM,EAC7BzlF,KAAKkkF,IAAOlkF,KAAKkkF,IAAMwB,EAAM,EAC7B1lF,KAAKmkF,IAAOnkF,KAAKmkF,IAAMwB,EAAM,EAC7B3lF,KAAKokF,IAAOpkF,KAAKokF,IAAMwB,EAAM,EAC7B5lF,KAAKqkF,IAAOrkF,KAAKqkF,IAAMwB,EAAM,EAC7B7lF,KAAKskF,IAAOtkF,KAAKskF,IAAMwB,EAAM,EAC7B9lF,KAAKukF,IAAOvkF,KAAKukF,IAAMwB,EAAM,EAE7B/lF,KAAKwjF,IAAOxjF,KAAKwjF,IAAMyB,EAAKD,EAAShlF,KAAKgkF,IAAKwB,GAAO,EACtDxlF,KAAKyjF,IAAOzjF,KAAKyjF,IAAMyB,EAAKF,EAAShlF,KAAKikF,IAAKwB,GAAO,EACtDzlF,KAAK0jF,IAAO1jF,KAAK0jF,IAAMX,EAAKiC,EAAShlF,KAAKkkF,IAAKwB,GAAO,EACtD1lF,KAAK2jF,IAAO3jF,KAAK2jF,IAAMwB,EAAKH,EAAShlF,KAAKmkF,IAAKwB,GAAO,EACtD3lF,KAAK4jF,IAAO5jF,KAAK4jF,IAAMwB,EAAKJ,EAAShlF,KAAKokF,IAAKwB,GAAO,EACtD5lF,KAAK6jF,IAAO7jF,KAAK6jF,IAAMwB,EAAKL,EAAShlF,KAAKqkF,IAAKwB,GAAO,EACtD7lF,KAAK8jF,IAAO9jF,KAAK8jF,IAAMwB,EAAKN,EAAShlF,KAAKskF,IAAKwB,GAAO,EACtD9lF,KAAK+jF,IAAO/jF,KAAK+jF,IAAMwB,EAAKP,EAAShlF,KAAKukF,IAAKwB,GAAO,CACxD,EAEAtB,EAAO5kF,UAAUwhF,MAAQ,WACvB,IAAIv2E,EAAIgf,EAAOjlB,YAAY,IAE3B,SAAS2/E,EAAc5/E,EAAGiB,EAAGsJ,GAC3BrE,EAAExF,aAAaV,EAAGuK,GAClBrE,EAAExF,aAAaO,EAAGsJ,EAAS,EAC7B,CAWA,OATAq1E,EAAaxkF,KAAKwjF,IAAKxjF,KAAKgkF,IAAK,GACjCQ,EAAaxkF,KAAKyjF,IAAKzjF,KAAKikF,IAAK,GACjCO,EAAaxkF,KAAK0jF,IAAK1jF,KAAKkkF,IAAK,IACjCM,EAAaxkF,KAAK2jF,IAAK3jF,KAAKmkF,IAAK,IACjCK,EAAaxkF,KAAK4jF,IAAK5jF,KAAKokF,IAAK,IACjCI,EAAaxkF,KAAK6jF,IAAK7jF,KAAKqkF,IAAK,IACjCG,EAAaxkF,KAAK8jF,IAAK9jF,KAAKskF,IAAK,IACjCE,EAAaxkF,KAAK+jF,IAAK/jF,KAAKukF,IAAK,IAE1Bz5E,CACT,EAEAsJ,EAAOjU,QAAUskF,sDCnQjB,SAAU3+B,GACV,aAQA,IAAI0hC,EAAK,SAASzF,GAChB,IAAIviF,EAAGH,EAAI,IAAIs1E,aAAa,IAC5B,GAAIoN,EAAM,IAAKviF,EAAI,EAAGA,EAAIuiF,EAAKj+E,OAAQtE,IAAKH,EAAEG,GAAKuiF,EAAKviF,GACxD,OAAOH,CACT,EAGIooF,EAAc,WAAuB,MAAM,IAAIt6E,MAAM,UAAY,EAEjEu6E,EAAK,IAAI5nF,WAAW,IACpB6nF,EAAK,IAAI7nF,WAAW,IAAK6nF,EAAG,GAAK,EAErC,IAAIC,EAAMJ,IACNK,EAAML,EAAG,CAAC,IACVM,EAAUN,EAAG,CAAC,MAAQ,IACtBhlF,EAAIglF,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QAChIO,EAAKP,EAAG,CAAC,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,OACjI7mF,EAAI6mF,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,OAChIxlF,EAAIwlF,EAAG,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,QAChIzmF,EAAIymF,EAAG,CAAC,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,KAAQ,MAAQ,MAAQ,MAAQ,IAAQ,MAAQ,MAAQ,MAAQ,KAAQ,QAEpI,SAASQ,EAAKhgF,EAAGxI,EAAGoF,EAAGiB,GACrBmC,EAAExI,GAAQoF,GAAK,GAAM,IACrBoD,EAAExI,EAAE,GAAMoF,GAAK,GAAM,IACrBoD,EAAExI,EAAE,GAAMoF,GAAM,EAAK,IACrBoD,EAAExI,EAAE,GAAS,IAAJoF,EACToD,EAAExI,EAAE,GAAMqG,GAAK,GAAO,IACtBmC,EAAExI,EAAE,GAAMqG,GAAK,GAAO,IACtBmC,EAAExI,EAAE,GAAMqG,GAAM,EAAM,IACtBmC,EAAExI,EAAE,GAAS,IAAJqG,CACX,CAEA,SAASoiF,EAAGjgF,EAAGkgF,EAAIliF,EAAGmiF,EAAI1oF,GACxB,IAAID,EAAEF,EAAI,EACV,IAAKE,EAAI,EAAGA,EAAIC,EAAGD,IAAKF,GAAK0I,EAAEkgF,EAAG1oF,GAAGwG,EAAEmiF,EAAG3oF,GAC1C,OAAQ,EAAMF,EAAI,IAAO,GAAM,CACjC,CAEA,SAAS8oF,EAAiBpgF,EAAGkgF,EAAIliF,EAAGmiF,GAClC,OAAOF,EAAGjgF,EAAEkgF,EAAGliF,EAAEmiF,EAAG,GACtB,CAEA,SAASE,EAAiBrgF,EAAGkgF,EAAIliF,EAAGmiF,GAClC,OAAOF,EAAGjgF,EAAEkgF,EAAGliF,EAAEmiF,EAAG,GACtB,CA4UA,SAASG,EAAoB9a,EAAI+a,EAAI7mF,EAAEoB,IA1UvC,SAAsBM,EAAG0C,EAAGpE,EAAGoB,GAsB7B,IArBA,IAmBeF,EAnBX4lF,EAAc,IAAR1lF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9E2lF,EAAc,IAAR/mF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EgnF,EAAc,IAARhnF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EinF,EAAc,IAARjnF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EknF,EAAc,IAARlnF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EmnF,EAAc,IAAR/lF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EgmF,EAAc,IAARhjF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EijF,EAAc,IAARjjF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAC9EkjF,EAAc,IAARljF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EmjF,EAAc,IAARnjF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EojF,EAAc,IAARpmF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9EqmF,EAAc,IAARznF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E0nF,EAAc,IAAR1nF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E2nF,EAAc,IAAR3nF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E4nF,EAAc,IAAR5nF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAC9E6nF,EAAc,IAARzmF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAE9E0mF,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAKhB,EACpEiB,EAAKhB,EAAIiB,EAAKhB,EAAIiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,EAAMhB,EAAKiB,EAAMhB,EACpEiB,EAAMhB,EAED/pF,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAQ3BgqF,IADA5mF,GADAwnF,IADAxnF,GADAonF,IADApnF,GADAgnF,IADAhnF,EAAI4mF,EAAKY,EAAM,IACN,EAAIxnF,IAAI,IACR4mF,EAAK,IACL,EAAI5mF,IAAI,IACRgnF,EAAK,IACJ,GAAKhnF,IAAI,IACTonF,EAAK,IACN,GAAKpnF,IAAI,GASlBinF,IADAjnF,GADA6mF,IADA7mF,GADAynF,IADAznF,GADAqnF,IADArnF,EAAIinF,EAAKJ,EAAK,IACL,EAAI7mF,IAAI,IACRinF,EAAK,IACJ,EAAIjnF,IAAI,IACRqnF,EAAK,IACN,GAAKrnF,IAAI,IACTynF,EAAM,IACN,GAAKznF,IAAI,GASlBsnF,IADAtnF,GADAknF,IADAlnF,GADA8mF,IADA9mF,GADA0nF,IADA1nF,EAAIsnF,EAAMJ,EAAK,IACL,EAAIlnF,IAAI,IACRsnF,EAAM,IACP,EAAItnF,IAAI,IACR0nF,EAAM,IACN,GAAK1nF,IAAI,IACT8mF,EAAK,IACJ,GAAK9mF,IAAI,GASnB2nF,IADA3nF,GADAunF,IADAvnF,GADAmnF,IADAnnF,GADA+mF,IADA/mF,EAAI2nF,EAAMJ,EAAM,IACP,EAAIvnF,IAAI,IACR2nF,EAAM,IACN,EAAI3nF,IAAI,IACR+mF,EAAK,IACJ,GAAK/mF,IAAI,IACTmnF,EAAK,IACL,GAAKnnF,IAAI,GASnB4mF,IADA5mF,GADA+mF,IADA/mF,GADA8mF,IADA9mF,GADA6mF,IADA7mF,EAAI4mF,EAAKG,EAAK,IACL,EAAI/mF,IAAI,IACR4mF,EAAK,IACL,EAAI5mF,IAAI,IACR6mF,EAAK,IACL,GAAK7mF,IAAI,IACT8mF,EAAK,IACL,GAAK9mF,IAAI,GASlBinF,IADAjnF,GADAgnF,IADAhnF,GADAmnF,IADAnnF,GADAknF,IADAlnF,EAAIinF,EAAKD,EAAK,IACL,EAAIhnF,IAAI,IACRinF,EAAK,IACL,EAAIjnF,IAAI,IACRknF,EAAK,IACL,GAAKlnF,IAAI,IACTmnF,EAAK,IACL,GAAKnnF,IAAI,GASlBsnF,IADAtnF,GADAqnF,IADArnF,GADAonF,IADApnF,GADAunF,IADAvnF,EAAIsnF,EAAMD,EAAK,IACL,EAAIrnF,IAAI,IACRsnF,EAAM,IACP,EAAItnF,IAAI,IACRunF,EAAM,IACN,GAAKvnF,IAAI,IACTonF,EAAK,IACJ,GAAKpnF,IAAI,GASnB2nF,IADA3nF,GADA0nF,IADA1nF,GADAynF,IADAznF,GADAwnF,IADAxnF,EAAI2nF,EAAMD,EAAM,IACN,EAAI1nF,IAAI,IACR2nF,EAAM,IACN,EAAI3nF,IAAI,IACRwnF,EAAM,IACN,GAAKxnF,IAAI,IACTynF,EAAM,IACN,GAAKznF,IAAI,GAEpB4mF,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EACjBiB,EAAMA,EAAMhB,EAAK,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAClBiB,EAAMA,EAAMhB,EAAM,EAElBnmF,EAAG,GAAKomF,IAAQ,EAAI,IACpBpmF,EAAG,GAAKomF,IAAQ,EAAI,IACpBpmF,EAAG,GAAKomF,IAAO,GAAK,IACpBpmF,EAAG,GAAKomF,IAAO,GAAK,IAEpBpmF,EAAG,GAAKqmF,IAAQ,EAAI,IACpBrmF,EAAG,GAAKqmF,IAAQ,EAAI,IACpBrmF,EAAG,GAAKqmF,IAAO,GAAK,IACpBrmF,EAAG,GAAKqmF,IAAO,GAAK,IAEpBrmF,EAAG,GAAKsmF,IAAQ,EAAI,IACpBtmF,EAAG,GAAKsmF,IAAQ,EAAI,IACpBtmF,EAAE,IAAMsmF,IAAO,GAAK,IACpBtmF,EAAE,IAAMsmF,IAAO,GAAK,IAEpBtmF,EAAE,IAAMumF,IAAQ,EAAI,IACpBvmF,EAAE,IAAMumF,IAAQ,EAAI,IACpBvmF,EAAE,IAAMumF,IAAO,GAAK,IACpBvmF,EAAE,IAAMumF,IAAO,GAAK,IAEpBvmF,EAAE,IAAMwmF,IAAQ,EAAI,IACpBxmF,EAAE,IAAMwmF,IAAQ,EAAI,IACpBxmF,EAAE,IAAMwmF,IAAO,GAAK,IACpBxmF,EAAE,IAAMwmF,IAAO,GAAK,IAEpBxmF,EAAE,IAAMymF,IAAQ,EAAI,IACpBzmF,EAAE,IAAMymF,IAAQ,EAAI,IACpBzmF,EAAE,IAAMymF,IAAO,GAAK,IACpBzmF,EAAE,IAAMymF,IAAO,GAAK,IAEpBzmF,EAAE,IAAM0mF,IAAQ,EAAI,IACpB1mF,EAAE,IAAM0mF,IAAQ,EAAI,IACpB1mF,EAAE,IAAM0mF,IAAO,GAAK,IACpB1mF,EAAE,IAAM0mF,IAAO,GAAK,IAEpB1mF,EAAE,IAAM2mF,IAAQ,EAAI,IACpB3mF,EAAE,IAAM2mF,IAAQ,EAAI,IACpB3mF,EAAE,IAAM2mF,IAAO,GAAK,IACpB3mF,EAAE,IAAM2mF,IAAO,GAAK,IAEpB3mF,EAAE,IAAM4mF,IAAQ,EAAI,IACpB5mF,EAAE,IAAM4mF,IAAQ,EAAI,IACpB5mF,EAAE,IAAM4mF,IAAO,GAAK,IACpB5mF,EAAE,IAAM4mF,IAAO,GAAK,IAEpB5mF,EAAE,IAAM6mF,IAAQ,EAAI,IACpB7mF,EAAE,IAAM6mF,IAAQ,EAAI,IACpB7mF,EAAE,IAAM6mF,IAAO,GAAK,IACpB7mF,EAAE,IAAM6mF,IAAO,GAAK,IAEpB7mF,EAAE,IAAM8mF,IAAS,EAAI,IACrB9mF,EAAE,IAAM8mF,IAAS,EAAI,IACrB9mF,EAAE,IAAM8mF,IAAQ,GAAK,IACrB9mF,EAAE,IAAM8mF,IAAQ,GAAK,IAErB9mF,EAAE,IAAM+mF,IAAS,EAAI,IACrB/mF,EAAE,IAAM+mF,IAAS,EAAI,IACrB/mF,EAAE,IAAM+mF,IAAQ,GAAK,IACrB/mF,EAAE,IAAM+mF,IAAQ,GAAK,IAErB/mF,EAAE,IAAMgnF,IAAS,EAAI,IACrBhnF,EAAE,IAAMgnF,IAAS,EAAI,IACrBhnF,EAAE,IAAMgnF,IAAQ,GAAK,IACrBhnF,EAAE,IAAMgnF,IAAQ,GAAK,IAErBhnF,EAAE,IAAMinF,IAAS,EAAI,IACrBjnF,EAAE,IAAMinF,IAAS,EAAI,IACrBjnF,EAAE,IAAMinF,IAAQ,GAAK,IACrBjnF,EAAE,IAAMinF,IAAQ,GAAK,IAErBjnF,EAAE,IAAMknF,IAAS,EAAI,IACrBlnF,EAAE,IAAMknF,IAAS,EAAI,IACrBlnF,EAAE,IAAMknF,IAAQ,GAAK,IACrBlnF,EAAE,IAAMknF,IAAQ,GAAK,IAErBlnF,EAAE,IAAMmnF,IAAS,EAAI,IACrBnnF,EAAE,IAAMmnF,IAAS,EAAI,IACrBnnF,EAAE,IAAMmnF,IAAQ,GAAK,IACrBnnF,EAAE,IAAMmnF,IAAQ,GAAK,GACvB,CA4IEC,CAAahd,EAAI+a,EAAI7mF,EAAEoB,EACzB,CAEA,SAAS2nF,EAAqBjd,EAAI+a,EAAI7mF,EAAEoB,IA7IxC,SAAuBM,EAAE0C,EAAEpE,EAAEoB,GAsB3B,IArBA,IAmBeF,EAFX4mF,EAjBc,IAAR1mF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAiBrE2mF,EAhBK,IAAR/nF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAgB5DgoF,EAfJ,IAARhoF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAenDioF,EAdb,IAARjoF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAc1CkoF,EAbtB,IAARloF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAajCmoF,EAZ/B,IAAR/mF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAYxBgnF,EAXxC,IAARhkF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAWfikF,EAVjD,IAARjkF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAG,KAAY,IAAc,IAARA,EAAG,KAAY,GAW9EkkF,EAVc,IAARlkF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAUrEmkF,EATK,IAARnkF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAS5DokF,EARJ,IAARpnF,EAAG,IAAqB,IAARA,EAAG,KAAY,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAQjDqnF,EAPf,IAARzoF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAOtC0oF,EAN1B,IAAR1oF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAM3B2oF,EALrC,IAAR3oF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAKhB4oF,EAJhD,IAAR5oF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAK9E6oF,EAJc,IAARznF,EAAE,KAAsB,IAARA,EAAE,MAAa,GAAa,IAARA,EAAE,MAAa,IAAc,IAARA,EAAE,MAAa,GAMzEtD,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAQ3BgqF,IADA5mF,GADAwnF,IADAxnF,GADAonF,IADApnF,GADAgnF,IADAhnF,EAAI4mF,EAAKY,EAAM,IACN,EAAIxnF,IAAI,IACR4mF,EAAK,IACL,EAAI5mF,IAAI,IACRgnF,EAAK,IACJ,GAAKhnF,IAAI,IACTonF,EAAK,IACN,GAAKpnF,IAAI,GASlBinF,IADAjnF,GADA6mF,IADA7mF,GADAynF,IADAznF,GADAqnF,IADArnF,EAAIinF,EAAKJ,EAAK,IACL,EAAI7mF,IAAI,IACRinF,EAAK,IACJ,EAAIjnF,IAAI,IACRqnF,EAAK,IACN,GAAKrnF,IAAI,IACTynF,EAAM,IACN,GAAKznF,IAAI,GASlBsnF,IADAtnF,GADAknF,IADAlnF,GADA8mF,IADA9mF,GADA0nF,IADA1nF,EAAIsnF,EAAMJ,EAAK,IACL,EAAIlnF,IAAI,IACRsnF,EAAM,IACP,EAAItnF,IAAI,IACR0nF,EAAM,IACN,GAAK1nF,IAAI,IACT8mF,EAAK,IACJ,GAAK9mF,IAAI,GASnB2nF,IADA3nF,GADAunF,IADAvnF,GADAmnF,IADAnnF,GADA+mF,IADA/mF,EAAI2nF,EAAMJ,EAAM,IACP,EAAIvnF,IAAI,IACR2nF,EAAM,IACN,EAAI3nF,IAAI,IACR+mF,EAAK,IACJ,GAAK/mF,IAAI,IACTmnF,EAAK,IACL,GAAKnnF,IAAI,GASnB4mF,IADA5mF,GADA+mF,IADA/mF,GADA8mF,IADA9mF,GADA6mF,IADA7mF,EAAI4mF,EAAKG,EAAK,IACL,EAAI/mF,IAAI,IACR4mF,EAAK,IACL,EAAI5mF,IAAI,IACR6mF,EAAK,IACL,GAAK7mF,IAAI,IACT8mF,EAAK,IACL,GAAK9mF,IAAI,GASlBinF,IADAjnF,GADAgnF,IADAhnF,GADAmnF,IADAnnF,GADAknF,IADAlnF,EAAIinF,EAAKD,EAAK,IACL,EAAIhnF,IAAI,IACRinF,EAAK,IACL,EAAIjnF,IAAI,IACRknF,EAAK,IACL,GAAKlnF,IAAI,IACTmnF,EAAK,IACL,GAAKnnF,IAAI,GASlBsnF,IADAtnF,GADAqnF,IADArnF,GADAonF,IADApnF,GADAunF,IADAvnF,EAAIsnF,EAAMD,EAAK,IACL,EAAIrnF,IAAI,IACRsnF,EAAM,IACP,EAAItnF,IAAI,IACRunF,EAAM,IACN,GAAKvnF,IAAI,IACTonF,EAAK,IACJ,GAAKpnF,IAAI,GASnB2nF,IADA3nF,GADA0nF,IADA1nF,GADAynF,IADAznF,GADAwnF,IADAxnF,EAAI2nF,EAAMD,EAAM,IACN,EAAI1nF,IAAI,IACR2nF,EAAM,IACN,EAAI3nF,IAAI,IACRwnF,EAAM,IACN,GAAKxnF,IAAI,IACTynF,EAAM,IACN,GAAKznF,IAAI,GAGrBQ,EAAG,GAAKomF,IAAQ,EAAI,IACpBpmF,EAAG,GAAKomF,IAAQ,EAAI,IACpBpmF,EAAG,GAAKomF,IAAO,GAAK,IACpBpmF,EAAG,GAAKomF,IAAO,GAAK,IAEpBpmF,EAAG,GAAKymF,IAAQ,EAAI,IACpBzmF,EAAG,GAAKymF,IAAQ,EAAI,IACpBzmF,EAAG,GAAKymF,IAAO,GAAK,IACpBzmF,EAAG,GAAKymF,IAAO,GAAK,IAEpBzmF,EAAG,GAAK8mF,IAAS,EAAI,IACrB9mF,EAAG,GAAK8mF,IAAS,EAAI,IACrB9mF,EAAE,IAAM8mF,IAAQ,GAAK,IACrB9mF,EAAE,IAAM8mF,IAAQ,GAAK,IAErB9mF,EAAE,IAAMmnF,IAAS,EAAI,IACrBnnF,EAAE,IAAMmnF,IAAS,EAAI,IACrBnnF,EAAE,IAAMmnF,IAAQ,GAAK,IACrBnnF,EAAE,IAAMmnF,IAAQ,GAAK,IAErBnnF,EAAE,IAAM0mF,IAAQ,EAAI,IACpB1mF,EAAE,IAAM0mF,IAAQ,EAAI,IACpB1mF,EAAE,IAAM0mF,IAAO,GAAK,IACpB1mF,EAAE,IAAM0mF,IAAO,GAAK,IAEpB1mF,EAAE,IAAM2mF,IAAQ,EAAI,IACpB3mF,EAAE,IAAM2mF,IAAQ,EAAI,IACpB3mF,EAAE,IAAM2mF,IAAO,GAAK,IACpB3mF,EAAE,IAAM2mF,IAAO,GAAK,IAEpB3mF,EAAE,IAAM4mF,IAAQ,EAAI,IACpB5mF,EAAE,IAAM4mF,IAAQ,EAAI,IACpB5mF,EAAE,IAAM4mF,IAAO,GAAK,IACpB5mF,EAAE,IAAM4mF,IAAO,GAAK,IAEpB5mF,EAAE,IAAM6mF,IAAQ,EAAI,IACpB7mF,EAAE,IAAM6mF,IAAQ,EAAI,IACpB7mF,EAAE,IAAM6mF,IAAO,GAAK,IACpB7mF,EAAE,IAAM6mF,IAAO,GAAK,GACtB,CAOES,CAAcld,EAAI+a,EAAI7mF,EAAEoB,EAC1B,CAEA,IAAI6nF,EAAQ,IAAI7qF,WAAW,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,MAGhG,SAAS8qF,EAA0B9nF,EAAE+nF,EAAK3kF,EAAE4kF,EAAKtkF,EAAE/G,EAAEiC,GACnD,IACIkB,EAAGpD,EADH8C,EAAI,IAAIxC,WAAW,IAAKkI,EAAI,IAAIlI,WAAW,IAE/C,IAAKN,EAAI,EAAGA,EAAI,GAAIA,IAAK8C,EAAE9C,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK8C,EAAE9C,GAAKC,EAAED,GACjC,KAAOgH,GAAK,IAAI,CAEd,IADA8hF,EAAoBtgF,EAAE1F,EAAEZ,EAAEipF,GACrBnrF,EAAI,EAAGA,EAAI,GAAIA,IAAKsD,EAAE+nF,EAAKrrF,GAAK0G,EAAE4kF,EAAKtrF,GAAKwI,EAAExI,GAEnD,IADAoD,EAAI,EACCpD,EAAI,EAAGA,EAAI,GAAIA,IAClBoD,EAAIA,GAAY,IAAPN,EAAE9C,IAAa,EACxB8C,EAAE9C,GAAS,IAAJoD,EACPA,KAAO,EAET4D,GAAK,GACLqkF,GAAQ,GACRC,GAAQ,EACV,CACA,GAAItkF,EAAI,EAEN,IADA8hF,EAAoBtgF,EAAE1F,EAAEZ,EAAEipF,GACrBnrF,EAAI,EAAGA,EAAIgH,EAAGhH,IAAKsD,EAAE+nF,EAAKrrF,GAAK0G,EAAE4kF,EAAKtrF,GAAKwI,EAAExI,GAEpD,OAAO,CACT,CAEA,SAASurF,EAAsBjoF,EAAE+nF,EAAKrkF,EAAE/G,EAAEiC,GACxC,IACIkB,EAAGpD,EADH8C,EAAI,IAAIxC,WAAW,IAAKkI,EAAI,IAAIlI,WAAW,IAE/C,IAAKN,EAAI,EAAGA,EAAI,GAAIA,IAAK8C,EAAE9C,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAK8C,EAAE9C,GAAKC,EAAED,GACjC,KAAOgH,GAAK,IAAI,CAEd,IADA8hF,EAAoBtgF,EAAE1F,EAAEZ,EAAEipF,GACrBnrF,EAAI,EAAGA,EAAI,GAAIA,IAAKsD,EAAE+nF,EAAKrrF,GAAKwI,EAAExI,GAEvC,IADAoD,EAAI,EACCpD,EAAI,EAAGA,EAAI,GAAIA,IAClBoD,EAAIA,GAAY,IAAPN,EAAE9C,IAAa,EACxB8C,EAAE9C,GAAS,IAAJoD,EACPA,KAAO,EAET4D,GAAK,GACLqkF,GAAQ,EACV,CACA,GAAIrkF,EAAI,EAEN,IADA8hF,EAAoBtgF,EAAE1F,EAAEZ,EAAEipF,GACrBnrF,EAAI,EAAGA,EAAIgH,EAAGhH,IAAKsD,EAAE+nF,EAAKrrF,GAAKwI,EAAExI,GAExC,OAAO,CACT,CAEA,SAASwrF,EAAcloF,EAAE+nF,EAAKvrF,EAAEG,EAAEiC,GAChC,IAAI2B,EAAI,IAAIvD,WAAW,IACvB2qF,EAAqBpnF,EAAE5D,EAAEiC,EAAEipF,GAE3B,IADA,IAAIM,EAAK,IAAInrF,WAAW,GACfN,EAAI,EAAGA,EAAI,EAAGA,IAAKyrF,EAAGzrF,GAAKC,EAAED,EAAE,IACxC,OAAOurF,EAAsBjoF,EAAE+nF,EAAKvrF,EAAE2rF,EAAG5nF,EAC3C,CAEA,SAAS6nF,EAAkBpoF,EAAE+nF,EAAK3kF,EAAE4kF,EAAKxrF,EAAEG,EAAEiC,GAC3C,IAAI2B,EAAI,IAAIvD,WAAW,IACvB2qF,EAAqBpnF,EAAE5D,EAAEiC,EAAEipF,GAE3B,IADA,IAAIM,EAAK,IAAInrF,WAAW,GACfN,EAAI,EAAGA,EAAI,EAAGA,IAAKyrF,EAAGzrF,GAAKC,EAAED,EAAE,IACxC,OAAOorF,EAA0B9nF,EAAE+nF,EAAK3kF,EAAE4kF,EAAKxrF,EAAE2rF,EAAG5nF,EACtD,CAOA,IAAI8nF,EAAW,SAASv2E,GAQtB,IAAIqf,EAAIC,EAAIk3D,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAPhCzrF,KAAKyN,OAAS,IAAI3N,WAAW,IAC7BE,KAAKX,EAAI,IAAI41E,YAAY,IACzBj1E,KAAK4E,EAAI,IAAIqwE,YAAY,IACzBj1E,KAAK0rF,IAAM,IAAIzW,YAAY,GAC3Bj1E,KAAK2rF,SAAW,EAChB3rF,KAAK4rF,IAAM,EAIX33D,EAAe,IAAVrf,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAG5U,KAAKX,EAAE,GAAkC,KAA7B,EACzD60B,EAAe,IAAVtf,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAG5U,KAAKX,EAAE,GAAkC,MAA3B40B,IAAO,GAAOC,GAAO,GAChFk3D,EAAe,IAAVx2E,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAG5U,KAAKX,EAAE,GAAkC,MAA3B60B,IAAO,GAAOk3D,GAAO,GAChFC,EAAe,IAAVz2E,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAG5U,KAAKX,EAAE,GAAkC,MAA3B+rF,IAAQ,EAAMC,GAAO,GAChFC,EAAe,IAAV12E,EAAK,IAAuB,IAAVA,EAAK,KAAc,EAAG5U,KAAKX,EAAE,GAAkC,KAA3BgsF,IAAQ,EAAMC,GAAM,IAC/EtrF,KAAKX,EAAE,GAAOisF,IAAQ,EAAM,KAC5BC,EAAe,IAAV32E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAG5U,KAAKX,EAAE,GAAkC,MAA3BisF,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAV52E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAG5U,KAAKX,EAAE,GAAkC,MAA3BksF,IAAO,GAAOC,GAAO,GAChFC,EAAe,IAAV72E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EAAG5U,KAAKX,EAAE,GAAkC,MAA3BmsF,IAAQ,EAAMC,GAAO,GAChFzrF,KAAKX,EAAE,GAAOosF,IAAQ,EAAM,IAE5BzrF,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,EACnD5U,KAAK0rF,IAAI,GAAe,IAAV92E,EAAI,KAAwB,IAAVA,EAAI,MAAe,CACrD,EAmUA,SAASi3E,EAAmBre,EAAKse,EAAQ5lF,EAAG4kF,EAAMrrF,EAAGiC,GACnD,IAAI2B,EAAI,IAAI8nF,EAASzpF,GAGrB,OAFA2B,EAAEqgD,OAAOx9C,EAAG4kF,EAAMrrF,GAClB4D,EAAE4uB,OAAOu7C,EAAKse,GACP,CACT,CAEA,SAASC,EAA0BnnF,EAAGonF,EAAM9lF,EAAG4kF,EAAMrrF,EAAGiC,GACtD,IAAIsG,EAAI,IAAIlI,WAAW,IAEvB,OADA+rF,EAAmB7jF,EAAE,EAAE9B,EAAE4kF,EAAKrrF,EAAEiC,GACzB0mF,EAAiBxjF,EAAEonF,EAAKhkF,EAAE,EACnC,CAEA,SAASikF,EAAiBnpF,EAAEoD,EAAE5G,EAAEG,EAAEiC,GAChC,IAAIlC,EACJ,GAAIF,EAAI,GAAI,OAAQ,EAGpB,IAFA4rF,EAAkBpoF,EAAE,EAAEoD,EAAE,EAAE5G,EAAEG,EAAEiC,GAC9BmqF,EAAmB/oF,EAAG,GAAIA,EAAG,GAAIxD,EAAI,GAAIwD,GACpCtD,EAAI,EAAGA,EAAI,GAAIA,IAAKsD,EAAEtD,GAAK,EAChC,OAAO,CACT,CAEA,SAAS0sF,EAAsBhmF,EAAEpD,EAAExD,EAAEG,EAAEiC,GACrC,IAAIlC,EACAwI,EAAI,IAAIlI,WAAW,IACvB,GAAIR,EAAI,GAAI,OAAQ,EAEpB,GADA0rF,EAAchjF,EAAE,EAAE,GAAGvI,EAAEiC,GACiC,IAApDqqF,EAA0BjpF,EAAG,GAAGA,EAAG,GAAGxD,EAAI,GAAG0I,GAAU,OAAQ,EAEnE,IADAkjF,EAAkBhlF,EAAE,EAAEpD,EAAE,EAAExD,EAAEG,EAAEiC,GACzBlC,EAAI,EAAGA,EAAI,GAAIA,IAAK0G,EAAE1G,GAAK,EAChC,OAAO,CACT,CAEA,SAAS2sF,EAAS9sF,EAAGsF,GACnB,IAAInF,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKH,EAAEG,GAAU,EAALmF,EAAEnF,EACpC,CAEA,SAAS4sF,EAAShpF,GAChB,IAAI5D,EAAGoH,EAAG9D,EAAI,EACd,IAAKtD,EAAI,EAAGA,EAAI,GAAIA,IAClBoH,EAAIxD,EAAE5D,GAAKsD,EAAI,MACfA,EAAIiC,KAAKuO,MAAM1M,EAAI,OACnBxD,EAAE5D,GAAKoH,EAAQ,MAAJ9D,EAEbM,EAAE,IAAMN,EAAE,EAAI,IAAMA,EAAE,EACxB,CAEA,SAASupF,EAASvmF,EAAGhE,EAAG0E,GAEtB,IADA,IAAIpH,EAAG0D,IAAM0D,EAAE,GACNhH,EAAI,EAAGA,EAAI,GAAIA,IACtBJ,EAAI0D,GAAKgD,EAAEtG,GAAKsC,EAAEtC,IAClBsG,EAAEtG,IAAMJ,EACR0C,EAAEtC,IAAMJ,CAEZ,CAEA,SAASktF,EAAUlpF,EAAG3D,GACpB,IAAID,EAAGa,EAAGmG,EACNN,EAAIshF,IAAMpoF,EAAIooF,IAClB,IAAKhoF,EAAI,EAAGA,EAAI,GAAIA,IAAKJ,EAAEI,GAAKC,EAAED,GAIlC,IAHA4sF,EAAShtF,GACTgtF,EAAShtF,GACTgtF,EAAShtF,GACJiB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEtB,IADA6F,EAAE,GAAK9G,EAAE,GAAK,MACTI,EAAI,EAAGA,EAAI,GAAIA,IAClB0G,EAAE1G,GAAKJ,EAAEI,GAAK,OAAW0G,EAAE1G,EAAE,IAAI,GAAM,GACvC0G,EAAE1G,EAAE,IAAM,MAEZ0G,EAAE,IAAM9G,EAAE,IAAM,OAAW8G,EAAE,KAAK,GAAM,GACxCM,EAAKN,EAAE,KAAK,GAAM,EAClBA,EAAE,KAAO,MACTmmF,EAASjtF,EAAG8G,EAAG,EAAEM,EACnB,CACA,IAAKhH,EAAI,EAAGA,EAAI,GAAIA,IAClB4D,EAAE,EAAE5D,GAAY,IAAPJ,EAAEI,GACX4D,EAAE,EAAE5D,EAAE,GAAKJ,EAAEI,IAAI,CAErB,CAEA,SAAS+sF,EAAS5nF,EAAG6B,GACnB,IAAI1D,EAAI,IAAIhD,WAAW,IAAKR,EAAI,IAAIQ,WAAW,IAG/C,OAFAwsF,EAAUxpF,EAAG6B,GACb2nF,EAAUhtF,EAAGkH,GACN6hF,EAAiBvlF,EAAG,EAAGxD,EAAG,EACnC,CAEA,SAASktF,EAAS7nF,GAChB,IAAIrF,EAAI,IAAIQ,WAAW,IAEvB,OADAwsF,EAAUhtF,EAAGqF,GACC,EAAPrF,EAAE,EACX,CAEA,SAASmtF,EAAYrpF,EAAG3D,GACtB,IAAID,EACJ,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK4D,EAAE5D,GAAKC,EAAE,EAAED,IAAMC,EAAE,EAAED,EAAE,IAAM,GACtD4D,EAAE,KAAO,KACX,CAEA,SAAS7D,EAAE6D,EAAGuB,EAAG6B,GACf,IAAK,IAAIhH,EAAI,EAAGA,EAAI,GAAIA,IAAK4D,EAAE5D,GAAKmF,EAAEnF,GAAKgH,EAAEhH,EAC/C,CAEA,SAAS4L,EAAEhI,EAAGuB,EAAG6B,GACf,IAAK,IAAIhH,EAAI,EAAGA,EAAI,GAAIA,IAAK4D,EAAE5D,GAAKmF,EAAEnF,GAAKgH,EAAEhH,EAC/C,CAEA,SAAS4B,EAAEgC,EAAGuB,EAAG6B,GACf,IAAII,EAAG9D,EACJmxB,EAAK,EAAIC,EAAK,EAAIk3D,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EAAIC,EAAK,EACpEiB,EAAK,EAAIC,EAAK,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EACrEC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAC5DC,EAAKznF,EAAE,GACP0nF,EAAK1nF,EAAE,GACP2nF,EAAK3nF,EAAE,GACP4nF,EAAK5nF,EAAE,GACP6nF,EAAK7nF,EAAE,GACP8nF,EAAK9nF,EAAE,GACP+nF,EAAK/nF,EAAE,GACPgoF,EAAKhoF,EAAE,GACPioF,EAAKjoF,EAAE,GACPkoF,EAAKloF,EAAE,GACPmoF,EAAMnoF,EAAE,IACRooF,EAAMpoF,EAAE,IACRqoF,EAAMroF,EAAE,IACRsoF,EAAMtoF,EAAE,IACRuoF,EAAMvoF,EAAE,IACRwoF,EAAMxoF,EAAE,IAGVytB,IADArtB,EAAIjC,EAAE,IACIspF,EACV/5D,GAAMttB,EAAIsnF,EACV9C,GAAMxkF,EAAIunF,EACV9C,GAAMzkF,EAAIwnF,EACV9C,GAAM1kF,EAAIynF,EACV9C,GAAM3kF,EAAI0nF,EACV9C,GAAM5kF,EAAI2nF,EACV9C,GAAM7kF,EAAI4nF,EACV9B,GAAM9lF,EAAI6nF,EACV9B,GAAM/lF,EAAI8nF,EACV9B,GAAOhmF,EAAI+nF,EACX9B,GAAOjmF,EAAIgoF,EACX9B,GAAOlmF,EAAIioF,EACX9B,GAAOnmF,EAAIkoF,EACX9B,GAAOpmF,EAAImoF,EACX9B,GAAOrmF,EAAIooF,EAEX96D,IADAttB,EAAIjC,EAAE,IACIspF,EACV7C,GAAMxkF,EAAIsnF,EACV7C,GAAMzkF,EAAIunF,EACV7C,GAAM1kF,EAAIwnF,EACV7C,GAAM3kF,EAAIynF,EACV7C,GAAM5kF,EAAI0nF,EACV7C,GAAM7kF,EAAI2nF,EACV7B,GAAM9lF,EAAI4nF,EACV7B,GAAM/lF,EAAI6nF,EACV7B,GAAOhmF,EAAI8nF,EACX7B,GAAOjmF,EAAI+nF,EACX7B,GAAOlmF,EAAIgoF,EACX7B,GAAOnmF,EAAIioF,EACX7B,GAAOpmF,EAAIkoF,EACX7B,GAAOrmF,EAAImoF,EACX7B,GAAOtmF,EAAIooF,EAEX5D,IADAxkF,EAAIjC,EAAE,IACIspF,EACV5C,GAAMzkF,EAAIsnF,EACV5C,GAAM1kF,EAAIunF,EACV5C,GAAM3kF,EAAIwnF,EACV5C,GAAM5kF,EAAIynF,EACV5C,GAAM7kF,EAAI0nF,EACV5B,GAAM9lF,EAAI2nF,EACV5B,GAAM/lF,EAAI4nF,EACV5B,GAAOhmF,EAAI6nF,EACX5B,GAAOjmF,EAAI8nF,EACX5B,GAAOlmF,EAAI+nF,EACX5B,GAAOnmF,EAAIgoF,EACX5B,GAAOpmF,EAAIioF,EACX5B,GAAOrmF,EAAIkoF,EACX5B,GAAOtmF,EAAImoF,EACX5B,GAAOvmF,EAAIooF,EAEX3D,IADAzkF,EAAIjC,EAAE,IACIspF,EACV3C,GAAM1kF,EAAIsnF,EACV3C,GAAM3kF,EAAIunF,EACV3C,GAAM5kF,EAAIwnF,EACV3C,GAAM7kF,EAAIynF,EACV3B,GAAM9lF,EAAI0nF,EACV3B,GAAM/lF,EAAI2nF,EACV3B,GAAOhmF,EAAI4nF,EACX3B,GAAOjmF,EAAI6nF,EACX3B,GAAOlmF,EAAI8nF,EACX3B,GAAOnmF,EAAI+nF,EACX3B,GAAOpmF,EAAIgoF,EACX3B,GAAOrmF,EAAIioF,EACX3B,GAAOtmF,EAAIkoF,EACX3B,GAAOvmF,EAAImoF,EACX3B,GAAOxmF,EAAIooF,EAEX1D,IADA1kF,EAAIjC,EAAE,IACIspF,EACV1C,GAAM3kF,EAAIsnF,EACV1C,GAAM5kF,EAAIunF,EACV1C,GAAM7kF,EAAIwnF,EACV1B,GAAM9lF,EAAIynF,EACV1B,GAAM/lF,EAAI0nF,EACV1B,GAAOhmF,EAAI2nF,EACX1B,GAAOjmF,EAAI4nF,EACX1B,GAAOlmF,EAAI6nF,EACX1B,GAAOnmF,EAAI8nF,EACX1B,GAAOpmF,EAAI+nF,EACX1B,GAAOrmF,EAAIgoF,EACX1B,GAAOtmF,EAAIioF,EACX1B,GAAOvmF,EAAIkoF,EACX1B,GAAOxmF,EAAImoF,EACX1B,GAAOzmF,EAAIooF,EAEXzD,IADA3kF,EAAIjC,EAAE,IACIspF,EACVzC,GAAM5kF,EAAIsnF,EACVzC,GAAM7kF,EAAIunF,EACVzB,GAAM9lF,EAAIwnF,EACVzB,GAAM/lF,EAAIynF,EACVzB,GAAOhmF,EAAI0nF,EACXzB,GAAOjmF,EAAI2nF,EACXzB,GAAOlmF,EAAI4nF,EACXzB,GAAOnmF,EAAI6nF,EACXzB,GAAOpmF,EAAI8nF,EACXzB,GAAOrmF,EAAI+nF,EACXzB,GAAOtmF,EAAIgoF,EACXzB,GAAOvmF,EAAIioF,EACXzB,GAAOxmF,EAAIkoF,EACXzB,GAAOzmF,EAAImoF,EACXzB,GAAO1mF,EAAIooF,EAEXxD,IADA5kF,EAAIjC,EAAE,IACIspF,EACVxC,GAAM7kF,EAAIsnF,EACVxB,GAAM9lF,EAAIunF,EACVxB,GAAM/lF,EAAIwnF,EACVxB,GAAOhmF,EAAIynF,EACXxB,GAAOjmF,EAAI0nF,EACXxB,GAAOlmF,EAAI2nF,EACXxB,GAAOnmF,EAAI4nF,EACXxB,GAAOpmF,EAAI6nF,EACXxB,GAAOrmF,EAAI8nF,EACXxB,GAAOtmF,EAAI+nF,EACXxB,GAAOvmF,EAAIgoF,EACXxB,GAAOxmF,EAAIioF,EACXxB,GAAOzmF,EAAIkoF,EACXxB,GAAO1mF,EAAImoF,EACXxB,GAAO3mF,EAAIooF,EAEXvD,IADA7kF,EAAIjC,EAAE,IACIspF,EACVvB,GAAM9lF,EAAIsnF,EACVvB,GAAM/lF,EAAIunF,EACVvB,GAAOhmF,EAAIwnF,EACXvB,GAAOjmF,EAAIynF,EACXvB,GAAOlmF,EAAI0nF,EACXvB,GAAOnmF,EAAI2nF,EACXvB,GAAOpmF,EAAI4nF,EACXvB,GAAOrmF,EAAI6nF,EACXvB,GAAOtmF,EAAI8nF,EACXvB,GAAOvmF,EAAI+nF,EACXvB,GAAOxmF,EAAIgoF,EACXvB,GAAOzmF,EAAIioF,EACXvB,GAAO1mF,EAAIkoF,EACXvB,GAAO3mF,EAAImoF,EACXvB,GAAO5mF,EAAIooF,EAEXtC,IADA9lF,EAAIjC,EAAE,IACIspF,EACVtB,GAAM/lF,EAAIsnF,EACVtB,GAAOhmF,EAAIunF,EACXtB,GAAOjmF,EAAIwnF,EACXtB,GAAOlmF,EAAIynF,EACXtB,GAAOnmF,EAAI0nF,EACXtB,GAAOpmF,EAAI2nF,EACXtB,GAAOrmF,EAAI4nF,EACXtB,GAAOtmF,EAAI6nF,EACXtB,GAAOvmF,EAAI8nF,EACXtB,GAAOxmF,EAAI+nF,EACXtB,GAAOzmF,EAAIgoF,EACXtB,GAAO1mF,EAAIioF,EACXtB,GAAO3mF,EAAIkoF,EACXtB,GAAO5mF,EAAImoF,EACXtB,GAAO7mF,EAAIooF,EAEXrC,IADA/lF,EAAIjC,EAAE,IACIspF,EACVrB,GAAOhmF,EAAIsnF,EACXrB,GAAOjmF,EAAIunF,EACXrB,GAAOlmF,EAAIwnF,EACXrB,GAAOnmF,EAAIynF,EACXrB,GAAOpmF,EAAI0nF,EACXrB,GAAOrmF,EAAI2nF,EACXrB,GAAOtmF,EAAI4nF,EACXrB,GAAOvmF,EAAI6nF,EACXrB,GAAOxmF,EAAI8nF,EACXrB,GAAOzmF,EAAI+nF,EACXrB,GAAO1mF,EAAIgoF,EACXrB,GAAO3mF,EAAIioF,EACXrB,GAAO5mF,EAAIkoF,EACXrB,GAAO7mF,EAAImoF,EACXrB,GAAO9mF,EAAIooF,EAEXpC,IADAhmF,EAAIjC,EAAE,KACKspF,EACXpB,GAAOjmF,EAAIsnF,EACXpB,GAAOlmF,EAAIunF,EACXpB,GAAOnmF,EAAIwnF,EACXpB,GAAOpmF,EAAIynF,EACXpB,GAAOrmF,EAAI0nF,EACXpB,GAAOtmF,EAAI2nF,EACXpB,GAAOvmF,EAAI4nF,EACXpB,GAAOxmF,EAAI6nF,EACXpB,GAAOzmF,EAAI8nF,EACXpB,GAAO1mF,EAAI+nF,EACXpB,GAAO3mF,EAAIgoF,EACXpB,GAAO5mF,EAAIioF,EACXpB,GAAO7mF,EAAIkoF,EACXpB,GAAO9mF,EAAImoF,EACXpB,GAAO/mF,EAAIooF,EAEXnC,IADAjmF,EAAIjC,EAAE,KACKspF,EACXnB,GAAOlmF,EAAIsnF,EACXnB,GAAOnmF,EAAIunF,EACXnB,GAAOpmF,EAAIwnF,EACXnB,GAAOrmF,EAAIynF,EACXnB,GAAOtmF,EAAI0nF,EACXnB,GAAOvmF,EAAI2nF,EACXnB,GAAOxmF,EAAI4nF,EACXnB,GAAOzmF,EAAI6nF,EACXnB,GAAO1mF,EAAI8nF,EACXnB,GAAO3mF,EAAI+nF,EACXnB,GAAO5mF,EAAIgoF,EACXnB,GAAO7mF,EAAIioF,EACXnB,GAAO9mF,EAAIkoF,EACXnB,GAAO/mF,EAAImoF,EACXnB,GAAOhnF,EAAIooF,EAEXlC,IADAlmF,EAAIjC,EAAE,KACKspF,EACXlB,GAAOnmF,EAAIsnF,EACXlB,GAAOpmF,EAAIunF,EACXlB,GAAOrmF,EAAIwnF,EACXlB,GAAOtmF,EAAIynF,EACXlB,GAAOvmF,EAAI0nF,EACXlB,GAAOxmF,EAAI2nF,EACXlB,GAAOzmF,EAAI4nF,EACXlB,GAAO1mF,EAAI6nF,EACXlB,GAAO3mF,EAAI8nF,EACXlB,GAAO5mF,EAAI+nF,EACXlB,GAAO7mF,EAAIgoF,EACXlB,GAAO9mF,EAAIioF,EACXlB,GAAO/mF,EAAIkoF,EACXlB,GAAOhnF,EAAImoF,EACXlB,GAAOjnF,EAAIooF,EAEXjC,IADAnmF,EAAIjC,EAAE,KACKspF,EACXjB,GAAOpmF,EAAIsnF,EACXjB,GAAOrmF,EAAIunF,EACXjB,GAAOtmF,EAAIwnF,EACXjB,GAAOvmF,EAAIynF,EACXjB,GAAOxmF,EAAI0nF,EACXjB,GAAOzmF,EAAI2nF,EACXjB,GAAO1mF,EAAI4nF,EACXjB,GAAO3mF,EAAI6nF,EACXjB,GAAO5mF,EAAI8nF,EACXjB,GAAO7mF,EAAI+nF,EACXjB,GAAO9mF,EAAIgoF,EACXjB,GAAO/mF,EAAIioF,EACXjB,GAAOhnF,EAAIkoF,EACXjB,GAAOjnF,EAAImoF,EACXjB,GAAOlnF,EAAIooF,EAEXhC,IADApmF,EAAIjC,EAAE,KACKspF,EACXhB,GAAOrmF,EAAIsnF,EACXhB,GAAOtmF,EAAIunF,EACXhB,GAAOvmF,EAAIwnF,EACXhB,GAAOxmF,EAAIynF,EACXhB,GAAOzmF,EAAI0nF,EACXhB,GAAO1mF,EAAI2nF,EACXhB,GAAO3mF,EAAI4nF,EACXhB,GAAO5mF,EAAI6nF,EACXhB,GAAO7mF,EAAI8nF,EACXhB,GAAO9mF,EAAI+nF,EACXhB,GAAO/mF,EAAIgoF,EACXhB,GAAOhnF,EAAIioF,EACXhB,GAAOjnF,EAAIkoF,EACXhB,GAAOlnF,EAAImoF,EACXhB,GAAOnnF,EAAIooF,EAEX/B,IADArmF,EAAIjC,EAAE,KACKspF,EAkBX/5D,GAAO,IAhBPi5D,GAAOvmF,EAAIunF,GAiBX/C,GAAO,IAhBPgC,GAAOxmF,EAAIwnF,GAiBX/C,GAAO,IAhBPgC,GAAOzmF,EAAIynF,GAiBX/C,GAAO,IAhBPgC,GAAO1mF,EAAI0nF,GAiBX/C,GAAO,IAhBPgC,GAAO3mF,EAAI2nF,GAiBX/C,GAAO,IAhBPgC,GAAO5mF,EAAI4nF,GAiBX/C,GAAO,IAhBPgC,GAAO7mF,EAAI6nF,GAiBX/B,GAAO,IAhBPgB,GAAO9mF,EAAI8nF,GAiBX/B,GAAO,IAhBPgB,GAAO/mF,EAAI+nF,GAiBX/B,GAAO,IAhBPgB,GAAOhnF,EAAIgoF,GAiBX/B,GAAO,IAhBPgB,GAAOjnF,EAAIioF,GAiBX/B,GAAO,IAhBPgB,GAAOlnF,EAAIkoF,GAiBX/B,GAAO,IAhBPgB,GAAOnnF,EAAImoF,GAiBX/B,GAAO,IAhBPgB,GAAOpnF,EAAIooF,GAqBsC/6D,GAAjDrtB,GAnBAqtB,GAAO,IAhBPi5D,GAAOtmF,EAAIsnF,KAkCXprF,EAAI,GACU,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSstB,GAAjDttB,EAAKstB,EAAKpxB,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSwkF,GAAjDxkF,EAAKwkF,EAAKtoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSykF,GAAjDzkF,EAAKykF,EAAKvoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS0kF,GAAjD1kF,EAAK0kF,EAAKxoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS2kF,GAAjD3kF,EAAK2kF,EAAKzoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS4kF,GAAjD5kF,EAAK4kF,EAAK1oF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS6kF,GAAjD7kF,EAAK6kF,EAAK3oF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS8lF,GAAjD9lF,EAAK8lF,EAAK5pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS+lF,GAAjD/lF,EAAK+lF,EAAK7pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQgmF,GAAhDhmF,EAAIgmF,EAAM9pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQimF,GAAhDjmF,EAAIimF,EAAM/pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQkmF,GAAhDlmF,EAAIkmF,EAAMhqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQmmF,GAAhDnmF,EAAImmF,EAAMjqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQomF,GAAhDpmF,EAAIomF,EAAMlqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQqmF,GAAhDrmF,EAAIqmF,EAAMnqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QAKSqtB,GAAjDrtB,GAJAqtB,GAAMnxB,EAAE,EAAI,IAAMA,EAAE,KAGpBA,EAAI,GACU,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSstB,GAAjDttB,EAAKstB,EAAKpxB,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSwkF,GAAjDxkF,EAAKwkF,EAAKtoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACSykF,GAAjDzkF,EAAKykF,EAAKvoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS0kF,GAAjD1kF,EAAK0kF,EAAKxoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS2kF,GAAjD3kF,EAAK2kF,EAAKzoF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS4kF,GAAjD5kF,EAAK4kF,EAAK1oF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS6kF,GAAjD7kF,EAAK6kF,EAAK3oF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS8lF,GAAjD9lF,EAAK8lF,EAAK5pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACS+lF,GAAjD/lF,EAAK+lF,EAAK7pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQgmF,GAAhDhmF,EAAIgmF,EAAM9pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQimF,GAAhDjmF,EAAIimF,EAAM/pF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQkmF,GAAhDlmF,EAAIkmF,EAAMhqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQmmF,GAAhDnmF,EAAImmF,EAAMjqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQomF,GAAhDpmF,EAAIomF,EAAMlqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACQqmF,GAAhDrmF,EAAIqmF,EAAMnqF,EAAI,OAAgD,OAAzCA,EAAIiC,KAAKuO,MAAM1M,EAAI,QACxCqtB,GAAMnxB,EAAE,EAAI,IAAMA,EAAE,GAEpBM,EAAG,GAAK6wB,EACR7wB,EAAG,GAAK8wB,EACR9wB,EAAG,GAAKgoF,EACRhoF,EAAG,GAAKioF,EACRjoF,EAAG,GAAKkoF,EACRloF,EAAG,GAAKmoF,EACRnoF,EAAG,GAAKooF,EACRpoF,EAAG,GAAKqoF,EACRroF,EAAG,GAAKspF,EACRtpF,EAAG,GAAKupF,EACRvpF,EAAE,IAAMwpF,EACRxpF,EAAE,IAAMypF,EACRzpF,EAAE,IAAM0pF,EACR1pF,EAAE,IAAM2pF,EACR3pF,EAAE,IAAM4pF,EACR5pF,EAAE,IAAM6pF,CACV,CAEA,SAAShlF,EAAE7E,EAAGuB,GACZvD,EAAEgC,EAAGuB,EAAGA,EACV,CAEA,SAASsqF,EAAS7rF,EAAG5D,GACnB,IACImF,EADA7B,EAAI0kF,IAER,IAAK7iF,EAAI,EAAGA,EAAI,GAAIA,IAAK7B,EAAE6B,GAAKnF,EAAEmF,GAClC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IACpBsD,EAAEnF,EAAGA,GACI,IAAN6B,GAAiB,IAANA,GAASvD,EAAE0B,EAAGA,EAAGtD,GAEjC,IAAKmF,EAAI,EAAGA,EAAI,GAAIA,IAAKvB,EAAEuB,GAAK7B,EAAE6B,EACpC,CAEA,SAASuqF,EAAQ9rF,EAAG5D,GAClB,IACImF,EADA7B,EAAI0kF,IAER,IAAK7iF,EAAI,EAAGA,EAAI,GAAIA,IAAK7B,EAAE6B,GAAKnF,EAAEmF,GAClC,IAAKA,EAAI,IAAKA,GAAK,EAAGA,IAClBsD,EAAEnF,EAAGA,GACI,IAAN6B,GAASvD,EAAE0B,EAAGA,EAAGtD,GAExB,IAAKmF,EAAI,EAAGA,EAAI,GAAIA,IAAKvB,EAAEuB,GAAK7B,EAAE6B,EACpC,CAEA,SAASwqF,EAAkBrtF,EAAGrC,EAAGqG,GAC/B,IAC8BzG,EAAGG,EAD7B8C,EAAI,IAAIxC,WAAW,IACnBkI,EAAI,IAAI2sE,aAAa,IACrBhwE,EAAI6iF,IAAMhhF,EAAIghF,IAAM1kF,EAAI0kF,IACxBloF,EAAIkoF,IAAMroF,EAAIqoF,IAAMlkF,EAAIkkF,IAC5B,IAAKhoF,EAAI,EAAGA,EAAI,GAAIA,IAAK8C,EAAE9C,GAAKC,EAAED,GAIlC,IAHA8C,EAAE,IAAW,IAAN7C,EAAE,IAAS,GAClB6C,EAAE,IAAI,IACNmqF,EAAYzkF,EAAElC,GACTtG,EAAI,EAAGA,EAAI,GAAIA,IAClBgH,EAAEhH,GAAGwI,EAAExI,GACPF,EAAEE,GAAGmF,EAAEnF,GAAGsD,EAAEtD,GAAG,EAGjB,IADAmF,EAAE,GAAGrF,EAAE,GAAG,EACLE,EAAE,IAAKA,GAAG,IAAKA,EAElB6sF,EAAS1nF,EAAE6B,EADXnH,EAAGiD,EAAE9C,IAAI,MAAQ,EAAFA,GAAM,GAErB6sF,EAASvpF,EAAExD,EAAED,GACbE,EAAEJ,EAAEwF,EAAE7B,GACNsI,EAAEzG,EAAEA,EAAE7B,GACNvD,EAAEuD,EAAE0D,EAAElH,GACN8L,EAAE5E,EAAEA,EAAElH,GACN2I,EAAE3I,EAAEH,GACJ8I,EAAE3E,EAAEqB,GACJvD,EAAEuD,EAAE7B,EAAE6B,GACNvD,EAAE0B,EAAE0D,EAAErH,GACNI,EAAEJ,EAAEwF,EAAE7B,GACNsI,EAAEzG,EAAEA,EAAE7B,GACNmF,EAAEzB,EAAE7B,GACJyG,EAAEtI,EAAExD,EAAEgE,GACNlC,EAAEuD,EAAE7B,EAAEglF,GACNvoF,EAAEoF,EAAEA,EAAErF,GACN8B,EAAE0B,EAAEA,EAAE6B,GACNvD,EAAEuD,EAAErF,EAAEgE,GACNlC,EAAE9B,EAAEkH,EAAEwB,GACNC,EAAEzB,EAAErH,GACJktF,EAAS1nF,EAAE6B,EAAEnH,GACbgtF,EAASvpF,EAAExD,EAAED,GAEf,IAAKG,EAAI,EAAGA,EAAI,GAAIA,IAClBwI,EAAExI,EAAE,IAAImF,EAAEnF,GACVwI,EAAExI,EAAE,IAAIsD,EAAEtD,GACVwI,EAAExI,EAAE,IAAIgH,EAAEhH,GACVwI,EAAExI,EAAE,IAAIF,EAAEE,GAEZ,IAAI4vF,EAAMpnF,EAAEpI,SAAS,IACjByvF,EAAMrnF,EAAEpI,SAAS,IAIrB,OAHAqvF,EAASG,EAAIA,GACbhuF,EAAEiuF,EAAIA,EAAID,GACV9C,EAAUxqF,EAAEutF,GACL,CACT,CAEA,SAASC,EAAuBxtF,EAAGrC,GACjC,OAAO0vF,EAAkBrtF,EAAGrC,EAAGkoF,EACjC,CAEA,SAAS4H,EAAmBvpF,EAAGgC,GAE7B,OADAy/E,EAAYz/E,EAAG,IACRsnF,EAAuBtpF,EAAGgC,EACnC,CAEA,SAASwnF,EAAoB9tF,EAAGsE,EAAGgC,GACjC,IAAI3E,EAAI,IAAIvD,WAAW,IAEvB,OADAqvF,EAAkB9rF,EAAG2E,EAAGhC,GACjBykF,EAAqB/oF,EAAGgmF,EAAIrkF,EAAGsnF,EACxC,CA53BAQ,EAAStrF,UAAU4vF,OAAS,SAASvpF,EAAG4kF,EAAMn2D,GA2B5C,IA1BA,IACIV,EAAIC,EAAIk3D,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI3oF,EAChC4sF,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAFpCC,EAAQpwF,KAAK4rF,IAAM,EAAI,KAIvByE,EAAKrwF,KAAK4E,EAAE,GACZ0rF,EAAKtwF,KAAK4E,EAAE,GACZ2rF,EAAKvwF,KAAK4E,EAAE,GACZ4rF,EAAKxwF,KAAK4E,EAAE,GACZ6rF,EAAKzwF,KAAK4E,EAAE,GACZ8rF,EAAK1wF,KAAK4E,EAAE,GACZ+rF,EAAK3wF,KAAK4E,EAAE,GACZgsF,EAAK5wF,KAAK4E,EAAE,GACZisF,EAAK7wF,KAAK4E,EAAE,GACZksF,EAAK9wF,KAAK4E,EAAE,GAEZmsF,EAAK/wF,KAAKX,EAAE,GACZ2xF,EAAKhxF,KAAKX,EAAE,GACZ4xF,EAAKjxF,KAAKX,EAAE,GACZ6xF,EAAKlxF,KAAKX,EAAE,GACZ8xF,EAAKnxF,KAAKX,EAAE,GACZ+xF,EAAKpxF,KAAKX,EAAE,GACZgyF,EAAKrxF,KAAKX,EAAE,GACZiyF,EAAKtxF,KAAKX,EAAE,GACZkyF,EAAKvxF,KAAKX,EAAE,GACZmyF,EAAKxxF,KAAKX,EAAE,GAETs1B,GAAS,IAcd+6D,EAFA5sF,EAAI,EAGJ4sF,IAdmDW,GAAmC,MAAtFp8D,EAAkB,IAAb/tB,EAAE4kF,EAAM,IAA0B,IAAb5kF,EAAE4kF,EAAM,KAAc,IAcrCiG,EACXrB,IAdmDY,GAAmC,MAA3Br8D,IAAO,IAAlEC,EAAkB,IAAbhuB,EAAE4kF,EAAM,IAA0B,IAAb5kF,EAAE4kF,EAAM,KAAc,IAAgC,KAcpE,EAAI0G,GAChB9B,IAdmDa,GAAmC,MAA3Br8D,IAAO,IAAlEk3D,EAAkB,IAAbllF,EAAE4kF,EAAM,IAA0B,IAAb5kF,EAAE4kF,EAAM,KAAc,IAAgC,KAcpE,EAAIyG,GAChB7B,IAdmDc,GAAmC,MAA3BpF,IAAQ,GAAnEC,EAAkB,IAAbnlF,EAAE4kF,EAAM,IAA0B,IAAb5kF,EAAE4kF,EAAM,KAAc,IAAgC,KAcpE,EAAIwG,GAEhBxuF,GADA4sF,IAdmDe,GAAmC,MAA3BpF,IAAQ,GAAnEC,EAAkB,IAAbplF,EAAE4kF,EAAM,IAA0B,IAAb5kF,EAAE4kF,EAAM,KAAc,IAA+B,MAcnE,EAAIuG,MACJ,GAAK3B,GAAM,KACvBA,IAfAgB,GAAQpF,IAAQ,EAAM,OAeV,EAAI8F,GAChB1B,IAfmDiB,GAAmC,MAA3BrF,IAAO,IAAlEC,EAAkB,IAAbrlF,EAAE4kF,EAAK,KAA2B,IAAb5kF,EAAE4kF,EAAK,MAAe,IAAgC,KAepE,EAAIqG,GAChBzB,IAfmDkB,GAAmC,MAA3BrF,IAAO,IAAlEC,EAAkB,IAAbtlF,EAAE4kF,EAAK,KAA2B,IAAb5kF,EAAE4kF,EAAK,MAAe,IAAgC,KAepE,EAAIoG,GAChBxB,IAfmDmB,GAAmC,MAA3BrF,IAAQ,GAAnEC,EAAkB,IAAbvlF,EAAE4kF,EAAK,KAA2B,IAAb5kF,EAAE4kF,EAAK,MAAe,IAAgC,KAepE,EAAImG,GAIhBtB,EAFA7sF,IADA4sF,IAfAoB,GAAQrF,IAAO,EAAM2E,IAeT,EAAIY,MACH,GAGbrB,GAAMU,EAAKW,EACXrB,GAAMW,EAAKS,EACXpB,GAAMY,GAAM,EAAIiB,GAChB7B,GAAMa,GAAM,EAAIe,GAEhBzuF,GADA6sF,GAAMc,GAAM,EAAIa,MACJ,GAAK3B,GAAM,KACvBA,GAAMe,GAAM,EAAIW,GAChB1B,GAAMgB,GAAM,EAAIS,GAChBzB,GAAMiB,GAAM,EAAIO,GAChBxB,GAAMkB,GAAM,EAAIK,GAEhBpuF,IADA6sF,GAAMmB,GAAM,EAAIG,MACH,GAAKtB,GAAM,KAExBC,EAAK9sF,EACL8sF,GAAMS,EAAKY,EACXrB,GAAMU,EAAKU,EACXpB,GAAMW,EAAKQ,EACXnB,GAAMY,GAAM,EAAIgB,GAEhB1uF,GADA8sF,GAAMa,GAAM,EAAIc,MACJ,GAAK3B,GAAM,KACvBA,GAAMc,GAAM,EAAIY,GAChB1B,GAAMe,GAAM,EAAIU,GAChBzB,GAAMgB,GAAM,EAAIQ,GAChBxB,GAAMiB,GAAM,EAAIM,GAIhBtB,EAFA/sF,IADA8sF,GAAMkB,GAAM,EAAII,MACH,GAGbrB,GAAMQ,EAAKa,EACXrB,GAAMS,EAAKW,EACXpB,GAAMU,EAAKS,EACXnB,GAAMW,EAAKO,EAEXjuF,GADA+sF,GAAMY,GAAM,EAAIe,MACJ,GAAK3B,GAAM,KACvBA,GAAMa,GAAM,EAAIa,GAChB1B,GAAMc,GAAM,EAAIW,GAChBzB,GAAMe,GAAM,EAAIS,GAChBxB,GAAMgB,GAAM,EAAIO,GAIhBtB,EAFAhtF,IADA+sF,GAAMiB,GAAM,EAAIK,MACH,GAGbrB,GAAMO,EAAKc,EACXrB,GAAMQ,EAAKY,EACXpB,GAAMS,EAAKU,EACXnB,GAAMU,EAAKQ,EAEXluF,GADAgtF,GAAMW,EAAKM,KACC,GAAKjB,GAAM,KACvBA,GAAMY,GAAM,EAAIc,GAChB1B,GAAMa,GAAM,EAAIY,GAChBzB,GAAMc,GAAM,EAAIU,GAChBxB,GAAMe,GAAM,EAAIQ,GAIhBtB,EAFAjtF,IADAgtF,GAAMgB,GAAM,EAAIM,MACH,GAGbrB,GAAMM,EAAKe,EACXrB,GAAMO,EAAKa,EACXpB,GAAMQ,EAAKW,EACXnB,GAAMS,EAAKS,EAEXnuF,GADAitF,GAAMU,EAAKO,KACC,GAAKjB,GAAM,KACvBA,GAAMW,EAAKK,EACXhB,GAAMY,GAAM,EAAIa,GAChBzB,GAAMa,GAAM,EAAIW,GAChBxB,GAAMc,GAAM,EAAIS,GAIhBtB,EAFAltF,IADAitF,GAAMe,GAAM,EAAIO,MACH,GAGbrB,GAAMK,EAAKgB,EACXrB,GAAMM,EAAKc,EACXpB,GAAMO,EAAKY,EACXnB,GAAMQ,EAAKU,EAEXpuF,GADAktF,GAAMS,EAAKQ,KACC,GAAKjB,GAAM,KACvBA,GAAMU,EAAKM,EACXhB,GAAMW,EAAKI,EACXf,GAAMY,GAAM,EAAIY,GAChBxB,GAAMa,GAAM,EAAIU,GAIhBtB,EAFAntF,IADAktF,GAAMc,GAAM,EAAIQ,MACH,GAGbrB,GAAMI,EAAKiB,EACXrB,GAAMK,EAAKe,EACXpB,GAAMM,EAAKa,EACXnB,GAAMO,EAAKW,EAEXruF,GADAmtF,GAAMQ,EAAKS,KACC,GAAKjB,GAAM,KACvBA,GAAMS,EAAKO,EACXhB,GAAMU,EAAKK,EACXf,GAAMW,EAAKG,EACXd,GAAMY,GAAM,EAAIW,GAIhBtB,EAFAptF,IADAmtF,GAAMa,GAAM,EAAIS,MACH,GAGbrB,GAAMG,EAAKkB,EACXrB,GAAMI,EAAKgB,EACXpB,GAAMK,EAAKc,EACXnB,GAAMM,EAAKY,EAEXtuF,GADAotF,GAAMO,EAAKU,KACC,GAAKjB,GAAM,KACvBA,GAAMQ,EAAKQ,EACXhB,GAAMS,EAAKM,EACXf,GAAMU,EAAKI,EACXd,GAAMW,EAAKE,EAIXZ,EAFArtF,IADAotF,GAAMY,GAAM,EAAIU,MACH,GAGbrB,GAAME,EAAKmB,EACXrB,GAAMG,EAAKiB,EACXpB,GAAMI,EAAKe,EACXnB,GAAMK,EAAKa,EAEXvuF,GADAqtF,GAAMM,EAAKW,KACC,GAAKjB,GAAM,KACvBA,GAAMO,EAAKS,EACXhB,GAAMQ,EAAKO,EACXf,GAAMS,EAAKK,EACXd,GAAMU,EAAKG,EAUXX,EAJAX,EAAS,MADT5sF,GADAA,IAFAA,IADAqtF,GAAMW,EAAKC,KACE,KAED,GAAKjuF,EAAM,IAhIL4sF,GAAM,MAiIT,GAMfY,EAHAX,GADA7sF,KAAW,GAKXytF,EA5GkBX,GAAM,KA6GxBY,EA/FkBX,GAAM,KAgGxBY,EAlFkBX,GAAM,KAmFxBY,EArEkBX,GAAM,KAsExBY,EAxDkBX,GAAM,KAyDxBY,EA3CkBX,GAAM,KA4CxBY,EA9BkBX,GAAM,KA+BxBY,EAjBkBX,GAAM,KAmBxBrF,GAAQ,GACRn2D,GAAS,GAEX30B,KAAK4E,EAAE,GAAKyrF,EACZrwF,KAAK4E,EAAE,GAAK0rF,EACZtwF,KAAK4E,EAAE,GAAK2rF,EACZvwF,KAAK4E,EAAE,GAAK4rF,EACZxwF,KAAK4E,EAAE,GAAK6rF,EACZzwF,KAAK4E,EAAE,GAAK8rF,EACZ1wF,KAAK4E,EAAE,GAAK+rF,EACZ3wF,KAAK4E,EAAE,GAAKgsF,EACZ5wF,KAAK4E,EAAE,GAAKisF,EACZ7wF,KAAK4E,EAAE,GAAKksF,CACd,EAEA3F,EAAStrF,UAAUoyB,OAAS,SAASw/D,EAAKC,GACxC,IACI5uF,EAAG6uF,EAAMruF,EAAG9D,EADZ6G,EAAI,IAAI4uE,YAAY,IAGxB,GAAIj1E,KAAK2rF,SAAU,CAGjB,IAFAnsF,EAAIQ,KAAK2rF,SACT3rF,KAAKyN,OAAOjO,KAAO,EACZA,EAAI,GAAIA,IAAKQ,KAAKyN,OAAOjO,GAAK,EACrCQ,KAAK4rF,IAAM,EACX5rF,KAAKyvF,OAAOzvF,KAAKyN,OAAQ,EAAG,GAC9B,CAIA,IAFA3K,EAAI9C,KAAK4E,EAAE,KAAO,GAClB5E,KAAK4E,EAAE,IAAM,KACRpF,EAAI,EAAGA,EAAI,GAAIA,IAClBQ,KAAK4E,EAAEpF,IAAMsD,EACbA,EAAI9C,KAAK4E,EAAEpF,KAAO,GAClBQ,KAAK4E,EAAEpF,IAAM,KAaf,IAXAQ,KAAK4E,EAAE,IAAW,EAAJ9B,EACdA,EAAI9C,KAAK4E,EAAE,KAAO,GAClB5E,KAAK4E,EAAE,IAAM,KACb5E,KAAK4E,EAAE,IAAM9B,EACbA,EAAI9C,KAAK4E,EAAE,KAAO,GAClB5E,KAAK4E,EAAE,IAAM,KACb5E,KAAK4E,EAAE,IAAM9B,EAEbuD,EAAE,GAAKrG,KAAK4E,EAAE,GAAK,EACnB9B,EAAIuD,EAAE,KAAO,GACbA,EAAE,IAAM,KACH7G,EAAI,EAAGA,EAAI,GAAIA,IAClB6G,EAAE7G,GAAKQ,KAAK4E,EAAEpF,GAAKsD,EACnBA,EAAIuD,EAAE7G,KAAO,GACb6G,EAAE7G,IAAM,KAKV,IAHA6G,EAAE,IAAM,KAERsrF,GAAY,EAAJ7uF,GAAS,EACZtD,EAAI,EAAGA,EAAI,GAAIA,IAAK6G,EAAE7G,IAAMmyF,EAEjC,IADAA,GAAQA,EACHnyF,EAAI,EAAGA,EAAI,GAAIA,IAAKQ,KAAK4E,EAAEpF,GAAMQ,KAAK4E,EAAEpF,GAAKmyF,EAAQtrF,EAAE7G,GAa5D,IAXAQ,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,GAAc5E,KAAK4E,EAAE,IAAM,IAChD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAM,IAChD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAO,GACjD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAO,GACjD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAO,GAAO5E,KAAK4E,EAAE,IAAO,EAAM5E,KAAK4E,EAAE,IAAM,IACpE5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAM,IAChD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAO,GACjD5E,KAAK4E,EAAE,GAAoE,OAA7D5E,KAAK4E,EAAE,KAAQ,EAAM5E,KAAK4E,EAAE,IAAO,GAEjDtB,EAAItD,KAAK4E,EAAE,GAAK5E,KAAK0rF,IAAI,GACzB1rF,KAAK4E,EAAE,GAAS,MAAJtB,EACP9D,EAAI,EAAGA,EAAI,EAAGA,IACjB8D,GAAOtD,KAAK4E,EAAEpF,GAAKQ,KAAK0rF,IAAIlsF,GAAM,IAAM8D,IAAM,IAAO,EACrDtD,KAAK4E,EAAEpF,GAAS,MAAJ8D,EAGdmuF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAQ,GAAM1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,IACrC6sF,EAAIC,EAAO,IAAO1xF,KAAK4E,EAAE,KAAO,EAAK,GACvC,EAEAumF,EAAStrF,UAAU6jD,OAAS,SAASx9C,EAAG4kF,EAAMn2D,GAC5C,IAAIn1B,EAAGoyF,EAEP,GAAI5xF,KAAK2rF,SAAU,CAIjB,KAHAiG,EAAQ,GAAK5xF,KAAK2rF,UACPh3D,IACTi9D,EAAOj9D,GACJn1B,EAAI,EAAGA,EAAIoyF,EAAMpyF,IACpBQ,KAAKyN,OAAOzN,KAAK2rF,SAAWnsF,GAAK0G,EAAE4kF,EAAKtrF,GAI1C,GAHAm1B,GAASi9D,EACT9G,GAAQ8G,EACR5xF,KAAK2rF,UAAYiG,EACb5xF,KAAK2rF,SAAW,GAClB,OACF3rF,KAAKyvF,OAAOzvF,KAAKyN,OAAQ,EAAG,IAC5BzN,KAAK2rF,SAAW,CAClB,CASA,GAPIh3D,GAAS,KACXi9D,EAAOj9D,EAASA,EAAQ,GACxB30B,KAAKyvF,OAAOvpF,EAAG4kF,EAAM8G,GACrB9G,GAAQ8G,EACRj9D,GAASi9D,GAGPj9D,EAAO,CACT,IAAKn1B,EAAI,EAAGA,EAAIm1B,EAAOn1B,IACrBQ,KAAKyN,OAAOzN,KAAK2rF,SAAWnsF,GAAK0G,EAAE4kF,EAAKtrF,GAC1CQ,KAAK2rF,UAAYh3D,CACnB,CACF,EA+jBA,IAAIk9D,EAAqB5F,EACrB6F,EAA0B5F,EAc9B,IAAI7gF,EAAI,CACN,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,YAGtC,SAAS0mF,EAAqBxM,EAAIQ,EAAI7/E,EAAGzG,GAyBvC,IAxBA,IACIuyF,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACnCC,EAAIC,EAAIzzF,EAAGa,EAAGuE,EAAGiB,EAAGlB,EAAG6B,EAAG1D,EAAGxD,EAH7B4zF,EAAK,IAAIne,WAAW,IAAKoe,EAAK,IAAIpe,WAAW,IAK7Cqe,EAAM7N,EAAG,GACT8N,EAAM9N,EAAG,GACT+N,EAAM/N,EAAG,GACTgO,EAAMhO,EAAG,GACTiO,EAAMjO,EAAG,GACTkO,EAAMlO,EAAG,GACTmO,EAAMnO,EAAG,GACToO,EAAMpO,EAAG,GAETqO,EAAM7N,EAAG,GACT8N,EAAM9N,EAAG,GACT+N,EAAM/N,EAAG,GACTgO,EAAMhO,EAAG,GACTiO,EAAMjO,EAAG,GACTkO,EAAMlO,EAAG,GACTmO,EAAMnO,EAAG,GACToO,EAAMpO,EAAG,GAETrqE,EAAM,EACHjc,GAAK,KAAK,CACf,IAAKD,EAAI,EAAGA,EAAI,GAAIA,IAClBa,EAAI,EAAIb,EAAIkc,EACZw3E,EAAG1zF,GAAM0G,EAAE7F,EAAE,IAAM,GAAO6F,EAAE7F,EAAE,IAAM,GAAO6F,EAAE7F,EAAE,IAAM,EAAK6F,EAAE7F,EAAE,GAC9D8yF,EAAG3zF,GAAM0G,EAAE7F,EAAE,IAAM,GAAO6F,EAAE7F,EAAE,IAAM,GAAO6F,EAAE7F,EAAE,IAAM,EAAK6F,EAAE7F,EAAE,GAEhE,IAAKb,EAAI,EAAGA,EAAI,GAAIA,IA+HlB,GA9HAwyF,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACAC,EAENnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACNnB,EAAMoB,EACAC,EAMNxvF,EAAQ,OAFRkB,EAAIsuF,GAEY3tF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI+uF,GAIYr0F,EAAIsF,IAAM,GAM1BD,GAAS,OAFTkB,GAAMmuF,IAAQ,GAAOR,GAAO,KAAcQ,IAAQ,GAAOR,GAAO,KAAcA,IAAQ,EAAYQ,GAAO,KAExFxtF,GAAKX,IAAM,GAC5B/C,GAAS,OAJT8B,GAAM4uF,IAAQ,GAAOQ,GAAO,KAAcR,IAAQ,GAAOQ,GAAO,KAAcA,IAAQ,EAAYR,GAAO,KAIxFl0F,GAAKsF,IAAM,GAM5BD,GAAS,OAFTkB,EAAKmuF,EAAMC,GAASD,EAAME,GAET1tF,GAAKX,IAAM,GAC5B/C,GAAS,OAJT8B,EAAK4uF,EAAMC,GAASD,EAAME,GAITp0F,GAAKsF,IAAM,GAG5BA,EAAIyG,EAAI,EAAF7L,GAGNmF,GAAS,OAFTkB,EAAIwF,EAAI,EAAF7L,EAAI,IAEOgH,GAAKX,IAAM,GAC5B/C,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAG5BA,EAAIsuF,EAAG1zF,EAAE,IAGQgH,IAFjBX,EAAIstF,EAAG3zF,EAAE,OAEmB,GAC5BsD,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAG5B9B,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,GAUXlB,EAAQ,OAFRkB,EAJAotF,EAAS,MAAJtuF,EAAa6B,GAAK,IAMPA,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAJAouF,EAAS,MAAJlwF,GAFLxD,GAAKwD,IAAM,KAEY,IAQPxD,EAAIsF,IAAM,GAM1BD,GAAS,OAFTkB,GAAM+tF,IAAQ,GAAOR,GAAO,IAAcA,IAAQ,EAAYQ,GAAO,KAAmBR,IAAQ,EAAYQ,GAAO,KAElGptF,GAAKX,IAAM,GAC5B/C,GAAS,OAJT8B,GAAMwuF,IAAQ,GAAOQ,GAAO,IAAcA,IAAQ,EAAYR,GAAO,KAAmBQ,IAAQ,EAAYR,GAAO,KAIlG9zF,GAAKsF,IAAM,GAMX4B,IAFjBX,EAAK+tF,EAAMC,EAAQD,EAAME,EAAQD,EAAMC,KAEX,GAC5BhxF,GAAS,OAJT8B,EAAKwuF,EAAMC,EAAQD,EAAME,EAAQD,EAAMC,GAItBh0F,GAAKsF,IAAM,GAM5B2tF,EAAW,OAHXzvF,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,KACXvG,GAAKwD,IAAM,KAEgB,GAC3BiwF,EAAW,MAAJpuF,EAAe6B,GAAK,GAM3B7B,EAAQ,OAFRkB,EAAI8sF,GAEYnsF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAIutF,GAIY7yF,EAAIsF,IAAM,GAKT4B,IAFjBX,EAAIotF,KAEwB,GAC5BnwF,GAAS,OAJT8B,EAAIouF,GAIa1zF,GAAKsF,IAAM,GAS5ByuF,EAAMrB,EACNsB,EAAMrB,EACNsB,EAAMrB,EACNsB,EANArB,EAAW,OAHXrvF,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,KACXvG,GAAKwD,IAAM,KAEgB,GAO3B2wF,EAAMrB,EACNsB,EAAMrB,EACNsB,EAAMrB,EACNc,EAAMb,EAENsB,EAAMrB,EACNsB,EAAMrB,EACNsB,EAAMrB,EACNsB,EAdArB,EAAW,MAAJhuF,EAAe6B,GAAK,GAe3BytF,EAAMrB,EACNsB,EAAMrB,EACNsB,EAAMrB,EACNc,EAAMb,EAEFvzF,EAAE,IAAO,GACX,IAAKa,EAAI,EAAGA,EAAI,GAAIA,IAElBuE,EAAIsuF,EAAG7yF,GAGPsE,EAAQ,OAFRkB,EAAIstF,EAAG9yF,IAESmG,EAAIX,IAAM,GAC1B/C,EAAQ,MAAJ8B,EAAYtF,EAAIsF,IAAM,GAE1BA,EAAIsuF,GAAI7yF,EAAE,GAAG,IAGbsE,GAAS,OAFTkB,EAAIstF,GAAI9yF,EAAE,GAAG,KAEImG,GAAKX,IAAM,GAC5B/C,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAG5BouF,EAAKE,GAAI7yF,EAAE,GAAG,IAKdsE,GAAS,OAFTkB,IAFAotF,EAAKE,GAAI9yF,EAAE,GAAG,OAED,EAAM2yF,GAAM,KAAaC,IAAO,EAAMD,GAAM,KAAaC,IAAO,EAAMD,GAAM,KAExExsF,GAAKX,IAAM,GAC5B/C,GAAS,OAJT8B,GAAMouF,IAAO,EAAMC,GAAM,KAAaD,IAAO,EAAMC,GAAM,IAAYD,IAAO,GAI3D1zF,GAAKsF,IAAM,GAG5BouF,EAAKE,GAAI7yF,EAAE,IAAI,IAKEmG,IAFjBX,IAFAotF,EAAKE,GAAI9yF,EAAE,IAAI,OAEF,GAAO2yF,GAAM,KAAcA,IAAO,GAAYC,GAAM,IAAmBA,IAAO,EAAMD,GAAM,OAE3E,GAC5BlwF,GAAS,OAJT8B,GAAMouF,IAAO,GAAOC,GAAM,KAAcA,IAAO,GAAYD,GAAM,GAAkBA,IAAO,GAIzE1zF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEXqtF,EAAG7yF,GAAU,MAAJyC,EAAexD,GAAK,GAC7B6zF,EAAG9yF,GAAU,MAAJsE,EAAe6B,GAAK,GASnC7B,EAAQ,OAFRkB,EAAI+tF,GAEYptF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAIwuF,GAIY9zF,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAK6N,EAAW,MAAJtwF,EAAexD,GAAK,GACnCymF,EAAG,GAAK6N,EAAW,MAAJjvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIguF,GAEYrtF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAIyuF,GAIY/zF,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAK8N,EAAW,MAAJvwF,EAAexD,GAAK,GACnCymF,EAAG,GAAK8N,EAAW,MAAJlvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIiuF,GAEYttF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI0uF,GAIYh0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAK+N,EAAW,MAAJxwF,EAAexD,GAAK,GACnCymF,EAAG,GAAK+N,EAAW,MAAJnvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIkuF,GAEYvtF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI2uF,GAIYj0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAKgO,EAAW,MAAJzwF,EAAexD,GAAK,GACnCymF,EAAG,GAAKgO,EAAW,MAAJpvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAImuF,GAEYxtF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI4uF,GAIYl0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAKiO,EAAW,MAAJ1wF,EAAexD,GAAK,GACnCymF,EAAG,GAAKiO,EAAW,MAAJrvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIouF,GAEYztF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI6uF,GAIYn0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAKkO,EAAW,MAAJ3wF,EAAexD,GAAK,GACnCymF,EAAG,GAAKkO,EAAW,MAAJtvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIquF,GAEY1tF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI8uF,GAIYp0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAKmO,EAAW,MAAJ5wF,EAAexD,GAAK,GACnCymF,EAAG,GAAKmO,EAAW,MAAJvvF,EAAe6B,GAAK,GAKnC7B,EAAQ,OAFRkB,EAAIsuF,GAEY3tF,EAAIX,IAAM,GAC1B/C,EAAQ,OAJR8B,EAAI+uF,GAIYr0F,EAAIsF,IAAM,GAE1BA,EAAI2gF,EAAG,GAGU/+E,IAFjBX,EAAIkgF,EAAG,MAEqB,GAC5BjjF,GAAS,MAAJ8B,EAAYtF,GAAKsF,IAAM,GAI5BtF,IADAwD,IADA0D,IAHA7B,GAAS,MAAJkB,KAGM,MACA,MACA,GAEX0/E,EAAG,GAAKoO,EAAW,MAAJ7wF,EAAexD,GAAK,GACnCymF,EAAG,GAAKoO,EAAW,MAAJxvF,EAAe6B,GAAK,GAEnCkV,GAAO,IACPjc,GAAK,GACP,CAEA,OAAOA,CACT,CAEA,SAAS20F,EAAY5mB,EAAKtnE,EAAGzG,GAC3B,IAGID,EAHA+lF,EAAK,IAAIxQ,WAAW,GACpBgR,EAAK,IAAIhR,WAAW,GACpB/sE,EAAI,IAAIlI,WAAW,KAChB0G,EAAI/G,EAuBX,IArBA8lF,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UACRA,EAAG,GAAK,WAERQ,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UACRA,EAAG,GAAK,WACRA,EAAG,GAAK,UAERgM,EAAqBxM,EAAIQ,EAAI7/E,EAAGzG,GAChCA,GAAK,IAEAD,EAAI,EAAGA,EAAIC,EAAGD,IAAKwI,EAAExI,GAAK0G,EAAEM,EAAE/G,EAAED,GAQrC,IAPAwI,EAAEvI,GAAK,IAGPuI,GADAvI,EAAI,IAAI,KAAKA,EAAE,IAAI,EAAE,IACjB,GAAK,EACTuoF,EAAKhgF,EAAGvI,EAAE,EAAK+G,EAAI,UAAc,EAAGA,GAAK,GACzCurF,EAAqBxM,EAAIQ,EAAI/9E,EAAGvI,GAE3BD,EAAI,EAAGA,EAAI,EAAGA,IAAKwoF,EAAKxa,EAAK,EAAEhuE,EAAG+lF,EAAG/lF,GAAIumF,EAAGvmF,IAEjD,OAAO,CACT,CAEA,SAASyoB,EAAIniB,EAAGhE,GACd,IAAI6C,EAAI6iF,IAAMhhF,EAAIghF,IAAM1kF,EAAI0kF,IACxBloF,EAAIkoF,IAAMroF,EAAIqoF,IAAMlkF,EAAIkkF,IACxBnhF,EAAImhF,IAAM5iF,EAAI4iF,IAAMpoF,EAAIooF,IAE5Bp8E,EAAEzG,EAAGmB,EAAE,GAAIA,EAAE,IACbsF,EAAEhM,EAAG0C,EAAE,GAAIA,EAAE,IACbV,EAAEuD,EAAGA,EAAGvF,GACRG,EAAEiH,EAAGV,EAAE,GAAIA,EAAE,IACbvG,EAAEH,EAAG0C,EAAE,GAAIA,EAAE,IACbV,EAAEoF,EAAGA,EAAGpH,GACRgC,EAAE0B,EAAGgD,EAAE,GAAIhE,EAAE,IACbV,EAAE0B,EAAGA,EAAGilF,GACR3mF,EAAE9B,EAAGwG,EAAE,GAAIhE,EAAE,IACbvC,EAAED,EAAGA,EAAGA,GACR8L,EAAEjM,EAAGqH,EAAG7B,GACRyG,EAAE9H,EAAGhE,EAAGwD,GACRvD,EAAE8G,EAAG/G,EAAGwD,GACRvD,EAAEqF,EAAG4B,EAAG7B,GAERvD,EAAE0E,EAAE,GAAI3G,EAAGmE,GACXlC,EAAE0E,EAAE,GAAIlB,EAAGyB,GACXjF,EAAE0E,EAAE,GAAIO,EAAG/C,GACXlC,EAAE0E,EAAE,GAAI3G,EAAGyF,EACb,CAEA,SAASyvF,EAAMvuF,EAAGhE,EAAG0E,GACnB,IAAIhH,EACJ,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjB6sF,EAASvmF,EAAEtG,GAAIsC,EAAEtC,GAAIgH,EAEzB,CAEA,SAAS8tF,GAAKj1F,EAAGyG,GACf,IAAI8yB,EAAK4uD,IAAM+M,EAAK/M,IAAMgN,EAAKhN,IAC/ByH,EAASuF,EAAI1uF,EAAE,IACf1E,EAAEw3B,EAAI9yB,EAAE,GAAI0uF,GACZpzF,EAAEmzF,EAAIzuF,EAAE,GAAI0uF,GACZlI,EAAUjtF,EAAGk1F,GACbl1F,EAAE,KAAOmtF,EAAS5zD,IAAO,CAC3B,CAEA,SAAS67D,GAAW3uF,EAAGhE,EAAGuB,GACxB,IAAImD,EAAGhH,EAKP,IAJA2sF,EAASrmF,EAAE,GAAI8hF,GACfuE,EAASrmF,EAAE,GAAI+hF,GACfsE,EAASrmF,EAAE,GAAI+hF,GACfsE,EAASrmF,EAAE,GAAI8hF,GACVpoF,EAAI,IAAKA,GAAK,IAAKA,EAEtB60F,EAAMvuF,EAAGhE,EADT0E,EAAKnD,EAAG7D,EAAE,EAAG,KAAS,EAAFA,GAAQ,GAE5ByoB,EAAInmB,EAAGgE,GACPmiB,EAAIniB,EAAGA,GACPuuF,EAAMvuF,EAAGhE,EAAG0E,EAEhB,CAEA,SAASkuF,GAAW5uF,EAAGzC,GACrB,IAAIvB,EAAI,CAAC0lF,IAAMA,IAAMA,IAAMA,KAC3B2E,EAASrqF,EAAE,GAAInB,GACfwrF,EAASrqF,EAAE,GAAIE,GACfmqF,EAASrqF,EAAE,GAAI+lF,GACfzmF,EAAEU,EAAE,GAAInB,EAAGqB,GACXyyF,GAAW3uF,EAAGhE,EAAGuB,EACnB,CAEA,SAASsxF,GAAoBz/D,EAAI0mC,EAAIg5B,GACnC,IAEIp1F,EAFAF,EAAI,IAAIQ,WAAW,IACnBgG,EAAI,CAAC0hF,IAAMA,IAAMA,IAAMA,KAY3B,IATKoN,GAAQnN,EAAY7rB,EAAI,IAC7Bw4B,EAAY90F,EAAGs8D,EAAI,IACnBt8D,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAETo1F,GAAW5uF,EAAGxG,GACdg1F,GAAKp/D,EAAIpvB,GAEJtG,EAAI,EAAGA,EAAI,GAAIA,IAAKo8D,EAAGp8D,EAAE,IAAM01B,EAAG11B,GACvC,OAAO,CACT,CAEA,IAAIgC,GAAI,IAAImzE,aAAa,CAAC,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEvK,SAASkgB,GAAKx1F,EAAG2I,GACf,IAAI4/D,EAAOpoE,EAAGa,EAAGqB,EACjB,IAAKlC,EAAI,GAAIA,GAAK,KAAMA,EAAG,CAEzB,IADAooE,EAAQ,EACHvnE,EAAIb,EAAI,GAAIkC,EAAIlC,EAAI,GAAIa,EAAIqB,IAAKrB,EACpC2H,EAAE3H,IAAMunE,EAAQ,GAAK5/D,EAAExI,GAAKgC,GAAEnB,GAAKb,EAAI,KACvCooE,EAAQ7iE,KAAKuO,OAAOtL,EAAE3H,GAAK,KAAO,KAClC2H,EAAE3H,IAAc,IAARunE,EAEV5/D,EAAE3H,IAAMunE,EACR5/D,EAAExI,GAAK,CACT,CAEA,IADAooE,EAAQ,EACHvnE,EAAI,EAAGA,EAAI,GAAIA,IAClB2H,EAAE3H,IAAMunE,GAAS5/D,EAAE,KAAO,GAAKxG,GAAEnB,GACjCunE,EAAQ5/D,EAAE3H,IAAM,EAChB2H,EAAE3H,IAAM,IAEV,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK2H,EAAE3H,IAAMunE,EAAQpmE,GAAEnB,GAC3C,IAAKb,EAAI,EAAGA,EAAI,GAAIA,IAClBwI,EAAExI,EAAE,IAAMwI,EAAExI,IAAM,EAClBH,EAAEG,GAAY,IAAPwI,EAAExI,EAEb,CAEA,SAASw1B,GAAO31B,GACd,IAA8BG,EAA1BwI,EAAI,IAAI2sE,aAAa,IACzB,IAAKn1E,EAAI,EAAGA,EAAI,GAAIA,IAAKwI,EAAExI,GAAKH,EAAEG,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKH,EAAEG,GAAK,EAChCq1F,GAAKx1F,EAAG2I,EACV,CAGA,SAAS8sF,GAAYC,EAAI7uF,EAAGzG,EAAGm8D,GAC7B,IACIp8D,EAAGa,EADHf,EAAI,IAAIQ,WAAW,IAAK8E,EAAI,IAAI9E,WAAW,IAAKT,EAAI,IAAIS,WAAW,IAC7DkI,EAAI,IAAI2sE,aAAa,IAC3B7uE,EAAI,CAAC0hF,IAAMA,IAAMA,IAAMA,KAE3B4M,EAAY90F,EAAGs8D,EAAI,IACnBt8D,EAAE,IAAM,IACRA,EAAE,KAAO,IACTA,EAAE,KAAO,GAET,IAAI01F,EAAQv1F,EAAI,GAChB,IAAKD,EAAI,EAAGA,EAAIC,EAAGD,IAAKu1F,EAAG,GAAKv1F,GAAK0G,EAAE1G,GACvC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKu1F,EAAG,GAAKv1F,GAAKF,EAAE,GAAKE,GAO7C,IALA40F,EAAY/0F,EAAG01F,EAAGn1F,SAAS,IAAKH,EAAE,IAClCu1B,GAAO31B,GACPq1F,GAAW5uF,EAAGzG,GACdi1F,GAAKS,EAAIjvF,GAEJtG,EAAI,GAAIA,EAAI,GAAIA,IAAKu1F,EAAGv1F,GAAKo8D,EAAGp8D,GAIrC,IAHA40F,EAAYxvF,EAAGmwF,EAAIt1F,EAAI,IACvBu1B,GAAOpwB,GAEFpF,EAAI,EAAGA,EAAI,GAAIA,IAAKwI,EAAExI,GAAK,EAChC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAKwI,EAAExI,GAAKH,EAAEG,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClB,IAAKa,EAAI,EAAGA,EAAI,GAAIA,IAClB2H,EAAExI,EAAEa,IAAMuE,EAAEpF,GAAKF,EAAEe,GAKvB,OADAw0F,GAAKE,EAAGn1F,SAAS,IAAKoI,GACfgtF,CACT,CAwCA,SAASC,GAAiB/uF,EAAG6uF,EAAIt1F,EAAGy1B,GAClC,IAAI11B,EACAJ,EAAI,IAAIU,WAAW,IAAK8E,EAAI,IAAI9E,WAAW,IAC3CgG,EAAI,CAAC0hF,IAAMA,IAAMA,IAAMA,KACvB1lF,EAAI,CAAC0lF,IAAMA,IAAMA,IAAMA,KAE3B,GAAI/nF,EAAI,GAAI,OAAQ,EAEpB,GA9CF,SAAmBJ,EAAGyG,GACpB,IAAI1G,EAAIooF,IAAM0N,EAAM1N,IAAMte,EAAMse,IAC5B2N,EAAM3N,IAAM4N,EAAO5N,IAAM6N,EAAO7N,IAChC8N,EAAO9N,IA2BX,OAzBA2E,EAAS9sF,EAAE,GAAIwoF,GACf4E,EAAYptF,EAAE,GAAIyG,GAClBmC,EAAEihE,EAAK7pE,EAAE,IACT+B,EAAE+zF,EAAKjsB,EAAK1mE,GACZ4I,EAAE89D,EAAKA,EAAK7pE,EAAE,IACdE,EAAE41F,EAAK91F,EAAE,GAAI81F,GAEbltF,EAAEmtF,EAAMD,GACRltF,EAAEotF,EAAMD,GACRh0F,EAAEk0F,EAAMD,EAAMD,GACdh0F,EAAEhC,EAAGk2F,EAAMpsB,GACX9nE,EAAEhC,EAAGA,EAAG+1F,GAERjG,EAAQ9vF,EAAGA,GACXgC,EAAEhC,EAAGA,EAAG8pE,GACR9nE,EAAEhC,EAAGA,EAAG+1F,GACR/zF,EAAEhC,EAAGA,EAAG+1F,GACR/zF,EAAE/B,EAAE,GAAID,EAAG+1F,GAEXltF,EAAEitF,EAAK71F,EAAE,IACT+B,EAAE8zF,EAAKA,EAAKC,GACR5I,EAAS2I,EAAKhsB,IAAM9nE,EAAE/B,EAAE,GAAIA,EAAE,GAAI0B,GAEtCkH,EAAEitF,EAAK71F,EAAE,IACT+B,EAAE8zF,EAAKA,EAAKC,GACR5I,EAAS2I,EAAKhsB,IAAc,GAE5BsjB,EAASntF,EAAE,MAASyG,EAAE,KAAK,GAAIsF,EAAE/L,EAAE,GAAIuoF,EAAKvoF,EAAE,IAElD+B,EAAE/B,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACT,EACT,CAUMk2F,CAAUzzF,EAAGozB,GAAK,OAAQ,EAE9B,IAAK11B,EAAI,EAAGA,EAAIC,EAAGD,IAAK0G,EAAE1G,GAAKu1F,EAAGv1F,GAClC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK0G,EAAE1G,EAAE,IAAM01B,EAAG11B,GAUtC,GATA40F,EAAYxvF,EAAGsB,EAAGzG,GAClBu1B,GAAOpwB,GACP6vF,GAAW3uF,EAAGhE,EAAG8C,GAEjB8vF,GAAW5yF,EAAGizF,EAAGn1F,SAAS,KAC1BqoB,EAAIniB,EAAGhE,GACPwyF,GAAKl1F,EAAG0G,GAERrG,GAAK,GACD4oF,EAAiB0M,EAAI,EAAG31F,EAAG,GAAI,CACjC,IAAKI,EAAI,EAAGA,EAAIC,EAAGD,IAAK0G,EAAE1G,GAAK,EAC/B,OAAQ,CACV,CAEA,IAAKA,EAAI,EAAGA,EAAIC,EAAGD,IAAK0G,EAAE1G,GAAKu1F,EAAGv1F,EAAI,IACtC,OAAOC,CACT,CAEA,IAGI+1F,GAAgC,GAShCz5B,GAAoB,GACpBJ,GAA6B,GAC7BE,GAA6B,GAiEjC,SAAS45B,GAAa/zF,EAAGjC,GACvB,GAhF8B,KAgF1BiC,EAAEoC,OAAsC,MAAM,IAAIqJ,MAAM,gBAC5D,GAhFgC,KAgF5B1N,EAAEqE,OAAwC,MAAM,IAAIqJ,MAAM,iBAChE,CAOA,SAASuoF,KACP,IAAK,IAAIl2F,EAAI,EAAGA,EAAIuO,UAAUjK,OAAQtE,IACpC,KAAMuO,UAAUvO,aAAcM,YAC5B,MAAM,IAAImD,UAAU,kCAE1B,CAEA,SAAS0yF,GAAQpyE,GACf,IAAK,IAAI/jB,EAAI,EAAGA,EAAI+jB,EAAIzf,OAAQtE,IAAK+jB,EAAI/jB,GAAK,CAChD,CAhFAsmD,EAAK8vC,SAAW,CACdnL,qBAAsBA,EACtBS,kBAAmBA,EACnBF,cAAeA,EACfJ,0BAA2BA,EAC3BG,sBAAuBA,EACvBc,mBAAoBA,EACpBE,0BAA2BA,EAC3B3D,iBAAkBA,EAClBC,iBAAkBA,EAClB4D,iBAAkBA,EAClBC,sBAAuBA,EACvBiD,kBAAmBA,EACnBG,uBAAwBA,EACxBE,oBAAqBA,EACrBqC,mBAAoBA,EACpBgE,WAxsBF,SAAoB/yF,EAAGoD,EAAG5G,EAAGG,EAAGuG,EAAGgC,GACjC,IAAItG,EAAI,IAAI5B,WAAW,IAEvB,OADA0vF,EAAoB9tF,EAAGsE,EAAGgC,GACnB6pF,EAAmB/uF,EAAGoD,EAAG5G,EAAGG,EAAGiC,EACxC,EAqsBEo0F,gBAnsBF,SAAyB5vF,EAAGpD,EAAGxD,EAAGG,EAAGuG,EAAGgC,GACtC,IAAItG,EAAI,IAAI5B,WAAW,IAEvB,OADA0vF,EAAoB9tF,EAAGsE,EAAGgC,GACnB8pF,EAAwB5rF,EAAGpD,EAAGxD,EAAGG,EAAGiC,EAC7C,EAgsBE6tF,mBAAoBA,EACpB6E,YAAaA,EACbU,YAAaA,GACbH,oBAAqBA,GACrBM,iBAAkBA,GAElBc,0BA1C8B,GA2C9BC,4BA1CgC,GA2ChCC,2BA1C+B,GA2C/BT,8BAA+BA,GAC/BU,wBA1C4B,GA2C5BC,8BA1CkC,GA2ClCC,0BA1C8B,GA2C9BC,0BA1C8B,GA2C9BC,yBA1C6B,GA2C7BC,sBAlDgC,GAmDhCC,qBAlD+B,GAmD/BC,wBA1C4BjB,GA2C5Bz5B,kBAAmBA,GACnBJ,2BAA4BA,GAC5BE,2BAA4BA,GAC5B66B,sBA1C0B,GA2C1BC,kBA1CsB,GA4CtBnP,GAAIA,EACJhlF,EAAGA,EACHhB,EAAGA,GACH8qF,UAAWA,EACXG,YAAaA,EACbrrF,EAAGA,EACH7B,EAAGA,EACH0I,EAAGA,EACHmD,EAAGA,EACH8jF,QAASA,EACTjnE,IAAKA,EACLkkE,SAAUA,EACV0I,KAAMA,GACNJ,WAAYA,GACZC,WAAYA,IA0Bd5uC,EAAK8wC,YAAc,SAASn3F,GAC1B,IAAI+G,EAAI,IAAI1G,WAAWL,GAEvB,OADAgoF,EAAYjhF,EAAG/G,GACR+G,CACT,EAEAs/C,EAAK+wC,UAAY,SAAS59E,EAAK6a,EAAOlf,GACpC8gF,GAAgBz8E,EAAK6a,EAAOlf,GAC5B6gF,GAAa7gF,EAAKkf,GAGlB,IAFA,IAAI5tB,EAAI,IAAIpG,WA3GmB,GA2GqBmZ,EAAInV,QACpDhB,EAAI,IAAIhD,WAAWoG,EAAEpC,QAChBtE,EAAI,EAAGA,EAAIyZ,EAAInV,OAAQtE,IAAK0G,EAAE1G,EA7GR,IA6GwCyZ,EAAIzZ,GAE3E,OADAysF,EAAiBnpF,EAAGoD,EAAGA,EAAEpC,OAAQgwB,EAAOlf,GACjC9R,EAAElD,SAAS41F,GACpB,EAEA1vC,EAAK+wC,UAAUC,KAAO,SAASC,EAAKjjE,EAAOlf,GACzC8gF,GAAgBqB,EAAKjjE,EAAOlf,GAC5B6gF,GAAa7gF,EAAKkf,GAGlB,IAFA,IAAIhxB,EAAI,IAAIhD,WAAW01F,GAAgCuB,EAAIjzF,QACvDoC,EAAI,IAAIpG,WAAWgD,EAAEgB,QAChBtE,EAAI,EAAGA,EAAIu3F,EAAIjzF,OAAQtE,IAAKsD,EAAEtD,EAAEg2F,IAAiCuB,EAAIv3F,GAC9E,OAAIsD,EAAEgB,OAAS,IAC2C,IAAtDooF,EAAsBhmF,EAAGpD,EAAGA,EAAEgB,OAAQgwB,EAAOlf,GADvB,KAEnB1O,EAAEtG,SA1HsB,GA2HjC,EAEAkmD,EAAK+wC,UAAUG,UA/HiB,GAgIhClxC,EAAK+wC,UAAUI,YA/HmB,GAgIlCnxC,EAAK+wC,UAAUK,eAAiB1B,GAEhC1vC,EAAKqxC,WAAa,SAAS13F,EAAGqG,GAE5B,GADA4vF,GAAgBj2F,EAAGqG,GA/He,KAgI9BrG,EAAEqE,OAA0C,MAAM,IAAIqJ,MAAM,cAChE,GAlI4B,KAkIxBrH,EAAEhC,OAAoC,MAAM,IAAIqJ,MAAM,cAC1D,IAAIrL,EAAI,IAAIhC,WAnIgB,IAqI5B,OADAqvF,EAAkBrtF,EAAGrC,EAAGqG,GACjBhE,CACT,EAEAgkD,EAAKqxC,WAAWt1E,KAAO,SAASpiB,GAE9B,GADAi2F,GAAgBj2F,GAxIkB,KAyI9BA,EAAEqE,OAA0C,MAAM,IAAIqJ,MAAM,cAChE,IAAIrL,EAAI,IAAIhC,WA3IgB,IA6I5B,OADAwvF,EAAuBxtF,EAAGrC,GACnBqC,CACT,EAEAgkD,EAAKqxC,WAAWC,aA/IoB,GAgJpCtxC,EAAKqxC,WAAWE,mBAjJc,GAmJ9BvxC,EAAKixC,IAAM,SAAS99E,EAAK6a,EAAOb,EAAWmyB,GACzC,IAAI1jD,EAAIokD,EAAKixC,IAAIO,OAAOrkE,EAAWmyB,GACnC,OAAOU,EAAK+wC,UAAU59E,EAAK6a,EAAOpyB,EACpC,EAEAokD,EAAKixC,IAAIO,OAAS,SAASrkE,EAAWmyB,GACpCswC,GAAgBziE,EAAWmyB,GAzE7B,SAAyBlwB,EAAI0mC,GAC3B,GA/E8B,KA+E1B1mC,EAAGpxB,OAAsC,MAAM,IAAIqJ,MAAM,uBAC7D,GA/E8B,KA+E1ByuD,EAAG93D,OAAsC,MAAM,IAAIqJ,MAAM,sBAC/D,CAuEEoqF,CAAgBtkE,EAAWmyB,GAC3B,IAAI1jD,EAAI,IAAI5B,WAvJiB,IAyJ7B,OADA0vF,EAAoB9tF,EAAGuxB,EAAWmyB,GAC3B1jD,CACT,EAEAokD,EAAKixC,IAAIS,MAAQ1xC,EAAK+wC,UAEtB/wC,EAAKixC,IAAID,KAAO,SAAS79E,EAAK6a,EAAOb,EAAWmyB,GAC9C,IAAI1jD,EAAIokD,EAAKixC,IAAIO,OAAOrkE,EAAWmyB,GACnC,OAAOU,EAAK+wC,UAAUC,KAAK79E,EAAK6a,EAAOpyB,EACzC,EAEAokD,EAAKixC,IAAID,KAAKU,MAAQ1xC,EAAK+wC,UAAUC,KAErChxC,EAAKixC,IAAI16B,QAAU,WACjB,IAAInnC,EAAK,IAAIp1B,WAxKiB,IAyK1B87D,EAAK,IAAI97D,WAxKiB,IA0K9B,OADAyvF,EAAmBr6D,EAAI0mC,GAChB,CAAC3oC,UAAWiC,EAAIkwB,UAAWwW,EACpC,EAEA9V,EAAKixC,IAAI16B,QAAQo7B,cAAgB,SAASryC,GAExC,GADAswC,GAAgBtwC,GA9Kc,KA+K1BA,EAAUthD,OACZ,MAAM,IAAIqJ,MAAM,uBAClB,IAAI+nB,EAAK,IAAIp1B,WAlLiB,IAoL9B,OADAwvF,EAAuBp6D,EAAIkwB,GACpB,CAACnyB,UAAWiC,EAAIkwB,UAAW,IAAItlD,WAAWslD,GACnD,EAEAU,EAAKixC,IAAIW,gBAvLuB,GAwLhC5xC,EAAKixC,IAAIY,gBAvLuB,GAwLhC7xC,EAAKixC,IAAIa,gBAvLsB,GAwL/B9xC,EAAKixC,IAAIE,YA/LyB,GAgMlCnxC,EAAKixC,IAAIG,eAAiBpxC,EAAK+wC,UAAUK,eAEzCpxC,EAAK3xB,KAAO,SAASlb,EAAKmsC,GAExB,GADAswC,GAAgBz8E,EAAKmsC,GACjBA,EAAUthD,SAAW+3D,GACvB,MAAM,IAAI1uD,MAAM,uBAClB,IAAI0qF,EAAY,IAAI/3F,WAAWi8D,GAAkB9iD,EAAInV,QAErD,OADAgxF,GAAY+C,EAAW5+E,EAAKA,EAAInV,OAAQshD,GACjCyyC,CACT,EAEA/xC,EAAK3xB,KAAK2iE,KAAO,SAASe,EAAW5kE,GAEnC,GADAyiE,GAAgBmC,EAAW5kE,GACvBA,EAAUnvB,SAAW63D,GACvB,MAAM,IAAIxuD,MAAM,uBAClB,IAAIo7D,EAAM,IAAIzoE,WAAW+3F,EAAU/zF,QAC/Bg0F,EAAO7C,GAAiB1sB,EAAKsvB,EAAWA,EAAU/zF,OAAQmvB,GAC9D,GAAI6kE,EAAO,EAAG,OAAO,KAErB,IADA,IAAI5xF,EAAI,IAAIpG,WAAWg4F,GACdt4F,EAAI,EAAGA,EAAI0G,EAAEpC,OAAQtE,IAAK0G,EAAE1G,GAAK+oE,EAAI/oE,GAC9C,OAAO0G,CACT,EAEA4/C,EAAK3xB,KAAKooC,SAAW,SAAStjD,EAAKmsC,GAGjC,IAFA,IAAIyyC,EAAY/xC,EAAK3xB,KAAKlb,EAAKmsC,GAC3Bqd,EAAM,IAAI3iE,WAAWi8D,IAChBv8D,EAAI,EAAGA,EAAIijE,EAAI3+D,OAAQtE,IAAKijE,EAAIjjE,GAAKq4F,EAAUr4F,GACxD,OAAOijE,CACT,EAEA3c,EAAK3xB,KAAKooC,SAASnoC,OAAS,SAASnb,EAAKwpD,EAAKxvC,GAE7C,GADAyiE,GAAgBz8E,EAAKwpD,EAAKxvC,GACtBwvC,EAAI3+D,SAAWi4D,GACjB,MAAM,IAAI5uD,MAAM,sBAClB,GAAI8lB,EAAUnvB,SAAW63D,GACvB,MAAM,IAAIxuD,MAAM,uBAClB,IAEI3N,EAFAu1F,EAAK,IAAIj1F,WAAWi8D,GAAoB9iD,EAAInV,QAC5CoC,EAAI,IAAIpG,WAAWi8D,GAAoB9iD,EAAInV,QAE/C,IAAKtE,EAAI,EAAGA,EAAIu8D,GAAmBv8D,IAAKu1F,EAAGv1F,GAAKijE,EAAIjjE,GACpD,IAAKA,EAAI,EAAGA,EAAIyZ,EAAInV,OAAQtE,IAAKu1F,EAAGv1F,EAAEu8D,IAAqB9iD,EAAIzZ,GAC/D,OAAQy1F,GAAiB/uF,EAAG6uF,EAAIA,EAAGjxF,OAAQmvB,IAAc,CAC3D,EAEA6yB,EAAK3xB,KAAKkoC,QAAU,WAClB,IAAInnC,EAAK,IAAIp1B,WAAW67D,IACpBC,EAAK,IAAI97D,WAAW+7D,IAExB,OADA84B,GAAoBz/D,EAAI0mC,GACjB,CAAC3oC,UAAWiC,EAAIkwB,UAAWwW,EACpC,EAEA9V,EAAK3xB,KAAKkoC,QAAQo7B,cAAgB,SAASryC,GAEzC,GADAswC,GAAgBtwC,GACZA,EAAUthD,SAAW+3D,GACvB,MAAM,IAAI1uD,MAAM,uBAElB,IADA,IAAI+nB,EAAK,IAAIp1B,WAAW67D,IACfn8D,EAAI,EAAGA,EAAI01B,EAAGpxB,OAAQtE,IAAK01B,EAAG11B,GAAK4lD,EAAU,GAAG5lD,GACzD,MAAO,CAACyzB,UAAWiC,EAAIkwB,UAAW,IAAItlD,WAAWslD,GACnD,EAEAU,EAAK3xB,KAAKkoC,QAAQC,SAAW,SAASuC,GAEpC,GADA62B,GAAgB72B,GA/OU,KAgPtBA,EAAK/6D,OACP,MAAM,IAAIqJ,MAAM,iBAGlB,IAFA,IAAI+nB,EAAK,IAAIp1B,WAAW67D,IACpBC,EAAK,IAAI97D,WAAW+7D,IACfr8D,EAAI,EAAGA,EAAI,GAAIA,IAAKo8D,EAAGp8D,GAAKq/D,EAAKr/D,GAE1C,OADAm1F,GAAoBz/D,EAAI0mC,GAAI,GACrB,CAAC3oC,UAAWiC,EAAIkwB,UAAWwW,EACpC,EAEA9V,EAAK3xB,KAAKujE,gBAAkB/7B,GAC5B7V,EAAK3xB,KAAKwjE,gBAAkB97B,GAC5B/V,EAAK3xB,KAAK4jE,WA3PkB,GA4P5BjyC,EAAK3xB,KAAK6jE,gBAAkBj8B,GAE5BjW,EAAKn5B,KAAO,SAAS1T,GACnBy8E,GAAgBz8E,GAChB,IAAIrU,EAAI,IAAI9E,WA/PU,IAiQtB,OADAs0F,EAAYxvF,EAAGqU,EAAKA,EAAInV,QACjBc,CACT,EAEAkhD,EAAKn5B,KAAKsrE,WApQc,GAsQxBnyC,EAAK1xB,OAAS,SAASpsB,EAAGhC,GAGxB,OAFA0vF,GAAgB1tF,EAAGhC,GAEF,IAAbgC,EAAElE,QAA6B,IAAbkC,EAAElC,SACpBkE,EAAElE,SAAWkC,EAAElC,QACkB,IAA7BmkF,EAAGjgF,EAAG,EAAGhC,EAAG,EAAGgC,EAAElE,QAC3B,EAEAgiD,EAAKoyC,QAAU,SAASnhF,GACtB0wE,EAAc1wE,CAChB,EAEA,WAGE,IAAIohF,EAAyB,oBAAT77E,KAAwBA,KAAK67E,QAAU77E,KAAK87E,SAAY,KAC5E,GAAID,GAAUA,EAAOE,gBAAiB,CAGpCvyC,EAAKoyC,SAAQ,SAASlwF,EAAGvI,GACvB,IAAID,EAAGoH,EAAI,IAAI9G,WAAWL,GAC1B,IAAKD,EAAI,EAAGA,EAAIC,EAAGD,GAHT,MAIR24F,EAAOE,gBAAgBzxF,EAAEhH,SAASJ,EAAGA,EAAIuF,KAAKuJ,IAAI7O,EAAID,EAJ9C,SAMV,IAAKA,EAAI,EAAGA,EAAIC,EAAGD,IAAKwI,EAAExI,GAAKoH,EAAEpH,GACjCm2F,GAAQ/uF,EACV,GACF,MAEEuxF,EAAS,EAAQ,WACHA,EAAOvB,aACnB9wC,EAAKoyC,SAAQ,SAASlwF,EAAGvI,GACvB,IAAID,EAAGoH,EAAIuxF,EAAOvB,YAAYn3F,GAC9B,IAAKD,EAAI,EAAGA,EAAIC,EAAGD,IAAKwI,EAAExI,GAAKoH,EAAEpH,GACjCm2F,GAAQ/uF,EACV,GAGL,CA1BD,EA4BC,CAt1ED,CAs1EoCwN,EAAOjU,QAAUiU,EAAOjU,QAAWmc,KAAKwpC,KAAOxpC,KAAKwpC,MAAQ,CAAC,yDCt1EjG1xC,EAAOjU,QAAU,SAAkBwU,GACjC,OAAOA,GAAsB,iBAARA,GACI,mBAAbA,EAAI1P,MACS,mBAAb0P,EAAItP,MACc,mBAAlBsP,EAAItE,SAClB,iECAA,IAAIioF,EAAoB,EAAQ,wCAC5B/mE,EAAsB,EAAQ,iDAC9BqoD,EAAkB,EAAQ,6CAC1B2e,EAAe,EAAQ,0CAE3B,SAAS7zE,EAAYphB,GACnB,OAAOA,EAAEvD,KAAKiY,KAAK1U,EACrB,CAEA,IAAIk1F,EAAoC,oBAAX9xF,OACzB+xF,EAAoC,oBAAXprF,OAEzBqrF,EAAiBh0E,EAAYzkB,OAAOJ,UAAU0G,UAE9CoyF,EAAcj0E,EAAY7c,OAAOhI,UAAUoH,SAC3C2xF,EAAcl0E,EAAY/iB,OAAO9B,UAAUoH,SAC3C4xF,EAAen0E,EAAYnH,QAAQ1d,UAAUoH,SAEjD,GAAIuxF,EACF,IAAIM,EAAcp0E,EAAYhe,OAAO7G,UAAUoH,SAGjD,GAAIwxF,EACF,IAAIM,EAAcr0E,EAAYrX,OAAOxN,UAAUoH,SAGjD,SAAS+xF,EAAoBxwF,EAAOywF,GAClC,GAAqB,iBAAVzwF,EACT,OAAO,EAET,IAEE,OADAywF,EAAiBzwF,IACV,CACT,CAAE,MAAMrJ,GACN,OAAO,CACT,CACF,CA4FA,SAAS+5F,EAAc1wF,GACrB,MAAiC,iBAA1BkwF,EAAelwF,EACxB,CAiBA,SAAS2wF,EAAc3wF,GACrB,MAAiC,iBAA1BkwF,EAAelwF,EACxB,CAgBA,SAAS4wF,EAAkB5wF,GACzB,MAAiC,qBAA1BkwF,EAAelwF,EACxB,CAgBA,SAAS6wF,EAAkB7wF,GACzB,MAAiC,qBAA1BkwF,EAAelwF,EACxB,CAUA,SAAS8wF,EAAsB9wF,GAC7B,MAAiC,yBAA1BkwF,EAAelwF,EACxB,CAKA,SAAS+wF,EAAc/wF,GACrB,MAA2B,oBAAhB/E,cAIJ61F,EAAsBE,QACzBF,EAAsB9wF,GACtBA,aAAiB/E,YACvB,CAGA,SAASg2F,EAAmBjxF,GAC1B,MAAiC,sBAA1BkwF,EAAelwF,EACxB,CAMA,SAASkxF,EAAWlxF,GAClB,MAAwB,oBAAb4rE,WAIJqlB,EAAmBD,QACtBC,EAAmBjxF,GACnBA,aAAiB4rE,SACvB,CA/LAj0E,EAAQm4F,kBAAoBA,EAC5Bn4F,EAAQoxB,oBAAsBA,EAC9BpxB,EAAQo4F,aAAeA,EAkBvBp4F,EAAQ8V,UAdR,SAAmBpB,GAClB,MAEqB,oBAAZ6E,SACP7E,aAAiB6E,SAGP,OAAV7E,GACiB,iBAAVA,GACe,mBAAfA,EAAMyE,MACU,mBAAhBzE,EAAM0E,KAGhB,EAaApZ,EAAQ2kB,kBAVR,SAA2Btc,GACzB,MAA2B,oBAAhB/E,aAA+BA,YAAYC,OAC7CD,YAAYC,OAAO8E,GAI1B+vF,EAAa/vF,IACbkxF,EAAWlxF,EAEf,EAOArI,EAAQw5F,aAHR,SAAsBnxF,GACpB,MAAkC,eAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQy5F,oBAHR,SAA6BpxF,GAC3B,MAAkC,sBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ05F,cAHR,SAAuBrxF,GACrB,MAAkC,gBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ25F,cAHR,SAAuBtxF,GACrB,MAAkC,gBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ45F,YAHR,SAAqBvxF,GACnB,MAAkC,cAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ65F,aAHR,SAAsBxxF,GACpB,MAAkC,eAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ85F,aAHR,SAAsBzxF,GACpB,MAAkC,eAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQslB,eAHR,SAAwBjd,GACtB,MAAkC,iBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQulB,eAHR,SAAwBld,GACtB,MAAkC,iBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQ+5F,gBAHR,SAAyB1xF,GACvB,MAAkC,kBAA3BoxE,EAAgBpxE,EACzB,EAMArI,EAAQg6F,iBAHR,SAA0B3xF,GACxB,MAAkC,mBAA3BoxE,EAAgBpxE,EACzB,EAMA0wF,EAAcM,QACG,oBAARhvF,KACP0uF,EAAc,IAAI1uF,KAYpBrK,EAAQ6kB,MATR,SAAexc,GACb,MAAmB,oBAARgC,MAIJ0uF,EAAcM,QACjBN,EAAc1wF,GACdA,aAAiBgC,IACvB,EAMA2uF,EAAcK,QACG,oBAARxxE,KACPmxE,EAAc,IAAInxE,KAWpB7nB,EAAQ8kB,MATR,SAAezc,GACb,MAAmB,oBAARwf,MAIJmxE,EAAcK,QACjBL,EAAc3wF,GACdA,aAAiBwf,IACvB,EAMAoxE,EAAkBI,QACG,oBAAZrkB,SACPikB,EAAkB,IAAIjkB,SAWxBh1E,EAAQi6F,UATR,SAAmB5xF,GACjB,MAAuB,oBAAZ2sE,UAIJikB,EAAkBI,QACrBJ,EAAkB5wF,GAClBA,aAAiB2sE,QACvB,EAMAkkB,EAAkBG,QACG,oBAAZnkB,SACPgkB,EAAkB,IAAIhkB,SAKxBl1E,EAAQk6F,UAHR,SAAmB7xF,GACjB,OAAO6wF,EAAkB7wF,EAC3B,EAMA8wF,EAAsBE,QACG,oBAAhB/1F,aACP61F,EAAsB,IAAI71F,aAW5BtD,EAAQo5F,cAAgBA,EAKxBE,EAAmBD,QACM,oBAAhB/1F,aACa,oBAAb2wE,UACPqlB,EAAmB,IAAIrlB,SAAS,IAAI3wE,YAAY,GAAI,EAAG,IAWzDtD,EAAQu5F,WAAaA,EAGrB,IAAIY,EAAqD,oBAAtB3sF,kBAAoCA,uBAAoBqH,EAC3F,SAASulF,EAA4B/xF,GACnC,MAAiC,+BAA1BkwF,EAAelwF,EACxB,CACA,SAASgyF,EAAoBhyF,GAC3B,YAAqC,IAA1B8xF,SAIwC,IAAxCC,EAA4Bf,UACrCe,EAA4Bf,QAAUe,EAA4B,IAAID,IAGjEC,EAA4Bf,QAC/Be,EAA4B/xF,GAC5BA,aAAiB8xF,EACvB,CA4BA,SAASl1E,EAAe5c,GACtB,OAAOwwF,EAAoBxwF,EAAOmwF,EACpC,CAGA,SAAStzE,EAAe7c,GACtB,OAAOwwF,EAAoBxwF,EAAOowF,EACpC,CAGA,SAAStzE,EAAgB9c,GACvB,OAAOwwF,EAAoBxwF,EAAOqwF,EACpC,CAGA,SAAStzE,EAAe/c,GACtB,OAAOgwF,GAAmBQ,EAAoBxwF,EAAOswF,EACvD,CAGA,SAAStzE,EAAehd,GACtB,OAAOiwF,GAAmBO,EAAoBxwF,EAAOuwF,EACvD,CAjDA54F,EAAQq6F,oBAAsBA,EAK9Br6F,EAAQs6F,gBAHR,SAAyBjyF,GACvB,MAAiC,2BAA1BkwF,EAAelwF,EACxB,EAMArI,EAAQu6F,cAHR,SAAuBlyF,GACrB,MAAiC,0BAA1BkwF,EAAelwF,EACxB,EAMArI,EAAQw6F,cAHR,SAAuBnyF,GACrB,MAAiC,0BAA1BkwF,EAAelwF,EACxB,EAMArI,EAAQy6F,kBAHR,SAA2BpyF,GACzB,MAAiC,uBAA1BkwF,EAAelwF,EACxB,EAMArI,EAAQ06F,4BAHR,SAAqCryF,GACnC,MAAiC,gCAA1BkwF,EAAelwF,EACxB,EAMArI,EAAQilB,eAAiBA,EAKzBjlB,EAAQklB,eAAiBA,EAKzBllB,EAAQmlB,gBAAkBA,EAK1BnlB,EAAQolB,eAAiBA,EAKzBplB,EAAQqlB,eAAiBA,EAWzBrlB,EAAQglB,iBATR,SAA0B3c,GACxB,OACE4c,EAAe5c,IACf6c,EAAe7c,IACf8c,EAAgB9c,IAChB+c,EAAe/c,IACfgd,EAAehd,EAEnB,EASArI,EAAQ0kB,iBANR,SAA0Brc,GACxB,MAA6B,oBAAf1I,aACZy5F,EAAc/wF,IACdgyF,EAAoBhyF,GAExB,EAGA,CAAC,UAAW,aAAc,2BAA2BuQ,SAAQ,SAASqX,GACpEnwB,OAAO4O,eAAe1O,EAASiwB,EAAQ,CACrCthB,YAAY,EACZtG,MAAO,WACL,MAAM,IAAI2E,MAAMijB,EAAS,gCAC3B,GAEJ,4ICxTIlU,EAA4Bjc,OAAOic,2BACrC,SAAmCrF,GAGjC,IAFA,IAAI8B,EAAO1Y,OAAO0Y,KAAK9B,GACnBikF,EAAc,CAAC,EACVt7F,EAAI,EAAGA,EAAImZ,EAAK7U,OAAQtE,IAC/Bs7F,EAAYniF,EAAKnZ,IAAMS,OAAO8b,yBAAyBlF,EAAK8B,EAAKnZ,IAEnE,OAAOs7F,CACT,EAEEC,EAAe,WACnB56F,EAAQwwE,OAAS,SAASrtE,GACxB,IAAK04E,EAAS14E,GAAI,CAEhB,IADA,IAAI03F,EAAU,GACLx7F,EAAI,EAAGA,EAAIuO,UAAUjK,OAAQtE,IACpCw7F,EAAQ/tF,KAAKyC,EAAQ3B,UAAUvO,KAEjC,OAAOw7F,EAAQ9tF,KAAK,IACtB,CAEI1N,EAAI,EAmBR,IAnBA,IACIgY,EAAOzJ,UACPiV,EAAMxL,EAAK1T,OACX6Z,EAAMhc,OAAO2B,GAAGqM,QAAQorF,GAAc,SAAS/yF,GACjD,GAAU,OAANA,EAAY,MAAO,IACvB,GAAIxI,GAAKwjB,EAAK,OAAOhb,EACrB,OAAQA,GACN,IAAK,KAAM,OAAOrG,OAAO6V,EAAKhY,MAC9B,IAAK,KAAM,OAAOqI,OAAO2P,EAAKhY,MAC9B,IAAK,KACH,IACE,OAAO+kD,KAAKC,UAAUhtC,EAAKhY,KAC7B,CAAE,MAAO2O,GACP,MAAO,YACT,CACF,QACE,OAAOnG,EAEb,IACSA,EAAIwP,EAAKhY,GAAIA,EAAIwjB,EAAKhb,EAAIwP,IAAOhY,GACpCy7F,EAAOjzF,KAAO6zE,EAAS7zE,GACzB2V,GAAO,IAAM3V,EAEb2V,GAAO,IAAMjO,EAAQ1H,GAGzB,OAAO2V,CACT,EAMAxd,EAAQ+6F,UAAY,SAASnkF,EAAIkC,GAC/B,QAAuB,IAAZpB,IAAqD,IAA1BA,EAAQsjF,cAC5C,OAAOpkF,EAIT,QAAuB,IAAZc,EACT,OAAO,WACL,OAAO1X,EAAQ+6F,UAAUnkF,EAAIkC,GAAKzK,MAAMxO,KAAM+N,UAChD,EAGF,IAAIyI,GAAS,EAeb,OAdA,WACE,IAAKA,EAAQ,CACX,GAAIqB,EAAQujF,iBACV,MAAM,IAAIjuF,MAAM8L,GACPpB,EAAQwjF,iBACjB1sF,EAAQ2sF,MAAMriF,GAEdtK,EAAQC,MAAMqK,GAEhBzC,GAAS,CACX,CACA,OAAOO,EAAGvI,MAAMxO,KAAM+N,UACxB,CAGF,EAGA,IAAIwtF,EAAS,CAAC,EACVC,EAAgB,KAEpB,GAAI3jF,EAAQknE,IAAI0c,WAAY,CAC1B,IAAIC,EAAW7jF,EAAQknE,IAAI0c,WAC3BC,EAAWA,EAAS/rF,QAAQ,qBAAsB,QAC/CA,QAAQ,MAAO,MACfA,QAAQ,KAAM,OACdo4D,cACHyzB,EAAgB,IAAI30E,OAAO,IAAM60E,EAAW,IAAK,IACnD,CA0BA,SAAShsF,EAAQmH,EAAK8zC,GAEpB,IAAIzoC,EAAM,CACRy5E,KAAM,GACNC,QAASC,GAkBX,OAfI9tF,UAAUjK,QAAU,IAAGoe,EAAIrD,MAAQ9Q,UAAU,IAC7CA,UAAUjK,QAAU,IAAGoe,EAAI45E,OAAS/tF,UAAU,IAC9CguF,EAAUpxC,GAEZzoC,EAAIlD,WAAa2rC,EACRA,GAETxqD,EAAQ67F,QAAQ95E,EAAKyoC,GAGnBsxC,EAAY/5E,EAAIlD,cAAakD,EAAIlD,YAAa,GAC9Ci9E,EAAY/5E,EAAIrD,SAAQqD,EAAIrD,MAAQ,GACpCo9E,EAAY/5E,EAAI45E,UAAS55E,EAAI45E,QAAS,GACtCG,EAAY/5E,EAAItD,iBAAgBsD,EAAItD,eAAgB,GACpDsD,EAAI45E,SAAQ55E,EAAI05E,QAAUM,GACvBC,EAAYj6E,EAAKrL,EAAKqL,EAAIrD,MACnC,CAmCA,SAASq9E,EAAiBv+E,EAAKy+E,GAC7B,IAAIC,EAAQ3sF,EAAQ4sF,OAAOF,GAE3B,OAAIC,EACK,QAAY3sF,EAAQosF,OAAOO,GAAO,GAAK,IAAM1+E,EAC7C,QAAYjO,EAAQosF,OAAOO,GAAO,GAAK,IAEvC1+E,CAEX,CAGA,SAASk+E,EAAel+E,EAAKy+E,GAC3B,OAAOz+E,CACT,CAcA,SAASw+E,EAAYj6E,EAAK1Z,EAAOyZ,GAG/B,GAAIC,EAAItD,eACJpW,GACAszE,EAAWtzE,EAAMkH,UAEjBlH,EAAMkH,UAAYvP,EAAQuP,WAExBlH,EAAMtF,aAAesF,EAAMtF,YAAYrD,YAAc2I,GAAQ,CACjE,IAAI+kE,EAAM/kE,EAAMkH,QAAQuS,EAAcC,GAItC,OAHK85D,EAASzO,KACZA,EAAM4uB,EAAYj6E,EAAKqrD,EAAKtrD,IAEvBsrD,CACT,CAGA,IAAIgvB,EA+FN,SAAyBr6E,EAAK1Z,GAC5B,GAAIyzF,EAAYzzF,GACd,OAAO0Z,EAAI05E,QAAQ,YAAa,aAClC,GAAI5f,EAASxzE,GAAQ,CACnB,IAAIg0F,EAAS,IAAOj4C,KAAKC,UAAUh8C,GAAOmH,QAAQ,SAAU,IAClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,IACjE,OAAOuS,EAAI05E,QAAQY,EAAQ,SAC7B,CACA,GAAIt1B,EAAS1+D,GACX,OAAO0Z,EAAI05E,QAAQ,GAAKpzF,EAAO,UACjC,GAAIuzF,EAAUvzF,GACZ,OAAO0Z,EAAI05E,QAAQ,GAAKpzF,EAAO,WAEjC,GAAIyyF,EAAOzyF,GACT,OAAO0Z,EAAI05E,QAAQ,OAAQ,OAC/B,CA/GkBa,CAAgBv6E,EAAK1Z,GACrC,GAAI+zF,EACF,OAAOA,EAIT,IAAI5jF,EAAO1Y,OAAO0Y,KAAKnQ,GACnBk0F,EApCN,SAAqBhwF,GACnB,IAAIigB,EAAO,CAAC,EAMZ,OAJAjgB,EAAMqM,SAAQ,SAAS2F,EAAKi+E,GAC1BhwE,EAAKjO,IAAO,CACd,IAEOiO,CACT,CA4BoBiwE,CAAYjkF,GAQ9B,GANIuJ,EAAIlD,aACNrG,EAAO1Y,OAAOm3E,oBAAoB5uE,IAKhCq0F,EAAQr0F,KACJmQ,EAAKvL,QAAQ,YAAc,GAAKuL,EAAKvL,QAAQ,gBAAkB,GACrE,OAAO0vF,EAAYt0F,GAIrB,GAAoB,IAAhBmQ,EAAK7U,OAAc,CACrB,GAAIg4E,EAAWtzE,GAAQ,CACrB,IAAIf,EAAOe,EAAMf,KAAO,KAAOe,EAAMf,KAAO,GAC5C,OAAOya,EAAI05E,QAAQ,YAAcn0F,EAAO,IAAK,UAC/C,CACA,GAAIyO,EAAS1N,GACX,OAAO0Z,EAAI05E,QAAQ/0E,OAAOhnB,UAAU0G,SAASxG,KAAKyI,GAAQ,UAE5D,GAAIuc,EAAOvc,GACT,OAAO0Z,EAAI05E,QAAQj1E,KAAK9mB,UAAU0G,SAASxG,KAAKyI,GAAQ,QAE1D,GAAIq0F,EAAQr0F,GACV,OAAOs0F,EAAYt0F,EAEvB,CAEA,IA2CIw7C,EA3CAniC,EAAO,GAAInV,GAAQ,EAAOqwF,EAAS,CAAC,IAAK,MAGzCv5F,EAAQgF,KACVkE,GAAQ,EACRqwF,EAAS,CAAC,IAAK,MAIbjhB,EAAWtzE,MAEbqZ,EAAO,cADCrZ,EAAMf,KAAO,KAAOe,EAAMf,KAAO,IACf,KAkB5B,OAdIyO,EAAS1N,KACXqZ,EAAO,IAAMgF,OAAOhnB,UAAU0G,SAASxG,KAAKyI,IAI1Cuc,EAAOvc,KACTqZ,EAAO,IAAM8E,KAAK9mB,UAAUm9F,YAAYj9F,KAAKyI,IAI3Cq0F,EAAQr0F,KACVqZ,EAAO,IAAMi7E,EAAYt0F,IAGP,IAAhBmQ,EAAK7U,QAAkB4I,GAAyB,GAAhBlE,EAAM1E,OAItCme,EAAe,EACb/L,EAAS1N,GACJ0Z,EAAI05E,QAAQ/0E,OAAOhnB,UAAU0G,SAASxG,KAAKyI,GAAQ,UAEnD0Z,EAAI05E,QAAQ,WAAY,YAInC15E,EAAIy5E,KAAK1uF,KAAKzE,GAIZw7C,EADEt3C,EAsCN,SAAqBwV,EAAK1Z,EAAOyZ,EAAcy6E,EAAa/jF,GAE1D,IADA,IAAIqrC,EAAS,GACJxkD,EAAI,EAAGqG,EAAI2C,EAAM1E,OAAQtE,EAAIqG,IAAKrG,EACrC0U,EAAe1L,EAAO7G,OAAOnC,IAC/BwkD,EAAO/2C,KAAKgwF,EAAe/6E,EAAK1Z,EAAOyZ,EAAcy6E,EACjD/6F,OAAOnC,IAAI,IAEfwkD,EAAO/2C,KAAK,IAShB,OANA0L,EAAKI,SAAQ,SAASnE,GACfA,EAAIuF,MAAM,UACb6pC,EAAO/2C,KAAKgwF,EAAe/6E,EAAK1Z,EAAOyZ,EAAcy6E,EACjD9nF,GAAK,GAEb,IACOovC,CACT,CAtDak5C,CAAYh7E,EAAK1Z,EAAOyZ,EAAcy6E,EAAa/jF,GAEnDA,EAAKsK,KAAI,SAASrO,GACzB,OAAOqoF,EAAe/6E,EAAK1Z,EAAOyZ,EAAcy6E,EAAa9nF,EAAKlI,EACpE,IAGFwV,EAAIy5E,KAAKt7E,MA6GX,SAA8B2jC,EAAQniC,EAAMk7E,GAC1C,IACIj5F,EAASkgD,EAAOhvB,QAAO,SAASrD,EAAMhR,GAGxC,OADIA,EAAIvT,QAAQ,OAAS,GAAG+vF,EACrBxrE,EAAOhR,EAAIhR,QAAQ,kBAAmB,IAAI7L,OAAS,CAC5D,GAAG,GAEH,GAAIA,EAAS,GACX,OAAOi5F,EAAO,IACG,KAATl7E,EAAc,GAAKA,EAAO,OAC3B,IACAmiC,EAAO92C,KAAK,SACZ,IACA6vF,EAAO,GAGhB,OAAOA,EAAO,GAAKl7E,EAAO,IAAMmiC,EAAO92C,KAAK,MAAQ,IAAM6vF,EAAO,EACnE,CA7HSK,CAAqBp5C,EAAQniC,EAAMk7E,IAxBjCA,EAAO,GAAKl7E,EAAOk7E,EAAO,EAyBrC,CAsBA,SAASD,EAAYt0F,GACnB,MAAO,IAAM2E,MAAMtN,UAAU0G,SAASxG,KAAKyI,GAAS,GACtD,CAuBA,SAASy0F,EAAe/6E,EAAK1Z,EAAOyZ,EAAcy6E,EAAa9nF,EAAKlI,GAClE,IAAIjF,EAAMkW,EAAKyzD,EAsCf,IArCAA,EAAOnxE,OAAO8b,yBAAyBvT,EAAOoM,IAAQ,CAAEpM,MAAOA,EAAMoM,KAC5D7K,IAEL4T,EADEyzD,EAAK5nE,IACD0Y,EAAI05E,QAAQ,kBAAmB,WAE/B15E,EAAI05E,QAAQ,WAAY,WAG5BxqB,EAAK5nE,MACPmU,EAAMuE,EAAI05E,QAAQ,WAAY,YAG7B1nF,EAAewoF,EAAa9nF,KAC/BnN,EAAO,IAAMmN,EAAM,KAEhB+I,IACCuE,EAAIy5E,KAAKvuF,QAAQgkE,EAAK5oE,OAAS,GAE/BmV,EADEs9E,EAAOh5E,GACHk6E,EAAYj6E,EAAKkvD,EAAK5oE,MAAO,MAE7B2zF,EAAYj6E,EAAKkvD,EAAK5oE,MAAOyZ,EAAe,IAE5C7U,QAAQ,OAAS,IAErBuQ,EADEjR,EACIiR,EAAIjK,MAAM,MAAMuP,KAAI,SAASorC,GACjC,MAAO,KAAOA,CAChB,IAAGnhD,KAAK,MAAM7F,MAAM,GAEd,KAAOsW,EAAIjK,MAAM,MAAMuP,KAAI,SAASorC,GACxC,MAAO,MAAQA,CACjB,IAAGnhD,KAAK,OAIZyQ,EAAMuE,EAAI05E,QAAQ,aAAc,YAGhCK,EAAYx0F,GAAO,CACrB,GAAIiF,GAASkI,EAAIuF,MAAM,SACrB,OAAOwD,GAETlW,EAAO88C,KAAKC,UAAU,GAAK5vC,IAClBuF,MAAM,iCACb1S,EAAOA,EAAKJ,MAAM,GAAI,GACtBI,EAAOya,EAAI05E,QAAQn0F,EAAM,UAEzBA,EAAOA,EAAKkI,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChClI,EAAOya,EAAI05E,QAAQn0F,EAAM,UAE7B,CAEA,OAAOA,EAAO,KAAOkW,CACvB,CA4BA,SAASna,EAAQ65F,GACf,OAAOj9F,MAAMoD,QAAQ65F,EACvB,CAGA,SAAStB,EAAUpnF,GACjB,MAAsB,kBAARA,CAChB,CAGA,SAASsmF,EAAOtmF,GACd,OAAe,OAARA,CACT,CAQA,SAASuyD,EAASvyD,GAChB,MAAsB,iBAARA,CAChB,CAGA,SAASqnE,EAASrnE,GAChB,MAAsB,iBAARA,CAChB,CAQA,SAASsnF,EAAYtnF,GACnB,YAAe,IAARA,CACT,CAGA,SAASuB,EAASonF,GAChB,OAAOzhB,EAASyhB,IAA8B,oBAAvB14E,EAAe04E,EACxC,CAIA,SAASzhB,EAASlnE,GAChB,MAAsB,iBAARA,GAA4B,OAARA,CACpC,CAGA,SAASoQ,EAAOzlB,GACd,OAAOu8E,EAASv8E,IAA4B,kBAAtBslB,EAAetlB,EACvC,CAIA,SAASu9F,EAAQ19F,GACf,OAAO08E,EAAS18E,KACW,mBAAtBylB,EAAezlB,IAA2BA,aAAagO,MAC9D,CAIA,SAAS2uE,EAAWnnE,GAClB,MAAsB,mBAARA,CAChB,CAeA,SAASiQ,EAAexhB,GACtB,OAAOnD,OAAOJ,UAAU0G,SAASxG,KAAKqD,EACxC,CAGA,SAASsoF,EAAIjsF,GACX,OAAOA,EAAI,GAAK,IAAMA,EAAE8G,SAAS,IAAM9G,EAAE8G,SAAS,GACpD,CAxbApG,EAAQo9F,SAAW,SAAS/zF,GAE1B,GADAA,EAAMA,EAAIu+D,eACLwzB,EAAO/xF,GACV,GAAIgyF,EAAcz3E,KAAKva,GAAM,CAC3B,IAAIg0F,EAAM3lF,EAAQ2lF,IAClBjC,EAAO/xF,GAAO,WACZ,IAAIyP,EAAM9Y,EAAQwwE,OAAOniE,MAAMrO,EAAS4N,WACxCY,EAAQC,MAAM,YAAapF,EAAKg0F,EAAKvkF,EACvC,CACF,MACEsiF,EAAO/xF,GAAO,WAAY,EAG9B,OAAO+xF,EAAO/xF,EAChB,EAmCArJ,EAAQuP,QAAUA,EAIlBA,EAAQosF,OAAS,CACf,KAAS,CAAC,EAAG,IACb,OAAW,CAAC,EAAG,IACf,UAAc,CAAC,EAAG,IAClB,QAAY,CAAC,EAAG,IAChB,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,QAAY,CAAC,GAAI,IACjB,IAAQ,CAAC,GAAI,IACb,OAAW,CAAC,GAAI,KAIlBpsF,EAAQ4sF,OAAS,CACf,QAAW,OACX,OAAU,SACV,QAAW,SACX,UAAa,OACb,KAAQ,OACR,OAAU,QACV,KAAQ,UAER,OAAU,OA+QZn8F,EAAQs9F,MAAQ,EAAhB,wCAKAt9F,EAAQqD,QAAUA,EAKlBrD,EAAQ47F,UAAYA,EAKpB57F,EAAQ86F,OAASA,EAKjB96F,EAAQu9F,kBAHR,SAA2B/oF,GACzB,OAAc,MAAPA,CACT,EAMAxU,EAAQ+mE,SAAWA,EAKnB/mE,EAAQ67E,SAAWA,EAKnB77E,EAAQw9F,SAHR,SAAkBhpF,GAChB,MAAsB,iBAARA,CAChB,EAMAxU,EAAQ87F,YAAcA,EAKtB97F,EAAQ+V,SAAWA,EACnB/V,EAAQs9F,MAAMvnF,SAAWA,EAKzB/V,EAAQ07E,SAAWA,EAKnB17E,EAAQ4kB,OAASA,EACjB5kB,EAAQs9F,MAAM14E,OAASA,EAMvB5kB,EAAQ08F,QAAUA,EAClB18F,EAAQs9F,MAAMv4E,cAAgB23E,EAK9B18F,EAAQ27E,WAAaA,EAUrB37E,EAAQy9F,YARR,SAAqBjpF,GACnB,OAAe,OAARA,GACe,kBAARA,GACQ,iBAARA,GACQ,iBAARA,GACQ,iBAARA,QACQ,IAARA,CAChB,EAGAxU,EAAQoD,SAAW,EAAnB,kDAYA,IAAIs6F,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACxD,MAAO,MAAO,OA6C5B,SAAS3pF,EAAe2C,EAAKinF,GAC3B,OAAO79F,OAAOJ,UAAUqU,eAAenU,KAAK8W,EAAKinF,EACnD,CAlCA39F,EAAQ0T,IAAM,WAVd,IACMvU,EACAoxE,EASJ/hE,EAAQkF,IAAI,WAVRvU,EAAI,IAAIqnB,KACR+pD,EAAO,CAACgb,EAAIpsF,EAAEy+F,YACNrS,EAAIpsF,EAAE0+F,cACNtS,EAAIpsF,EAAE2+F,eAAe/wF,KAAK,KAC/B,CAAC5N,EAAE4+F,UAAWL,EAAOv+F,EAAE6+F,YAAaztB,GAAMxjE,KAAK,MAMlB/M,EAAQwwE,OAAOniE,MAAMrO,EAAS4N,WACpE,EAgBA5N,EAAQ0hF,SAAW,EAAnB,+CAEA1hF,EAAQ67F,QAAU,SAASoC,EAAQn2E,GAEjC,IAAKA,IAAQ4zD,EAAS5zD,GAAM,OAAOm2E,EAInC,IAFA,IAAIzlF,EAAO1Y,OAAO0Y,KAAKsP,GACnBzoB,EAAImZ,EAAK7U,OACNtE,KACL4+F,EAAOzlF,EAAKnZ,IAAMyoB,EAAItP,EAAKnZ,IAE7B,OAAO4+F,CACT,EAMA,IAAIC,EAA6C,oBAAXhxF,OAAyBA,OAAO,8BAA2B2H,EA0DjG,SAASspF,EAAsBl7E,EAAQm7E,GAKrC,IAAKn7E,EAAQ,CACX,IAAIo7E,EAAY,IAAIrxF,MAAM,2CAC1BqxF,EAAUp7E,OAASA,EACnBA,EAASo7E,CACX,CACA,OAAOD,EAAGn7E,EACZ,CAnEAjjB,EAAQs+F,UAAY,SAAmBC,GACrC,GAAwB,mBAAbA,EACT,MAAM,IAAIz7F,UAAU,oDAEtB,GAAIo7F,GAA4BK,EAASL,GAA2B,CAClE,IAAItnF,EACJ,GAAkB,mBADdA,EAAK2nF,EAASL,IAEhB,MAAM,IAAIp7F,UAAU,iEAKtB,OAHAhD,OAAO4O,eAAekI,EAAIsnF,EAA0B,CAClD71F,MAAOuO,EAAIjI,YAAY,EAAOiE,UAAU,EAAOC,cAAc,IAExD+D,CACT,CAEA,SAASA,IAQP,IAPA,IAAI4nF,EAAgBC,EAChBC,EAAU,IAAInlF,SAAQ,SAAUvQ,EAAS21F,GAC3CH,EAAiBx1F,EACjBy1F,EAAgBE,CAClB,IAEItnF,EAAO,GACFhY,EAAI,EAAGA,EAAIuO,UAAUjK,OAAQtE,IACpCgY,EAAKvK,KAAKc,UAAUvO,IAEtBgY,EAAKvK,MAAK,SAAUiK,EAAK1O,GACnB0O,EACF0nF,EAAc1nF,GAEdynF,EAAen2F,EAEnB,IAEA,IACEk2F,EAASlwF,MAAMxO,KAAMwX,EACvB,CAAE,MAAON,GACP0nF,EAAc1nF,EAChB,CAEA,OAAO2nF,CACT,CAOA,OALA5+F,OAAOC,eAAe6W,EAAI9W,OAAOwd,eAAeihF,IAE5CL,GAA0Bp+F,OAAO4O,eAAekI,EAAIsnF,EAA0B,CAChF71F,MAAOuO,EAAIjI,YAAY,EAAOiE,UAAU,EAAOC,cAAc,IAExD/S,OAAOkc,iBACZpF,EACAmF,EAA0BwiF,GAE9B,EAEAv+F,EAAQs+F,UAAUt8E,OAASk8E,EAiD3Bl+F,EAAQ4+F,YAlCR,SAAqBL,GACnB,GAAwB,mBAAbA,EACT,MAAM,IAAIz7F,UAAU,oDAMtB,SAAS+7F,IAEP,IADA,IAAIxnF,EAAO,GACFhY,EAAI,EAAGA,EAAIuO,UAAUjK,OAAQtE,IACpCgY,EAAKvK,KAAKc,UAAUvO,IAGtB,IAAIy/F,EAAUznF,EAAK6I,MACnB,GAAuB,mBAAZ4+E,EACT,MAAM,IAAIh8F,UAAU,8CAEtB,IAAIqZ,EAAOtc,KACPu+F,EAAK,WACP,OAAOU,EAAQzwF,MAAM8N,EAAMvO,UAC7B,EAGA2wF,EAASlwF,MAAMxO,KAAMwX,GAClB8B,MAAK,SAASi0D,GAAO11D,EAAQ+mE,SAAS2f,EAAGvmF,KAAK,KAAM,KAAMu1D,GAAM,IAC3D,SAAS2xB,GAAOrnF,EAAQ+mE,SAAS0f,EAAsBtmF,KAAK,KAAMknF,EAAKX,GAAK,GACtF,CAKA,OAHAt+F,OAAOC,eAAe8+F,EAAe/+F,OAAOwd,eAAeihF,IAC3Dz+F,OAAOkc,iBAAiB6iF,EACA9iF,EAA0BwiF,IAC3CM,CACT,sECvsBA,IAAIjmF,EAAU,EAAQ,oCAClBomF,EAAuB,EAAQ,kDAC/BxvB,EAAW,EAAQ,qCACnByI,EAAY,EAAQ,yCACpBgI,EAAO,EAAQ,gCAGfjI,EAAYC,EAAU,6BACtBF,EAAiB,EAAQ,0CAAR,GAEjB7xE,EAA0B,oBAAf0N,WAA6B,EAAA1N,EAAS0N,WACjDqrF,EAAcD,IAEdE,EAASjnB,EAAU,0BACnB36D,EAAiBxd,OAAOwd,eAGxBmyD,EAAWwI,EAAU,2BAA2B,IAAS,SAAiB1rE,EAAOlE,GACpF,IAAK,IAAIhJ,EAAI,EAAGA,EAAIkN,EAAM5I,OAAQtE,GAAK,EACtC,GAAIkN,EAAMlN,KAAOgJ,EAChB,OAAOhJ,EAGT,OAAQ,CACT,EAII8/F,EAAQ,CAAE9hF,UAAW,MAExBzE,EAAQqmF,EADLlnB,GAAkBkI,GAAQ3iE,EACR,SAAU8hF,GAC9B,IAAIh8E,EAAM,IAAIld,EAAEk5F,GAChB,GAAIlyF,OAAO8G,eAAeoP,EAAK,CAC9B,IAAIypD,EAAQvvD,EAAe8F,GAEvB7O,EAAa0rE,EAAKpT,EAAO3/D,OAAO8G,aACpC,IAAKO,EAAY,CAChB,IAAI8qF,EAAa/hF,EAAeuvD,GAEhCt4D,EAAa0rE,EAAKof,EAAYnyF,OAAO8G,YACtC,CAEAmrF,EAAM,IAAMC,GAAc5vB,EAASj7D,EAAW3K,IAC/C,CACD,EAEqB,SAAUw1F,GAC9B,IAAIh8E,EAAM,IAAIld,EAAEk5F,GACZxoF,EAAKwM,EAAIlc,OAASkc,EAAI/Z,IACtBuN,IAEHuoF,EAAM,IAAMC,GAAc5vB,EAAS54D,GAErC,GA4CD3C,EAAOjU,QAAU,SAAyBqI,GACzC,IAAKA,GAA0B,iBAAVA,EAAsB,OAAO,EAClD,IAAK0vE,EAAgB,CAEpB,IAAIunB,EAAMJ,EAAOlnB,EAAU3vE,GAAQ,GAAI,GACvC,OAAIonE,EAASwvB,EAAaK,IAAQ,EAC1BA,EAEI,WAARA,GA3BU,SAAsBj3F,GACU,IAAI+iE,GAAQ,EAc3D,OAbAxyD,EAEyE,GACe,SAAU2mF,EAAQj4F,GACxG,IAAK8jE,EACJ,IAECm0B,EAAOl3F,GACP+iE,EAAQ8zB,EAAO53F,EAAM,EACtB,CAAE,MAAOtI,GAAU,CAErB,IAEMosE,CACR,CAeSo0B,CAAUn3F,EAClB,CACA,OAAK43E,EAtDe,SAA2B53E,GACK,IAAI+iE,GAAQ,EAgBhE,OAfAxyD,EAEyE,GAExE,SAAU2mF,EAAQH,GACjB,IAAKh0B,EACJ,IAEK,IAAMm0B,EAAOl3F,KAAW+2F,IAC3Bh0B,EAAQ8zB,EAAOE,EAAY,GAE7B,CAAE,MAAOpgG,GAAU,CAErB,IAEMosE,CACR,CAqCQq0B,CAAep3F,GADF,IAErB,0FCjHA,IAAIq3F,EAAgB,EAAQ,sDAExBx5F,EAA0B,oBAAf0N,WAA6B,EAAA1N,EAAS0N,WAGrDK,EAAOjU,QAAU,WAEhB,IADA,IAA2DqtE,EAAM,GACxDhuE,EAAI,EAAGA,EAAIqgG,EAAc/7F,OAAQtE,IACN,mBAAxB6G,EAAEw5F,EAAcrgG,MAE1BguE,EAAIA,EAAI1pE,QAAU+7F,EAAcrgG,IAGlC,OAAOguE,CACR,oHCgCA,IACEsyB,EAAY,6CACZC,EAAWh7F,KAAKC,KAChBg7F,EAAYj7F,KAAKuO,MAEjB2sF,EAAiB,qBACjBC,EAAgBD,EAAiB,yDAEjCE,EAAO,KACPC,EAAW,GACX30C,EAAmB,iBAEnB40C,EAAW,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MAC7EC,EAAY,IAKZC,EAAM,IA0pFR,SAASC,EAAS/gG,GAChB,IAAID,EAAQ,EAAJC,EACR,OAAOA,EAAI,GAAKA,IAAMD,EAAIA,EAAIA,EAAI,CACpC,CAIA,SAASihG,EAAc97F,GAMrB,IALA,IAAItB,EAAGf,EACL9C,EAAI,EACJa,EAAIsE,EAAEb,OACNzE,EAAIsF,EAAE,GAAK,GAENnF,EAAIa,GAAI,CAGb,IAFAgD,EAAIsB,EAAEnF,KAAO,GACb8C,EAAI89F,EAAW/8F,EAAES,OACVxB,IAAKe,EAAI,IAAMA,GACtBhE,GAAKgE,CACP,CAGA,IAAKhD,EAAIhB,EAAEyE,OAA8B,KAAtBzE,EAAE0N,aAAa1M,KAElC,OAAOhB,EAAEgI,MAAM,EAAGhH,EAAI,GAAK,EAC7B,CAIA,SAAS6O,EAAQlH,EAAGhC,GAClB,IAAIrB,EAAG6B,EACLk6F,EAAK14F,EAAElF,EACP69F,EAAK36F,EAAElD,EACPtD,EAAIwI,EAAE3E,EACNhD,EAAI2F,EAAE3C,EACN3B,EAAIsG,EAAE7I,EACN0G,EAAIG,EAAE7G,EAGR,IAAKK,IAAMa,EAAG,OAAO,KAMrB,GAJAsE,EAAI+7F,IAAOA,EAAG,GACdl6F,EAAIm6F,IAAOA,EAAG,GAGVh8F,GAAK6B,EAAG,OAAO7B,EAAI6B,EAAI,GAAKnG,EAAIb,EAGpC,GAAIA,GAAKa,EAAG,OAAOb,EAMnB,GAJAmF,EAAInF,EAAI,EACRgH,EAAI9E,GAAKmE,GAGJ66F,IAAOC,EAAI,OAAOn6F,EAAI,GAAKk6F,EAAK/7F,EAAI,GAAK,EAG9C,IAAK6B,EAAG,OAAO9E,EAAImE,EAAIlB,EAAI,GAAK,EAKhC,IAHAtE,GAAKqB,EAAIg/F,EAAG58F,SAAW+B,EAAI86F,EAAG78F,QAAUpC,EAAImE,EAGvCrG,EAAI,EAAGA,EAAIa,EAAGb,IAAK,GAAIkhG,EAAGlhG,IAAMmhG,EAAGnhG,GAAI,OAAOkhG,EAAGlhG,GAAKmhG,EAAGnhG,GAAKmF,EAAI,GAAK,EAG5E,OAAOjD,GAAKmE,EAAI,EAAInE,EAAImE,EAAIlB,EAAI,GAAK,CACvC,CAMA,SAASi8F,EAASnhG,EAAG6O,EAAKiS,EAAK9Y,GAC7B,GAAIhI,EAAI6O,GAAO7O,EAAI8gB,GAAO9gB,IAAMugG,EAAUvgG,GACxC,MAAM0N,MACJ8yF,GAAkBx4F,GAAQ,aAA2B,iBAALhI,EAC7CA,EAAI6O,GAAO7O,EAAI8gB,EAAM,kBAAoB,oBACzC,6BAA+B5e,OAAOlC,GAE/C,CAIA,SAASohG,EAAMphG,GACb,IAAIiC,EAAIjC,EAAEqD,EAAEgB,OAAS,EACrB,OAAO08F,EAAS/gG,EAAEN,EAAIihG,IAAa1+F,GAAKjC,EAAEqD,EAAEpB,GAAK,GAAK,CACxD,CAGA,SAASo/F,EAAcnjF,EAAKxe,GAC1B,OAAQwe,EAAI7Z,OAAS,EAAI6Z,EAAIiU,OAAO,GAAK,IAAMjU,EAAItW,MAAM,GAAKsW,IAC5Dxe,EAAI,EAAI,IAAM,MAAQA,CAC1B,CAGA,SAAS4hG,EAAapjF,EAAKxe,EAAGmD,GAC5B,IAAI0gB,EAAKg+E,EAGT,GAAI7hG,EAAI,EAAG,CAGT,IAAK6hG,EAAK1+F,EAAI,MAAOnD,EAAG6hG,GAAM1+F,GAC9Bqb,EAAMqjF,EAAKrjF,CAGb,MAIE,KAAMxe,GAHN6jB,EAAMrF,EAAI7Z,QAGK,CACb,IAAKk9F,EAAK1+F,EAAGnD,GAAK6jB,IAAO7jB,EAAG6hG,GAAM1+F,GAClCqb,GAAOqjF,CACT,MAAW7hG,EAAI6jB,IACbrF,EAAMA,EAAItW,MAAM,EAAGlI,GAAK,IAAMwe,EAAItW,MAAMlI,IAI5C,OAAOwe,CACT,CAMO,IAAI4M,EAhxFX,SAASsI,EAAMouE,GACb,IAAI/uC,EAAKgvC,EAAaC,EA4kBhBC,EAMAC,EAoqBAC,EACFC,EACAC,EACAC,EACAC,EAzvCFh/F,EAAI6nB,EAAU1qB,UAAY,CAAEqD,YAAaqnB,EAAWhkB,SAAU,KAAMU,QAAS,MAC7E6lD,EAAM,IAAIviC,EAAU,GAUpBo3E,EAAiB,GAajBC,EAAgB,EAMhBC,GAAc,EAIdC,EAAa,GAMbC,GAAW,IAKXC,EAAU,IAGVC,GAAS,EAkBTC,EAAc,EAIdC,EAAgB,EAGhBC,EAAS,CACPC,OAAQ,GACRC,UAAW,EACXC,mBAAoB,EACpBC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,EACnBC,uBAAwB,OACxBC,OAAQ,IAMVC,EAAW,uCACXC,GAAiC,EAgBnC,SAASv4E,EAAU3jB,EAAGJ,GACpB,IAAI6gE,EAAUvkE,EAAGigG,EAAa5jG,EAAGK,EAAGwjG,EAAOhgF,EAAKrF,EAC9C3V,EAAIhI,KAGN,KAAMgI,aAAauiB,GAAY,OAAO,IAAIA,EAAU3jB,EAAGJ,GAEvD,GAAS,MAALA,EAAW,CAEb,GAAII,IAAwB,IAAnBA,EAAEq8F,aAYT,OAXAj7F,EAAE3E,EAAIuD,EAAEvD,QAEHuD,EAAE9D,GAAK8D,EAAEzH,EAAI6iG,EAChBh6F,EAAElF,EAAIkF,EAAE7I,EAAI,KACHyH,EAAEzH,EAAI4iG,EACf/5F,EAAElF,EAAI,CAACkF,EAAE7I,EAAI,IAEb6I,EAAE7I,EAAIyH,EAAEzH,EACR6I,EAAElF,EAAI8D,EAAE9D,EAAEuE,UAMd,IAAK27F,EAAoB,iBAALp8F,IAAsB,EAAJA,GAAS,EAAG,CAMhD,GAHAoB,EAAE3E,EAAI,EAAIuD,EAAI,GAAKA,GAAKA,GAAI,GAAK,EAG7BA,MAAQA,EAAG,CACb,IAAKzH,EAAI,EAAGK,EAAIoH,EAAGpH,GAAK,GAAIA,GAAK,GAAIL,KASrC,YAPIA,EAAI6iG,EACNh6F,EAAElF,EAAIkF,EAAE7I,EAAI,MAEZ6I,EAAE7I,EAAIA,EACN6I,EAAElF,EAAI,CAAC8D,IAIX,CAEA+W,EAAMhc,OAAOiF,EACf,KAAO,CAEL,IAAKk5F,EAAU/7E,KAAKpG,EAAMhc,OAAOiF,IAAK,OAAOu6F,EAAan5F,EAAG2V,EAAKqlF,GAElEh7F,EAAE3E,EAAyB,IAArBsa,EAAI5Q,WAAW,IAAY4Q,EAAMA,EAAItW,MAAM,IAAK,GAAK,CAC7D,EAGKlI,EAAIwe,EAAIvQ,QAAQ,OAAS,IAAGuQ,EAAMA,EAAIhO,QAAQ,IAAK,MAGnDnQ,EAAIme,EAAIC,OAAO,OAAS,GAGvBze,EAAI,IAAGA,EAAIK,GACfL,IAAMwe,EAAItW,MAAM7H,EAAI,GACpBme,EAAMA,EAAIG,UAAU,EAAGte,IACdL,EAAI,IAGbA,EAAIwe,EAAI7Z,OAGZ,KAAO,CAOL,GAJA88F,EAASp6F,EAAG,EAAGq8F,EAAS/+F,OAAQ,QAIvB,IAAL0C,GAAWs8F,EAEb,OAAOI,EADPl7F,EAAI,IAAIuiB,EAAU3jB,GACF+6F,EAAiB35F,EAAE7I,EAAI,EAAGyiG,GAK5C,GAFAjkF,EAAMhc,OAAOiF,GAETo8F,EAAoB,iBAALp8F,EAAe,CAGhC,GAAQ,EAAJA,GAAS,EAAG,OAAOu6F,EAAan5F,EAAG2V,EAAKqlF,EAAOx8F,GAKnD,GAHAwB,EAAE3E,EAAI,EAAIuD,EAAI,GAAK+W,EAAMA,EAAItW,MAAM,IAAK,GAAK,EAGzCkjB,EAAUu7C,OAASnoD,EAAIhO,QAAQ,YAAa,IAAI7L,OAAS,GAC3D,MAAMqJ,MACJ+yF,EAAgBt5F,EAEtB,MACEoB,EAAE3E,EAA0B,KAAtBsa,EAAI5Q,WAAW,IAAa4Q,EAAMA,EAAItW,MAAM,IAAK,GAAK,EAQ9D,IALAggE,EAAWw7B,EAASx7F,MAAM,EAAGb,GAC7BrH,EAAIK,EAAI,EAIHwjB,EAAMrF,EAAI7Z,OAAQtE,EAAIwjB,EAAKxjB,IAC9B,GAAI6nE,EAASj6D,QAAQtK,EAAI6a,EAAIiU,OAAOpyB,IAAM,EAAG,CAC3C,GAAS,KAALsD,GAGF,GAAItD,EAAIL,EAAG,CACTA,EAAI6jB,EACJ,QACF,OACK,IAAK+/E,IAGNplF,GAAOA,EAAIoqD,gBAAkBpqD,EAAMA,EAAI3P,gBACvC2P,GAAOA,EAAI3P,gBAAkB2P,EAAMA,EAAIoqD,gBAAgB,CACzDg7B,GAAc,EACdvjG,GAAK,EACLL,EAAI,EACJ,QACF,CAGF,OAAOgiG,EAAan5F,EAAGrG,OAAOiF,GAAIo8F,EAAOx8F,EAC3C,CAIFw8F,GAAQ,GAIH7jG,GAHLwe,EAAMujF,EAAYvjF,EAAKnX,EAAG,GAAIwB,EAAE3E,IAGnB+J,QAAQ,OAAS,EAAGuQ,EAAMA,EAAIhO,QAAQ,IAAK,IACnDxQ,EAAIwe,EAAI7Z,MACf,CAGA,IAAKtE,EAAI,EAAyB,KAAtBme,EAAI5Q,WAAWvN,GAAWA,KAGtC,IAAKwjB,EAAMrF,EAAI7Z,OAAkC,KAA1B6Z,EAAI5Q,aAAaiW,KAExC,GAAIrF,EAAMA,EAAItW,MAAM7H,IAAKwjB,GAAM,CAI7B,GAHAA,GAAOxjB,EAGHwjG,GAASz4E,EAAUu7C,OACrB9iD,EAAM,KAAOpc,EAAI6kD,GAAoB7kD,IAAMo5F,EAAUp5F,IACnD,MAAMuG,MACJ+yF,EAAiBl4F,EAAE3E,EAAIuD,GAI7B,IAAKzH,EAAIA,EAAIK,EAAI,GAAKwiG,EAGpBh6F,EAAElF,EAAIkF,EAAE7I,EAAI,UAGP,GAAIA,EAAI4iG,EAGb/5F,EAAElF,EAAI,CAACkF,EAAE7I,EAAI,OACR,CAWL,GAVA6I,EAAE7I,EAAIA,EACN6I,EAAElF,EAAI,GAMNtD,GAAKL,EAAI,GAAKihG,EACVjhG,EAAI,IAAGK,GAAK4gG,GAEZ5gG,EAAIwjB,EAAK,CAGX,IAFIxjB,GAAGwI,EAAElF,EAAEmK,MAAM0Q,EAAItW,MAAM,EAAG7H,IAEzBwjB,GAAOo9E,EAAU5gG,EAAIwjB,GACxBhb,EAAElF,EAAEmK,MAAM0Q,EAAItW,MAAM7H,EAAGA,GAAK4gG,IAG9B5gG,EAAI4gG,GAAYziF,EAAMA,EAAItW,MAAM7H,IAAIsE,MACtC,MACEtE,GAAKwjB,EAGP,KAAOxjB,IAAKme,GAAO,KACnB3V,EAAElF,EAAEmK,MAAM0Q,EACZ,CACF,MAGE3V,EAAElF,EAAI,CAACkF,EAAE7I,EAAI,EAEjB,CA21BA,SAASwxE,EAAOlxE,EAAGD,EAAG2jG,EAAI57D,GACxB,IAAI67D,EAAIjkG,EAAGkkG,EAAIrgF,EAAKrF,EAKpB,GAHU,MAANwlF,EAAYA,EAAKvB,EAChBhB,EAASuC,EAAI,EAAG,IAEhB1jG,EAAEqD,EAAG,OAAOrD,EAAE8G,WAKnB,GAHA68F,EAAK3jG,EAAEqD,EAAE,GACTugG,EAAK5jG,EAAEN,EAEE,MAALK,EACFme,EAAM8iF,EAAchhG,EAAEqD,GACtB6a,EAAY,GAAN4pB,GAAiB,GAANA,IAAY87D,GAAMxB,GAAcwB,GAAMvB,GACpDhB,EAAcnjF,EAAK0lF,GACnBtC,EAAapjF,EAAK0lF,EAAI,UAezB,GAVAlkG,GAHAM,EAAIyjG,EAAM,IAAI34E,EAAU9qB,GAAID,EAAG2jG,IAGzBhkG,EAGN6jB,GADArF,EAAM8iF,EAAchhG,EAAEqD,IACZgB,OAOA,GAANyjC,GAAiB,GAANA,IAAY/nC,GAAKL,GAAKA,GAAK0iG,GAAa,CAGrD,KAAO7+E,EAAMxjB,EAAGme,GAAO,IAAKqF,KAC5BrF,EAAMmjF,EAAcnjF,EAAKxe,EAG3B,MAKE,GAJAK,GAAK6jG,EACL1lF,EAAMojF,EAAapjF,EAAKxe,EAAG,KAGvBA,EAAI,EAAI6jB,GACV,KAAMxjB,EAAI,EAAG,IAAKme,GAAO,IAAKne,IAAKme,GAAO,WAG1C,IADAne,GAAKL,EAAI6jB,GACD,EAEN,IADI7jB,EAAI,GAAK6jB,IAAKrF,GAAO,KAClBne,IAAKme,GAAO,KAM3B,OAAOle,EAAE4D,EAAI,GAAK+/F,EAAK,IAAMzlF,EAAMA,CACrC,CAKA,SAAS2lF,EAAS9rF,EAAM/X,GAKtB,IAJA,IAAIiC,EAAGsE,EACLxG,EAAI,EACJwI,EAAI,IAAIuiB,EAAU/S,EAAK,IAElBhY,EAAIgY,EAAK1T,OAAQtE,OACtBwG,EAAI,IAAIukB,EAAU/S,EAAKhY,KAChB6D,IAAM3B,EAAIwN,EAAQlH,EAAGhC,MAAQvG,GAAW,IAANiC,GAAWsG,EAAE3E,IAAM5D,KAC1DuI,EAAIhC,GAIR,OAAOgC,CACT,CAOA,SAASu7F,EAAU9jG,EAAGqD,EAAG3D,GAKvB,IAJA,IAAIK,EAAI,EACNa,EAAIyC,EAAEgB,QAGAhB,IAAIzC,GAAIyC,EAAEud,OAGlB,IAAKhgB,EAAIyC,EAAE,GAAIzC,GAAK,GAAIA,GAAK,GAAIb,KAkBjC,OAfKL,EAAIK,EAAIL,EAAIihG,EAAW,GAAK4B,EAG/BviG,EAAEqD,EAAIrD,EAAEN,EAAI,KAGHA,EAAI4iG,EAGbtiG,EAAEqD,EAAI,CAACrD,EAAEN,EAAI,IAEbM,EAAEN,EAAIA,EACNM,EAAEqD,EAAIA,GAGDrD,CACT,CAyDA,SAASyjG,EAAMl7F,EAAGw7F,EAAIL,EAAI9jG,GACxB,IAAIC,EAAGE,EAAGa,EAAGqB,EAAGjC,EAAGgkG,EAAIC,EACrBhD,EAAK14F,EAAElF,EACP6gG,EAAStD,EAGX,GAAIK,EAAI,CAQNlzB,EAAK,CAGH,IAAKluE,EAAI,EAAGoC,EAAIg/F,EAAG,GAAIh/F,GAAK,GAAIA,GAAK,GAAIpC,KAIzC,IAHAE,EAAIgkG,EAAKlkG,GAGD,EACNE,GAAK4gG,EACL//F,EAAImjG,EACJ/jG,EAAIihG,EAAG+C,EAAK,GAGZC,EAAK1D,EAAUvgG,EAAIkkG,EAAOrkG,EAAIe,EAAI,GAAK,SAIvC,IAFAojG,EAAK1D,GAAUvgG,EAAI,GAAK4gG,KAEdM,EAAG58F,OAAQ,CAEnB,IAAIzE,EASF,MAAMmuE,EANN,KAAOkzB,EAAG58F,QAAU2/F,EAAI/C,EAAGzzF,KAAK,IAChCxN,EAAIikG,EAAK,EACTpkG,EAAI,EAEJe,GADAb,GAAK4gG,GACGA,EAAW,CAIvB,KAAO,CAIL,IAHA3gG,EAAIiC,EAAIg/F,EAAG+C,GAGNnkG,EAAI,EAAGoC,GAAK,GAAIA,GAAK,GAAIpC,KAU9BokG,GAHArjG,GAJAb,GAAK4gG,GAIGA,EAAW9gG,GAGV,EAAI,EAAI0gG,EAAUvgG,EAAIkkG,EAAOrkG,EAAIe,EAAI,GAAK,GACrD,CAkBF,GAfAhB,EAAIA,GAAKmkG,EAAK,GAKC,MAAd9C,EAAG+C,EAAK,KAAepjG,EAAI,EAAIZ,EAAIA,EAAIkkG,EAAOrkG,EAAIe,EAAI,IAEvDhB,EAAI8jG,EAAK,GACLO,GAAMrkG,KAAa,GAAN8jG,GAAWA,IAAOn7F,EAAE3E,EAAI,EAAI,EAAI,IAC9CqgG,EAAK,GAAW,GAANA,IAAkB,GAANP,GAAW9jG,GAAW,GAAN8jG,IAGrC3jG,EAAI,EAAIa,EAAI,EAAIZ,EAAIkkG,EAAOrkG,EAAIe,GAAK,EAAIqgG,EAAG+C,EAAK,IAAM,GAAM,GAC7DN,IAAOn7F,EAAE3E,EAAI,EAAI,EAAI,IAEpBmgG,EAAK,IAAM9C,EAAG,GAiBhB,OAhBAA,EAAG58F,OAAS,EAERzE,GAGFmkG,GAAMx7F,EAAE7I,EAAI,EAGZuhG,EAAG,GAAKiD,GAAQvD,EAAWoD,EAAKpD,GAAYA,GAC5Cp4F,EAAE7I,GAAKqkG,GAAM,GAIb9C,EAAG,GAAK14F,EAAE7I,EAAI,EAGT6I,EAkBT,GAdS,GAALxI,GACFkhG,EAAG58F,OAAS2/F,EACZ/hG,EAAI,EACJ+hG,MAEA/C,EAAG58F,OAAS2/F,EAAK,EACjB/hG,EAAIiiG,EAAOvD,EAAW5gG,GAItBkhG,EAAG+C,GAAMpjG,EAAI,EAAI2/F,EAAUvgG,EAAIkkG,EAAOrkG,EAAIe,GAAKsjG,EAAOtjG,IAAMqB,EAAI,GAI9DrC,EAEF,OAAU,CAGR,GAAU,GAANokG,EAAS,CAGX,IAAKjkG,EAAI,EAAGa,EAAIqgG,EAAG,GAAIrgG,GAAK,GAAIA,GAAK,GAAIb,KAEzC,IADAa,EAAIqgG,EAAG,IAAMh/F,EACRA,EAAI,EAAGrB,GAAK,GAAIA,GAAK,GAAIqB,KAG1BlC,GAAKkC,IACPsG,EAAE7I,IACEuhG,EAAG,IAAMP,IAAMO,EAAG,GAAK,IAG7B,KACF,CAEE,GADAA,EAAG+C,IAAO/hG,EACNg/F,EAAG+C,IAAOtD,EAAM,MACpBO,EAAG+C,KAAQ,EACX/hG,EAAI,CAER,CAIF,IAAKlC,EAAIkhG,EAAG58F,OAAoB,IAAZ48F,IAAKlhG,GAAUkhG,EAAGrgF,OACxC,CAGIrY,EAAE7I,EAAI6iG,EACRh6F,EAAElF,EAAIkF,EAAE7I,EAAI,KAGH6I,EAAE7I,EAAI4iG,IACf/5F,EAAElF,EAAI,CAACkF,EAAE7I,EAAI,GAEjB,CAEA,OAAO6I,CACT,CAGA,SAASf,EAAQxH,GACf,IAAIke,EACFxe,EAAIM,EAAEN,EAER,OAAU,OAANA,EAAmBM,EAAE8G,YAEzBoX,EAAM8iF,EAAchhG,EAAEqD,GAEtB6a,EAAMxe,GAAK0iG,GAAc1iG,GAAK2iG,EAC1BhB,EAAcnjF,EAAKxe,GACnB4hG,EAAapjF,EAAKxe,EAAG,KAElBM,EAAE4D,EAAI,EAAI,IAAMsa,EAAMA,EAC/B,CAorCA,OAx1EA4M,EAAUsI,MAAQA,EAElBtI,EAAUq5E,SAAW,EACrBr5E,EAAUs5E,WAAa,EACvBt5E,EAAUu5E,WAAa,EACvBv5E,EAAU87C,YAAc,EACxB97C,EAAUw5E,cAAgB,EAC1Bx5E,EAAUy5E,gBAAkB,EAC5Bz5E,EAAU05E,gBAAkB,EAC5B15E,EAAU25E,gBAAkB,EAC5B35E,EAAU45E,iBAAmB,EAC7B55E,EAAU65E,OAAS,EAqCnB75E,EAAUxnB,OAASwnB,EAAU/gB,IAAM,SAAUqN,GAC3C,IAAI/Q,EAAGc,EAEP,GAAW,MAAPiQ,EAAa,CAEf,GAAkB,iBAAPA,EA4HT,MAAM1J,MACJ8yF,EAAiB,oBAAsBppF,GAvFzC,GAlCIA,EAAI3C,eAAepO,EAAI,oBAEzB86F,EADAh6F,EAAIiQ,EAAI/Q,GACI,EAAGy6F,EAAKz6F,GACpB67F,EAAiB/6F,GAKfiQ,EAAI3C,eAAepO,EAAI,mBAEzB86F,EADAh6F,EAAIiQ,EAAI/Q,GACI,EAAG,EAAGA,GAClB87F,EAAgBh7F,GAOdiQ,EAAI3C,eAAepO,EAAI,qBACzBc,EAAIiQ,EAAI/Q,KACCc,EAAEyZ,KACTugF,EAASh6F,EAAE,IAAK25F,EAAK,EAAGz6F,GACxB86F,EAASh6F,EAAE,GAAI,EAAG25F,EAAKz6F,GACvB+7F,EAAaj7F,EAAE,GACfk7F,EAAal7F,EAAE,KAEfg6F,EAASh6F,GAAI25F,EAAKA,EAAKz6F,GACvB+7F,IAAeC,EAAal7F,EAAI,GAAKA,EAAIA,KAOzCiQ,EAAI3C,eAAepO,EAAI,SAEzB,IADAc,EAAIiQ,EAAI/Q,KACCc,EAAEyZ,IACTugF,EAASh6F,EAAE,IAAK25F,GAAM,EAAGz6F,GACzB86F,EAASh6F,EAAE,GAAI,EAAG25F,EAAKz6F,GACvBi8F,EAAUn7F,EAAE,GACZo7F,EAAUp7F,EAAE,OACP,CAEL,GADAg6F,EAASh6F,GAAI25F,EAAKA,EAAKz6F,IACnBc,EAGF,MAAMuG,MACJ8yF,EAAiBn6F,EAAI,oBAAsBc,GAH7Cm7F,IAAYC,EAAUp7F,EAAI,GAAKA,EAAIA,EAKvC,CAMF,GAAIiQ,EAAI3C,eAAepO,EAAI,UAAW,CAEpC,IADAc,EAAIiQ,EAAI/Q,QACIc,EAcV,MAAMuG,MACJ8yF,EAAiBn6F,EAAI,uBAAyBc,GAdhD,GAAIA,EAAG,CACL,GAAqB,oBAAVuxF,SAAyBA,SAClCA,OAAOE,kBAAmBF,OAAOvB,YAIjC,MADAqL,GAAUr7F,EACJuG,MACJ8yF,EAAiB,sBAJnBgC,EAASr7F,CAMb,MACEq7F,EAASr7F,CAMf,CAoBA,GAhBIiQ,EAAI3C,eAAepO,EAAI,iBAEzB86F,EADAh6F,EAAIiQ,EAAI/Q,GACI,EAAG,EAAGA,GAClBo8F,EAAct7F,GAKZiQ,EAAI3C,eAAepO,EAAI,mBAEzB86F,EADAh6F,EAAIiQ,EAAI/Q,GACI,EAAGy6F,EAAKz6F,GACpBq8F,EAAgBv7F,GAKdiQ,EAAI3C,eAAepO,EAAI,UAAW,CAEpC,GAAgB,iBADhBc,EAAIiQ,EAAI/Q,IAEH,MAAMqH,MACT8yF,EAAiBn6F,EAAI,mBAAqBc,GAFlBw7F,EAASx7F,CAGrC,CAIA,GAAIiQ,EAAI3C,eAAepO,EAAI,YAAa,CAKtC,GAAgB,iBAJhBc,EAAIiQ,EAAI/Q,KAIqB,wBAAwBie,KAAKnd,GAIxD,MAAMuG,MACJ8yF,EAAiBn6F,EAAI,aAAec,GAJtCk8F,EAAmD,cAAlBl8F,EAAES,MAAM,EAAG,IAC5Cw7F,EAAWj8F,CAKf,CAQJ,CAEA,MAAO,CACL+6F,eAAgBA,EAChBC,cAAeA,EACfyC,eAAgB,CAACxC,EAAYC,GAC7BwC,MAAO,CAACvC,EAASC,GACjBC,OAAQA,EACRC,YAAaA,EACbC,cAAeA,EACfC,OAAQA,EACRS,SAAUA,EAEd,EAYAt4E,EAAUg6E,YAAc,SAAU39F,GAChC,IAAKA,IAAwB,IAAnBA,EAAEq8F,aAAuB,OAAO,EAC1C,IAAK14E,EAAUu7C,MAAO,OAAO,EAE7B,IAAItmE,EAAGC,EACLqD,EAAI8D,EAAE9D,EACN3D,EAAIyH,EAAEzH,EACNkE,EAAIuD,EAAEvD,EAERmqE,EAAK,GAA2B,kBAAvB,CAAC,EAAEjnE,SAASxG,KAAK+C,IAExB,IAAW,IAANO,IAAkB,IAAPA,IAAalE,IAAMohG,GAAOphG,GAAKohG,GAAOphG,IAAM6gG,EAAU7gG,GAAI,CAGxE,GAAa,IAAT2D,EAAE,GAAU,CACd,GAAU,IAAN3D,GAAwB,IAAb2D,EAAEgB,OAAc,OAAO,EACtC,MAAM0pE,CACR,CAQA,IALAhuE,GAAKL,EAAI,GAAKihG,GACN,IAAG5gG,GAAK4gG,GAIZz+F,OAAOmB,EAAE,IAAIgB,QAAUtE,EAAG,CAE5B,IAAKA,EAAI,EAAGA,EAAIsD,EAAEgB,OAAQtE,IAExB,IADAC,EAAIqD,EAAEtD,IACE,GAAKC,GAAK0gG,GAAQ1gG,IAAMugG,EAAUvgG,GAAI,MAAM+tE,EAItD,GAAU,IAAN/tE,EAAS,OAAO,CACtB,CACF,OAGK,GAAU,OAANqD,GAAoB,OAAN3D,IAAqB,OAANkE,GAAoB,IAANA,IAAkB,IAAPA,GAC/D,OAAO,EAGT,MAAM8J,MACH8yF,EAAiB,sBAAwBr5F,EAC9C,EAQA2jB,EAAUi6E,QAAUj6E,EAAUhK,IAAM,WAClC,OAAO+iF,EAASv1F,WAAY,EAC9B,EAQAwc,EAAUk6E,QAAUl6E,EAAUjc,IAAM,WAClC,OAAOg1F,EAASv1F,UAAW,EAC7B,EAaAwc,EAAUsK,QACJusE,EAAU,iBAMVC,EAAkBt8F,KAAK8vB,SAAWusE,EAAW,QAC9C,WAAc,OAAOpB,EAAUj7F,KAAK8vB,SAAWusE,EAAU,EACzD,WAAc,OAA2C,SAAlB,WAAhBr8F,KAAK8vB,SAAwB,IACnC,QAAhB9vB,KAAK8vB,SAAsB,EAAI,EAE5B,SAAU6vE,GACf,IAAI//F,EAAG6B,EAAGrH,EAAGuC,EAAGkF,EACdpH,EAAI,EACJsD,EAAI,GACJ6hG,EAAO,IAAIp6E,EAAUuiC,GAOvB,GALU,MAAN43C,EAAYA,EAAK/C,EAChBf,EAAS8D,EAAI,EAAGnE,GAErB7+F,EAAIq+F,EAAS2E,EAAKtE,GAEd6B,EAGF,GAAI9J,OAAOE,gBAAiB,CAI1B,IAFA1zF,EAAIwzF,OAAOE,gBAAgB,IAAInjB,YAAYxzE,GAAK,IAEzClC,EAAIkC,IAQTkF,EAAW,OAAPjC,EAAEnF,IAAgBmF,EAAEnF,EAAI,KAAO,MAM1B,MACPgH,EAAI2xF,OAAOE,gBAAgB,IAAInjB,YAAY,IAC3CvwE,EAAEnF,GAAKgH,EAAE,GACT7B,EAAEnF,EAAI,GAAKgH,EAAE,KAKb1D,EAAEmK,KAAKrG,EAAI,MACXpH,GAAK,GAGTA,EAAIkC,EAAI,CAGV,KAAO,KAAIy2F,OAAOvB,YA2BhB,MADAqL,GAAS,EACH90F,MACJ8yF,EAAiB,sBAvBnB,IAFAt7F,EAAIwzF,OAAOvB,YAAYl1F,GAAK,GAErBlC,EAAIkC,IAMTkF,EAAmB,iBAAN,GAAPjC,EAAEnF,IAA0C,cAAXmF,EAAEnF,EAAI,GAC9B,WAAXmF,EAAEnF,EAAI,GAAgC,SAAXmF,EAAEnF,EAAI,IACjCmF,EAAEnF,EAAI,IAAM,KAAOmF,EAAEnF,EAAI,IAAM,GAAKmF,EAAEnF,EAAI,KAErC,KACP24F,OAAOvB,YAAY,GAAG3xF,KAAKN,EAAGnF,IAI9BsD,EAAEmK,KAAKrG,EAAI,MACXpH,GAAK,GAGTA,EAAIkC,EAAI,CAKV,CAIF,IAAKugG,EAEH,KAAOziG,EAAIkC,IACTkF,EAAIy6F,KACI,OAAMv+F,EAAEtD,KAAOoH,EAAI,MAc/B,IAVAlF,EAAIoB,IAAItD,GACRklG,GAAMtE,EAGF1+F,GAAKgjG,IACP99F,EAAIy5F,EAASD,EAAWsE,GACxB5hG,EAAEtD,GAAKwgG,EAAUt+F,EAAIkF,GAAKA,GAIZ,IAAT9D,EAAEtD,GAAUsD,EAAEud,MAAO7gB,KAG5B,GAAIA,EAAI,EACNsD,EAAI,CAAC3D,EAAI,OACJ,CAGL,IAAKA,GAAK,EAAa,IAAT2D,EAAE,GAAUA,EAAE+yE,OAAO,EAAG,GAAI12E,GAAKihG,GAG/C,IAAK5gG,EAAI,EAAGoH,EAAI9D,EAAE,GAAI8D,GAAK,GAAIA,GAAK,GAAIpH,KAGpCA,EAAI4gG,IAAUjhG,GAAKihG,EAAW5gG,EACpC,CAIA,OAFAmlG,EAAKxlG,EAAIA,EACTwlG,EAAK7hG,EAAIA,EACF6hG,CACT,GASFp6E,EAAUq6E,IAAM,WAId,IAHA,IAAIplG,EAAI,EACNgY,EAAOzJ,UACP62F,EAAM,IAAIr6E,EAAU/S,EAAK,IACpBhY,EAAIgY,EAAK1T,QAAS8gG,EAAMA,EAAIp6E,KAAKhT,EAAKhY,MAC7C,OAAOolG,CACT,EAOA1D,EAAc,WACZ,IAAI2D,EAAU,aAOd,SAASC,EAAUnnF,EAAKonF,EAAQC,EAAS39B,GAOvC,IANA,IAAIhnE,EAEF4kG,EADA1hF,EAAM,CAAC,GAEP/jB,EAAI,EACJwjB,EAAMrF,EAAI7Z,OAELtE,EAAIwjB,GAAM,CACf,IAAKiiF,EAAO1hF,EAAIzf,OAAQmhG,IAAQ1hF,EAAI0hF,IAASF,GAI7C,IAFAxhF,EAAI,IAAM8jD,EAASj6D,QAAQuQ,EAAIiU,OAAOpyB,MAEjCa,EAAI,EAAGA,EAAIkjB,EAAIzf,OAAQzD,IAEtBkjB,EAAIljB,GAAK2kG,EAAU,IACH,MAAdzhF,EAAIljB,EAAI,KAAYkjB,EAAIljB,EAAI,GAAK,GACrCkjB,EAAIljB,EAAI,IAAMkjB,EAAIljB,GAAK2kG,EAAU,EACjCzhF,EAAIljB,IAAM2kG,EAGhB,CAEA,OAAOzhF,EAAI/b,SACb,CAKA,OAAO,SAAUmW,EAAKonF,EAAQC,EAAS7wE,EAAM+wE,GAC3C,IAAI79B,EAAU/nE,EAAGH,EAAGuC,EAAGrC,EAAG2I,EAAG04F,EAAI16F,EAC/BxG,EAAIme,EAAIvQ,QAAQ,KAChBs3F,EAAK/C,EACLwB,EAAKvB,EA+BP,IA5BIpiG,GAAK,IACPkC,EAAIygG,EAGJA,EAAgB,EAChBxkF,EAAMA,EAAIhO,QAAQ,IAAK,IAEvB3H,GADAhC,EAAI,IAAIukB,EAAUw6E,IACZj0F,IAAI6M,EAAI7Z,OAAStE,GACvB2iG,EAAgBzgG,EAKhBsE,EAAElD,EAAIgiG,EAAU/D,EAAaN,EAAcz4F,EAAElF,GAAIkF,EAAE7I,EAAG,KACrD,GAAI6lG,EAASH,GACd7+F,EAAE7G,EAAI6G,EAAElD,EAAEgB,QAUZ3E,EAAIuC,GALJg/F,EAAKoE,EAAUnnF,EAAKonF,EAAQC,EAASE,GACjC79B,EAAWw7B,EAAUgC,IACrBx9B,EAAWw9B,EAAShC,KAGb/+F,OAGO,GAAX48F,IAAKh/F,GAASg/F,EAAGrgF,OAGxB,IAAKqgF,EAAG,GAAI,OAAOr5B,EAASz1C,OAAO,GAqCnC,GAlCIpyB,EAAI,IACJL,GAEF6I,EAAElF,EAAI49F,EACN14F,EAAE7I,EAAIA,EAGN6I,EAAE3E,EAAI8wB,EAENusE,GADA14F,EAAIkqD,EAAIlqD,EAAGhC,EAAG0+F,EAAIvB,EAAI6B,IACfliG,EACPzD,EAAI2I,EAAE3I,EACNF,EAAI6I,EAAE7I,GASRK,EAAIkhG,EAHJphG,EAAIH,EAAIulG,EAAK,GAObhjG,EAAIsjG,EAAU,EACd3lG,EAAIA,GAAKC,EAAI,GAAkB,MAAbohG,EAAGphG,EAAI,GAEzBD,EAAI8jG,EAAK,GAAU,MAAL3jG,GAAaH,KAAa,GAAN8jG,GAAWA,IAAOn7F,EAAE3E,EAAI,EAAI,EAAI,IAC1D7D,EAAIkC,GAAKlC,GAAKkC,IAAW,GAANyhG,GAAW9jG,GAAW,GAAN8jG,GAAuB,EAAZzC,EAAGphG,EAAI,IACtD6jG,IAAOn7F,EAAE3E,EAAI,EAAI,EAAI,IAKxB/D,EAAI,IAAMohG,EAAG,GAGf/iF,EAAMte,EAAI0hG,EAAa15B,EAASz1C,OAAO,IAAK8yE,EAAIr9B,EAASz1C,OAAO,IAAMy1C,EAASz1C,OAAO,OACjF,CAML,GAHA8uE,EAAG58F,OAASxE,EAGRD,EAGF,MAAO2lG,IAAWtE,IAAKphG,GAAK0lG,GAC1BtE,EAAGphG,GAAK,EAEHA,MACDH,EACFuhG,EAAK,CAAC,GAAGtxF,OAAOsxF,IAMtB,IAAKh/F,EAAIg/F,EAAG58F,QAAS48F,IAAKh/F,KAG1B,IAAKlC,EAAI,EAAGme,EAAM,GAAIne,GAAKkC,EAAGic,GAAO0pD,EAASz1C,OAAO8uE,EAAGlhG,OAGxDme,EAAMojF,EAAapjF,EAAKxe,EAAGkoE,EAASz1C,OAAO,GAC7C,CAGA,OAAOjU,CACT,CACD,CAnJa,GAuJdu0C,EAAM,WAGJ,SAASizC,EAASn9F,EAAGtG,EAAGmgB,GACtB,IAAI3b,EAAGk/F,EAAMC,EAAKC,EAChB19B,EAAQ,EACRpoE,EAAIwI,EAAElE,OACNyhG,EAAM7jG,EAAI4+F,EACVkF,EAAM9jG,EAAI4+F,EAAY,EAExB,IAAKt4F,EAAIA,EAAEX,QAAS7H,KAKlBooE,IADAw9B,EAAOG,GAHPF,EAAMr9F,EAAExI,GAAK8gG,IAEbp6F,EAAIs/F,EAAMH,GADVC,EAAMt9F,EAAExI,GAAK8gG,EAAY,GACHiF,GACGjF,EAAaA,EAAa14B,GACnC/lD,EAAO,IAAM3b,EAAIo6F,EAAY,GAAKkF,EAAMF,EACxDt9F,EAAExI,GAAK4lG,EAAOvjF,EAKhB,OAFI+lD,IAAO5/D,EAAI,CAAC4/D,GAAOx4D,OAAOpH,IAEvBA,CACT,CAEA,SAASkH,EAAQvK,EAAG6B,EAAGi/F,EAAIC,GACzB,IAAIlmG,EAAGmmG,EAEP,GAAIF,GAAMC,EACRC,EAAMF,EAAKC,EAAK,GAAK,OAGrB,IAAKlmG,EAAImmG,EAAM,EAAGnmG,EAAIimG,EAAIjmG,IAExB,GAAImF,EAAEnF,IAAMgH,EAAEhH,GAAI,CAChBmmG,EAAMhhG,EAAEnF,GAAKgH,EAAEhH,GAAK,GAAK,EACzB,KACF,CAIJ,OAAOmmG,CACT,CAEA,SAASC,EAASjhG,EAAG6B,EAAGi/F,EAAI5jF,GAI1B,IAHA,IAAIriB,EAAI,EAGDimG,KACL9gG,EAAE8gG,IAAOjmG,EACTA,EAAImF,EAAE8gG,GAAMj/F,EAAEi/F,GAAM,EAAI,EACxB9gG,EAAE8gG,GAAMjmG,EAAIqiB,EAAOld,EAAE8gG,GAAMj/F,EAAEi/F,GAI/B,MAAQ9gG,EAAE,IAAMA,EAAEb,OAAS,EAAGa,EAAEkxE,OAAO,EAAG,IAC5C,CAGA,OAAO,SAAU7tE,EAAGhC,EAAG0+F,EAAIvB,EAAIthF,GAC7B,IAAI8jF,EAAKxmG,EAAGK,EAAGqmG,EAAMpmG,EAAGqmG,EAAMC,EAAOjkG,EAAGkkG,EAAI9kB,EAAK+kB,EAAMC,EAAMhe,EAAIie,EAAIC,EACnEC,EAAIC,EACJjjG,EAAI2E,EAAE3E,GAAK2C,EAAE3C,EAAI,GAAK,EACtBq9F,EAAK14F,EAAElF,EACP69F,EAAK36F,EAAElD,EAGT,KAAK49F,GAAOA,EAAG,IAAOC,GAAOA,EAAG,IAE9B,OAAO,IAAIp2E,EAGTviB,EAAE3E,GAAM2C,EAAE3C,IAAMq9F,GAAKC,GAAMD,EAAG,IAAMC,EAAG,GAAMA,GAG7CD,GAAe,GAATA,EAAG,KAAYC,EAAS,EAAJt9F,EAAQA,EAAI,EAHasQ,KAoBvD,IAZAqyF,GADAlkG,EAAI,IAAIyoB,EAAUlnB,IACXP,EAAI,GAEXO,EAAIqhG,GADJvlG,EAAI6I,EAAE7I,EAAI6G,EAAE7G,GACC,EAER0iB,IACHA,EAAOs+E,EACPhhG,EAAIqhG,EAASx4F,EAAE7I,EAAIihG,GAAYI,EAASx6F,EAAE7G,EAAIihG,GAC9C/8F,EAAIA,EAAI+8F,EAAW,GAKhB5gG,EAAI,EAAGmhG,EAAGnhG,KAAOkhG,EAAGlhG,IAAM,GAAIA,KAInC,GAFImhG,EAAGnhG,IAAMkhG,EAAGlhG,IAAM,IAAIL,IAEtBkE,EAAI,EACN2iG,EAAG/4F,KAAK,GACR44F,GAAO,MACF,CAwBL,IAvBAM,EAAKzF,EAAG58F,OACRuiG,EAAK1F,EAAG78F,OACRtE,EAAI,EACJ6D,GAAK,GAIL5D,EAAIugG,EAAUn+E,GAAQ8+E,EAAG,GAAK,KAItB,IACNA,EAAKwE,EAASxE,EAAIlhG,EAAGoiB,GACrB6+E,EAAKyE,EAASzE,EAAIjhG,EAAGoiB,GACrBwkF,EAAK1F,EAAG78F,OACRqiG,EAAKzF,EAAG58F,QAGVokF,EAAKme,EAELJ,GADA/kB,EAAMwf,EAAGr5F,MAAM,EAAGg/F,IACPviG,OAGJmiG,EAAOI,EAAInlB,EAAI+kB,KAAU,GAChCK,EAAK3F,EAAGt5F,QACRi/F,EAAK,CAAC,GAAGl3F,OAAOk3F,GAChBF,EAAMzF,EAAG,GACLA,EAAG,IAAM9+E,EAAO,GAAGukF,IAIvB,EAAG,CAOD,GANA3mG,EAAI,GAGJkmG,EAAMz2F,EAAQyxF,EAAIzf,EAAKmlB,EAAIJ,IAGjB,EAAG,CAqBX,GAjBAC,EAAOhlB,EAAI,GACPmlB,GAAMJ,IAAMC,EAAOA,EAAOrkF,GAAQq/D,EAAI,IAAM,KAGhDzhF,EAAIugG,EAAUkG,EAAOE,IAab,EAcN,IAXI3mG,GAAKoiB,IAAMpiB,EAAIoiB,EAAO,GAI1BkkF,GADAD,EAAOX,EAASxE,EAAIlhG,EAAGoiB,IACV/d,OACbmiG,EAAO/kB,EAAIp9E,OAM+B,GAAnCoL,EAAQ42F,EAAM5kB,EAAK6kB,EAAOE,IAC/BxmG,IAGAmmG,EAASE,EAAMO,EAAKN,EAAQO,EAAK3F,EAAIoF,EAAOlkF,GAC5CkkF,EAAQD,EAAKhiG,OACb6hG,EAAM,OAQC,GAALlmG,IAGFkmG,EAAMlmG,EAAI,GAKZsmG,GADAD,EAAOnF,EAAGt5F,SACGvD,OAUf,GAPIiiG,EAAQE,IAAMH,EAAO,CAAC,GAAG12F,OAAO02F,IAGpCF,EAAS1kB,EAAK4kB,EAAMG,EAAMpkF,GAC1BokF,EAAO/kB,EAAIp9E,QAGC,GAAR6hG,EAMF,KAAOz2F,EAAQyxF,EAAIzf,EAAKmlB,EAAIJ,GAAQ,GAClCxmG,IAGAmmG,EAAS1kB,EAAKmlB,EAAKJ,EAAOK,EAAK3F,EAAIsF,EAAMpkF,GACzCokF,EAAO/kB,EAAIp9E,MAGjB,MAAmB,IAAR6hG,IACTlmG,IACAyhF,EAAM,CAAC,IAIT8kB,EAAGxmG,KAAOC,EAGNyhF,EAAI,GACNA,EAAI+kB,KAAUvF,EAAGxY,IAAO,GAExBhH,EAAM,CAACwf,EAAGxY,IACV+d,EAAO,EAEX,QAAU/d,IAAOie,GAAgB,MAAVjlB,EAAI,KAAe79E,KAE1CwiG,EAAiB,MAAV3kB,EAAI,GAGN8kB,EAAG,IAAIA,EAAGnwB,OAAO,EAAG,EAC3B,CAEA,GAAIh0D,GAAQs+E,EAAM,CAGhB,IAAK3gG,EAAI,EAAG6D,EAAI2iG,EAAG,GAAI3iG,GAAK,GAAIA,GAAK,GAAI7D,KAEzC0jG,EAAMphG,EAAG4iG,GAAM5iG,EAAE3C,EAAIK,EAAIL,EAAIihG,EAAW,GAAK,EAAG+C,EAAI0C,EAGtD,MACE/jG,EAAE3C,EAAIA,EACN2C,EAAEzC,GAAKwmG,EAGT,OAAO/jG,CACT,CACD,CAhQK,GA4XAw/F,EAAa,8BACfC,EAAW,cACXC,EAAY,cACZC,EAAkB,qBAClBC,EAAmB,6BALvBP,EAOS,SAAUn5F,EAAG2V,EAAKqlF,EAAOx8F,GAC9B,IAAIqb,EACFxe,EAAI2/F,EAAQrlF,EAAMA,EAAIhO,QAAQ+xF,EAAkB,IAGlD,GAAID,EAAgB19E,KAAK1gB,GACvB2E,EAAE3E,EAAIuQ,MAAMvQ,GAAK,KAAOA,EAAI,GAAK,EAAI,MAChC,CACL,IAAK2/F,IAGH3/F,EAAIA,EAAEsM,QAAQ2xF,GAAY,SAAUp7F,EAAGqgG,EAAIC,GAEzC,OADA3kF,EAAkC,MAA1B2kF,EAAKA,EAAGx4F,eAAwB,GAAW,KAANw4F,EAAY,EAAI,EACrDhgG,GAAKA,GAAKqb,EAAY3b,EAALqgG,CAC3B,IAEI//F,IACFqb,EAAOrb,EAGPnD,EAAIA,EAAEsM,QAAQ4xF,EAAU,MAAM5xF,QAAQ6xF,EAAW,SAG/C7jF,GAAOta,GAAG,OAAO,IAAIknB,EAAUlnB,EAAGwe,GAKxC,GAAI0I,EAAUu7C,MACZ,MAAM34D,MACH8yF,EAAiB,SAAWz5F,EAAI,SAAWA,EAAI,IAAM,YAAcmX,GAIxE3V,EAAE3E,EAAI,IACR,CAEA2E,EAAElF,EAAIkF,EAAE7I,EAAI,IACd,EA4LFuD,EAAE+jG,cAAgB/jG,EAAE+Q,IAAM,WACxB,IAAIzL,EAAI,IAAIuiB,EAAUvqB,MAEtB,OADIgI,EAAE3E,EAAI,IAAG2E,EAAE3E,EAAI,GACZ2E,CACT,EAUAtF,EAAEgkG,WAAa,SAAU1gG,EAAGQ,GAC1B,OAAO0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,GACxC,EAgBA9D,EAAEqvD,cAAgBrvD,EAAEgiG,GAAK,SAAUA,EAAIvB,GACrC,IAAIrgG,EAAGrD,EAAGmH,EACRoB,EAAIhI,KAEN,GAAU,MAAN0kG,EAKF,OAJA9D,EAAS8D,EAAI,EAAGnE,GACN,MAAN4C,EAAYA,EAAKvB,EAChBhB,EAASuC,EAAI,EAAG,GAEdD,EAAM,IAAI34E,EAAUviB,GAAI08F,EAAK18F,EAAE7I,EAAI,EAAGgkG,GAG/C,KAAMrgG,EAAIkF,EAAElF,GAAI,OAAO,KAIvB,GAHArD,IAAMmH,EAAI9D,EAAEgB,OAAS,GAAK08F,EAASxgG,KAAKb,EAAIihG,IAAaA,EAGrDx5F,EAAI9D,EAAE8D,GAAI,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAInH,KAG3C,OAFIA,EAAI,IAAGA,EAAI,GAERA,CACT,EAuBAiD,EAAEikG,UAAYjkG,EAAEwvD,IAAM,SAAUlsD,EAAGQ,GACjC,OAAO0rD,EAAIlyD,KAAM,IAAIuqB,EAAUvkB,EAAGQ,GAAIm7F,EAAgBC,EACxD,EAOAl/F,EAAEkkG,mBAAqBlkG,EAAEmkG,KAAO,SAAU7gG,EAAGQ,GAC3C,OAAO0rD,EAAIlyD,KAAM,IAAIuqB,EAAUvkB,EAAGQ,GAAI,EAAG,EAC3C,EAkBA9D,EAAEokG,gBAAkBpkG,EAAEoO,IAAM,SAAUrR,EAAGyG,GACvC,IAAI6gG,EAAMC,EAAUxnG,EAAGkC,EAASulG,EAAQC,EAAQC,EAAQnhG,EACtDgC,EAAIhI,KAKN,IAHAP,EAAI,IAAI8qB,EAAU9qB,IAGZqD,IAAMrD,EAAE+T,YACZ,MAAMrG,MACH8yF,EAAiB,4BAA8Bh5F,EAAQxH,IAS5D,GANS,MAALyG,IAAWA,EAAI,IAAIqkB,EAAUrkB,IAGjC+gG,EAASxnG,EAAEN,EAAI,IAGV6I,EAAElF,IAAMkF,EAAElF,EAAE,IAAgB,GAAVkF,EAAElF,EAAE,KAAYkF,EAAE7I,GAAmB,GAAd6I,EAAElF,EAAEgB,SAAgBrE,EAAEqD,IAAMrD,EAAEqD,EAAE,GAK5E,OADAkD,EAAI,IAAIukB,EAAUxlB,KAAK+L,KAAK7J,EAAQe,GAAIi/F,EAASxnG,EAAE4D,GAAK,EAAIw9F,EAAMphG,KAAOwH,EAAQxH,KAC1EyG,EAAIF,EAAEohG,IAAIlhG,GAAKF,EAKxB,GAFAkhG,EAASznG,EAAE4D,EAAI,EAEX6C,EAAG,CAGL,GAAIA,EAAEpD,GAAKoD,EAAEpD,EAAE,IAAMoD,EAAE7C,EAAG,OAAO,IAAIknB,EAAU5W,MAE/CqzF,GAAYE,GAAUl/F,EAAEwL,aAAetN,EAAEsN,eAE3BxL,EAAIA,EAAEo/F,IAAIlhG,GAI1B,KAAO,IAAIzG,EAAEN,EAAI,IAAM6I,EAAE7I,EAAI,GAAK6I,EAAE7I,GAAK,IAAa,GAAP6I,EAAE7I,EAE7C6I,EAAElF,EAAE,GAAK,GAAKmkG,GAAUj/F,EAAElF,EAAE,IAAM,KAElCkF,EAAElF,EAAE,GAAK,MAAQmkG,GAAUj/F,EAAElF,EAAE,IAAM,YASvC,OANApB,EAAIsG,EAAE3E,EAAI,GAAKw9F,EAAMphG,IAAM,EAAI,EAG3BuI,EAAE7I,GAAK,IAAGuC,EAAI,EAAIA,GAGf,IAAI6oB,EAAU28E,EAAS,EAAIxlG,EAAIA,GAE7BygG,IAKTzgG,EAAIq+F,EAASoC,EAAgB/B,EAAW,GAC1C,CAcA,IAZI6G,GACFF,EAAO,IAAIx8E,EAAU,IACjB28E,IAAQznG,EAAE4D,EAAI,GAClB8jG,EAAStG,EAAMphG,IAGf0nG,GADA3nG,EAAIuF,KAAK0O,KAAKxM,EAAQxH,KACT,EAGfuG,EAAI,IAAIukB,EAAUuiC,KAGR,CAER,GAAIq6C,EAAQ,CAEV,KADAnhG,EAAIA,EAAE6rD,MAAM7pD,IACLlF,EAAG,MAENpB,EACEsE,EAAElD,EAAEgB,OAASpC,IAAGsE,EAAElD,EAAEgB,OAASpC,GACxBslG,IACThhG,EAAIA,EAAEohG,IAAIlhG,GAEd,CAEA,GAAI1G,EAAG,CAEL,GAAU,KADVA,EAAIwgG,EAAUxgG,EAAI,IACL,MACb2nG,EAAS3nG,EAAI,CACf,MAIE,GAFA0jG,EADAzjG,EAAIA,EAAEoyD,MAAMk1C,GACHtnG,EAAEN,EAAI,EAAG,GAEdM,EAAEN,EAAI,GACRgoG,EAAStG,EAAMphG,OACV,CAEL,GAAU,KADVD,GAAKyH,EAAQxH,IACA,MACb0nG,EAAS3nG,EAAI,CACf,CAGFwI,EAAIA,EAAE6pD,MAAM7pD,GAERtG,EACEsG,EAAElF,GAAKkF,EAAElF,EAAEgB,OAASpC,IAAGsG,EAAElF,EAAEgB,OAASpC,GAC/BslG,IACTh/F,EAAIA,EAAEo/F,IAAIlhG,GAEd,CAEA,OAAI8gG,EAAiBhhG,GACjBkhG,IAAQlhG,EAAI8mD,EAAIoF,IAAIlsD,IAEjBE,EAAIF,EAAEohG,IAAIlhG,GAAKxE,EAAIwhG,EAAMl9F,EAAGm8F,EAAeP,EAnHxBiE,WAmH+C7/F,EAC3E,EAWAtD,EAAE0jE,aAAe,SAAU+8B,GACzB,IAAI1jG,EAAI,IAAI8qB,EAAUvqB,MAGtB,OAFU,MAANmjG,EAAYA,EAAKvB,EAChBhB,EAASuC,EAAI,EAAG,GACdD,EAAMzjG,EAAGA,EAAEN,EAAI,EAAGgkG,EAC3B,EAOAzgG,EAAE2kG,UAAY3kG,EAAE6jE,GAAK,SAAUvgE,EAAGQ,GAChC,OAA8C,IAAvC0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,GACxC,EAMA9D,EAAEoN,SAAW,WACX,QAAS9P,KAAK8C,CAChB,EAOAJ,EAAE4kG,cAAgB5kG,EAAEovD,GAAK,SAAU9rD,EAAGQ,GACpC,OAAO0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,IAAM,CAC9C,EAOA9D,EAAE6kG,uBAAyB7kG,EAAE8kG,IAAM,SAAUxhG,EAAGQ,GAC9C,OAAoD,KAA5CA,EAAI0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,MAAoB,IAANA,CAE3D,EAMA9D,EAAE8Q,UAAY,WACZ,QAASxT,KAAK8C,GAAK09F,EAASxgG,KAAKb,EAAIihG,GAAYpgG,KAAK8C,EAAEgB,OAAS,CACnE,EAOApB,EAAE+kG,WAAa/kG,EAAEwhE,GAAK,SAAUl+D,EAAGQ,GACjC,OAAO0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,IAAM,CAC9C,EAOA9D,EAAEglG,oBAAsBhlG,EAAEilG,IAAM,SAAU3hG,EAAGQ,GAC3C,OAAqD,KAA7CA,EAAI0I,EAAQlP,KAAM,IAAIuqB,EAAUvkB,EAAGQ,MAAqB,IAANA,CAC5D,EAMA9D,EAAEkR,MAAQ,WACR,OAAQ5T,KAAKqD,CACf,EAMAX,EAAEkvD,WAAa,WACb,OAAO5xD,KAAKqD,EAAI,CAClB,EAMAX,EAAEklG,WAAa,WACb,OAAO5nG,KAAKqD,EAAI,CAClB,EAMAX,EAAEivD,OAAS,WACT,QAAS3xD,KAAK8C,GAAkB,GAAb9C,KAAK8C,EAAE,EAC5B,EAuBAJ,EAAE4jE,MAAQ,SAAUtgE,EAAGQ,GACrB,IAAIhH,EAAGa,EAAGjB,EAAGyoG,EACX7/F,EAAIhI,KACJ2E,EAAIqD,EAAE3E,EAMR,GAHAmD,GADAR,EAAI,IAAIukB,EAAUvkB,EAAGQ,IACfnD,GAGDsB,IAAM6B,EAAG,OAAO,IAAI+jB,EAAU5W,KAGnC,GAAIhP,GAAK6B,EAEP,OADAR,EAAE3C,GAAKmD,EACAwB,EAAEwiB,KAAKxkB,GAGhB,IAAI8hG,EAAK9/F,EAAE7I,EAAIihG,EACb2H,EAAK/hG,EAAE7G,EAAIihG,EACXM,EAAK14F,EAAElF,EACP69F,EAAK36F,EAAElD,EAET,IAAKglG,IAAOC,EAAI,CAGd,IAAKrH,IAAOC,EAAI,OAAOD,GAAM16F,EAAE3C,GAAKmD,EAAGR,GAAK,IAAIukB,EAAUo2E,EAAK34F,EAAI2L,KAGnE,IAAK+sF,EAAG,KAAOC,EAAG,GAGhB,OAAOA,EAAG,IAAM36F,EAAE3C,GAAKmD,EAAGR,GAAK,IAAIukB,EAAUm2E,EAAG,GAAK14F,EAGnC,GAAjB45F,GAAsB,EAAI,EAE/B,CAOA,GALAkG,EAAKtH,EAASsH,GACdC,EAAKvH,EAASuH,GACdrH,EAAKA,EAAGr5F,QAGJ1C,EAAImjG,EAAKC,EAAI,CAaf,KAXIF,EAAOljG,EAAI,IACbA,GAAKA,EACLvF,EAAIshG,IAEJqH,EAAKD,EACL1oG,EAAIuhG,GAGNvhG,EAAEoI,UAGGhB,EAAI7B,EAAG6B,IAAKpH,EAAE6N,KAAK,IACxB7N,EAAEoI,SACJ,MAKE,IAFAnH,GAAKwnG,GAAQljG,EAAI+7F,EAAG58F,SAAW0C,EAAIm6F,EAAG78F,SAAWa,EAAI6B,EAEhD7B,EAAI6B,EAAI,EAAGA,EAAInG,EAAGmG,IAErB,GAAIk6F,EAAGl6F,IAAMm6F,EAAGn6F,GAAI,CAClBqhG,EAAOnH,EAAGl6F,GAAKm6F,EAAGn6F,GAClB,KACF,CAgBJ,GAXIqhG,IACFzoG,EAAIshG,EACJA,EAAKC,EACLA,EAAKvhG,EACL4G,EAAE3C,GAAK2C,EAAE3C,IAGXmD,GAAKnG,EAAIsgG,EAAG78F,SAAWtE,EAAIkhG,EAAG58F,SAItB,EAAG,KAAO0C,IAAKk6F,EAAGlhG,KAAO,GAIjC,IAHAgH,EAAI25F,EAAO,EAGJ9/F,EAAIsE,GAAI,CAEb,GAAI+7F,IAAKrgG,GAAKsgG,EAAGtgG,GAAI,CACnB,IAAKb,EAAIa,EAAGb,IAAMkhG,IAAKlhG,GAAIkhG,EAAGlhG,GAAKgH,KACjCk6F,EAAGlhG,GACLkhG,EAAGrgG,IAAM8/F,CACX,CAEAO,EAAGrgG,IAAMsgG,EAAGtgG,EACd,CAGA,KAAgB,GAATqgG,EAAG,GAASA,EAAG7qB,OAAO,EAAG,KAAMkyB,GAGtC,OAAKrH,EAAG,GAWD6C,EAAUv9F,EAAG06F,EAAIqH,IAPtB/hG,EAAE3C,EAAqB,GAAjBu+F,GAAsB,EAAI,EAChC57F,EAAElD,EAAI,CAACkD,EAAE7G,EAAI,GACN6G,EAMX,EAwBAtD,EAAEslG,OAAStlG,EAAE0kG,IAAM,SAAUphG,EAAGQ,GAC9B,IAAI1E,EAAGuB,EACL2E,EAAIhI,KAKN,OAHAgG,EAAI,IAAIukB,EAAUvkB,EAAGQ,IAGhBwB,EAAElF,IAAMkD,EAAE3C,GAAK2C,EAAElD,IAAMkD,EAAElD,EAAE,GACvB,IAAIynB,EAAU5W,MAGX3N,EAAElD,GAAKkF,EAAElF,IAAMkF,EAAElF,EAAE,GACtB,IAAIynB,EAAUviB,IAGJ,GAAfk6F,GAIF7+F,EAAI2C,EAAE3C,EACN2C,EAAE3C,EAAI,EACNvB,EAAIowD,EAAIlqD,EAAGhC,EAAG,EAAG,GACjBA,EAAE3C,EAAIA,EACNvB,EAAEuB,GAAKA,GAEPvB,EAAIowD,EAAIlqD,EAAGhC,EAAG,EAAGk8F,IAGnBl8F,EAAIgC,EAAEs+D,MAAMxkE,EAAE+vD,MAAM7rD,KAGblD,EAAE,IAAqB,GAAfo/F,IAAkBl8F,EAAE3C,EAAI2E,EAAE3E,GAElC2C,EACT,EAuBAtD,EAAEulG,aAAevlG,EAAEmvD,MAAQ,SAAU7rD,EAAGQ,GACtC,IAAI1D,EAAG3D,EAAGK,EAAGa,EAAGqB,EAAGwE,EAAGgiG,EAAK7C,EAAKC,EAAK6C,EAAKC,EAAKC,EAAKC,EAClDzmF,EAAM0mF,EACNvgG,EAAIhI,KACJ0gG,EAAK14F,EAAElF,EACP69F,GAAM36F,EAAI,IAAIukB,EAAUvkB,EAAGQ,IAAI1D,EAGjC,KAAK49F,GAAOC,GAAOD,EAAG,IAAOC,EAAG,IAmB9B,OAhBK34F,EAAE3E,IAAM2C,EAAE3C,GAAKq9F,IAAOA,EAAG,KAAOC,GAAMA,IAAOA,EAAG,KAAOD,EAC1D16F,EAAElD,EAAIkD,EAAE7G,EAAI6G,EAAE3C,EAAI,MAElB2C,EAAE3C,GAAK2E,EAAE3E,EAGJq9F,GAAOC,GAKV36F,EAAElD,EAAI,CAAC,GACPkD,EAAE7G,EAAI,GALN6G,EAAElD,EAAIkD,EAAE7G,EAAI,MAST6G,EAmBT,IAhBA7G,EAAIqhG,EAASx4F,EAAE7I,EAAIihG,GAAYI,EAASx6F,EAAE7G,EAAIihG,GAC9Cp6F,EAAE3C,GAAK2E,EAAE3E,GACT6kG,EAAMxH,EAAG58F,SACTqkG,EAAMxH,EAAG78F,UAIPwkG,EAAK5H,EACLA,EAAKC,EACLA,EAAK2H,EACL9oG,EAAI0oG,EACJA,EAAMC,EACNA,EAAM3oG,GAIHA,EAAI0oG,EAAMC,EAAKG,EAAK,GAAI9oG,IAAK8oG,EAAGr7F,KAAK,IAK1C,IAHA4U,EAAOs+E,EACPoI,EAAWjI,EAEN9gG,EAAI2oG,IAAO3oG,GAAK,GAAI,CAKvB,IAJAsD,EAAI,EACJslG,EAAMzH,EAAGnhG,GAAK+oG,EACdF,EAAM1H,EAAGnhG,GAAK+oG,EAAW,EAEXloG,EAAIb,GAAbkC,EAAIwmG,GAAgB7nG,EAAIb,GAK3BsD,IADAuiG,EAAM+C,GAHN/C,EAAM3E,IAAKh/F,GAAK6mG,IAEhBriG,EAAImiG,EAAMhD,GADVC,EAAM5E,EAAGh/F,GAAK6mG,EAAW,GACHH,GACEG,EAAYA,EAAYD,EAAGjoG,GAAKyC,GAC7C+e,EAAO,IAAM3b,EAAIqiG,EAAW,GAAKF,EAAM/C,EAClDgD,EAAGjoG,KAAOglG,EAAMxjF,EAGlBymF,EAAGjoG,GAAKyC,CACV,CAQA,OANIA,IACA3D,EAEFmpG,EAAGzyB,OAAO,EAAG,GAGR0tB,EAAUv9F,EAAGsiG,EAAInpG,EAC1B,EAOAuD,EAAE8lG,QAAU,WACV,IAAIxgG,EAAI,IAAIuiB,EAAUvqB,MAEtB,OADAgI,EAAE3E,GAAK2E,EAAE3E,GAAK,KACP2E,CACT,EAuBAtF,EAAE8nB,KAAO,SAAUxkB,EAAGQ,GACpB,IAAIpH,EACF4I,EAAIhI,KACJ2E,EAAIqD,EAAE3E,EAMR,GAHAmD,GADAR,EAAI,IAAIukB,EAAUvkB,EAAGQ,IACfnD,GAGDsB,IAAM6B,EAAG,OAAO,IAAI+jB,EAAU5W,KAGlC,GAAIhP,GAAK6B,EAER,OADAR,EAAE3C,GAAKmD,EACAwB,EAAEs+D,MAAMtgE,GAGjB,IAAI8hG,EAAK9/F,EAAE7I,EAAIihG,EACb2H,EAAK/hG,EAAE7G,EAAIihG,EACXM,EAAK14F,EAAElF,EACP69F,EAAK36F,EAAElD,EAET,IAAKglG,IAAOC,EAAI,CAGd,IAAKrH,IAAOC,EAAI,OAAO,IAAIp2E,EAAU5lB,EAAI,GAIzC,IAAK+7F,EAAG,KAAOC,EAAG,GAAI,OAAOA,EAAG,GAAK36F,EAAI,IAAIukB,EAAUm2E,EAAG,GAAK14F,EAAQ,EAAJrD,EACrE,CAOA,GALAmjG,EAAKtH,EAASsH,GACdC,EAAKvH,EAASuH,GACdrH,EAAKA,EAAGr5F,QAGJ1C,EAAImjG,EAAKC,EAAI,CAUf,IATIpjG,EAAI,GACNojG,EAAKD,EACL1oG,EAAIuhG,IAEJh8F,GAAKA,EACLvF,EAAIshG,GAGNthG,EAAEoI,UACK7C,IAAKvF,EAAE6N,KAAK,IACnB7N,EAAEoI,SACJ,CAcA,KAZA7C,EAAI+7F,EAAG58F,SACP0C,EAAIm6F,EAAG78F,QAGK,IACV1E,EAAIuhG,EACJA,EAAKD,EACLA,EAAKthG,EACLoH,EAAI7B,GAIDA,EAAI,EAAG6B,GACV7B,GAAK+7F,IAAKl6F,GAAKk6F,EAAGl6F,GAAKm6F,EAAGn6F,GAAK7B,GAAKw7F,EAAO,EAC3CO,EAAGl6F,GAAK25F,IAASO,EAAGl6F,GAAK,EAAIk6F,EAAGl6F,GAAK25F,EAUvC,OAPIx7F,IACF+7F,EAAK,CAAC/7F,GAAGyK,OAAOsxF,KACdqH,GAKGxE,EAAUv9F,EAAG06F,EAAIqH,EAC1B,EAkBArlG,EAAE+lG,UAAY/lG,EAAE8gG,GAAK,SAAUA,EAAIL,GACjC,IAAIrgG,EAAGrD,EAAGmH,EACRoB,EAAIhI,KAEN,GAAU,MAANwjG,GAAcA,MAASA,EAKzB,OAJA5C,EAAS4C,EAAI,EAAGjD,GACN,MAAN4C,EAAYA,EAAKvB,EAChBhB,EAASuC,EAAI,EAAG,GAEdD,EAAM,IAAI34E,EAAUviB,GAAIw7F,EAAIL,GAGrC,KAAMrgG,EAAIkF,EAAElF,GAAI,OAAO,KAIvB,GAFArD,GADAmH,EAAI9D,EAAEgB,OAAS,GACPs8F,EAAW,EAEfx5F,EAAI9D,EAAE8D,GAAI,CAGZ,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAInH,KAG7B,IAAKmH,EAAI9D,EAAE,GAAI8D,GAAK,GAAIA,GAAK,GAAInH,KACnC,CAIA,OAFI+jG,GAAMx7F,EAAE7I,EAAI,EAAIM,IAAGA,EAAIuI,EAAE7I,EAAI,GAE1BM,CACT,EAWAiD,EAAEgmG,UAAY,SAAUhnG,GAEtB,OADAk/F,EAASl/F,GAAG,iBAAmB+pD,GACxBzrD,KAAK6xD,MAAM,KAAOnwD,EAC3B,EAcAgB,EAAEimG,WAAajmG,EAAEkmG,KAAO,WACtB,IAAI1iG,EAAGzG,EAAGJ,EAAGwpG,EAAKzpG,EAChB4I,EAAIhI,KACJ8C,EAAIkF,EAAElF,EACNO,EAAI2E,EAAE3E,EACNlE,EAAI6I,EAAE7I,EACNulG,EAAK/C,EAAiB,EACtBoF,EAAO,IAAIx8E,EAAU,OAGvB,GAAU,IAANlnB,IAAYP,IAAMA,EAAE,GACtB,OAAO,IAAIynB,GAAWlnB,GAAKA,EAAI,KAAOP,GAAKA,EAAE,IAAM6Q,IAAM7Q,EAAIkF,EAAI,KA8BnE,GAtBS,IAJT3E,EAAI0B,KAAK6jG,MAAM3hG,EAAQe,MAIT3E,GAAK,OACjB5D,EAAIghG,EAAc39F,IACXgB,OAAS3E,GAAK,GAAK,IAAGM,GAAK,KAClC4D,EAAI0B,KAAK6jG,MAAMnpG,GACfN,EAAIqhG,GAAUrhG,EAAI,GAAK,IAAMA,EAAI,GAAKA,EAAI,GAS1CE,EAAI,IAAIkrB,EANN9qB,EADE4D,GAAK,IACH,KAAOlE,GAEXM,EAAI4D,EAAEy9F,iBACAz5F,MAAM,EAAG5H,EAAE2N,QAAQ,KAAO,GAAKjO,IAKvCE,EAAI,IAAIkrB,EAAUlnB,EAAI,IAOpBhE,EAAEyD,EAAE,GAMN,KAJAO,GADAlE,EAAIE,EAAEF,GACEulG,GACA,IAAGrhG,EAAI,KAOb,GAHAjE,EAAIC,EACJA,EAAI0nG,EAAKl1C,MAAMzyD,EAAEorB,KAAK0nC,EAAIlqD,EAAG5I,EAAGslG,EAAI,KAEhCjE,EAAcrhG,EAAE0D,GAAGuE,MAAM,EAAGhE,MAAQ5D,EAAIghG,EAAcphG,EAAEyD,IAAIuE,MAAM,EAAGhE,GAAI,CAW3E,GANIhE,EAAEF,EAAIA,KAAKkE,EAMN,SALT5D,EAAIA,EAAE4H,MAAMhE,EAAI,EAAGA,EAAI,MAKHwlG,GAAY,QAALppG,GAgBpB,EAICA,KAAOA,EAAE4H,MAAM,IAAqB,KAAf5H,EAAEmyB,OAAO,MAGlCsxE,EAAM7jG,EAAGA,EAAEF,EAAIwiG,EAAiB,EAAG,GACnCz7F,GAAK7G,EAAEwyD,MAAMxyD,GAAGknE,GAAGv+D,IAGrB,KACF,CAxBE,IAAK6gG,IACH3F,EAAM9jG,EAAGA,EAAED,EAAIwiG,EAAiB,EAAG,GAE/BviG,EAAEyyD,MAAMzyD,GAAGmnE,GAAGv+D,IAAI,CACpB3I,EAAID,EACJ,KACF,CAGFslG,GAAM,EACNrhG,GAAK,EACLwlG,EAAM,CAcV,CAIJ,OAAO3F,EAAM7jG,EAAGA,EAAEF,EAAIwiG,EAAiB,EAAGC,EAAe17F,EAC3D,EAYAxD,EAAEo+F,cAAgB,SAAU4D,EAAIvB,GAK9B,OAJU,MAANuB,IACF9D,EAAS8D,EAAI,EAAGnE,GAChBmE,KAEK/zB,EAAO3wE,KAAM0kG,EAAIvB,EAAI,EAC9B,EAeAzgG,EAAEyvD,QAAU,SAAUuyC,EAAIvB,GAKxB,OAJU,MAANuB,IACF9D,EAAS8D,EAAI,EAAGnE,GAChBmE,EAAKA,EAAK1kG,KAAKb,EAAI,GAEdwxE,EAAO3wE,KAAM0kG,EAAIvB,EAC1B,EA4BAzgG,EAAEomG,SAAW,SAAUpE,EAAIvB,EAAIxyB,GAC7B,IAAIhzD,EACF3V,EAAIhI,KAEN,GAAc,MAAV2wE,EACQ,MAAN+zB,GAAcvB,GAAmB,iBAANA,GAC7BxyB,EAASwyB,EACTA,EAAK,MACIuB,GAAmB,iBAANA,GACtB/zB,EAAS+zB,EACTA,EAAKvB,EAAK,MAEVxyB,EAASyxB,OAEN,GAAqB,iBAAVzxB,EAChB,MAAMxjE,MACH8yF,EAAiB,2BAA6BtvB,GAKnD,GAFAhzD,EAAM3V,EAAEmqD,QAAQuyC,EAAIvB,GAEhBn7F,EAAElF,EAAG,CACP,IAAItD,EACF+jB,EAAM5F,EAAIjK,MAAM,KAChBq1F,GAAMp4B,EAAO2xB,UACb0G,GAAMr4B,EAAO4xB,mBACbC,EAAiB7xB,EAAO6xB,gBAAkB,GAC1CyG,EAAU1lF,EAAI,GACd2lF,EAAe3lF,EAAI,GACnB4lF,EAAQnhG,EAAE3E,EAAI,EACd+lG,EAAYD,EAAQF,EAAQ5hG,MAAM,GAAK4hG,EACvCjmF,EAAMomF,EAAUtlG,OASlB,GAPIklG,IACFxpG,EAAIupG,EACJA,EAAKC,EACLA,EAAKxpG,EACLwjB,GAAOxjB,GAGLupG,EAAK,GAAK/lF,EAAM,EAAG,CAGrB,IAFAxjB,EAAIwjB,EAAM+lF,GAAMA,EAChBE,EAAUG,EAAU/6F,OAAO,EAAG7O,GACvBA,EAAIwjB,EAAKxjB,GAAKupG,EAAIE,GAAWzG,EAAiB4G,EAAU/6F,OAAO7O,EAAGupG,GACrEC,EAAK,IAAGC,GAAWzG,EAAiB4G,EAAU/hG,MAAM7H,IACpD2pG,IAAOF,EAAU,IAAMA,EAC7B,CAEAtrF,EAAMurF,EACHD,GAAWt4B,EAAO8xB,kBAAoB,MAAQuG,GAAMr4B,EAAO+xB,mBAC1DwG,EAAav5F,QAAQ,IAAIkX,OAAO,OAASmiF,EAAK,OAAQ,KACvD,MAAQr4B,EAAOgyB,wBAA0B,KACxCuG,GACDD,CACL,CAEA,OAAQt4B,EAAO0xB,QAAU,IAAM1kF,GAAOgzD,EAAOiyB,QAAU,GACzD,EAcAlgG,EAAE2mG,WAAa,SAAUC,GACvB,IAAIhqG,EAAGowF,EAAIC,EAAIC,EAAIzwF,EAAGoqG,EAAK9pG,EAAG+pG,EAAIC,EAAI3nG,EAAGzC,EAAGgE,EAC1C2E,EAAIhI,KACJ0gG,EAAK14F,EAAElF,EAET,GAAU,MAANwmG,MACF7pG,EAAI,IAAI8qB,EAAU++E,IAGX91F,cAAgB/T,EAAEqD,GAAa,IAARrD,EAAE4D,IAAY5D,EAAEykE,GAAGpX,IAC/C,MAAM3/C,MACH8yF,EAAiB,aACfxgG,EAAE+T,YAAc,iBAAmB,oBAAsBvM,EAAQxH,IAI1E,IAAKihG,EAAI,OAAO,IAAIn2E,EAAUviB,GAoB9B,IAlBA1I,EAAI,IAAIirB,EAAUuiC,GAClB28C,EAAK/Z,EAAK,IAAInlE,EAAUuiC,GACxB6iC,EAAK6Z,EAAK,IAAIj/E,EAAUuiC,GACxBzpD,EAAIo9F,EAAcC,GAIlBvhG,EAAIG,EAAEH,EAAIkE,EAAES,OAASkE,EAAE7I,EAAI,EAC3BG,EAAEwD,EAAE,GAAKu9F,GAAUkJ,EAAMpqG,EAAIihG,GAAY,EAAIA,EAAWmJ,EAAMA,GAC9DD,GAAMA,GAAM7pG,EAAEinG,WAAWpnG,GAAK,EAAKH,EAAI,EAAIG,EAAImqG,EAAMhqG,EAErD8pG,EAAMvH,EACNA,EAAU,IACVviG,EAAI,IAAI8qB,EAAUlnB,GAGlBmmG,EAAG1mG,EAAE,GAAK,EAGRhB,EAAIowD,EAAIzyD,EAAGH,EAAG,EAAG,GAEQ,IADzBswF,EAAKF,EAAGllE,KAAK1oB,EAAE+vD,MAAM89B,KACd+W,WAAW4C,IAClB5Z,EAAKC,EACLA,EAAKC,EACL6Z,EAAKD,EAAGh/E,KAAK1oB,EAAE+vD,MAAM+9B,EAAK6Z,IAC1BD,EAAK5Z,EACLtwF,EAAIG,EAAE6mE,MAAMxkE,EAAE+vD,MAAM+9B,EAAKtwF,IACzBG,EAAImwF,EAeN,OAZAA,EAAK19B,EAAIo3C,EAAGhjC,MAAMopB,GAAKC,EAAI,EAAG,GAC9B6Z,EAAKA,EAAGh/E,KAAKolE,EAAG/9B,MAAM43C,IACtB/Z,EAAKA,EAAGllE,KAAKolE,EAAG/9B,MAAM89B,IACtB6Z,EAAGnmG,EAAIomG,EAAGpmG,EAAI2E,EAAE3E,EAIhBhE,EAAI6yD,EAAIu3C,EAAI9Z,EAHZxwF,GAAQ,EAGWyiG,GAAet7B,MAAMt+D,GAAGyL,MAAMizF,WAC7Cx0C,EAAIs3C,EAAI9Z,EAAIvwF,EAAGyiG,GAAet7B,MAAMt+D,GAAGyL,OAAS,EAAI,CAACg2F,EAAI9Z,GAAM,CAAC6Z,EAAI9Z,GAExEsS,EAAUuH,EAEHlqG,CACT,EAMAqD,EAAE0iE,SAAW,WACX,OAAQn+D,EAAQjH,KAClB,EAcA0C,EAAEgnG,YAAc,SAAUlG,EAAIL,GAE5B,OADU,MAANK,GAAY5C,EAAS4C,EAAI,EAAGjD,GACzB5vB,EAAO3wE,KAAMwjG,EAAIL,EAAI,EAC9B,EAcAzgG,EAAE6D,SAAW,SAAUC,GACrB,IAAImX,EACFle,EAAIO,KACJqD,EAAI5D,EAAE4D,EACNlE,EAAIM,EAAEN,EA0BR,OAvBU,OAANA,EACEkE,GACFsa,EAAM,WACFta,EAAI,IAAGsa,EAAM,IAAMA,IAEvBA,EAAM,OAGC,MAALnX,EACFmX,EAAMxe,GAAK0iG,GAAc1iG,GAAK2iG,EAC3BhB,EAAcL,EAAchhG,EAAEqD,GAAI3D,GAClC4hG,EAAaN,EAAchhG,EAAEqD,GAAI3D,EAAG,KACxB,KAANqH,GAAYs8F,EAErBnlF,EAAMojF,EAAaN,GADnBhhG,EAAIyjG,EAAM,IAAI34E,EAAU9qB,GAAIkiG,EAAiBxiG,EAAI,EAAGyiG,IACjB9+F,GAAIrD,EAAEN,EAAG,MAE5CyhG,EAASp6F,EAAG,EAAGq8F,EAAS/+F,OAAQ,QAChC6Z,EAAMujF,EAAYH,EAAaN,EAAchhG,EAAEqD,GAAI3D,EAAG,KAAM,GAAIqH,EAAGnD,GAAG,IAGpEA,EAAI,GAAK5D,EAAEqD,EAAE,KAAI6a,EAAM,IAAMA,IAG5BA,CACT,EAOAjb,EAAEuE,QAAUvE,EAAE4E,OAAS,WACrB,OAAOL,EAAQjH,KACjB,EAGA0C,EAAEugG,cAAe,EAEjBvgG,EAAE2K,OAAO8G,aAAe,YAGxBzR,EAAE2K,OAAOC,IAAI,+BAAiC5K,EAAEuE,QAE5B,MAAhBg6F,GAAsB12E,EAAU/gB,IAAIy3F,GAEjC12E,CACT,CAqIuBsI,GAEvB,YCz1FI82E,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB70F,IAAjB80F,EACH,OAAOA,EAAa3pG,QAGrB,IAAIiU,EAASu1F,EAAyBE,GAAY,CACjDtiE,GAAIsiE,EACJE,QAAQ,EACR5pG,QAAS,CAAC,GAUX,OANA6pG,EAAoBH,GAAU9pG,KAAKqU,EAAOjU,QAASiU,EAAQA,EAAOjU,QAASypG,GAG3Ex1F,EAAO21F,QAAS,EAGT31F,EAAOjU,OACf,CCxBAypG,EAAoBnqG,EAAK2U,IACxB,IAAIsrF,EAAStrF,GAAUA,EAAO61F,WAC7B,IAAO71F,EAAiB,QACxB,IAAM,EAEP,OADAw1F,EAAoBtqG,EAAEogG,EAAQ,CAAE/6F,EAAG+6F,IAC5BA,CAAM,ECLdkK,EAAoBtqG,EAAI,CAACa,EAAS+pG,KACjC,IAAI,IAAIt1F,KAAOs1F,EACXN,EAAoBxmG,EAAE8mG,EAAYt1F,KAASg1F,EAAoBxmG,EAAEjD,EAASyU,IAC5E3U,OAAO4O,eAAe1O,EAASyU,EAAK,CAAE9F,YAAY,EAAM/E,IAAKmgG,EAAWt1F,IAE1E,ECNDg1F,EAAoBvjG,EAAI,WACvB,GAA0B,iBAAf0N,WAAyB,OAAOA,WAC3C,IACC,OAAO/T,MAAQ,IAAIgU,SAAS,cAAb,EAChB,CAAE,MAAO7U,GACR,GAAsB,iBAAX8U,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB21F,EAAoBO,IAAO/1F,KAC1BA,EAASnU,OAAO+I,OAAOoL,IACXg2F,WAAUh2F,EAAOg2F,SAAW,IACxCnqG,OAAO4O,eAAeuF,EAAQ,UAAW,CACxCtF,YAAY,EACZtF,IAAK,KACJ,MAAM,IAAI2D,MAAM,0FAA4FiH,EAAOmzB,GAAG,IAGjHnzB,GCTRw1F,EAAoBxmG,EAAI,CAACyT,EAAKinF,IAAU79F,OAAOJ,UAAUqU,eAAenU,KAAK8W,EAAKinF,GCClF8L,EAAoBvqG,EAAKc,IACH,oBAAXkN,QAA0BA,OAAO8G,aAC1ClU,OAAO4O,eAAe1O,EAASkN,OAAO8G,YAAa,CAAE3L,MAAO,WAE7DvI,OAAO4O,eAAe1O,EAAS,aAAc,CAAEqI,OAAO,GAAO,ECF9D,IAAI6hG,EAAsBT,EAAoB","sources":["webpack://StellarBase/./node_modules/@stellar/js-xdr/dist/xdr.js","webpack://StellarBase/./node_modules/assert/build/assert.js","webpack://StellarBase/./node_modules/assert/build/internal/assert/assertion_error.js","webpack://StellarBase/./node_modules/assert/build/internal/errors.js","webpack://StellarBase/./node_modules/assert/build/internal/util/comparisons.js","webpack://StellarBase/./config/buffer.js","webpack://StellarBase/./src/account.js","webpack://StellarBase/./src/address.js","webpack://StellarBase/./src/asset.js","webpack://StellarBase/./src/auth.js","webpack://StellarBase/./src/claimant.js","webpack://StellarBase/./src/contract.js","webpack://StellarBase/./src/events.js","webpack://StellarBase/./src/fee_bump_transaction.js","webpack://StellarBase/./src/generated/curr_generated.js","webpack://StellarBase/./src/get_liquidity_pool_id.js","webpack://StellarBase/./src/hashing.js","webpack://StellarBase/./src/index.js","webpack://StellarBase/./src/invocation.js","webpack://StellarBase/./src/jsxdr.js","webpack://StellarBase/./src/keypair.js","webpack://StellarBase/./src/liquidity_pool_asset.js","webpack://StellarBase/./src/liquidity_pool_id.js","webpack://StellarBase/./src/memo.js","webpack://StellarBase/./src/muxed_account.js","webpack://StellarBase/./src/network.js","webpack://StellarBase/./src/numbers/index.js","webpack://StellarBase/./src/numbers/int128.js","webpack://StellarBase/./src/numbers/int256.js","webpack://StellarBase/./src/numbers/sc_int.js","webpack://StellarBase/./src/numbers/uint128.js","webpack://StellarBase/./src/numbers/uint256.js","webpack://StellarBase/./src/numbers/xdr_large_int.js","webpack://StellarBase/./src/operation.js","webpack://StellarBase/./src/operations/account_merge.js","webpack://StellarBase/./src/operations/allow_trust.js","webpack://StellarBase/./src/operations/begin_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/bump_sequence.js","webpack://StellarBase/./src/operations/change_trust.js","webpack://StellarBase/./src/operations/claim_claimable_balance.js","webpack://StellarBase/./src/operations/clawback.js","webpack://StellarBase/./src/operations/clawback_claimable_balance.js","webpack://StellarBase/./src/operations/create_account.js","webpack://StellarBase/./src/operations/create_claimable_balance.js","webpack://StellarBase/./src/operations/create_passive_sell_offer.js","webpack://StellarBase/./src/operations/end_sponsoring_future_reserves.js","webpack://StellarBase/./src/operations/extend_footprint_ttl.js","webpack://StellarBase/./src/operations/index.js","webpack://StellarBase/./src/operations/inflation.js","webpack://StellarBase/./src/operations/invoke_host_function.js","webpack://StellarBase/./src/operations/liquidity_pool_deposit.js","webpack://StellarBase/./src/operations/liquidity_pool_withdraw.js","webpack://StellarBase/./src/operations/manage_buy_offer.js","webpack://StellarBase/./src/operations/manage_data.js","webpack://StellarBase/./src/operations/manage_sell_offer.js","webpack://StellarBase/./src/operations/path_payment_strict_receive.js","webpack://StellarBase/./src/operations/path_payment_strict_send.js","webpack://StellarBase/./src/operations/payment.js","webpack://StellarBase/./src/operations/restore_footprint.js","webpack://StellarBase/./src/operations/revoke_sponsorship.js","webpack://StellarBase/./src/operations/set_options.js","webpack://StellarBase/./src/operations/set_trustline_flags.js","webpack://StellarBase/./src/scval.js","webpack://StellarBase/./src/signerkey.js","webpack://StellarBase/./src/signing.js","webpack://StellarBase/./src/soroban.js","webpack://StellarBase/./src/sorobandata_builder.js","webpack://StellarBase/./src/strkey.js","webpack://StellarBase/./src/transaction.js","webpack://StellarBase/./src/transaction_base.js","webpack://StellarBase/./src/transaction_builder.js","webpack://StellarBase/./src/util/bignumber.js","webpack://StellarBase/./src/util/checksum.js","webpack://StellarBase/./src/util/continued_fraction.js","webpack://StellarBase/./src/util/decode_encode_muxed_account.js","webpack://StellarBase/./src/util/util.js","webpack://StellarBase/./src/xdr.js","webpack://StellarBase/./node_modules/base32.js/base32.js","webpack://StellarBase/./node_modules/base64-js/index.js","webpack://StellarBase/./node_modules/buffer/index.js","webpack://StellarBase/./node_modules/call-bind/callBound.js","webpack://StellarBase/./node_modules/call-bind/index.js","webpack://StellarBase/./node_modules/console-browserify/index.js","webpack://StellarBase/./node_modules/define-data-property/index.js","webpack://StellarBase/./node_modules/define-properties/index.js","webpack://StellarBase/./node_modules/es-define-property/index.js","webpack://StellarBase/./node_modules/es-errors/eval.js","webpack://StellarBase/./node_modules/es-errors/index.js","webpack://StellarBase/./node_modules/es-errors/range.js","webpack://StellarBase/./node_modules/es-errors/ref.js","webpack://StellarBase/./node_modules/es-errors/syntax.js","webpack://StellarBase/./node_modules/es-errors/type.js","webpack://StellarBase/./node_modules/es-errors/uri.js","webpack://StellarBase/./node_modules/for-each/index.js","webpack://StellarBase/./node_modules/function-bind/implementation.js","webpack://StellarBase/./node_modules/function-bind/index.js","webpack://StellarBase/./node_modules/get-intrinsic/index.js","webpack://StellarBase/./node_modules/gopd/index.js","webpack://StellarBase/./node_modules/has-property-descriptors/index.js","webpack://StellarBase/./node_modules/has-proto/index.js","webpack://StellarBase/./node_modules/has-symbols/index.js","webpack://StellarBase/./node_modules/has-symbols/shams.js","webpack://StellarBase/./node_modules/has-tostringtag/shams.js","webpack://StellarBase/./node_modules/hasown/index.js","webpack://StellarBase/./node_modules/ieee754/index.js","webpack://StellarBase/./node_modules/inherits/inherits_browser.js","webpack://StellarBase/./node_modules/is-arguments/index.js","webpack://StellarBase/./node_modules/is-callable/index.js","webpack://StellarBase/./node_modules/is-generator-function/index.js","webpack://StellarBase/./node_modules/is-nan/implementation.js","webpack://StellarBase/./node_modules/is-nan/index.js","webpack://StellarBase/./node_modules/is-nan/polyfill.js","webpack://StellarBase/./node_modules/is-nan/shim.js","webpack://StellarBase/./node_modules/is-typed-array/index.js","webpack://StellarBase/./node_modules/object-is/implementation.js","webpack://StellarBase/./node_modules/object-is/index.js","webpack://StellarBase/./node_modules/object-is/polyfill.js","webpack://StellarBase/./node_modules/object-is/shim.js","webpack://StellarBase/./node_modules/object-keys/implementation.js","webpack://StellarBase/./node_modules/object-keys/index.js","webpack://StellarBase/./node_modules/object-keys/isArguments.js","webpack://StellarBase/./node_modules/object.assign/implementation.js","webpack://StellarBase/./node_modules/object.assign/polyfill.js","webpack://StellarBase/./node_modules/possible-typed-array-names/index.js","webpack://StellarBase/./node_modules/process/browser.js","webpack://StellarBase/./node_modules/safe-buffer/index.js","webpack://StellarBase/./node_modules/set-function-length/index.js","webpack://StellarBase/./node_modules/sha.js/hash.js","webpack://StellarBase/./node_modules/sha.js/index.js","webpack://StellarBase/./node_modules/sha.js/sha.js","webpack://StellarBase/./node_modules/sha.js/sha1.js","webpack://StellarBase/./node_modules/sha.js/sha224.js","webpack://StellarBase/./node_modules/sha.js/sha256.js","webpack://StellarBase/./node_modules/sha.js/sha384.js","webpack://StellarBase/./node_modules/sha.js/sha512.js","webpack://StellarBase/./node_modules/tweetnacl/nacl-fast.js","webpack://StellarBase/./node_modules/util/support/isBufferBrowser.js","webpack://StellarBase/./node_modules/util/support/types.js","webpack://StellarBase/./node_modules/util/util.js","webpack://StellarBase/./node_modules/which-typed-array/index.js","webpack://StellarBase/./node_modules/available-typed-arrays/index.js","webpack://StellarBase/./node_modules/bignumber.js/bignumber.mjs","webpack://StellarBase/webpack/bootstrap","webpack://StellarBase/webpack/runtime/compat get default export","webpack://StellarBase/webpack/runtime/define property getters","webpack://StellarBase/webpack/runtime/global","webpack://StellarBase/webpack/runtime/harmony module decorator","webpack://StellarBase/webpack/runtime/hasOwnProperty shorthand","webpack://StellarBase/webpack/runtime/make namespace object","webpack://StellarBase/webpack/startup"],"sourcesContent":["/*! For license information please see xdr.js.LICENSE.txt */\n!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.XDR=e():t.XDR=e()}(this,(()=>(()=>{var t={616:(t,e,r)=>{\"use strict\";r.d(e,{A:()=>i});var n=r(287);n.hp.alloc(1).subarray(0,1)instanceof n.hp||(n.hp.prototype.subarray=function(t,e){const r=Uint8Array.prototype.subarray.call(this,t,e);return Object.setPrototypeOf(r,n.hp.prototype),r});const i=n.hp},281:(t,e,r)=>{const n=r(164);t.exports=n},164:(t,e,r)=>{\"use strict\";r.r(e),r.d(e,{Array:()=>j,Bool:()=>O,Double:()=>$,Enum:()=>X,Float:()=>T,Hyper:()=>I,Int:()=>B,LargeInt:()=>A,Opaque:()=>M,Option:()=>F,Quadruple:()=>L,Reference:()=>k,String:()=>N,Struct:()=>q,Union:()=>Y,UnsignedHyper:()=>R,UnsignedInt:()=>U,VarArray:()=>z,VarOpaque:()=>D,Void:()=>P,XdrReader:()=>u,XdrWriter:()=>c,config:()=>rt});class n extends TypeError{constructor(t){super(`XDR Write Error: ${t}`)}}class i extends TypeError{constructor(t){super(`XDR Read Error: ${t}`)}}class o extends TypeError{constructor(t){super(`XDR Type Definition Error: ${t}`)}}class s extends o{constructor(){super(\"method not implemented, it should be overloaded in the descendant class.\")}}var f=r(616).A;class u{constructor(t){if(!f.isBuffer(t)){if(!(t instanceof Array||Array.isArray(t)||ArrayBuffer.isView(t)))throw new i(`source invalid: ${t}`);t=f.from(t)}this._buffer=t,this._length=t.length,this._index=0}_buffer;_length;_index;get eof(){return this._index===this._length}advance(t){const e=this._index;if(this._index+=t,this._length<this._index)throw new i(\"attempt to read outside the boundary of the buffer\");const r=4-(t%4||4);if(r>0){for(let t=0;t<r;t++)if(0!==this._buffer[this._index+t])throw new i(\"invalid padding\");this._index+=r}return e}rewind(){this._index=0}read(t){const e=this.advance(t);return this._buffer.subarray(e,e+t)}readInt32BE(){return this._buffer.readInt32BE(this.advance(4))}readUInt32BE(){return this._buffer.readUInt32BE(this.advance(4))}readBigInt64BE(){return this._buffer.readBigInt64BE(this.advance(8))}readBigUInt64BE(){return this._buffer.readBigUInt64BE(this.advance(8))}readFloatBE(){return this._buffer.readFloatBE(this.advance(4))}readDoubleBE(){return this._buffer.readDoubleBE(this.advance(8))}ensureInputConsumed(){if(this._index!==this._length)throw new i(\"invalid XDR contract typecast - source buffer not entirely consumed\")}}var a=r(616).A;const h=8192;class c{constructor(t){\"number\"==typeof t?t=a.allocUnsafe(t):t instanceof a||(t=a.allocUnsafe(h)),this._buffer=t,this._length=t.length}_buffer;_length;_index=0;alloc(t){const e=this._index;return this._index+=t,this._length<this._index&&this.resize(this._index),e}resize(t){const e=Math.ceil(t/h)*h,r=a.allocUnsafe(e);this._buffer.copy(r,0,0,this._length),this._buffer=r,this._length=e}finalize(){return this._buffer.subarray(0,this._index)}toArray(){return[...this.finalize()]}write(t,e){if(\"string\"==typeof t){const r=this.alloc(e);this._buffer.write(t,r,\"utf8\")}else{t instanceof a||(t=a.from(t));const r=this.alloc(e);t.copy(this._buffer,r,0,e)}const r=4-(e%4||4);if(r>0){const t=this.alloc(r);this._buffer.fill(0,t,this._index)}}writeInt32BE(t){const e=this.alloc(4);this._buffer.writeInt32BE(t,e)}writeUInt32BE(t){const e=this.alloc(4);this._buffer.writeUInt32BE(t,e)}writeBigInt64BE(t){const e=this.alloc(8);this._buffer.writeBigInt64BE(t,e)}writeBigUInt64BE(t){const e=this.alloc(8);this._buffer.writeBigUInt64BE(t,e)}writeFloatBE(t){const e=this.alloc(4);this._buffer.writeFloatBE(t,e)}writeDoubleBE(t){const e=this.alloc(8);this._buffer.writeDoubleBE(t,e)}static bufferChunkSize=h}var l=r(616).A;class p{toXDR(t=\"raw\"){if(!this.write)return this.constructor.toXDR(this,t);const e=new c;return this.write(this,e),y(e.finalize(),t)}fromXDR(t,e=\"raw\"){if(!this.read)return this.constructor.fromXDR(t,e);const r=new u(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}static toXDR(t,e=\"raw\"){const r=new c;return this.write(t,r),y(r.finalize(),e)}static fromXDR(t,e=\"raw\"){const r=new u(m(t,e)),n=this.read(r);return r.ensureInputConsumed(),n}static validateXDR(t,e=\"raw\"){try{return this.fromXDR(t,e),!0}catch(t){return!1}}}class d extends p{static read(t){throw new s}static write(t,e){throw new s}static isValid(t){return!1}}class g extends p{isValid(t){return!1}}class w extends TypeError{constructor(t){super(`Invalid format ${t}, must be one of \"raw\", \"hex\", \"base64\"`)}}function y(t,e){switch(e){case\"raw\":return t;case\"hex\":return t.toString(\"hex\");case\"base64\":return t.toString(\"base64\");default:throw new w(e)}}function m(t,e){switch(e){case\"raw\":return t;case\"hex\":return l.from(t,\"hex\");case\"base64\":return l.from(t,\"base64\");default:throw new w(e)}}const b=2147483647,_=-2147483648;class B extends d{static read(t){return t.readInt32BE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");if((0|t)!==t)throw new n(\"invalid i32 value\");e.writeInt32BE(t)}static isValid(t){return\"number\"==typeof t&&(0|t)===t&&(t>=_&&t<=b)}}function E(t,e,r){if(\"bigint\"!=typeof t)throw new TypeError(\"Expected bigint 'value', got \"+typeof t);const n=e/r;if(1===n)return[t];if(r<32||r>128||2!==n&&4!==n&&8!==n)throw new TypeError(`invalid bigint (${t}) and slice size (${e} -> ${r}) combination`);const i=BigInt(r),o=new Array(n);for(let e=0;e<n;e++)o[e]=BigInt.asIntN(r,t),t>>=i;return o}function v(t,e){if(e)return[0n,(1n<<BigInt(t))-1n];const r=1n<<BigInt(t-1);return[0n-r,r-1n]}B.MAX_VALUE=b,B.MIN_VALUE=2147483648;class A extends d{constructor(t){super(),this._value=function(t,e,r){t instanceof Array?t.length&&t[0]instanceof Array&&(t=t[0]):t=[t];const n=e/t.length;switch(n){case 32:case 64:case 128:case 256:break;default:throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${t}`)}try{for(let e=0;e<t.length;e++)\"bigint\"!=typeof t[e]&&(t[e]=BigInt(t[e].valueOf()))}catch(e){throw new TypeError(`expected bigint-like values, got: ${t} (${e})`)}if(r&&1===t.length&&t[0]<0n)throw new RangeError(`expected a positive value, got: ${t}`);let i=BigInt.asUintN(n,t[0]);for(let e=1;e<t.length;e++)i|=BigInt.asUintN(n,t[e])<<BigInt(e*n);r||(i=BigInt.asIntN(e,i));const[o,s]=v(e,r);if(i>=o&&i<=s)return i;throw new TypeError(`bigint values [${t}] for ${function(t,e){return`${e?\"u\":\"i\"}${t}`}(e,r)} out of range [${o}, ${s}]: ${i}`)}(t,this.size,this.unsigned)}get unsigned(){throw new s}get size(){throw new s}slice(t){return E(this._value,this.size,t)}toString(){return this._value.toString()}toJSON(){return{_value:this._value.toString()}}toBigInt(){return BigInt(this._value)}static read(t){const{size:e}=this.prototype;return 64===e?new this(t.readBigUInt64BE()):new this(...Array.from({length:e/64},(()=>t.readBigUInt64BE())).reverse())}static write(t,e){if(t instanceof this)t=t._value;else if(\"bigint\"!=typeof t||t>this.MAX_VALUE||t<this.MIN_VALUE)throw new n(`${t} is not a ${this.name}`);const{unsigned:r,size:i}=this.prototype;if(64===i)r?e.writeBigUInt64BE(t):e.writeBigInt64BE(t);else for(const n of E(t,i,64).reverse())r?e.writeBigUInt64BE(n):e.writeBigInt64BE(n)}static isValid(t){return\"bigint\"==typeof t||t instanceof this}static fromString(t){return new this(t)}static MAX_VALUE=0n;static MIN_VALUE=0n;static defineIntBoundaries(){const[t,e]=v(this.prototype.size,this.prototype.unsigned);this.MIN_VALUE=t,this.MAX_VALUE=e}}class I extends A{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get size(){return 64}get unsigned(){return!1}static fromBits(t,e){return new this(t,e)}}I.defineIntBoundaries();const x=4294967295;class U extends d{static read(t){return t.readUInt32BE()}static write(t,e){if(\"number\"!=typeof t||!(t>=0&&t<=x)||t%1!=0)throw new n(\"invalid u32 value\");e.writeUInt32BE(t)}static isValid(t){return\"number\"==typeof t&&t%1==0&&(t>=0&&t<=x)}}U.MAX_VALUE=x,U.MIN_VALUE=0;class R extends A{constructor(...t){super(t)}get low(){return Number(0xffffffffn&this._value)<<0}get high(){return Number(this._value>>32n)>>0}get size(){return 64}get unsigned(){return!0}static fromBits(t,e){return new this(t,e)}}R.defineIntBoundaries();class T extends d{static read(t){return t.readFloatBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeFloatBE(t)}static isValid(t){return\"number\"==typeof t}}class $ extends d{static read(t){return t.readDoubleBE()}static write(t,e){if(\"number\"!=typeof t)throw new n(\"not a number\");e.writeDoubleBE(t)}static isValid(t){return\"number\"==typeof t}}class L extends d{static read(){throw new o(\"quadruple not supported\")}static write(){throw new o(\"quadruple not supported\")}static isValid(){return!1}}class O extends d{static read(t){const e=B.read(t);switch(e){case 0:return!1;case 1:return!0;default:throw new i(`got ${e} when trying to read a bool`)}}static write(t,e){const r=t?1:0;B.write(r,e)}static isValid(t){return\"boolean\"==typeof t}}var S=r(616).A;class N extends g{constructor(t=U.MAX_VALUE){super(),this._maxLength=t}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length String, max allowed is ${this._maxLength}`);return t.read(e)}readString(t){return this.read(t).toString(\"utf8\")}write(t,e){const r=\"string\"==typeof t?S.byteLength(t,\"utf8\"):t.length;if(r>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);U.write(r,e),e.write(t,r)}isValid(t){return\"string\"==typeof t?S.byteLength(t,\"utf8\")<=this._maxLength:!!(t instanceof Array||S.isBuffer(t))&&t.length<=this._maxLength}}var V=r(616).A;class M extends g{constructor(t){super(),this._length=t}read(t){return t.read(this._length)}write(t,e){const{length:r}=t;if(r!==this._length)throw new n(`got ${t.length} bytes, expected ${this._length}`);e.write(t,r)}isValid(t){return V.isBuffer(t)&&t.length===this._length}}var C=r(616).A;class D extends g{constructor(t=U.MAX_VALUE){super(),this._maxLength=t}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarOpaque, max allowed is ${this._maxLength}`);return t.read(e)}write(t,e){const{length:r}=t;if(t.length>this._maxLength)throw new n(`got ${t.length} bytes, max allowed is ${this._maxLength}`);U.write(r,e),e.write(t,r)}isValid(t){return C.isBuffer(t)&&t.length<=this._maxLength}}class j extends g{constructor(t,e){super(),this._childType=t,this._length=e}read(t){const e=new r.g.Array(this._length);for(let r=0;r<this._length;r++)e[r]=this._childType.read(t);return e}write(t,e){if(!(t instanceof r.g.Array))throw new n(\"value is not array\");if(t.length!==this._length)throw new n(`got array of size ${t.length}, expected ${this._length}`);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof r.g.Array)||t.length!==this._length)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class z extends g{constructor(t,e=U.MAX_VALUE){super(),this._childType=t,this._maxLength=e}read(t){const e=U.read(t);if(e>this._maxLength)throw new i(`saw ${e} length VarArray, max allowed is ${this._maxLength}`);const r=new Array(e);for(let n=0;n<e;n++)r[n]=this._childType.read(t);return r}write(t,e){if(!(t instanceof Array))throw new n(\"value is not array\");if(t.length>this._maxLength)throw new n(`got array of size ${t.length}, max allowed is ${this._maxLength}`);U.write(t.length,e);for(const r of t)this._childType.write(r,e)}isValid(t){if(!(t instanceof Array)||t.length>this._maxLength)return!1;for(const e of t)if(!this._childType.isValid(e))return!1;return!0}}class F extends d{constructor(t){super(),this._childType=t}read(t){if(O.read(t))return this._childType.read(t)}write(t,e){const r=null!=t;O.write(r,e),r&&this._childType.write(t,e)}isValid(t){return null==t||this._childType.isValid(t)}}class P extends d{static read(){}static write(t){if(void 0!==t)throw new n(\"trying to write value to a void slot\")}static isValid(t){return void 0===t}}class X extends d{constructor(t,e){super(),this.name=t,this.value=e}static read(t){const e=B.read(t),r=this._byValue[e];if(void 0===r)throw new i(`unknown ${this.enumName} member for value ${e}`);return r}static write(t,e){if(!(t instanceof this))throw new n(`unknown ${t} is not a ${this.enumName}`);B.write(t.value,e)}static isValid(t){return t instanceof this}static members(){return this._members}static values(){return Object.values(this._members)}static fromName(t){const e=this._members[t];if(!e)throw new TypeError(`${t} is not a member of ${this.enumName}`);return e}static fromValue(t){const e=this._byValue[t];if(void 0===e)throw new TypeError(`${t} is not a value of any member of ${this.enumName}`);return e}static create(t,e,r){const n=class extends X{};n.enumName=e,t.results[e]=n,n._members={},n._byValue={};for(const[t,e]of Object.entries(r)){const r=new n(t,e);n._members[t]=r,n._byValue[e]=r,n[t]=()=>r}return n}}class k extends d{resolve(){throw new o('\"resolve\" method should be implemented in the descendant class')}}class q extends d{constructor(t){super(),this._attributes=t||{}}static read(t){const e={};for(const[r,n]of this._fields)e[r]=n.read(t);return new this(e)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.structName}`);for(const[r,n]of this._fields){const i=t._attributes[r];n.write(i,e)}}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends q{};n.structName=e,t.results[e]=n;const i=new Array(r.length);for(let e=0;e<r.length;e++){const o=r[e],s=o[0];let f=o[1];f instanceof k&&(f=f.resolve(t)),i[e]=[s,f],n.prototype[s]=G(s)}return n._fields=i,n}}function G(t){return function(e){return void 0!==e&&(this._attributes[t]=e),this._attributes[t]}}class Y extends g{constructor(t,e){super(),this.set(t,e)}set(t,e){\"string\"==typeof t&&(t=this.constructor._switchOn.fromName(t)),this._switch=t;const r=this.constructor.armForSwitch(this._switch);this._arm=r,this._armType=r===P?P:this.constructor._arms[r],this._value=e}get(t=this._arm){if(this._arm!==P&&this._arm!==t)throw new TypeError(`${t} not set`);return this._value}switch(){return this._switch}arm(){return this._arm}armType(){return this._armType}value(){return this._value}static armForSwitch(t){const e=this._switches.get(t);if(void 0!==e)return e;if(this._defaultArm)return this._defaultArm;throw new TypeError(`Bad union switch: ${t}`)}static armTypeForArm(t){return t===P?P:this._arms[t]}static read(t){const e=this._switchOn.read(t),r=this.armForSwitch(e),n=r===P?P:this._arms[r];let i;return i=void 0!==n?n.read(t):r.read(t),new this(e,i)}static write(t,e){if(!(t instanceof this))throw new n(`${t} is not a ${this.unionName}`);this._switchOn.write(t.switch(),e),t.armType().write(t.value(),e)}static isValid(t){return t instanceof this}static create(t,e,r){const n=class extends Y{};n.unionName=e,t.results[e]=n,r.switchOn instanceof k?n._switchOn=r.switchOn.resolve(t):n._switchOn=r.switchOn,n._switches=new Map,n._arms={};let i=r.defaultArm;i instanceof k&&(i=i.resolve(t)),n._defaultArm=i;for(const[t,e]of r.switches){const r=\"string\"==typeof t?n._switchOn.fromName(t):t;n._switches.set(r,e)}if(void 0!==n._switchOn.values)for(const t of n._switchOn.values())n[t.name]=function(e){return new n(t,e)},n.prototype[t.name]=function(e){return this.set(t,e)};if(r.arms)for(const[e,i]of Object.entries(r.arms))n._arms[e]=i instanceof k?i.resolve(t):i,i!==P&&(n.prototype[e]=function(){return this.get(e)});return n}}class W extends k{constructor(t){super(),this.name=t}resolve(t){return t.definitions[this.name].resolve(t)}}class H extends k{constructor(t,e,r=!1){super(),this.childReference=t,this.length=e,this.variable=r}resolve(t){let e=this.childReference,r=this.length;return e instanceof k&&(e=e.resolve(t)),r instanceof k&&(r=r.resolve(t)),this.variable?new z(e,r):new j(e,r)}}class J extends k{constructor(t){super(),this.childReference=t,this.name=t.name}resolve(t){let e=this.childReference;return e instanceof k&&(e=e.resolve(t)),new F(e)}}class Q extends k{constructor(t,e){super(),this.sizedType=t,this.length=e}resolve(t){let e=this.length;return e instanceof k&&(e=e.resolve(t)),new this.sizedType(e)}}class Z{constructor(t,e,r){this.constructor=t,this.name=e,this.config=r}resolve(t){return this.name in t.results?t.results[this.name]:this.constructor(t,this.name,this.config)}}function K(t,e,r){return r instanceof k&&(r=r.resolve(t)),t.results[e]=r,r}function tt(t,e,r){return t.results[e]=r,r}class et{constructor(t){this._destination=t,this._definitions={}}enum(t,e){const r=new Z(X.create,t,e);this.define(t,r)}struct(t,e){const r=new Z(q.create,t,e);this.define(t,r)}union(t,e){const r=new Z(Y.create,t,e);this.define(t,r)}typedef(t,e){const r=new Z(K,t,e);this.define(t,r)}const(t,e){const r=new Z(tt,t,e);this.define(t,r)}void(){return P}bool(){return O}int(){return B}hyper(){return I}uint(){return U}uhyper(){return R}float(){return T}double(){return $}quadruple(){return L}string(t){return new Q(N,t)}opaque(t){return new Q(M,t)}varOpaque(t){return new Q(D,t)}array(t,e){return new H(t,e)}varArray(t,e){return new H(t,e,!0)}option(t){return new J(t)}define(t,e){if(void 0!==this._destination[t])throw new o(`${t} is already defined`);this._definitions[t]=e}lookup(t){return new W(t)}resolve(){for(const t of Object.values(this._definitions))t.resolve({definitions:this._definitions,results:this._destination})}}function rt(t,e={}){if(t){const r=new et(e);t(r),r.resolve()}return e}},526:(t,e)=>{\"use strict\";e.byteLength=function(t){var e=f(t),r=e[0],n=e[1];return 3*(r+n)/4-n},e.toByteArray=function(t){var e,r,o=f(t),s=o[0],u=o[1],a=new i(function(t,e,r){return 3*(e+r)/4-r}(0,s,u)),h=0,c=u>0?s-4:s;for(r=0;r<c;r+=4)e=n[t.charCodeAt(r)]<<18|n[t.charCodeAt(r+1)]<<12|n[t.charCodeAt(r+2)]<<6|n[t.charCodeAt(r+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;2===u&&(e=n[t.charCodeAt(r)]<<2|n[t.charCodeAt(r+1)]>>4,a[h++]=255&e);1===u&&(e=n[t.charCodeAt(r)]<<10|n[t.charCodeAt(r+1)]<<4|n[t.charCodeAt(r+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e);return a},e.fromByteArray=function(t){for(var e,n=t.length,i=n%3,o=[],s=16383,f=0,a=n-i;f<a;f+=s)o.push(u(t,f,f+s>a?a:f+s));1===i?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+\"==\")):2===i&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+\"=\"));return o.join(\"\")};for(var r=[],n=[],i=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0;s<64;++s)r[s]=o[s],n[o.charCodeAt(s)]=s;function f(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=t.indexOf(\"=\");return-1===r&&(r=e),[r,r===e?0:4-r%4]}function u(t,e,n){for(var i,o,s=[],f=e;f<n;f+=3)i=(t[f]<<16&16711680)+(t[f+1]<<8&65280)+(255&t[f+2]),s.push(r[(o=i)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join(\"\")}n[\"-\".charCodeAt(0)]=62,n[\"_\".charCodeAt(0)]=63},287:(t,e,r)=>{\"use strict\";const n=r(526),i=r(251),o=\"function\"==typeof Symbol&&\"function\"==typeof Symbol.for?Symbol.for(\"nodejs.util.inspect.custom\"):null;e.hp=u,e.IS=50;const s=2147483647;function f(t){if(t>s)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,r){if(\"number\"==typeof t){if(\"string\"==typeof e)throw new TypeError('The \"string\" argument must be of type string. Received type number');return c(t)}return a(t,e,r)}function a(t,e,r){if(\"string\"==typeof t)return function(t,e){\"string\"==typeof e&&\"\"!==e||(e=\"utf8\");if(!u.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);const r=0|g(t,e);let n=f(r);const i=n.write(t,e);i!==r&&(n=n.slice(0,i));return n}(t,e);if(ArrayBuffer.isView(t))return function(t){if(H(t,Uint8Array)){const e=new Uint8Array(t);return p(e.buffer,e.byteOffset,e.byteLength)}return l(t)}(t);if(null==t)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t);if(H(t,ArrayBuffer)||t&&H(t.buffer,ArrayBuffer))return p(t,e,r);if(\"undefined\"!=typeof SharedArrayBuffer&&(H(t,SharedArrayBuffer)||t&&H(t.buffer,SharedArrayBuffer)))return p(t,e,r);if(\"number\"==typeof t)throw new TypeError('The \"value\" argument must not be of type number. Received type number');const n=t.valueOf&&t.valueOf();if(null!=n&&n!==t)return u.from(n,e,r);const i=function(t){if(u.isBuffer(t)){const e=0|d(t.length),r=f(e);return 0===r.length||t.copy(r,0,0,e),r}if(void 0!==t.length)return\"number\"!=typeof t.length||J(t.length)?f(0):l(t);if(\"Buffer\"===t.type&&Array.isArray(t.data))return l(t.data)}(t);if(i)return i;if(\"undefined\"!=typeof Symbol&&null!=Symbol.toPrimitive&&\"function\"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive](\"string\"),e,r);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof t)}function h(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be of type number');if(t<0)throw new RangeError('The value \"'+t+'\" is invalid for option \"size\"')}function c(t){return h(t),f(t<0?0:0|d(t))}function l(t){const e=t.length<0?0:0|d(t.length),r=f(e);for(let n=0;n<e;n+=1)r[n]=255&t[n];return r}function p(t,e,r){if(e<0||t.byteLength<e)throw new RangeError('\"offset\" is outside of buffer bounds');if(t.byteLength<e+(r||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return n=void 0===e&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,e):new Uint8Array(t,e,r),Object.setPrototypeOf(n,u.prototype),n}function d(t){if(t>=s)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+s.toString(16)+\" bytes\");return 0|t}function g(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||H(t,ArrayBuffer))return t.byteLength;if(\"string\"!=typeof t)throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const r=t.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return r;case\"utf8\":case\"utf-8\":return G(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*r;case\"hex\":return r>>>1;case\"base64\":return Y(t).length;default:if(i)return n?-1:G(t).length;e=(\"\"+e).toLowerCase(),i=!0}}function w(t,e,r){let n=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return\"\";if((r>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return $(this,e,r);case\"utf8\":case\"utf-8\":return x(this,e,r);case\"ascii\":return R(this,e,r);case\"latin1\":case\"binary\":return T(this,e,r);case\"base64\":return I(this,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return L(this,e,r);default:if(n)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),n=!0}}function y(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function m(t,e,r,n,i){if(0===t.length)return-1;if(\"string\"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),J(r=+r)&&(r=i?0:t.length-1),r<0&&(r=t.length+r),r>=t.length){if(i)return-1;r=t.length-1}else if(r<0){if(!i)return-1;r=0}if(\"string\"==typeof e&&(e=u.from(e,n)),u.isBuffer(e))return 0===e.length?-1:b(t,e,r,n,i);if(\"number\"==typeof e)return e&=255,\"function\"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(t,e,r):Uint8Array.prototype.lastIndexOf.call(t,e,r):b(t,[e],r,n,i);throw new TypeError(\"val must be string, number or Buffer\")}function b(t,e,r,n,i){let o,s=1,f=t.length,u=e.length;if(void 0!==n&&(\"ucs2\"===(n=String(n).toLowerCase())||\"ucs-2\"===n||\"utf16le\"===n||\"utf-16le\"===n)){if(t.length<2||e.length<2)return-1;s=2,f/=2,u/=2,r/=2}function a(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(i){let n=-1;for(o=r;o<f;o++)if(a(t,o)===a(e,-1===n?0:o-n)){if(-1===n&&(n=o),o-n+1===u)return n*s}else-1!==n&&(o-=o-n),n=-1}else for(r+u>f&&(r=f-u),o=r;o>=0;o--){let r=!0;for(let n=0;n<u;n++)if(a(t,o+n)!==a(e,n)){r=!1;break}if(r)return o}return-1}function _(t,e,r,n){r=Number(r)||0;const i=t.length-r;n?(n=Number(n))>i&&(n=i):n=i;const o=e.length;let s;for(n>o/2&&(n=o/2),s=0;s<n;++s){const n=parseInt(e.substr(2*s,2),16);if(J(n))return s;t[r+s]=n}return s}function B(t,e,r,n){return W(G(e,t.length-r),t,r,n)}function E(t,e,r,n){return W(function(t){const e=[];for(let r=0;r<t.length;++r)e.push(255&t.charCodeAt(r));return e}(e),t,r,n)}function v(t,e,r,n){return W(Y(e),t,r,n)}function A(t,e,r,n){return W(function(t,e){let r,n,i;const o=[];for(let s=0;s<t.length&&!((e-=2)<0);++s)r=t.charCodeAt(s),n=r>>8,i=r%256,o.push(i),o.push(n);return o}(e,t.length-r),t,r,n)}function I(t,e,r){return 0===e&&r===t.length?n.fromByteArray(t):n.fromByteArray(t.slice(e,r))}function x(t,e,r){r=Math.min(t.length,r);const n=[];let i=e;for(;i<r;){const e=t[i];let o=null,s=e>239?4:e>223?3:e>191?2:1;if(i+s<=r){let r,n,f,u;switch(s){case 1:e<128&&(o=e);break;case 2:r=t[i+1],128==(192&r)&&(u=(31&e)<<6|63&r,u>127&&(o=u));break;case 3:r=t[i+1],n=t[i+2],128==(192&r)&&128==(192&n)&&(u=(15&e)<<12|(63&r)<<6|63&n,u>2047&&(u<55296||u>57343)&&(o=u));break;case 4:r=t[i+1],n=t[i+2],f=t[i+3],128==(192&r)&&128==(192&n)&&128==(192&f)&&(u=(15&e)<<18|(63&r)<<12|(63&n)<<6|63&f,u>65535&&u<1114112&&(o=u))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|1023&o),n.push(o),i+=s}return function(t){const e=t.length;if(e<=U)return String.fromCharCode.apply(String,t);let r=\"\",n=0;for(;n<e;)r+=String.fromCharCode.apply(String,t.slice(n,n+=U));return r}(n)}u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||\"undefined\"==typeof console||\"function\"!=typeof console.error||console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"),Object.defineProperty(u.prototype,\"parent\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,\"offset\",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,r){return a(t,e,r)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,r){return function(t,e,r){return h(t),t<=0?f(t):void 0!==e?\"string\"==typeof r?f(t).fill(e,r):f(t).fill(e):f(t)}(t,e,r)},u.allocUnsafe=function(t){return c(t)},u.allocUnsafeSlow=function(t){return c(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(H(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),H(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let r=t.length,n=e.length;for(let i=0,o=Math.min(r,n);i<o;++i)if(t[i]!==e[i]){r=t[i],n=e[i];break}return r<n?-1:n<r?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let r;if(void 0===e)for(e=0,r=0;r<t.length;++r)e+=t[r].length;const n=u.allocUnsafe(e);let i=0;for(r=0;r<t.length;++r){let e=t[r];if(H(e,Uint8Array))i+e.length>n.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(n,i)):Uint8Array.prototype.set.call(n,e,i);else{if(!u.isBuffer(e))throw new TypeError('\"list\" argument must be an Array of Buffers');e.copy(n,i)}i+=e.length}return n},u.byteLength=g,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let e=0;e<t;e+=2)y(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let e=0;e<t;e+=4)y(this,e,e+3),y(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let e=0;e<t;e+=8)y(this,e,e+7),y(this,e+1,e+6),y(this,e+2,e+5),y(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?\"\":0===arguments.length?x(this,0,t):w.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t=\"\";const r=e.IS;return t=this.toString(\"hex\",0,r).replace(/(.{2})/g,\"$1 \").trim(),this.length>r&&(t+=\" ... \"),\"<Buffer \"+t+\">\"},o&&(u.prototype[o]=u.prototype.inspect),u.prototype.compare=function(t,e,r,n,i){if(H(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===r&&(r=t?t.length:0),void 0===n&&(n=0),void 0===i&&(i=this.length),e<0||r>t.length||n<0||i>this.length)throw new RangeError(\"out of range index\");if(n>=i&&e>=r)return 0;if(n>=i)return-1;if(e>=r)return 1;if(this===t)return 0;let o=(i>>>=0)-(n>>>=0),s=(r>>>=0)-(e>>>=0);const f=Math.min(o,s),a=this.slice(n,i),h=t.slice(e,r);for(let t=0;t<f;++t)if(a[t]!==h[t]){o=a[t],s=h[t];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(t,e,r){return-1!==this.indexOf(t,e,r)},u.prototype.indexOf=function(t,e,r){return m(this,t,e,r,!0)},u.prototype.lastIndexOf=function(t,e,r){return m(this,t,e,r,!1)},u.prototype.write=function(t,e,r,n){if(void 0===e)n=\"utf8\",r=this.length,e=0;else if(void 0===r&&\"string\"==typeof e)n=e,r=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n=\"utf8\")):(n=r,r=void 0)}const i=this.length-e;if((void 0===r||r>i)&&(r=i),t.length>0&&(r<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");n||(n=\"utf8\");let o=!1;for(;;)switch(n){case\"hex\":return _(this,t,e,r);case\"utf8\":case\"utf-8\":return B(this,t,e,r);case\"ascii\":case\"latin1\":case\"binary\":return E(this,t,e,r);case\"base64\":return v(this,t,e,r);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return A(this,t,e,r);default:if(o)throw new TypeError(\"Unknown encoding: \"+n);n=(\"\"+n).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};const U=4096;function R(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(127&t[i]);return n}function T(t,e,r){let n=\"\";r=Math.min(t.length,r);for(let i=e;i<r;++i)n+=String.fromCharCode(t[i]);return n}function $(t,e,r){const n=t.length;(!e||e<0)&&(e=0),(!r||r<0||r>n)&&(r=n);let i=\"\";for(let n=e;n<r;++n)i+=Q[t[n]];return i}function L(t,e,r){const n=t.slice(e,r);let i=\"\";for(let t=0;t<n.length-1;t+=2)i+=String.fromCharCode(n[t]+256*n[t+1]);return i}function O(t,e,r){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>r)throw new RangeError(\"Trying to access beyond buffer length\")}function S(t,e,r,n,i,o){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<o)throw new RangeError('\"value\" argument is out of bounds');if(r+n>t.length)throw new RangeError(\"Index out of range\")}function N(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o,o>>=8,t[r++]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,s>>=8,t[r++]=s,r}function V(t,e,r,n,i){P(e,n,i,t,r,7);let o=Number(e&BigInt(4294967295));t[r+7]=o,o>>=8,t[r+6]=o,o>>=8,t[r+5]=o,o>>=8,t[r+4]=o;let s=Number(e>>BigInt(32)&BigInt(4294967295));return t[r+3]=s,s>>=8,t[r+2]=s,s>>=8,t[r+1]=s,s>>=8,t[r]=s,r+8}function M(t,e,r,n,i,o){if(r+n>t.length)throw new RangeError(\"Index out of range\");if(r<0)throw new RangeError(\"Index out of range\")}function C(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,4),i.write(t,e,r,n,23,4),r+4}function D(t,e,r,n,o){return e=+e,r>>>=0,o||M(t,0,r,8),i.write(t,e,r,n,52,8),r+8}u.prototype.slice=function(t,e){const r=this.length;(t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t);const n=this.subarray(t,e);return Object.setPrototypeOf(n,u.prototype),n},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return n},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t+--e],i=1;for(;e>0&&(i*=256);)n+=this[t+--e]*i;return n},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,i=this[++t]+256*this[++t]+65536*this[++t]+r*2**24;return BigInt(n)+(BigInt(i)<<BigInt(32))})),u.prototype.readBigUInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=e*2**24+65536*this[++t]+256*this[++t]+this[++t],i=this[++t]*2**24+65536*this[++t]+256*this[++t]+r;return(BigInt(n)<<BigInt(32))+BigInt(i)})),u.prototype.readIntLE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=this[t],i=1,o=0;for(;++o<e&&(i*=256);)n+=this[t+o]*i;return i*=128,n>=i&&(n-=Math.pow(2,8*e)),n},u.prototype.readIntBE=function(t,e,r){t>>>=0,e>>>=0,r||O(t,e,this.length);let n=e,i=1,o=this[t+--n];for(;n>0&&(i*=256);)o+=this[t+--n]*i;return i*=128,o>=i&&(o-=Math.pow(2,8*e)),o},u.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t]|this[t+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);const r=this[t+1]|this[t]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=this[t+4]+256*this[t+5]+65536*this[t+6]+(r<<24);return(BigInt(n)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=Z((function(t){X(t>>>=0,\"offset\");const e=this[t],r=this[t+7];void 0!==e&&void 0!==r||k(t,this.length-8);const n=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(n)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+r)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),i.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),i.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=1,o=0;for(this[e]=255&t;++o<r&&(i*=256);)this[e+o]=t/i&255;return e+r},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,r,n){if(t=+t,e>>>=0,r>>>=0,!n){S(this,t,e,r,Math.pow(2,8*r)-1,0)}let i=r-1,o=1;for(this[e+i]=255&t;--i>=0&&(o*=256);)this[e+i]=t/o&255;return e+r},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=Z((function(t,e=0){return N(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeBigUInt64BE=Z((function(t,e=0){return V(this,t,e,BigInt(0),BigInt(\"0xffffffffffffffff\"))})),u.prototype.writeIntLE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=0,o=1,s=0;for(this[e]=255&t;++i<r&&(o*=256);)t<0&&0===s&&0!==this[e+i-1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},u.prototype.writeIntBE=function(t,e,r,n){if(t=+t,e>>>=0,!n){const n=Math.pow(2,8*r-1);S(this,t,e,r,n-1,-n)}let i=r-1,o=1,s=0;for(this[e+i]=255&t;--i>=0&&(o*=256);)t<0&&0===s&&0!==this[e+i+1]&&(s=1),this[e+i]=(t/o>>0)-s&255;return e+r},u.prototype.writeInt8=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,r){return t=+t,e>>>=0,r||S(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=Z((function(t,e=0){return N(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeBigInt64BE=Z((function(t,e=0){return V(this,t,e,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))})),u.prototype.writeFloatLE=function(t,e,r){return C(this,t,e,!0,r)},u.prototype.writeFloatBE=function(t,e,r){return C(this,t,e,!1,r)},u.prototype.writeDoubleLE=function(t,e,r){return D(this,t,e,!0,r)},u.prototype.writeDoubleBE=function(t,e,r){return D(this,t,e,!1,r)},u.prototype.copy=function(t,e,r,n){if(!u.isBuffer(t))throw new TypeError(\"argument should be a Buffer\");if(r||(r=0),n||0===n||(n=this.length),e>=t.length&&(e=t.length),e||(e=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(r<0||r>=this.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"sourceEnd out of bounds\");n>this.length&&(n=this.length),t.length-e<n-r&&(n=t.length-e+r);const i=n-r;return this===t&&\"function\"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,r,n):Uint8Array.prototype.set.call(t,this.subarray(r,n),e),i},u.prototype.fill=function(t,e,r,n){if(\"string\"==typeof t){if(\"string\"==typeof e?(n=e,e=0,r=this.length):\"string\"==typeof r&&(n=r,r=this.length),void 0!==n&&\"string\"!=typeof n)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof n&&!u.isEncoding(n))throw new TypeError(\"Unknown encoding: \"+n);if(1===t.length){const e=t.charCodeAt(0);(\"utf8\"===n&&e<128||\"latin1\"===n)&&(t=e)}}else\"number\"==typeof t?t&=255:\"boolean\"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<r)throw new RangeError(\"Out of range index\");if(r<=e)return this;let i;if(e>>>=0,r=void 0===r?this.length:r>>>0,t||(t=0),\"number\"==typeof t)for(i=e;i<r;++i)this[i]=t;else{const o=u.isBuffer(t)?t:u.from(t,n),s=o.length;if(0===s)throw new TypeError('The value \"'+t+'\" is invalid for argument \"value\"');for(i=0;i<r-e;++i)this[i+e]=o[i%s]}return this};const j={};function z(t,e,r){j[t]=class extends r{constructor(){super(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function F(t){let e=\"\",r=t.length;const n=\"-\"===t[0]?1:0;for(;r>=n+4;r-=3)e=`_${t.slice(r-3,r)}${e}`;return`${t.slice(0,r)}${e}`}function P(t,e,r,n,i,o){if(t>r||t<e){const n=\"bigint\"==typeof e?\"n\":\"\";let i;throw i=o>3?0===e||e===BigInt(0)?`>= 0${n} and < 2${n} ** ${8*(o+1)}${n}`:`>= -(2${n} ** ${8*(o+1)-1}${n}) and < 2 ** ${8*(o+1)-1}${n}`:`>= ${e}${n} and <= ${r}${n}`,new j.ERR_OUT_OF_RANGE(\"value\",i,t)}!function(t,e,r){X(e,\"offset\"),void 0!==t[e]&&void 0!==t[e+r]||k(e,t.length-(r+1))}(n,i,o)}function X(t,e){if(\"number\"!=typeof t)throw new j.ERR_INVALID_ARG_TYPE(e,\"number\",t)}function k(t,e,r){if(Math.floor(t)!==t)throw X(t,r),new j.ERR_OUT_OF_RANGE(r||\"offset\",\"an integer\",t);if(e<0)throw new j.ERR_BUFFER_OUT_OF_BOUNDS;throw new j.ERR_OUT_OF_RANGE(r||\"offset\",`>= ${r?1:0} and <= ${e}`,t)}z(\"ERR_BUFFER_OUT_OF_BOUNDS\",(function(t){return t?`${t} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"}),RangeError),z(\"ERR_INVALID_ARG_TYPE\",(function(t,e){return`The \"${t}\" argument must be of type number. Received type ${typeof e}`}),TypeError),z(\"ERR_OUT_OF_RANGE\",(function(t,e,r){let n=`The value of \"${t}\" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=F(String(r)):\"bigint\"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=F(i)),i+=\"n\"),n+=` It must be ${e}. Received ${i}`,n}),RangeError);const q=/[^+/0-9A-Za-z-_]/g;function G(t,e){let r;e=e||1/0;const n=t.length;let i=null;const o=[];for(let s=0;s<n;++s){if(r=t.charCodeAt(s),r>55295&&r<57344){if(!i){if(r>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===n){(e-=3)>-1&&o.push(239,191,189);continue}i=r;continue}if(r<56320){(e-=3)>-1&&o.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(e-=3)>-1&&o.push(239,191,189);if(i=null,r<128){if((e-=1)<0)break;o.push(r)}else if(r<2048){if((e-=2)<0)break;o.push(r>>6|192,63&r|128)}else if(r<65536){if((e-=3)<0)break;o.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;o.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return o}function Y(t){return n.toByteArray(function(t){if((t=(t=t.split(\"=\")[0]).trim().replace(q,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function W(t,e,r,n){let i;for(i=0;i<n&&!(i+r>=e.length||i>=t.length);++i)e[i+r]=t[i];return i}function H(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function J(t){return t!=t}const Q=function(){const t=\"0123456789abcdef\",e=new Array(256);for(let r=0;r<16;++r){const n=16*r;for(let i=0;i<16;++i)e[n+i]=t[r]+t[i]}return e}();function Z(t){return\"undefined\"==typeof BigInt?K:t}function K(){throw new Error(\"BigInt not supported\")}},251:(t,e)=>{e.read=function(t,e,r,n,i){var o,s,f=8*i-n-1,u=(1<<f)-1,a=u>>1,h=-7,c=r?i-1:0,l=r?-1:1,p=t[e+c];for(c+=l,o=p&(1<<-h)-1,p>>=-h,h+=f;h>0;o=256*o+t[e+c],c+=l,h-=8);for(s=o&(1<<-h)-1,o>>=-h,h+=n;h>0;s=256*s+t[e+c],c+=l,h-=8);if(0===o)o=1-a;else{if(o===u)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,n),o-=a}return(p?-1:1)*s*Math.pow(2,o-n)},e.write=function(t,e,r,n,i,o){var s,f,u,a=8*o-i-1,h=(1<<a)-1,c=h>>1,l=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=n?0:o-1,d=n?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(f=isNaN(e)?1:0,s=h):(s=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-s))<1&&(s--,u*=2),(e+=s+c>=1?l/u:l*Math.pow(2,1-c))*u>=2&&(s++,u/=2),s+c>=h?(f=0,s=h):s+c>=1?(f=(e*u-1)*Math.pow(2,i),s+=c):(f=e*Math.pow(2,c-1)*Math.pow(2,i),s=0));i>=8;t[r+p]=255&f,p+=d,f/=256,i-=8);for(s=s<<i|f,a+=i;a>0;t[r+p]=255&s,p+=d,s/=256,a-=8);t[r+p-d]|=128*g}}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}return r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r(281)})()));\n//# sourceMappingURL=xdr.js.map","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","// See https://github.com/stellar/js-xdr/issues/117\r\nimport { Buffer } from 'buffer';\r\n\r\nif (!(Buffer.alloc(1).subarray(0, 1) instanceof Buffer)) {\r\n  Buffer.prototype.subarray = function subarray(start, end) {\r\n    const result = Uint8Array.prototype.subarray.call(this, start, end);\r\n    Object.setPrototypeOf(result, Buffer.prototype);\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default Buffer;\r\n","import BigNumber from './util/bignumber';\r\n\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Create a new Account object.\r\n *\r\n * `Account` represents a single account in the Stellar network and its sequence\r\n * number. Account tracks the sequence number as it is used by {@link\r\n * TransactionBuilder}. See\r\n * [Accounts](https://developers.stellar.org/docs/glossary/accounts/) for\r\n * more information about how accounts work in Stellar.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} accountId - ID of the account (ex.\r\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\r\n *     provide a muxed account address, this will throw; use {@link\r\n *     MuxedAccount} instead.\r\n * @param {string} sequence  - current sequence number of the account\r\n */\r\nexport class Account {\r\n  constructor(accountId, sequence) {\r\n    if (StrKey.isValidMed25519PublicKey(accountId)) {\r\n      throw new Error('accountId is an M-address; use MuxedAccount instead');\r\n    }\r\n\r\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\r\n      throw new Error('accountId is invalid');\r\n    }\r\n    if (!(typeof sequence === 'string')) {\r\n      throw new Error('sequence must be of type string');\r\n    }\r\n\r\n    this._accountId = accountId;\r\n    this.sequence = new BigNumber(sequence);\r\n  }\r\n\r\n  /**\r\n   * Returns Stellar account ID, ex.\r\n   * `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`.\r\n   * @returns {string}\r\n   */\r\n  accountId() {\r\n    return this._accountId;\r\n  }\r\n\r\n  /**\r\n   * @returns {string}  sequence number for the account as a string\r\n   */\r\n  sequenceNumber() {\r\n    return this.sequence.toString();\r\n  }\r\n\r\n  /**\r\n   * Increments sequence number in this object by one.\r\n   * @returns {void}\r\n   */\r\n  incrementSequenceNumber() {\r\n    this.sequence = this.sequence.plus(1);\r\n  }\r\n}\r\n","import { StrKey } from './strkey';\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * Create a new Address object.\r\n *\r\n * `Address` represents a single address in the Stellar network. An address can\r\n * represent an account or a contract.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} address - ID of the account (ex.\r\n *     `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`). If you\r\n *     provide a muxed account address, this will throw; use {@link\r\n *     MuxedAccount} instead.\r\n */\r\nexport class Address {\r\n  constructor(address) {\r\n    if (StrKey.isValidEd25519PublicKey(address)) {\r\n      this._type = 'account';\r\n      this._key = StrKey.decodeEd25519PublicKey(address);\r\n    } else if (StrKey.isValidContract(address)) {\r\n      this._type = 'contract';\r\n      this._key = StrKey.decodeContract(address);\r\n    } else {\r\n      throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses a string and returns an Address object.\r\n   *\r\n   * @param {string} address - The address to parse. ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`\r\n   * @returns {Address}\r\n   */\r\n  static fromString(address) {\r\n    return new Address(address);\r\n  }\r\n\r\n  /**\r\n   * Creates a new account Address object from a buffer of raw bytes.\r\n   *\r\n   * @param {Buffer} buffer - The bytes of an address to parse.\r\n   * @returns {Address}\r\n   */\r\n  static account(buffer) {\r\n    return new Address(StrKey.encodeEd25519PublicKey(buffer));\r\n  }\r\n\r\n  /**\r\n   * Creates a new contract Address object from a buffer of raw bytes.\r\n   *\r\n   * @param {Buffer} buffer - The bytes of an address to parse.\r\n   * @returns {Address}\r\n   */\r\n  static contract(buffer) {\r\n    return new Address(StrKey.encodeContract(buffer));\r\n  }\r\n\r\n  /**\r\n   * Convert this from an xdr.ScVal type\r\n   *\r\n   * @param {xdr.ScVal} scVal - The xdr.ScVal type to parse\r\n   * @returns {Address}\r\n   */\r\n  static fromScVal(scVal) {\r\n    return Address.fromScAddress(scVal.address());\r\n  }\r\n\r\n  /**\r\n   * Convert this from an xdr.ScAddress type\r\n   *\r\n   * @param {xdr.ScAddress} scAddress - The xdr.ScAddress type to parse\r\n   * @returns {Address}\r\n   */\r\n  static fromScAddress(scAddress) {\r\n    switch (scAddress.switch()) {\r\n      case xdr.ScAddressType.scAddressTypeAccount():\r\n        return Address.account(scAddress.accountId().ed25519());\r\n      case xdr.ScAddressType.scAddressTypeContract():\r\n        return Address.contract(scAddress.contractId());\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serialize an address to string.\r\n   *\r\n   * @returns {string}\r\n   */\r\n  toString() {\r\n    switch (this._type) {\r\n      case 'account':\r\n        return StrKey.encodeEd25519PublicKey(this._key);\r\n      case 'contract':\r\n        return StrKey.encodeContract(this._key);\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert this Address to an xdr.ScVal type.\r\n   *\r\n   * @returns {xdr.ScVal}\r\n   */\r\n  toScVal() {\r\n    return xdr.ScVal.scvAddress(this.toScAddress());\r\n  }\r\n\r\n  /**\r\n   * Convert this Address to an xdr.ScAddress type.\r\n   *\r\n   * @returns {xdr.ScAddress}\r\n   */\r\n  toScAddress() {\r\n    switch (this._type) {\r\n      case 'account':\r\n        return xdr.ScAddress.scAddressTypeAccount(\r\n          xdr.PublicKey.publicKeyTypeEd25519(this._key)\r\n        );\r\n      case 'contract':\r\n        return xdr.ScAddress.scAddressTypeContract(this._key);\r\n      default:\r\n        throw new Error('Unsupported address type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the raw public key bytes for this address.\r\n   *\r\n   * @returns {Buffer}\r\n   */\r\n  toBuffer() {\r\n    return this._key;\r\n  }\r\n}\r\n","import { trimEnd } from './util/util';\r\nimport xdr from './xdr';\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\nimport { hash } from './hashing';\r\n\r\n/**\r\n * Asset class represents an asset, either the native asset (`XLM`)\r\n * or an asset code / issuer account ID pair.\r\n *\r\n * An asset code describes an asset code and issuer pair. In the case of the native\r\n * asset XLM, the issuer will be null.\r\n *\r\n * @constructor\r\n * @param {string} code - The asset code.\r\n * @param {string} issuer - The account ID of the issuer.\r\n */\r\nexport class Asset {\r\n  constructor(code, issuer) {\r\n    if (!/^[a-zA-Z0-9]{1,12}$/.test(code)) {\r\n      throw new Error(\r\n        'Asset code is invalid (maximum alphanumeric, 12 characters at max)'\r\n      );\r\n    }\r\n    if (String(code).toLowerCase() !== 'xlm' && !issuer) {\r\n      throw new Error('Issuer cannot be null');\r\n    }\r\n    if (issuer && !StrKey.isValidEd25519PublicKey(issuer)) {\r\n      throw new Error('Issuer is invalid');\r\n    }\r\n\r\n    if (String(code).toLowerCase() === 'xlm') {\r\n      // transform all xLM, Xlm, etc. variants -> XLM\r\n      this.code = 'XLM';\r\n    } else {\r\n      this.code = code;\r\n    }\r\n\r\n    this.issuer = issuer;\r\n  }\r\n\r\n  /**\r\n   * Returns an asset object for the native asset.\r\n   * @Return {Asset}\r\n   */\r\n  static native() {\r\n    return new Asset('XLM');\r\n  }\r\n\r\n  /**\r\n   * Returns an asset object from its XDR object representation.\r\n   * @param {xdr.Asset} assetXdr - The asset xdr object.\r\n   * @returns {Asset}\r\n   */\r\n  static fromOperation(assetXdr) {\r\n    let anum;\r\n    let code;\r\n    let issuer;\r\n    switch (assetXdr.switch()) {\r\n      case xdr.AssetType.assetTypeNative():\r\n        return this.native();\r\n      case xdr.AssetType.assetTypeCreditAlphanum4():\r\n        anum = assetXdr.alphaNum4();\r\n      /* falls through */\r\n      case xdr.AssetType.assetTypeCreditAlphanum12():\r\n        anum = anum || assetXdr.alphaNum12();\r\n        issuer = StrKey.encodeEd25519PublicKey(anum.issuer().ed25519());\r\n        code = trimEnd(anum.assetCode(), '\\0');\r\n        return new this(code, issuer);\r\n      default:\r\n        throw new Error(`Invalid asset type: ${assetXdr.switch().name}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.Asset object for this asset.\r\n   * @returns {xdr.Asset} XDR asset object\r\n   */\r\n  toXDRObject() {\r\n    return this._toXDRObject(xdr.Asset);\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.ChangeTrustAsset object for this asset.\r\n   * @returns {xdr.ChangeTrustAsset} XDR asset object\r\n   */\r\n  toChangeTrustXDRObject() {\r\n    return this._toXDRObject(xdr.ChangeTrustAsset);\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr.TrustLineAsset object for this asset.\r\n   * @returns {xdr.TrustLineAsset} XDR asset object\r\n   */\r\n  toTrustLineXDRObject() {\r\n    return this._toXDRObject(xdr.TrustLineAsset);\r\n  }\r\n\r\n  /**\r\n   * Returns the would-be contract ID (`C...` format) for this asset on a given\r\n   * network.\r\n   *\r\n   * @param {string}    networkPassphrase   indicates which network the contract\r\n   *    ID should refer to, since every network will have a unique ID for the\r\n   *    same contract (see {@link Networks} for options)\r\n   *\r\n   * @returns {string}  the strkey-encoded (`C...`) contract ID for this asset\r\n   *\r\n   * @warning This makes no guarantee that this contract actually *exists*.\r\n   */\r\n  contractId(networkPassphrase) {\r\n    const networkId = hash(Buffer.from(networkPassphrase));\r\n    const preimage = xdr.HashIdPreimage.envelopeTypeContractId(\r\n      new xdr.HashIdPreimageContractId({\r\n        networkId,\r\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\r\n          this.toXDRObject()\r\n        )\r\n      })\r\n    );\r\n\r\n    return StrKey.encodeContract(hash(preimage.toXDR()));\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr object for this asset.\r\n   * @param {xdr.Asset | xdr.ChangeTrustAsset} xdrAsset - The asset xdr object.\r\n   * @returns {xdr.Asset | xdr.ChangeTrustAsset | xdr.TrustLineAsset} XDR Asset object\r\n   */\r\n  _toXDRObject(xdrAsset = xdr.Asset) {\r\n    if (this.isNative()) {\r\n      return xdrAsset.assetTypeNative();\r\n    }\r\n\r\n    let xdrType;\r\n    let xdrTypeString;\r\n    if (this.code.length <= 4) {\r\n      xdrType = xdr.AlphaNum4;\r\n      xdrTypeString = 'assetTypeCreditAlphanum4';\r\n    } else {\r\n      xdrType = xdr.AlphaNum12;\r\n      xdrTypeString = 'assetTypeCreditAlphanum12';\r\n    }\r\n\r\n    // pad code with null bytes if necessary\r\n    const padLength = this.code.length <= 4 ? 4 : 12;\r\n    const paddedCode = this.code.padEnd(padLength, '\\0');\r\n\r\n    // eslint-disable-next-line new-cap\r\n    const assetType = new xdrType({\r\n      assetCode: paddedCode,\r\n      issuer: Keypair.fromPublicKey(this.issuer).xdrAccountId()\r\n    });\r\n\r\n    return new xdrAsset(xdrTypeString, assetType);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Asset code\r\n   */\r\n  getCode() {\r\n    if (this.code === undefined) {\r\n      return undefined;\r\n    }\r\n    return String(this.code);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Asset issuer\r\n   */\r\n  getIssuer() {\r\n    if (this.issuer === undefined) {\r\n      return undefined;\r\n    }\r\n    return String(this.issuer);\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {string} Asset type. Can be one of following types:\r\n   *\r\n   *  - `native`,\r\n   *  - `credit_alphanum4`,\r\n   *  - `credit_alphanum12`, or\r\n   *  - `unknown` as the error case (which should never occur)\r\n   */\r\n  getAssetType() {\r\n    switch (this.getRawAssetType()) {\r\n      case xdr.AssetType.assetTypeNative():\r\n        return 'native';\r\n      case xdr.AssetType.assetTypeCreditAlphanum4():\r\n        return 'credit_alphanum4';\r\n      case xdr.AssetType.assetTypeCreditAlphanum12():\r\n        return 'credit_alphanum12';\r\n      default:\r\n        return 'unknown';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.AssetType}  the raw XDR representation of the asset type\r\n   */\r\n  getRawAssetType() {\r\n    if (this.isNative()) {\r\n      return xdr.AssetType.assetTypeNative();\r\n    }\r\n\r\n    if (this.code.length <= 4) {\r\n      return xdr.AssetType.assetTypeCreditAlphanum4();\r\n    }\r\n\r\n    return xdr.AssetType.assetTypeCreditAlphanum12();\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}  true if this asset object is the native asset.\r\n   */\r\n  isNative() {\r\n    return !this.issuer;\r\n  }\r\n\r\n  /**\r\n   * @param {Asset} asset Asset to compare\r\n   * @returns {boolean} true if this asset equals the given asset.\r\n   */\r\n  equals(asset) {\r\n    return this.code === asset.getCode() && this.issuer === asset.getIssuer();\r\n  }\r\n\r\n  toString() {\r\n    if (this.isNative()) {\r\n      return 'native';\r\n    }\r\n\r\n    return `${this.getCode()}:${this.getIssuer()}`;\r\n  }\r\n\r\n  /**\r\n   * Compares two assets according to the criteria:\r\n   *\r\n   *  1. First compare the type (native < alphanum4 < alphanum12).\r\n   *  2. If the types are equal, compare the assets codes.\r\n   *  3. If the asset codes are equal, compare the issuers.\r\n   *\r\n   * @param   {Asset} assetA - the first asset\r\n   * @param   {Asset} assetB - the second asset\r\n   * @returns {number} `-1` if assetA < assetB, `0` if assetA == assetB, `1` if assetA > assetB.\r\n   *\r\n   * @static\r\n   * @memberof Asset\r\n   */\r\n  static compare(assetA, assetB) {\r\n    if (!assetA || !(assetA instanceof Asset)) {\r\n      throw new Error('assetA is invalid');\r\n    }\r\n    if (!assetB || !(assetB instanceof Asset)) {\r\n      throw new Error('assetB is invalid');\r\n    }\r\n\r\n    if (assetA.equals(assetB)) {\r\n      return 0;\r\n    }\r\n\r\n    // Compare asset types.\r\n    const xdrAtype = assetA.getRawAssetType().value;\r\n    const xdrBtype = assetB.getRawAssetType().value;\r\n    if (xdrAtype !== xdrBtype) {\r\n      return xdrAtype < xdrBtype ? -1 : 1;\r\n    }\r\n\r\n    // Compare asset codes.\r\n    const result = asciiCompare(assetA.getCode(), assetB.getCode());\r\n    if (result !== 0) {\r\n      return result;\r\n    }\r\n\r\n    // Compare asset issuers.\r\n    return asciiCompare(assetA.getIssuer(), assetB.getIssuer());\r\n  }\r\n}\r\n\r\n/**\r\n * Compares two ASCII strings in lexographic order with uppercase precedence.\r\n *\r\n * @param   {string} a - the first string to compare\r\n * @param   {string} b - the second\r\n * @returns {number} like all `compare()`s:\r\n *     -1 if `a < b`, 0 if `a == b`, and 1 if `a > b`\r\n *\r\n * @warning No type-checks are done on the parameters\r\n */\r\nfunction asciiCompare(a, b) {\r\n  return Buffer.compare(Buffer.from(a, 'ascii'), Buffer.from(b, 'ascii'));\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\nimport { Networks } from './network';\r\nimport { hash } from './hashing';\r\n\r\nimport { Address } from './address';\r\nimport { nativeToScVal } from './scval';\r\n\r\n/**\r\n * @async\r\n * @callback SigningCallback A callback for signing an XDR structure\r\n * representing all of the details necessary to authorize an invocation tree.\r\n *\r\n * @param {xdr.HashIdPreimage} preimage   the entire authorization envelope\r\n *    whose hash you should sign, so that you can inspect the entire structure\r\n *    if necessary (rather than blindly signing a hash)\r\n *\r\n * @returns {Promise<Uint8Array>}   the signature of the raw payload (which is\r\n *    the sha256 hash of the preimage bytes, so `hash(preimage.toXDR())`) signed\r\n *    by the key corresponding to the public key in the entry you pass to\r\n *    {@link authorizeEntry} (decipherable from its\r\n *    `credentials().address().address()`)\r\n */\r\n\r\n/**\r\n * Actually authorizes an existing authorization entry using the given the\r\n * credentials and expiration details, returning a signed copy.\r\n *\r\n * This \"fills out\" the authorization entry with a signature, indicating to the\r\n * {@link Operation.invokeHostFunction} its attached to that:\r\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\r\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\r\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\r\n *   - on a particular network (uniquely identified by its passphrase, see\r\n *     {@link Networks})\r\n *   - until a particular ledger sequence is reached.\r\n *\r\n * This one lets you pass a either a {@link Keypair} (or, more accurately,\r\n * anything with a `sign(Buffer): Buffer` method) or a callback function (see\r\n * {@link SigningCallback}) to handle signing the envelope hash.\r\n *\r\n * @param {xdr.SorobanAuthorizationEntry} entry   an unsigned authorization entr\r\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\r\n *    or a function which takes a payload (a\r\n *    {@link xdr.HashIdPreimageSorobanAuthorization} instance) input and returns\r\n *    the signature of the hash of the raw payload bytes (where the signing key\r\n *    should correspond to the address in the `entry`)\r\n * @param {number} validUntilLedgerSeq   the (exclusive) future ledger sequence\r\n *    number until which this authorization entry should be valid (if\r\n *    `currentLedgerSeq==validUntil`, this is expired))\r\n * @param {string} [networkPassphrase]  the network passphrase is incorprated\r\n *    into the signature (see {@link Networks} for options)\r\n *\r\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\r\n *    authorization entry that you can pass along to\r\n *    {@link Operation.invokeHostFunction}\r\n *\r\n * @see authorizeInvocation\r\n * @example\r\n * import {\r\n *   SorobanRpc,\r\n *   Transaction,\r\n *   Networks,\r\n *   authorizeEntry\r\n * } from '@stellar/stellar-sdk';\r\n *\r\n * // Assume signPayloadCallback is a well-formed signing callback.\r\n * //\r\n * // It might, for example, pop up a modal from a browser extension, send the\r\n * // transaction to a third-party service for signing, or just do simple\r\n * // signing via Keypair like it does here:\r\n * function signPayloadCallback(payload) {\r\n *    return signer.sign(hash(payload.toXDR());\r\n * }\r\n *\r\n * function multiPartyAuth(\r\n *    server: SorobanRpc.Server,\r\n *    // assume this involves multi-party auth\r\n *    tx: Transaction,\r\n * ) {\r\n *    return server\r\n *      .simulateTransaction(tx)\r\n *      .then((simResult) => {\r\n *          tx.operations[0].auth.map(entry =>\r\n *            authorizeEntry(\r\n *              entry,\r\n *              signPayloadCallback,\r\n *              currentLedger + 1000,\r\n *              Networks.TESTNET);\r\n *          ));\r\n *\r\n *          return server.prepareTransaction(tx, simResult);\r\n *      })\r\n *      .then((preppedTx) => {\r\n *        preppedTx.sign(source);\r\n *        return server.sendTransaction(preppedTx);\r\n *      });\r\n * }\r\n */\r\nexport async function authorizeEntry(\r\n  entry,\r\n  signer,\r\n  validUntilLedgerSeq,\r\n  networkPassphrase = Networks.FUTURENET\r\n) {\r\n  // no-op if it's source account auth\r\n  if (\r\n    entry.credentials().switch().value !==\r\n    xdr.SorobanCredentialsType.sorobanCredentialsAddress().value\r\n  ) {\r\n    return entry;\r\n  }\r\n\r\n  const clone = xdr.SorobanAuthorizationEntry.fromXDR(entry.toXDR());\r\n\r\n  /** @type {xdr.SorobanAddressCredentials} */\r\n  const addrAuth = clone.credentials().address();\r\n  addrAuth.signatureExpirationLedger(validUntilLedgerSeq);\r\n\r\n  const networkId = hash(Buffer.from(networkPassphrase));\r\n  const preimage = xdr.HashIdPreimage.envelopeTypeSorobanAuthorization(\r\n    new xdr.HashIdPreimageSorobanAuthorization({\r\n      networkId,\r\n      nonce: addrAuth.nonce(),\r\n      invocation: clone.rootInvocation(),\r\n      signatureExpirationLedger: addrAuth.signatureExpirationLedger()\r\n    })\r\n  );\r\n  const payload = hash(preimage.toXDR());\r\n\r\n  let signature;\r\n  if (typeof signer === 'function') {\r\n    signature = Buffer.from(await signer(preimage));\r\n  } else {\r\n    signature = Buffer.from(signer.sign(payload));\r\n  }\r\n  const publicKey = Address.fromScAddress(addrAuth.address()).toString();\r\n\r\n  if (!Keypair.fromPublicKey(publicKey).verify(payload, signature)) {\r\n    throw new Error(`signature doesn't match payload`);\r\n  }\r\n\r\n  // This structure is defined here:\r\n  // https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#stellar-account-signatures\r\n  //\r\n  // Encoding a contract structure as an ScVal means the map keys are supposed\r\n  // to be symbols, hence the forced typing here.\r\n  const sigScVal = nativeToScVal(\r\n    {\r\n      public_key: StrKey.decodeEd25519PublicKey(publicKey),\r\n      signature\r\n    },\r\n    {\r\n      type: {\r\n        public_key: ['symbol', null],\r\n        signature: ['symbol', null]\r\n      }\r\n    }\r\n  );\r\n\r\n  addrAuth.signature(xdr.ScVal.scvVec([sigScVal]));\r\n  return clone;\r\n}\r\n\r\n/**\r\n * This builds an entry from scratch, allowing you to express authorization as a\r\n * function of:\r\n *   - a particular identity (i.e. signing {@link Keypair} or other signer)\r\n *   - approving the execution of an invocation tree (i.e. a simulation-acquired\r\n *     {@link xdr.SorobanAuthorizedInvocation} or otherwise built)\r\n *   - on a particular network (uniquely identified by its passphrase, see\r\n *     {@link Networks})\r\n *   - until a particular ledger sequence is reached.\r\n *\r\n * This is in contrast to {@link authorizeEntry}, which signs an existing entry.\r\n *\r\n * @param {Keypair | SigningCallback} signer  either a {@link Keypair} instance\r\n *    (or anything with a `.sign(buf): Buffer-like` method) or a function which\r\n *    takes a payload (a {@link xdr.HashIdPreimageSorobanAuthorization}\r\n *    instance) input and returns the signature of the hash of the raw payload\r\n *    bytes (where the signing key should correspond to the address in the\r\n *    `entry`)\r\n * @param {number}  validUntilLedgerSeq  the (exclusive) future ledger sequence\r\n *    number until which this authorization entry should be valid (if\r\n *    `currentLedgerSeq==validUntilLedgerSeq`, this is expired))\r\n * @param {xdr.SorobanAuthorizedInvocation} invocation the invocation tree that\r\n *    we're authorizing (likely, this comes from transaction simulation)\r\n * @param {string}  [publicKey]   the public identity of the signer (when\r\n *    providing a {@link Keypair} to `signer`, this can be omitted, as it just\r\n *    uses {@link Keypair.publicKey})\r\n * @param {string}  [networkPassphrase]   the network passphrase is incorprated\r\n *    into the signature (see {@link Networks} for options, default:\r\n *    {@link Networks.FUTURENET})\r\n *\r\n * @returns {Promise<xdr.SorobanAuthorizationEntry>} a promise for an\r\n *    authorization entry that you can pass along to\r\n *    {@link Operation.invokeHostFunction}\r\n *\r\n * @see authorizeEntry\r\n */\r\nexport function authorizeInvocation(\r\n  signer,\r\n  validUntilLedgerSeq,\r\n  invocation,\r\n  publicKey = '',\r\n  networkPassphrase = Networks.FUTURENET\r\n) {\r\n  // We use keypairs as a source of randomness for the nonce to avoid mucking\r\n  // with any crypto dependencies. Note that this just has to be random and\r\n  // unique, not cryptographically secure, so it's fine.\r\n  const kp = Keypair.random().rawPublicKey();\r\n  const nonce = new xdr.Int64(bytesToInt64(kp));\r\n\r\n  const pk = publicKey || signer.publicKey();\r\n  if (!pk) {\r\n    throw new Error(`authorizeInvocation requires publicKey parameter`);\r\n  }\r\n\r\n  const entry = new xdr.SorobanAuthorizationEntry({\r\n    rootInvocation: invocation,\r\n    credentials: xdr.SorobanCredentials.sorobanCredentialsAddress(\r\n      new xdr.SorobanAddressCredentials({\r\n        address: new Address(pk).toScAddress(),\r\n        nonce,\r\n        signatureExpirationLedger: 0, // replaced\r\n        signature: xdr.ScVal.scvVec([]) // replaced\r\n      })\r\n    )\r\n  });\r\n\r\n  return authorizeEntry(entry, signer, validUntilLedgerSeq, networkPassphrase);\r\n}\r\n\r\nfunction bytesToInt64(bytes) {\r\n  // eslint-disable-next-line no-bitwise\r\n  return bytes.subarray(0, 8).reduce((accum, b) => (accum << 8) | b, 0);\r\n}\r\n","import xdr from './xdr';\r\nimport { Keypair } from './keypair';\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Claimant class represents an xdr.Claimant\r\n *\r\n * The claim predicate is optional, it defaults to unconditional if none is specified.\r\n *\r\n * @constructor\r\n * @param {string} destination - The destination account ID.\r\n * @param {xdr.ClaimPredicate} [predicate] - The claim predicate.\r\n */\r\nexport class Claimant {\r\n  constructor(destination, predicate) {\r\n    if (destination && !StrKey.isValidEd25519PublicKey(destination)) {\r\n      throw new Error('Destination is invalid');\r\n    }\r\n    this._destination = destination;\r\n\r\n    if (!predicate) {\r\n      this._predicate = xdr.ClaimPredicate.claimPredicateUnconditional();\r\n    } else if (predicate instanceof xdr.ClaimPredicate) {\r\n      this._predicate = predicate;\r\n    } else {\r\n      throw new Error('Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an unconditional claim predicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateUnconditional() {\r\n    return xdr.ClaimPredicate.claimPredicateUnconditional();\r\n  }\r\n\r\n  /**\r\n   * Returns an `and` claim predicate\r\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\r\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateAnd(left, right) {\r\n    if (!(left instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n    if (!(right instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateAnd([left, right]);\r\n  }\r\n\r\n  /**\r\n   * Returns an `or` claim predicate\r\n   * @param {xdr.ClaimPredicate} left an xdr.ClaimPredicate\r\n   * @param {xdr.ClaimPredicate} right an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateOr(left, right) {\r\n    if (!(left instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('left Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n    if (!(right instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateOr([left, right]);\r\n  }\r\n\r\n  /**\r\n   * Returns a `not` claim predicate\r\n   * @param {xdr.ClaimPredicate} predicate an xdr.ClaimPredicate\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateNot(predicate) {\r\n    if (!(predicate instanceof xdr.ClaimPredicate)) {\r\n      throw new Error('right Predicate should be an xdr.ClaimPredicate');\r\n    }\r\n\r\n    return xdr.ClaimPredicate.claimPredicateNot(predicate);\r\n  }\r\n\r\n  /**\r\n   * Returns a `BeforeAbsoluteTime` claim predicate\r\n   *\r\n   * This predicate will be fulfilled if the closing time of the ledger that\r\n   * includes the CreateClaimableBalance operation is less than this (absolute)\r\n   * Unix timestamp (expressed in seconds).\r\n   *\r\n   * @param {string} absBefore Unix epoch (in seconds) as a string\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateBeforeAbsoluteTime(absBefore) {\r\n    return xdr.ClaimPredicate.claimPredicateBeforeAbsoluteTime(\r\n      xdr.Int64.fromString(absBefore)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns a `BeforeRelativeTime` claim predicate\r\n   *\r\n   * This predicate will be fulfilled if the closing time of the ledger that\r\n   * includes the CreateClaimableBalance operation plus this relative time delta\r\n   * (in seconds) is less than the current time.\r\n   *\r\n   * @param {strings} seconds seconds since closeTime of the ledger in which the ClaimableBalanceEntry was created (as string)\r\n   * @Return {xdr.ClaimPredicate}\r\n   */\r\n  static predicateBeforeRelativeTime(seconds) {\r\n    return xdr.ClaimPredicate.claimPredicateBeforeRelativeTime(\r\n      xdr.Int64.fromString(seconds)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns a claimant object from its XDR object representation.\r\n   * @param {xdr.Claimant} claimantXdr - The claimant xdr object.\r\n   * @returns {Claimant}\r\n   */\r\n  static fromXDR(claimantXdr) {\r\n    let value;\r\n    switch (claimantXdr.switch()) {\r\n      case xdr.ClaimantType.claimantTypeV0():\r\n        value = claimantXdr.v0();\r\n        return new this(\r\n          StrKey.encodeEd25519PublicKey(value.destination().ed25519()),\r\n          value.predicate()\r\n        );\r\n      default:\r\n        throw new Error(`Invalid claimant type: ${claimantXdr.switch().name}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the xdr object for this claimant.\r\n   * @returns {xdr.Claimant} XDR Claimant object\r\n   */\r\n  toXDRObject() {\r\n    const claimant = new xdr.ClaimantV0({\r\n      destination: Keypair.fromPublicKey(this._destination).xdrAccountId(),\r\n      predicate: this._predicate\r\n    });\r\n\r\n    return xdr.Claimant.claimantTypeV0(claimant);\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get destination() {\r\n    return this._destination;\r\n  }\r\n\r\n  set destination(value) {\r\n    throw new Error('Claimant is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {xdr.ClaimPredicate}\r\n   * @readonly\r\n   */\r\n  get predicate() {\r\n    return this._predicate;\r\n  }\r\n\r\n  set predicate(value) {\r\n    throw new Error('Claimant is immutable');\r\n  }\r\n}\r\n","import { Address } from './address';\r\nimport { Operation } from './operation';\r\nimport xdr from './xdr';\r\nimport { StrKey } from './strkey';\r\n\r\n/**\r\n * Create a new Contract object.\r\n *\r\n * `Contract` represents a single contract in the Stellar network, embodying the\r\n * interface of the contract. See\r\n * [Contracts](https://soroban.stellar.org/docs/learn/interacting-with-contracts)\r\n * for more information about how contracts work in Stellar.\r\n *\r\n * @constructor\r\n *\r\n * @param {string} contractId - ID of the contract (ex.\r\n *     `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`).\r\n */\r\nexport class Contract {\r\n  constructor(contractId) {\r\n    try {\r\n      // First, try it as a strkey\r\n      this._id = StrKey.decodeContract(contractId);\r\n    } catch (_) {\r\n      throw new Error(`Invalid contract ID: ${contractId}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns Stellar contract ID as a strkey, ex.\r\n   * `CA3D5KRYM6CB7OWQ6TWYRR3Z4T7GNZLKERYNZGGA5SOAOPIFY6YQGAXE`.\r\n   * @returns {string}\r\n   */\r\n  contractId() {\r\n    return StrKey.encodeContract(this._id);\r\n  }\r\n\r\n  /** @returns {string} the ID as a strkey (C...) */\r\n  toString() {\r\n    return this.contractId();\r\n  }\r\n\r\n  /** @returns {Address} the wrapped address of this contract */\r\n  address() {\r\n    return Address.contract(this._id);\r\n  }\r\n\r\n  /**\r\n   * Returns an operation that will invoke this contract call.\r\n   *\r\n   * @param {string}        method   name of the method to call\r\n   * @param {...xdr.ScVal}  params   arguments to pass to the function call\r\n   *\r\n   * @returns {xdr.Operation}   an InvokeHostFunctionOp operation to call the\r\n   *    contract with the given method and parameters\r\n   *\r\n   * @see Operation.invokeHostFunction\r\n   * @see Operation.invokeContractFunction\r\n   * @see Operation.createCustomContract\r\n   * @see Operation.createStellarAssetContract\r\n   * @see Operation.uploadContractWasm\r\n   */\r\n  call(method, ...params) {\r\n    return Operation.invokeContractFunction({\r\n      contract: this.address().toString(),\r\n      function: method,\r\n      args: params\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the read-only footprint entries necessary for any invocations to\r\n   * this contract, for convenience when manually adding it to your\r\n   * transaction's overall footprint or doing bump/restore operations.\r\n   *\r\n   * @returns {xdr.LedgerKey} the ledger key for the deployed contract instance\r\n   */\r\n  getFootprint() {\r\n    return xdr.LedgerKey.contractData(\r\n      new xdr.LedgerKeyContractData({\r\n        contract: this.address().toScAddress(),\r\n        key: xdr.ScVal.scvLedgerKeyContractInstance(),\r\n        durability: xdr.ContractDataDurability.persistent()\r\n      })\r\n    );\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { scValToNative } from './scval';\r\n\r\n/**\r\n * Converts raw diagnostic or contract events into something with a flatter,\r\n * human-readable, and understandable structure.\r\n *\r\n * @param {xdr.DiagnosticEvent[] | xdr.ContractEvent[]} events  either contract\r\n *    events or diagnostic events to parse into a friendly format\r\n *\r\n * @returns {SorobanEvent[]}  a list of human-readable event structures, where\r\n *    each element has the following properties:\r\n *  - type: a string of one of 'system', 'contract', 'diagnostic\r\n *  - contractId?: optionally, a `C...` encoded strkey\r\n *  - topics: a list of {@link scValToNative} invocations on the topics\r\n *  - data: similarly, a {@link scValToNative} invocation on the raw event data\r\n */\r\nexport function humanizeEvents(events) {\r\n  return events.map((e) => {\r\n    if (e instanceof xdr.DiagnosticEvent) {\r\n      return extractEvent(e.event());\r\n    }\r\n\r\n    return extractEvent(e);\r\n  });\r\n}\r\n\r\nfunction extractEvent(event) {\r\n  return {\r\n    ...(event.contractId() != null && {\r\n      contractId: StrKey.encodeContract(event.contractId())\r\n    }),\r\n    type: event.type().name,\r\n    topics: event\r\n      .body()\r\n      .value()\r\n      .topics()\r\n      .map((t) => scValToNative(t)),\r\n    data: scValToNative(event.body().value().data())\r\n  };\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\n\r\nimport { Transaction } from './transaction';\r\nimport { TransactionBase } from './transaction_base';\r\nimport { encodeMuxedAccountToAddress } from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Use {@link TransactionBuilder.buildFeeBumpTransaction} to build a\r\n * FeeBumpTransaction object. If you have an object or base64-encoded string of\r\n * the transaction envelope XDR use {@link TransactionBuilder.fromXDR}.\r\n *\r\n * Once a {@link FeeBumpTransaction} has been created, its attributes and operations\r\n * should not be changed. You should only add signatures (using {@link FeeBumpTransaction#sign}) before\r\n * submitting to the network or forwarding on to additional signers.\r\n *\r\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\r\n *     object or base64 encoded string.\r\n * @param {string} networkPassphrase - passphrase of the target Stellar network\r\n *     (e.g. \"Public Global Stellar Network ; September 2015\").\r\n *\r\n * @extends TransactionBase\r\n */\r\nexport class FeeBumpTransaction extends TransactionBase {\r\n  constructor(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      const buffer = Buffer.from(envelope, 'base64');\r\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\r\n    }\r\n\r\n    const envelopeType = envelope.switch();\r\n    if (envelopeType !== xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\r\n      throw new Error(\r\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ${envelopeType.name}.`\r\n      );\r\n    }\r\n\r\n    const txEnvelope = envelope.value();\r\n    const tx = txEnvelope.tx();\r\n    const fee = tx.fee().toString();\r\n    // clone signatures\r\n    const signatures = (txEnvelope.signatures() || []).slice();\r\n\r\n    super(tx, signatures, fee, networkPassphrase);\r\n\r\n    const innerTxEnvelope = xdr.TransactionEnvelope.envelopeTypeTx(\r\n      tx.innerTx().v1()\r\n    );\r\n    this._feeSource = encodeMuxedAccountToAddress(this.tx.feeSource());\r\n    this._innerTransaction = new Transaction(\r\n      innerTxEnvelope,\r\n      networkPassphrase\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @type {Transaction}\r\n   * @readonly\r\n   */\r\n  get innerTransaction() {\r\n    return this._innerTransaction;\r\n  }\r\n\r\n  /**\r\n   * @type {Operation[]}\r\n   * @readonly\r\n   */\r\n  get operations() {\r\n    return this._innerTransaction.operations;\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get feeSource() {\r\n    return this._feeSource;\r\n  }\r\n\r\n  /**\r\n   * Returns the \"signature base\" of this transaction, which is the value\r\n   * that, when hashed, should be signed to create a signature that\r\n   * validators on the Stellar Network will accept.\r\n   *\r\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\r\n   * of this transaction.\r\n   * @returns {Buffer}\r\n   */\r\n  signatureBase() {\r\n    const taggedTransaction =\r\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(\r\n        this.tx\r\n      );\r\n\r\n    const txSignature = new xdr.TransactionSignaturePayload({\r\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\r\n      taggedTransaction\r\n    });\r\n\r\n    return txSignature.toXDR();\r\n  }\r\n\r\n  /**\r\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\r\n   * @returns {xdr.TransactionEnvelope}\r\n   */\r\n  toEnvelope() {\r\n    const envelope = new xdr.FeeBumpTransactionEnvelope({\r\n      tx: xdr.FeeBumpTransaction.fromXDR(this.tx.toXDR()), // make a copy of the tx\r\n      signatures: this.signatures.slice() // make a copy of the signatures\r\n    });\r\n\r\n    return new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(envelope);\r\n  }\r\n}\r\n","// Automatically generated by xdrgen\r\n// DO NOT EDIT or your changes may be overwritten\r\n\r\n/* jshint maxstatements:2147483647  */\r\n/* jshint esnext:true  */\r\n\r\nimport * as XDR from '@stellar/js-xdr';\r\n\r\n\r\nvar types = XDR.config(xdr => {\r\n// Workaround for https://github.com/stellar/xdrgen/issues/152\r\n//\r\n// The \"correct\" way would be to replace bare instances of each constant with\r\n// xdr.lookup(\"...\"), but that's more error-prone.\r\nconst SCSYMBOL_LIMIT = 32;\r\nconst SC_SPEC_DOC_LIMIT = 1024;\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Value<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Value\", xdr.varOpaque());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPBallot\r\n//   {\r\n//       uint32 counter; // n\r\n//       Value value;    // x\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpBallot\", [\r\n  [\"counter\", xdr.lookup(\"Uint32\")],\r\n  [\"value\", xdr.lookup(\"Value\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCPStatementType\r\n//   {\r\n//       SCP_ST_PREPARE = 0,\r\n//       SCP_ST_CONFIRM = 1,\r\n//       SCP_ST_EXTERNALIZE = 2,\r\n//       SCP_ST_NOMINATE = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScpStatementType\", {\r\n  scpStPrepare: 0,\r\n  scpStConfirm: 1,\r\n  scpStExternalize: 2,\r\n  scpStNominate: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPNomination\r\n//   {\r\n//       Hash quorumSetHash; // D\r\n//       Value votes<>;      // X\r\n//       Value accepted<>;   // Y\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpNomination\", [\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"votes\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\r\n  [\"accepted\", xdr.varArray(xdr.lookup(\"Value\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementPrepare\", [\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\r\n  [\"prepared\", xdr.option(xdr.lookup(\"ScpBallot\"))],\r\n  [\"preparedPrime\", xdr.option(xdr.lookup(\"ScpBallot\"))],\r\n  [\"nC\", xdr.lookup(\"Uint32\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementConfirm\", [\r\n  [\"ballot\", xdr.lookup(\"ScpBallot\")],\r\n  [\"nPrepared\", xdr.lookup(\"Uint32\")],\r\n  [\"nCommit\", xdr.lookup(\"Uint32\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n  [\"quorumSetHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatementExternalize\", [\r\n  [\"commit\", xdr.lookup(\"ScpBallot\")],\r\n  [\"nH\", xdr.lookup(\"Uint32\")],\r\n  [\"commitQuorumSetHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (SCPStatementType type)\r\n//       {\r\n//       case SCP_ST_PREPARE:\r\n//           struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           } prepare;\r\n//       case SCP_ST_CONFIRM:\r\n//           struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           } confirm;\r\n//       case SCP_ST_EXTERNALIZE:\r\n//           struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           } externalize;\r\n//       case SCP_ST_NOMINATE:\r\n//           SCPNomination nominate;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScpStatementPledges\", {\r\n  switchOn: xdr.lookup(\"ScpStatementType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scpStPrepare\", \"prepare\"],\r\n    [\"scpStConfirm\", \"confirm\"],\r\n    [\"scpStExternalize\", \"externalize\"],\r\n    [\"scpStNominate\", \"nominate\"],\r\n  ],\r\n  arms: {\r\n    prepare: xdr.lookup(\"ScpStatementPrepare\"),\r\n    confirm: xdr.lookup(\"ScpStatementConfirm\"),\r\n    externalize: xdr.lookup(\"ScpStatementExternalize\"),\r\n    nominate: xdr.lookup(\"ScpNomination\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPStatement\r\n//   {\r\n//       NodeID nodeID;    // v\r\n//       uint64 slotIndex; // i\r\n//\r\n//       union switch (SCPStatementType type)\r\n//       {\r\n//       case SCP_ST_PREPARE:\r\n//           struct\r\n//           {\r\n//               Hash quorumSetHash;       // D\r\n//               SCPBallot ballot;         // b\r\n//               SCPBallot* prepared;      // p\r\n//               SCPBallot* preparedPrime; // p'\r\n//               uint32 nC;                // c.n\r\n//               uint32 nH;                // h.n\r\n//           } prepare;\r\n//       case SCP_ST_CONFIRM:\r\n//           struct\r\n//           {\r\n//               SCPBallot ballot;   // b\r\n//               uint32 nPrepared;   // p.n\r\n//               uint32 nCommit;     // c.n\r\n//               uint32 nH;          // h.n\r\n//               Hash quorumSetHash; // D\r\n//           } confirm;\r\n//       case SCP_ST_EXTERNALIZE:\r\n//           struct\r\n//           {\r\n//               SCPBallot commit;         // c\r\n//               uint32 nH;                // h.n\r\n//               Hash commitQuorumSetHash; // D used before EXTERNALIZE\r\n//           } externalize;\r\n//       case SCP_ST_NOMINATE:\r\n//           SCPNomination nominate;\r\n//       }\r\n//       pledges;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpStatement\", [\r\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\r\n  [\"slotIndex\", xdr.lookup(\"Uint64\")],\r\n  [\"pledges\", xdr.lookup(\"ScpStatementPledges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPEnvelope\r\n//   {\r\n//       SCPStatement statement;\r\n//       Signature signature;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpEnvelope\", [\r\n  [\"statement\", xdr.lookup(\"ScpStatement\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPQuorumSet\r\n//   {\r\n//       uint32 threshold;\r\n//       NodeID validators<>;\r\n//       SCPQuorumSet innerSets<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpQuorumSet\", [\r\n  [\"threshold\", xdr.lookup(\"Uint32\")],\r\n  [\"validators\", xdr.varArray(xdr.lookup(\"NodeId\"), 2147483647)],\r\n  [\"innerSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Thresholds[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Thresholds\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string string32<32>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"String32\", xdr.string(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string string64<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"String64\", xdr.string(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef int64 SequenceNumber;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SequenceNumber\", xdr.lookup(\"Int64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque DataValue<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"DataValue\", xdr.varOpaque(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash PoolID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"PoolId\", xdr.lookup(\"Hash\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque AssetCode4[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AssetCode4\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque AssetCode12[12];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AssetCode12\", xdr.opaque(12));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AssetType\r\n//   {\r\n//       ASSET_TYPE_NATIVE = 0,\r\n//       ASSET_TYPE_CREDIT_ALPHANUM4 = 1,\r\n//       ASSET_TYPE_CREDIT_ALPHANUM12 = 2,\r\n//       ASSET_TYPE_POOL_SHARE = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AssetType\", {\r\n  assetTypeNative: 0,\r\n  assetTypeCreditAlphanum4: 1,\r\n  assetTypeCreditAlphanum12: 2,\r\n  assetTypePoolShare: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AssetCode switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AssetCode4 assetCode4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AssetCode12 assetCode12;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AssetCode\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeCreditAlphanum4\", \"assetCode4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"assetCode12\"],\r\n  ],\r\n  arms: {\r\n    assetCode4: xdr.lookup(\"AssetCode4\"),\r\n    assetCode12: xdr.lookup(\"AssetCode12\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AlphaNum4\r\n//   {\r\n//       AssetCode4 assetCode;\r\n//       AccountID issuer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AlphaNum4\", [\r\n  [\"assetCode\", xdr.lookup(\"AssetCode4\")],\r\n  [\"issuer\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AlphaNum12\r\n//   {\r\n//       AssetCode12 assetCode;\r\n//       AccountID issuer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AlphaNum12\", [\r\n  [\"assetCode\", xdr.lookup(\"AssetCode12\")],\r\n  [\"issuer\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Asset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Asset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Price\r\n//   {\r\n//       int32 n; // numerator\r\n//       int32 d; // denominator\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Price\", [\r\n  [\"n\", xdr.lookup(\"Int32\")],\r\n  [\"d\", xdr.lookup(\"Int32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Liabilities\r\n//   {\r\n//       int64 buying;\r\n//       int64 selling;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Liabilities\", [\r\n  [\"buying\", xdr.lookup(\"Int64\")],\r\n  [\"selling\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ThresholdIndexes\r\n//   {\r\n//       THRESHOLD_MASTER_WEIGHT = 0,\r\n//       THRESHOLD_LOW = 1,\r\n//       THRESHOLD_MED = 2,\r\n//       THRESHOLD_HIGH = 3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ThresholdIndices\", {\r\n  thresholdMasterWeight: 0,\r\n  thresholdLow: 1,\r\n  thresholdMed: 2,\r\n  thresholdHigh: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerEntryType\r\n//   {\r\n//       ACCOUNT = 0,\r\n//       TRUSTLINE = 1,\r\n//       OFFER = 2,\r\n//       DATA = 3,\r\n//       CLAIMABLE_BALANCE = 4,\r\n//       LIQUIDITY_POOL = 5,\r\n//       CONTRACT_DATA = 6,\r\n//       CONTRACT_CODE = 7,\r\n//       CONFIG_SETTING = 8,\r\n//       TTL = 9\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerEntryType\", {\r\n  account: 0,\r\n  trustline: 1,\r\n  offer: 2,\r\n  data: 3,\r\n  claimableBalance: 4,\r\n  liquidityPool: 5,\r\n  contractData: 6,\r\n  contractCode: 7,\r\n  configSetting: 8,\r\n  ttl: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Signer\r\n//   {\r\n//       SignerKey key;\r\n//       uint32 weight; // really only need 1 byte\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Signer\", [\r\n  [\"key\", xdr.lookup(\"SignerKey\")],\r\n  [\"weight\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AccountFlags\r\n//   { // masks for each flag\r\n//\r\n//       // Flags set on issuer accounts\r\n//       // TrustLines are created with authorized set to \"false\" requiring\r\n//       // the issuer to set it for each TrustLine\r\n//       AUTH_REQUIRED_FLAG = 0x1,\r\n//       // If set, the authorized flag in TrustLines can be cleared\r\n//       // otherwise, authorization cannot be revoked\r\n//       AUTH_REVOCABLE_FLAG = 0x2,\r\n//       // Once set, causes all AUTH_* flags to be read-only\r\n//       AUTH_IMMUTABLE_FLAG = 0x4,\r\n//       // Trustlines are created with clawback enabled set to \"true\",\r\n//       // and claimable balances created from those trustlines are created\r\n//       // with clawback enabled set to \"true\"\r\n//       AUTH_CLAWBACK_ENABLED_FLAG = 0x8\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AccountFlags\", {\r\n  authRequiredFlag: 1,\r\n  authRevocableFlag: 2,\r\n  authImmutableFlag: 4,\r\n  authClawbackEnabledFlag: 8,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_ACCOUNT_FLAGS = 0x7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_ACCOUNT_FLAGS\", 0x7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_ACCOUNT_FLAGS_V17 = 0xF;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_ACCOUNT_FLAGS_V17\", 0xF);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MAX_SIGNERS = 20;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MAX_SIGNERS\", 20);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef AccountID* SponsorshipDescriptor;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SponsorshipDescriptor\", xdr.option(xdr.lookup(\"AccountId\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV3\r\n//   {\r\n//       // We can use this to add more fields, or because it is first, to\r\n//       // change AccountEntryExtensionV3 into a union.\r\n//       ExtensionPoint ext;\r\n//\r\n//       // Ledger number at which `seqNum` took on its present value.\r\n//       uint32 seqLedger;\r\n//\r\n//       // Time at which `seqNum` took on its present value.\r\n//       TimePoint seqTime;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV3\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"seqLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"seqTime\", xdr.lookup(\"TimePoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 3:\r\n//           AccountEntryExtensionV3 v3;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExtensionV2Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [3, \"v3\"],\r\n  ],\r\n  arms: {\r\n    v3: xdr.lookup(\"AccountEntryExtensionV3\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV2\r\n//   {\r\n//       uint32 numSponsored;\r\n//       uint32 numSponsoring;\r\n//       SponsorshipDescriptor signerSponsoringIDs<MAX_SIGNERS>;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 3:\r\n//           AccountEntryExtensionV3 v3;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV2\", [\r\n  [\"numSponsored\", xdr.lookup(\"Uint32\")],\r\n  [\"numSponsoring\", xdr.lookup(\"Uint32\")],\r\n  [\"signerSponsoringIDs\", xdr.varArray(xdr.lookup(\"SponsorshipDescriptor\"), xdr.lookup(\"MAX_SIGNERS\"))],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV2Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 2:\r\n//           AccountEntryExtensionV2 v2;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [2, \"v2\"],\r\n  ],\r\n  arms: {\r\n    v2: xdr.lookup(\"AccountEntryExtensionV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntryExtensionV1\r\n//   {\r\n//       Liabilities liabilities;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 2:\r\n//           AccountEntryExtensionV2 v2;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntryExtensionV1\", [\r\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           AccountEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"AccountEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AccountEntry\r\n//   {\r\n//       AccountID accountID;      // master public key for this account\r\n//       int64 balance;            // in stroops\r\n//       SequenceNumber seqNum;    // last sequence number used for this account\r\n//       uint32 numSubEntries;     // number of sub-entries this account has\r\n//                                 // drives the reserve\r\n//       AccountID* inflationDest; // Account to vote for during inflation\r\n//       uint32 flags;             // see AccountFlags\r\n//\r\n//       string32 homeDomain; // can be used for reverse federation and memo lookup\r\n//\r\n//       // fields used for signatures\r\n//       // thresholds stores unsigned bytes: [weight of master|low|medium|high]\r\n//       Thresholds thresholds;\r\n//\r\n//       Signer signers<MAX_SIGNERS>; // possible signers for this account\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           AccountEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AccountEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"balance\", xdr.lookup(\"Int64\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"numSubEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"homeDomain\", xdr.lookup(\"String32\")],\r\n  [\"thresholds\", xdr.lookup(\"Thresholds\")],\r\n  [\"signers\", xdr.varArray(xdr.lookup(\"Signer\"), xdr.lookup(\"MAX_SIGNERS\"))],\r\n  [\"ext\", xdr.lookup(\"AccountEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TrustLineFlags\r\n//   {\r\n//       // issuer has authorized account to perform transactions with its credit\r\n//       AUTHORIZED_FLAG = 1,\r\n//       // issuer has authorized account to maintain and reduce liabilities for its\r\n//       // credit\r\n//       AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG = 2,\r\n//       // issuer has specified that it may clawback its credit, and that claimable\r\n//       // balances created with its credit may also be clawed back\r\n//       TRUSTLINE_CLAWBACK_ENABLED_FLAG = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TrustLineFlags\", {\r\n  authorizedFlag: 1,\r\n  authorizedToMaintainLiabilitiesFlag: 2,\r\n  trustlineClawbackEnabledFlag: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS = 1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS\", 1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS_V13 = 3;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V13\", 3);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_TRUSTLINE_FLAGS_V17 = 7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_TRUSTLINE_FLAGS_V17\", 7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolType\r\n//   {\r\n//       LIQUIDITY_POOL_CONSTANT_PRODUCT = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolType\", {\r\n  liquidityPoolConstantProduct: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TrustLineAsset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//   case ASSET_TYPE_POOL_SHARE:\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineAsset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n    [\"assetTypePoolShare\", \"liquidityPoolId\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n    liquidityPoolId: xdr.lookup(\"PoolId\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryExtensionV2Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TrustLineEntryExtensionV2\r\n//   {\r\n//       int32 liquidityPoolUseCount;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntryExtensionV2\", [\r\n  [\"liquidityPoolUseCount\", xdr.lookup(\"Int32\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryExtensionV2Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [2, \"v2\"],\r\n  ],\r\n  arms: {\r\n    v2: xdr.lookup(\"TrustLineEntryExtensionV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntryV1\", [\r\n  [\"liabilities\", xdr.lookup(\"Liabilities\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           } v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TrustLineEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"TrustLineEntryV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TrustLineEntry\r\n//   {\r\n//       AccountID accountID;  // account this trustline belongs to\r\n//       TrustLineAsset asset; // type of asset (with issuer)\r\n//       int64 balance;        // how much of this asset the user has.\r\n//                             // Asset defines the unit for this;\r\n//\r\n//       int64 limit;  // balance cannot be above this\r\n//       uint32 flags; // see TrustLineFlags\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           struct\r\n//           {\r\n//               Liabilities liabilities;\r\n//\r\n//               union switch (int v)\r\n//               {\r\n//               case 0:\r\n//                   void;\r\n//               case 2:\r\n//                   TrustLineEntryExtensionV2 v2;\r\n//               }\r\n//               ext;\r\n//           } v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TrustLineEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\r\n  [\"balance\", xdr.lookup(\"Int64\")],\r\n  [\"limit\", xdr.lookup(\"Int64\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"TrustLineEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OfferEntryFlags\r\n//   {\r\n//       // an offer with this flag will not act on and take a reverse offer of equal\r\n//       // price\r\n//       PASSIVE_FLAG = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OfferEntryFlags\", {\r\n  passiveFlag: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_OFFERENTRY_FLAGS = 1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_OFFERENTRY_FLAGS\", 1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OfferEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct OfferEntry\r\n//   {\r\n//       AccountID sellerID;\r\n//       int64 offerID;\r\n//       Asset selling; // A\r\n//       Asset buying;  // B\r\n//       int64 amount;  // amount of A\r\n//\r\n//       /* price for this offer:\r\n//           price of A in terms of B\r\n//           price=AmountB/AmountA=priceNumerator/priceDenominator\r\n//           price is after fees\r\n//       */\r\n//       Price price;\r\n//       uint32 flags; // see OfferEntryFlags\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"OfferEntry\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"OfferEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"DataEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DataEntry\r\n//   {\r\n//       AccountID accountID; // account this data belongs to\r\n//       string64 dataName;\r\n//       DataValue dataValue;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DataEntry\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n  [\"dataValue\", xdr.lookup(\"DataValue\")],\r\n  [\"ext\", xdr.lookup(\"DataEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimPredicateType\r\n//   {\r\n//       CLAIM_PREDICATE_UNCONDITIONAL = 0,\r\n//       CLAIM_PREDICATE_AND = 1,\r\n//       CLAIM_PREDICATE_OR = 2,\r\n//       CLAIM_PREDICATE_NOT = 3,\r\n//       CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME = 4,\r\n//       CLAIM_PREDICATE_BEFORE_RELATIVE_TIME = 5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimPredicateType\", {\r\n  claimPredicateUnconditional: 0,\r\n  claimPredicateAnd: 1,\r\n  claimPredicateOr: 2,\r\n  claimPredicateNot: 3,\r\n  claimPredicateBeforeAbsoluteTime: 4,\r\n  claimPredicateBeforeRelativeTime: 5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimPredicate switch (ClaimPredicateType type)\r\n//   {\r\n//   case CLAIM_PREDICATE_UNCONDITIONAL:\r\n//       void;\r\n//   case CLAIM_PREDICATE_AND:\r\n//       ClaimPredicate andPredicates<2>;\r\n//   case CLAIM_PREDICATE_OR:\r\n//       ClaimPredicate orPredicates<2>;\r\n//   case CLAIM_PREDICATE_NOT:\r\n//       ClaimPredicate* notPredicate;\r\n//   case CLAIM_PREDICATE_BEFORE_ABSOLUTE_TIME:\r\n//       int64 absBefore; // Predicate will be true if closeTime < absBefore\r\n//   case CLAIM_PREDICATE_BEFORE_RELATIVE_TIME:\r\n//       int64 relBefore; // Seconds since closeTime of the ledger in which the\r\n//                        // ClaimableBalanceEntry was created\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimPredicate\", {\r\n  switchOn: xdr.lookup(\"ClaimPredicateType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimPredicateUnconditional\", xdr.void()],\r\n    [\"claimPredicateAnd\", \"andPredicates\"],\r\n    [\"claimPredicateOr\", \"orPredicates\"],\r\n    [\"claimPredicateNot\", \"notPredicate\"],\r\n    [\"claimPredicateBeforeAbsoluteTime\", \"absBefore\"],\r\n    [\"claimPredicateBeforeRelativeTime\", \"relBefore\"],\r\n  ],\r\n  arms: {\r\n    andPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\r\n    orPredicates: xdr.varArray(xdr.lookup(\"ClaimPredicate\"), 2),\r\n    notPredicate: xdr.option(xdr.lookup(\"ClaimPredicate\")),\r\n    absBefore: xdr.lookup(\"Int64\"),\r\n    relBefore: xdr.lookup(\"Int64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimantType\r\n//   {\r\n//       CLAIMANT_TYPE_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimantType\", {\r\n  claimantTypeV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID destination;    // The account that can use this condition\r\n//           ClaimPredicate predicate; // Claimable if predicate is true\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimantV0\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"predicate\", xdr.lookup(\"ClaimPredicate\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Claimant switch (ClaimantType type)\r\n//   {\r\n//   case CLAIMANT_TYPE_V0:\r\n//       struct\r\n//       {\r\n//           AccountID destination;    // The account that can use this condition\r\n//           ClaimPredicate predicate; // Claimable if predicate is true\r\n//       } v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Claimant\", {\r\n  switchOn: xdr.lookup(\"ClaimantType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimantTypeV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ClaimantV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimableBalanceIDType\r\n//   {\r\n//       CLAIMABLE_BALANCE_ID_TYPE_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimableBalanceIdType\", {\r\n  claimableBalanceIdTypeV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimableBalanceID switch (ClaimableBalanceIDType type)\r\n//   {\r\n//   case CLAIMABLE_BALANCE_ID_TYPE_V0:\r\n//       Hash v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceId\", {\r\n  switchOn: xdr.lookup(\"ClaimableBalanceIdType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimableBalanceIdTypeV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimableBalanceFlags\r\n//   {\r\n//       // If set, the issuer account of the asset held by the claimable balance may\r\n//       // clawback the claimable balance\r\n//       CLAIMABLE_BALANCE_CLAWBACK_ENABLED_FLAG = 0x1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimableBalanceFlags\", {\r\n  claimableBalanceClawbackEnabledFlag: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_CLAIMABLE_BALANCE_FLAGS = 0x1;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_CLAIMABLE_BALANCE_FLAGS\", 0x1);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimableBalanceEntryExtensionV1\r\n//   {\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//\r\n//       uint32 flags; // see ClaimableBalanceFlags\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimableBalanceEntryExtensionV1\", [\r\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExtensionV1Ext\")],\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           ClaimableBalanceEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimableBalanceEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"ClaimableBalanceEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimableBalanceEntry\r\n//   {\r\n//       // Unique identifier for this ClaimableBalanceEntry\r\n//       ClaimableBalanceID balanceID;\r\n//\r\n//       // List of claimants with associated predicate\r\n//       Claimant claimants<10>;\r\n//\r\n//       // Any asset including native\r\n//       Asset asset;\r\n//\r\n//       // Amount of asset\r\n//       int64 amount;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           ClaimableBalanceEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimableBalanceEntry\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"ext\", xdr.lookup(\"ClaimableBalanceEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolConstantProductParameters\r\n//   {\r\n//       Asset assetA; // assetA < assetB\r\n//       Asset assetB;\r\n//       int32 fee; // Fee is in basis points, so the actual rate is (fee/100)%\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolConstantProductParameters\", [\r\n  [\"assetA\", xdr.lookup(\"Asset\")],\r\n  [\"assetB\", xdr.lookup(\"Asset\")],\r\n  [\"fee\", xdr.lookup(\"Int32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolEntryConstantProduct\", [\r\n  [\"params\", xdr.lookup(\"LiquidityPoolConstantProductParameters\")],\r\n  [\"reserveA\", xdr.lookup(\"Int64\")],\r\n  [\"reserveB\", xdr.lookup(\"Int64\")],\r\n  [\"totalPoolShares\", xdr.lookup(\"Int64\")],\r\n  [\"poolSharesTrustLineCount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (LiquidityPoolType type)\r\n//       {\r\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//           struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           } constantProduct;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolEntryBody\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\r\n  ],\r\n  arms: {\r\n    constantProduct: xdr.lookup(\"LiquidityPoolEntryConstantProduct\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolEntry\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       union switch (LiquidityPoolType type)\r\n//       {\r\n//       case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//           struct\r\n//           {\r\n//               LiquidityPoolConstantProductParameters params;\r\n//\r\n//               int64 reserveA;        // amount of A in the pool\r\n//               int64 reserveB;        // amount of B in the pool\r\n//               int64 totalPoolShares; // total number of pool shares issued\r\n//               int64 poolSharesTrustLineCount; // number of trust lines for the\r\n//                                               // associated pool shares\r\n//           } constantProduct;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolEntry\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"body\", xdr.lookup(\"LiquidityPoolEntryBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractDataDurability {\r\n//       TEMPORARY = 0,\r\n//       PERSISTENT = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractDataDurability\", {\r\n  temporary: 0,\r\n  persistent: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractDataEntry {\r\n//       ExtensionPoint ext;\r\n//\r\n//       SCAddress contract;\r\n//       SCVal key;\r\n//       ContractDataDurability durability;\r\n//       SCVal val;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractDataEntry\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"contract\", xdr.lookup(\"ScAddress\")],\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\r\n  [\"val\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCodeCostInputs {\r\n//       ExtensionPoint ext;\r\n//       uint32 nInstructions;\r\n//       uint32 nFunctions;\r\n//       uint32 nGlobals;\r\n//       uint32 nTableEntries;\r\n//       uint32 nTypes;\r\n//       uint32 nDataSegments;\r\n//       uint32 nElemSegments;\r\n//       uint32 nImports;\r\n//       uint32 nExports;\r\n//       uint32 nDataSegmentBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeCostInputs\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"nInstructions\", xdr.lookup(\"Uint32\")],\r\n  [\"nFunctions\", xdr.lookup(\"Uint32\")],\r\n  [\"nGlobals\", xdr.lookup(\"Uint32\")],\r\n  [\"nTableEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"nTypes\", xdr.lookup(\"Uint32\")],\r\n  [\"nDataSegments\", xdr.lookup(\"Uint32\")],\r\n  [\"nElemSegments\", xdr.lookup(\"Uint32\")],\r\n  [\"nImports\", xdr.lookup(\"Uint32\")],\r\n  [\"nExports\", xdr.lookup(\"Uint32\")],\r\n  [\"nDataSegmentBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeEntryV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"costInputs\", xdr.lookup(\"ContractCodeCostInputs\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//           case 0:\r\n//               void;\r\n//           case 1:\r\n//               struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               } v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractCodeEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"ContractCodeEntryV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCodeEntry {\r\n//       union switch (int v)\r\n//       {\r\n//           case 0:\r\n//               void;\r\n//           case 1:\r\n//               struct\r\n//               {\r\n//                   ExtensionPoint ext;\r\n//                   ContractCodeCostInputs costInputs;\r\n//               } v1;\r\n//       } ext;\r\n//\r\n//       Hash hash;\r\n//       opaque code<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCodeEntry\", [\r\n  [\"ext\", xdr.lookup(\"ContractCodeEntryExt\")],\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n  [\"code\", xdr.varOpaque()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TTLEntry {\r\n//       // Hash of the LedgerKey that is associated with this TTLEntry\r\n//       Hash keyHash;\r\n//       uint32 liveUntilLedgerSeq;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TtlEntry\", [\r\n  [\"keyHash\", xdr.lookup(\"Hash\")],\r\n  [\"liveUntilLedgerSeq\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerEntryExtensionV1\r\n//   {\r\n//       SponsorshipDescriptor sponsoringID;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerEntryExtensionV1\", [\r\n  [\"sponsoringId\", xdr.lookup(\"SponsorshipDescriptor\")],\r\n  [\"ext\", xdr.lookup(\"LedgerEntryExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (LedgerEntryType type)\r\n//       {\r\n//       case ACCOUNT:\r\n//           AccountEntry account;\r\n//       case TRUSTLINE:\r\n//           TrustLineEntry trustLine;\r\n//       case OFFER:\r\n//           OfferEntry offer;\r\n//       case DATA:\r\n//           DataEntry data;\r\n//       case CLAIMABLE_BALANCE:\r\n//           ClaimableBalanceEntry claimableBalance;\r\n//       case LIQUIDITY_POOL:\r\n//           LiquidityPoolEntry liquidityPool;\r\n//       case CONTRACT_DATA:\r\n//           ContractDataEntry contractData;\r\n//       case CONTRACT_CODE:\r\n//           ContractCodeEntry contractCode;\r\n//       case CONFIG_SETTING:\r\n//           ConfigSettingEntry configSetting;\r\n//       case TTL:\r\n//           TTLEntry ttl;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryData\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"account\", \"account\"],\r\n    [\"trustline\", \"trustLine\"],\r\n    [\"offer\", \"offer\"],\r\n    [\"data\", \"data\"],\r\n    [\"claimableBalance\", \"claimableBalance\"],\r\n    [\"liquidityPool\", \"liquidityPool\"],\r\n    [\"contractData\", \"contractData\"],\r\n    [\"contractCode\", \"contractCode\"],\r\n    [\"configSetting\", \"configSetting\"],\r\n    [\"ttl\", \"ttl\"],\r\n  ],\r\n  arms: {\r\n    account: xdr.lookup(\"AccountEntry\"),\r\n    trustLine: xdr.lookup(\"TrustLineEntry\"),\r\n    offer: xdr.lookup(\"OfferEntry\"),\r\n    data: xdr.lookup(\"DataEntry\"),\r\n    claimableBalance: xdr.lookup(\"ClaimableBalanceEntry\"),\r\n    liquidityPool: xdr.lookup(\"LiquidityPoolEntry\"),\r\n    contractData: xdr.lookup(\"ContractDataEntry\"),\r\n    contractCode: xdr.lookup(\"ContractCodeEntry\"),\r\n    configSetting: xdr.lookup(\"ConfigSettingEntry\"),\r\n    ttl: xdr.lookup(\"TtlEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerEntryExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerEntryExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerEntry\r\n//   {\r\n//       uint32 lastModifiedLedgerSeq; // ledger the LedgerEntry was last changed\r\n//\r\n//       union switch (LedgerEntryType type)\r\n//       {\r\n//       case ACCOUNT:\r\n//           AccountEntry account;\r\n//       case TRUSTLINE:\r\n//           TrustLineEntry trustLine;\r\n//       case OFFER:\r\n//           OfferEntry offer;\r\n//       case DATA:\r\n//           DataEntry data;\r\n//       case CLAIMABLE_BALANCE:\r\n//           ClaimableBalanceEntry claimableBalance;\r\n//       case LIQUIDITY_POOL:\r\n//           LiquidityPoolEntry liquidityPool;\r\n//       case CONTRACT_DATA:\r\n//           ContractDataEntry contractData;\r\n//       case CONTRACT_CODE:\r\n//           ContractCodeEntry contractCode;\r\n//       case CONFIG_SETTING:\r\n//           ConfigSettingEntry configSetting;\r\n//       case TTL:\r\n//           TTLEntry ttl;\r\n//       }\r\n//       data;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerEntryExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerEntry\", [\r\n  [\"lastModifiedLedgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"data\", xdr.lookup(\"LedgerEntryData\")],\r\n  [\"ext\", xdr.lookup(\"LedgerEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyAccount\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           TrustLineAsset asset;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyTrustLine\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"TrustLineAsset\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sellerID;\r\n//           int64 offerID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyOffer\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           string64 dataName;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyData\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimableBalanceID balanceID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyClaimableBalance\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           PoolID liquidityPoolID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyLiquidityPool\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           SCAddress contract;\r\n//           SCVal key;\r\n//           ContractDataDurability durability;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyContractData\", [\r\n  [\"contract\", xdr.lookup(\"ScAddress\")],\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"durability\", xdr.lookup(\"ContractDataDurability\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash hash;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyContractCode\", [\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ConfigSettingID configSettingID;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyConfigSetting\", [\r\n  [\"configSettingId\", xdr.lookup(\"ConfigSettingId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           // Hash of the LedgerKey that is associated with this TTLEntry\r\n//           Hash keyHash;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerKeyTtl\", [\r\n  [\"keyHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerKey switch (LedgerEntryType type)\r\n//   {\r\n//   case ACCOUNT:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//       } account;\r\n//\r\n//   case TRUSTLINE:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           TrustLineAsset asset;\r\n//       } trustLine;\r\n//\r\n//   case OFFER:\r\n//       struct\r\n//       {\r\n//           AccountID sellerID;\r\n//           int64 offerID;\r\n//       } offer;\r\n//\r\n//   case DATA:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           string64 dataName;\r\n//       } data;\r\n//\r\n//   case CLAIMABLE_BALANCE:\r\n//       struct\r\n//       {\r\n//           ClaimableBalanceID balanceID;\r\n//       } claimableBalance;\r\n//\r\n//   case LIQUIDITY_POOL:\r\n//       struct\r\n//       {\r\n//           PoolID liquidityPoolID;\r\n//       } liquidityPool;\r\n//   case CONTRACT_DATA:\r\n//       struct\r\n//       {\r\n//           SCAddress contract;\r\n//           SCVal key;\r\n//           ContractDataDurability durability;\r\n//       } contractData;\r\n//   case CONTRACT_CODE:\r\n//       struct\r\n//       {\r\n//           Hash hash;\r\n//       } contractCode;\r\n//   case CONFIG_SETTING:\r\n//       struct\r\n//       {\r\n//           ConfigSettingID configSettingID;\r\n//       } configSetting;\r\n//   case TTL:\r\n//       struct\r\n//       {\r\n//           // Hash of the LedgerKey that is associated with this TTLEntry\r\n//           Hash keyHash;\r\n//       } ttl;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerKey\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"account\", \"account\"],\r\n    [\"trustline\", \"trustLine\"],\r\n    [\"offer\", \"offer\"],\r\n    [\"data\", \"data\"],\r\n    [\"claimableBalance\", \"claimableBalance\"],\r\n    [\"liquidityPool\", \"liquidityPool\"],\r\n    [\"contractData\", \"contractData\"],\r\n    [\"contractCode\", \"contractCode\"],\r\n    [\"configSetting\", \"configSetting\"],\r\n    [\"ttl\", \"ttl\"],\r\n  ],\r\n  arms: {\r\n    account: xdr.lookup(\"LedgerKeyAccount\"),\r\n    trustLine: xdr.lookup(\"LedgerKeyTrustLine\"),\r\n    offer: xdr.lookup(\"LedgerKeyOffer\"),\r\n    data: xdr.lookup(\"LedgerKeyData\"),\r\n    claimableBalance: xdr.lookup(\"LedgerKeyClaimableBalance\"),\r\n    liquidityPool: xdr.lookup(\"LedgerKeyLiquidityPool\"),\r\n    contractData: xdr.lookup(\"LedgerKeyContractData\"),\r\n    contractCode: xdr.lookup(\"LedgerKeyContractCode\"),\r\n    configSetting: xdr.lookup(\"LedgerKeyConfigSetting\"),\r\n    ttl: xdr.lookup(\"LedgerKeyTtl\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum EnvelopeType\r\n//   {\r\n//       ENVELOPE_TYPE_TX_V0 = 0,\r\n//       ENVELOPE_TYPE_SCP = 1,\r\n//       ENVELOPE_TYPE_TX = 2,\r\n//       ENVELOPE_TYPE_AUTH = 3,\r\n//       ENVELOPE_TYPE_SCPVALUE = 4,\r\n//       ENVELOPE_TYPE_TX_FEE_BUMP = 5,\r\n//       ENVELOPE_TYPE_OP_ID = 6,\r\n//       ENVELOPE_TYPE_POOL_REVOKE_OP_ID = 7,\r\n//       ENVELOPE_TYPE_CONTRACT_ID = 8,\r\n//       ENVELOPE_TYPE_SOROBAN_AUTHORIZATION = 9\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"EnvelopeType\", {\r\n  envelopeTypeTxV0: 0,\r\n  envelopeTypeScp: 1,\r\n  envelopeTypeTx: 2,\r\n  envelopeTypeAuth: 3,\r\n  envelopeTypeScpvalue: 4,\r\n  envelopeTypeTxFeeBump: 5,\r\n  envelopeTypeOpId: 6,\r\n  envelopeTypePoolRevokeOpId: 7,\r\n  envelopeTypeContractId: 8,\r\n  envelopeTypeSorobanAuthorization: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque UpgradeType<128>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"UpgradeType\", xdr.varOpaque(128));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum StellarValueType\r\n//   {\r\n//       STELLAR_VALUE_BASIC = 0,\r\n//       STELLAR_VALUE_SIGNED = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"StellarValueType\", {\r\n  stellarValueBasic: 0,\r\n  stellarValueSigned: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseValueSignature\r\n//   {\r\n//       NodeID nodeID;       // which node introduced the value\r\n//       Signature signature; // nodeID's signature\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseValueSignature\", [\r\n  [\"nodeId\", xdr.lookup(\"NodeId\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (StellarValueType v)\r\n//       {\r\n//       case STELLAR_VALUE_BASIC:\r\n//           void;\r\n//       case STELLAR_VALUE_SIGNED:\r\n//           LedgerCloseValueSignature lcValueSignature;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"StellarValueExt\", {\r\n  switchOn: xdr.lookup(\"StellarValueType\"),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [\"stellarValueBasic\", xdr.void()],\r\n    [\"stellarValueSigned\", \"lcValueSignature\"],\r\n  ],\r\n  arms: {\r\n    lcValueSignature: xdr.lookup(\"LedgerCloseValueSignature\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct StellarValue\r\n//   {\r\n//       Hash txSetHash;      // transaction set to apply to previous ledger\r\n//       TimePoint closeTime; // network close time\r\n//\r\n//       // upgrades to apply to the previous ledger (usually empty)\r\n//       // this is a vector of encoded 'LedgerUpgrade' so that nodes can drop\r\n//       // unknown steps during consensus if needed.\r\n//       // see notes below on 'LedgerUpgrade' for more detail\r\n//       // max size is dictated by number of upgrade types (+ room for future)\r\n//       UpgradeType upgrades<6>;\r\n//\r\n//       // reserved for future use\r\n//       union switch (StellarValueType v)\r\n//       {\r\n//       case STELLAR_VALUE_BASIC:\r\n//           void;\r\n//       case STELLAR_VALUE_SIGNED:\r\n//           LedgerCloseValueSignature lcValueSignature;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"StellarValue\", [\r\n  [\"txSetHash\", xdr.lookup(\"Hash\")],\r\n  [\"closeTime\", xdr.lookup(\"TimePoint\")],\r\n  [\"upgrades\", xdr.varArray(xdr.lookup(\"UpgradeType\"), 6)],\r\n  [\"ext\", xdr.lookup(\"StellarValueExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MASK_LEDGER_HEADER_FLAGS = 0x7;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MASK_LEDGER_HEADER_FLAGS\", 0x7);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerHeaderFlags\r\n//   {\r\n//       DISABLE_LIQUIDITY_POOL_TRADING_FLAG = 0x1,\r\n//       DISABLE_LIQUIDITY_POOL_DEPOSIT_FLAG = 0x2,\r\n//       DISABLE_LIQUIDITY_POOL_WITHDRAWAL_FLAG = 0x4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerHeaderFlags\", {\r\n  disableLiquidityPoolTradingFlag: 1,\r\n  disableLiquidityPoolDepositFlag: 2,\r\n  disableLiquidityPoolWithdrawalFlag: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderExtensionV1Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeaderExtensionV1\r\n//   {\r\n//       uint32 flags; // LedgerHeaderFlags\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeaderExtensionV1\", [\r\n  [\"flags\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderExtensionV1Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerHeaderExtensionV1 v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerHeaderExtensionV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeader\r\n//   {\r\n//       uint32 ledgerVersion;    // the protocol version of the ledger\r\n//       Hash previousLedgerHash; // hash of the previous ledger header\r\n//       StellarValue scpValue;   // what consensus agreed to\r\n//       Hash txSetResultHash;    // the TransactionResultSet that led to this ledger\r\n//       Hash bucketListHash;     // hash of the ledger state\r\n//\r\n//       uint32 ledgerSeq; // sequence number of this ledger\r\n//\r\n//       int64 totalCoins; // total number of stroops in existence.\r\n//                         // 10,000,000 stroops in 1 XLM\r\n//\r\n//       int64 feePool;       // fees burned since last inflation run\r\n//       uint32 inflationSeq; // inflation sequence number\r\n//\r\n//       uint64 idPool; // last used global ID, used for generating objects\r\n//\r\n//       uint32 baseFee;     // base fee per operation in stroops\r\n//       uint32 baseReserve; // account base reserve in stroops\r\n//\r\n//       uint32 maxTxSetSize; // maximum size a transaction set can be\r\n//\r\n//       Hash skipList[4]; // hashes of ledgers in the past. allows you to jump back\r\n//                         // in time without walking the chain back ledger by ledger\r\n//                         // each slot contains the oldest ledger that is mod of\r\n//                         // either 50  5000  50000 or 500000 depending on index\r\n//                         // skipList[0] mod(50), skipList[1] mod(5000), etc\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           LedgerHeaderExtensionV1 v1;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeader\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"scpValue\", xdr.lookup(\"StellarValue\")],\r\n  [\"txSetResultHash\", xdr.lookup(\"Hash\")],\r\n  [\"bucketListHash\", xdr.lookup(\"Hash\")],\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"totalCoins\", xdr.lookup(\"Int64\")],\r\n  [\"feePool\", xdr.lookup(\"Int64\")],\r\n  [\"inflationSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"idPool\", xdr.lookup(\"Uint64\")],\r\n  [\"baseFee\", xdr.lookup(\"Uint32\")],\r\n  [\"baseReserve\", xdr.lookup(\"Uint32\")],\r\n  [\"maxTxSetSize\", xdr.lookup(\"Uint32\")],\r\n  [\"skipList\", xdr.array(xdr.lookup(\"Hash\"), 4)],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerUpgradeType\r\n//   {\r\n//       LEDGER_UPGRADE_VERSION = 1,\r\n//       LEDGER_UPGRADE_BASE_FEE = 2,\r\n//       LEDGER_UPGRADE_MAX_TX_SET_SIZE = 3,\r\n//       LEDGER_UPGRADE_BASE_RESERVE = 4,\r\n//       LEDGER_UPGRADE_FLAGS = 5,\r\n//       LEDGER_UPGRADE_CONFIG = 6,\r\n//       LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE = 7\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerUpgradeType\", {\r\n  ledgerUpgradeVersion: 1,\r\n  ledgerUpgradeBaseFee: 2,\r\n  ledgerUpgradeMaxTxSetSize: 3,\r\n  ledgerUpgradeBaseReserve: 4,\r\n  ledgerUpgradeFlags: 5,\r\n  ledgerUpgradeConfig: 6,\r\n  ledgerUpgradeMaxSorobanTxSetSize: 7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigUpgradeSetKey {\r\n//       Hash contractID;\r\n//       Hash contentHash;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigUpgradeSetKey\", [\r\n  [\"contractId\", xdr.lookup(\"Hash\")],\r\n  [\"contentHash\", xdr.lookup(\"Hash\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerUpgrade switch (LedgerUpgradeType type)\r\n//   {\r\n//   case LEDGER_UPGRADE_VERSION:\r\n//       uint32 newLedgerVersion; // update ledgerVersion\r\n//   case LEDGER_UPGRADE_BASE_FEE:\r\n//       uint32 newBaseFee; // update baseFee\r\n//   case LEDGER_UPGRADE_MAX_TX_SET_SIZE:\r\n//       uint32 newMaxTxSetSize; // update maxTxSetSize\r\n//   case LEDGER_UPGRADE_BASE_RESERVE:\r\n//       uint32 newBaseReserve; // update baseReserve\r\n//   case LEDGER_UPGRADE_FLAGS:\r\n//       uint32 newFlags; // update flags\r\n//   case LEDGER_UPGRADE_CONFIG:\r\n//       // Update arbitrary `ConfigSetting` entries identified by the key.\r\n//       ConfigUpgradeSetKey newConfig;\r\n//   case LEDGER_UPGRADE_MAX_SOROBAN_TX_SET_SIZE:\r\n//       // Update ConfigSettingContractExecutionLanesV0.ledgerMaxTxCount without\r\n//       // using `LEDGER_UPGRADE_CONFIG`.\r\n//       uint32 newMaxSorobanTxSetSize;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerUpgrade\", {\r\n  switchOn: xdr.lookup(\"LedgerUpgradeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"ledgerUpgradeVersion\", \"newLedgerVersion\"],\r\n    [\"ledgerUpgradeBaseFee\", \"newBaseFee\"],\r\n    [\"ledgerUpgradeMaxTxSetSize\", \"newMaxTxSetSize\"],\r\n    [\"ledgerUpgradeBaseReserve\", \"newBaseReserve\"],\r\n    [\"ledgerUpgradeFlags\", \"newFlags\"],\r\n    [\"ledgerUpgradeConfig\", \"newConfig\"],\r\n    [\"ledgerUpgradeMaxSorobanTxSetSize\", \"newMaxSorobanTxSetSize\"],\r\n  ],\r\n  arms: {\r\n    newLedgerVersion: xdr.lookup(\"Uint32\"),\r\n    newBaseFee: xdr.lookup(\"Uint32\"),\r\n    newMaxTxSetSize: xdr.lookup(\"Uint32\"),\r\n    newBaseReserve: xdr.lookup(\"Uint32\"),\r\n    newFlags: xdr.lookup(\"Uint32\"),\r\n    newConfig: xdr.lookup(\"ConfigUpgradeSetKey\"),\r\n    newMaxSorobanTxSetSize: xdr.lookup(\"Uint32\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigUpgradeSet {\r\n//       ConfigSettingEntry updatedEntry<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigUpgradeSet\", [\r\n  [\"updatedEntry\", xdr.varArray(xdr.lookup(\"ConfigSettingEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BucketEntryType\r\n//   {\r\n//       METAENTRY =\r\n//           -1, // At-and-after protocol 11: bucket metadata, should come first.\r\n//       LIVEENTRY = 0, // Before protocol 11: created-or-updated;\r\n//                      // At-and-after protocol 11: only updated.\r\n//       DEADENTRY = 1,\r\n//       INITENTRY = 2 // At-and-after protocol 11: only created.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BucketEntryType\", {\r\n  metaentry: -1,\r\n  liveentry: 0,\r\n  deadentry: 1,\r\n  initentry: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BucketMetadataExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BucketMetadata\r\n//   {\r\n//       // Indicates the protocol version used to create / merge this bucket.\r\n//       uint32 ledgerVersion;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BucketMetadata\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"ext\", xdr.lookup(\"BucketMetadataExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BucketEntry switch (BucketEntryType type)\r\n//   {\r\n//   case LIVEENTRY:\r\n//   case INITENTRY:\r\n//       LedgerEntry liveEntry;\r\n//\r\n//   case DEADENTRY:\r\n//       LedgerKey deadEntry;\r\n//   case METAENTRY:\r\n//       BucketMetadata metaEntry;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BucketEntry\", {\r\n  switchOn: xdr.lookup(\"BucketEntryType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liveentry\", \"liveEntry\"],\r\n    [\"initentry\", \"liveEntry\"],\r\n    [\"deadentry\", \"deadEntry\"],\r\n    [\"metaentry\", \"metaEntry\"],\r\n  ],\r\n  arms: {\r\n    liveEntry: xdr.lookup(\"LedgerEntry\"),\r\n    deadEntry: xdr.lookup(\"LedgerKey\"),\r\n    metaEntry: xdr.lookup(\"BucketMetadata\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TxSetComponentType\r\n//   {\r\n//     // txs with effective fee <= bid derived from a base fee (if any).\r\n//     // If base fee is not specified, no discount is applied.\r\n//     TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TxSetComponentType\", {\r\n  txsetCompTxsMaybeDiscountedFee: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//     {\r\n//       int64* baseFee;\r\n//       TransactionEnvelope txs<>;\r\n//     }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TxSetComponentTxsMaybeDiscountedFee\", [\r\n  [\"baseFee\", xdr.option(xdr.lookup(\"Int64\"))],\r\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TxSetComponent switch (TxSetComponentType type)\r\n//   {\r\n//   case TXSET_COMP_TXS_MAYBE_DISCOUNTED_FEE:\r\n//     struct\r\n//     {\r\n//       int64* baseFee;\r\n//       TransactionEnvelope txs<>;\r\n//     } txsMaybeDiscountedFee;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TxSetComponent\", {\r\n  switchOn: xdr.lookup(\"TxSetComponentType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"txsetCompTxsMaybeDiscountedFee\", \"txsMaybeDiscountedFee\"],\r\n  ],\r\n  arms: {\r\n    txsMaybeDiscountedFee: xdr.lookup(\"TxSetComponentTxsMaybeDiscountedFee\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionPhase switch (int v)\r\n//   {\r\n//   case 0:\r\n//       TxSetComponent v0Components<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionPhase\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0Components\"],\r\n  ],\r\n  arms: {\r\n    v0Components: xdr.varArray(xdr.lookup(\"TxSetComponent\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSet\r\n//   {\r\n//       Hash previousLedgerHash;\r\n//       TransactionEnvelope txs<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSet\", [\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"txes\", xdr.varArray(xdr.lookup(\"TransactionEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSetV1\r\n//   {\r\n//       Hash previousLedgerHash;\r\n//       TransactionPhase phases<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSetV1\", [\r\n  [\"previousLedgerHash\", xdr.lookup(\"Hash\")],\r\n  [\"phases\", xdr.varArray(xdr.lookup(\"TransactionPhase\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union GeneralizedTransactionSet switch (int v)\r\n//   {\r\n//   // We consider the legacy TransactionSet to be v0.\r\n//   case 1:\r\n//       TransactionSetV1 v1TxSet;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"GeneralizedTransactionSet\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [1, \"v1TxSet\"],\r\n  ],\r\n  arms: {\r\n    v1TxSet: xdr.lookup(\"TransactionSetV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultPair\r\n//   {\r\n//       Hash transactionHash;\r\n//       TransactionResult result; // result for the transaction\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultPair\", [\r\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\r\n  [\"result\", xdr.lookup(\"TransactionResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultSet\r\n//   {\r\n//       TransactionResultPair results<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultSet\", [\r\n  [\"results\", xdr.varArray(xdr.lookup(\"TransactionResultPair\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           GeneralizedTransactionSet generalizedTxSet;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionHistoryEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"generalizedTxSet\"],\r\n  ],\r\n  arms: {\r\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionHistoryEntry\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       TransactionSet txSet;\r\n//\r\n//       // when v != 0, txSet must be empty\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           GeneralizedTransactionSet generalizedTxSet;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionHistoryEntry\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\r\n  [\"ext\", xdr.lookup(\"TransactionHistoryEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionHistoryResultEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionHistoryResultEntry\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       TransactionResultSet txResultSet;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionHistoryResultEntry\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"txResultSet\", xdr.lookup(\"TransactionResultSet\")],\r\n  [\"ext\", xdr.lookup(\"TransactionHistoryResultEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerHeaderHistoryEntryExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerHeaderHistoryEntry\r\n//   {\r\n//       Hash hash;\r\n//       LedgerHeader header;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerHeaderHistoryEntry\", [\r\n  [\"hash\", xdr.lookup(\"Hash\")],\r\n  [\"header\", xdr.lookup(\"LedgerHeader\")],\r\n  [\"ext\", xdr.lookup(\"LedgerHeaderHistoryEntryExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerSCPMessages\r\n//   {\r\n//       uint32 ledgerSeq;\r\n//       SCPEnvelope messages<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerScpMessages\", [\r\n  [\"ledgerSeq\", xdr.lookup(\"Uint32\")],\r\n  [\"messages\", xdr.varArray(xdr.lookup(\"ScpEnvelope\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCPHistoryEntryV0\r\n//   {\r\n//       SCPQuorumSet quorumSets<>; // additional quorum sets used by ledgerMessages\r\n//       LedgerSCPMessages ledgerMessages;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScpHistoryEntryV0\", [\r\n  [\"quorumSets\", xdr.varArray(xdr.lookup(\"ScpQuorumSet\"), 2147483647)],\r\n  [\"ledgerMessages\", xdr.lookup(\"LedgerScpMessages\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCPHistoryEntry switch (int v)\r\n//   {\r\n//   case 0:\r\n//       SCPHistoryEntryV0 v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScpHistoryEntry\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ScpHistoryEntryV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LedgerEntryChangeType\r\n//   {\r\n//       LEDGER_ENTRY_CREATED = 0, // entry was added to the ledger\r\n//       LEDGER_ENTRY_UPDATED = 1, // entry was modified in the ledger\r\n//       LEDGER_ENTRY_REMOVED = 2, // entry was removed from the ledger\r\n//       LEDGER_ENTRY_STATE = 3    // value of the entry\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LedgerEntryChangeType\", {\r\n  ledgerEntryCreated: 0,\r\n  ledgerEntryUpdated: 1,\r\n  ledgerEntryRemoved: 2,\r\n  ledgerEntryState: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerEntryChange switch (LedgerEntryChangeType type)\r\n//   {\r\n//   case LEDGER_ENTRY_CREATED:\r\n//       LedgerEntry created;\r\n//   case LEDGER_ENTRY_UPDATED:\r\n//       LedgerEntry updated;\r\n//   case LEDGER_ENTRY_REMOVED:\r\n//       LedgerKey removed;\r\n//   case LEDGER_ENTRY_STATE:\r\n//       LedgerEntry state;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerEntryChange\", {\r\n  switchOn: xdr.lookup(\"LedgerEntryChangeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"ledgerEntryCreated\", \"created\"],\r\n    [\"ledgerEntryUpdated\", \"updated\"],\r\n    [\"ledgerEntryRemoved\", \"removed\"],\r\n    [\"ledgerEntryState\", \"state\"],\r\n  ],\r\n  arms: {\r\n    created: xdr.lookup(\"LedgerEntry\"),\r\n    updated: xdr.lookup(\"LedgerEntry\"),\r\n    removed: xdr.lookup(\"LedgerKey\"),\r\n    state: xdr.lookup(\"LedgerEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef LedgerEntryChange LedgerEntryChanges<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"LedgerEntryChanges\", xdr.varArray(xdr.lookup(\"LedgerEntryChange\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct OperationMeta\r\n//   {\r\n//       LedgerEntryChanges changes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"OperationMeta\", [\r\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV1\r\n//   {\r\n//       LedgerEntryChanges txChanges; // tx level changes if any\r\n//       OperationMeta operations<>;   // meta for each operation\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV1\", [\r\n  [\"txChanges\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV2\r\n//   {\r\n//       LedgerEntryChanges txChangesBefore; // tx level changes before operations\r\n//                                           // are applied if any\r\n//       OperationMeta operations<>;         // meta for each operation\r\n//       LedgerEntryChanges txChangesAfter;  // tx level changes after operations are\r\n//                                           // applied if any\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV2\", [\r\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractEventType\r\n//   {\r\n//       SYSTEM = 0,\r\n//       CONTRACT = 1,\r\n//       DIAGNOSTIC = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractEventType\", {\r\n  system: 0,\r\n  contract: 1,\r\n  diagnostic: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractEventV0\", [\r\n  [\"topics\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\r\n  [\"data\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           } v0;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractEventBody\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ContractEventV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractEvent\r\n//   {\r\n//       // We can use this to add more fields, or because it\r\n//       // is first, to change ContractEvent into a union.\r\n//       ExtensionPoint ext;\r\n//\r\n//       Hash* contractID;\r\n//       ContractEventType type;\r\n//\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           struct\r\n//           {\r\n//               SCVal topics<>;\r\n//               SCVal data;\r\n//           } v0;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractEvent\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"contractId\", xdr.option(xdr.lookup(\"Hash\"))],\r\n  [\"type\", xdr.lookup(\"ContractEventType\")],\r\n  [\"body\", xdr.lookup(\"ContractEventBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DiagnosticEvent\r\n//   {\r\n//       bool inSuccessfulContractCall;\r\n//       ContractEvent event;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DiagnosticEvent\", [\r\n  [\"inSuccessfulContractCall\", xdr.bool()],\r\n  [\"event\", xdr.lookup(\"ContractEvent\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionMetaExtV1\r\n//   {\r\n//       ExtensionPoint ext;\r\n//\r\n//       // The following are the components of the overall Soroban resource fee\r\n//       // charged for the transaction.\r\n//       // The following relation holds:\r\n//       // `resourceFeeCharged = totalNonRefundableResourceFeeCharged + totalRefundableResourceFeeCharged`\r\n//       // where `resourceFeeCharged` is the overall fee charged for the\r\n//       // transaction. Also, `resourceFeeCharged` <= `sorobanData.resourceFee`\r\n//       // i.e.we never charge more than the declared resource fee.\r\n//       // The inclusion fee for charged the Soroban transaction can be found using\r\n//       // the following equation:\r\n//       // `result.feeCharged = resourceFeeCharged + inclusionFeeCharged`.\r\n//\r\n//       // Total amount (in stroops) that has been charged for non-refundable\r\n//       // Soroban resources.\r\n//       // Non-refundable resources are charged based on the usage declared in\r\n//       // the transaction envelope (such as `instructions`, `readBytes` etc.) and\r\n//       // is charged regardless of the success of the transaction.\r\n//       int64 totalNonRefundableResourceFeeCharged;\r\n//       // Total amount (in stroops) that has been charged for refundable\r\n//       // Soroban resource fees.\r\n//       // Currently this comprises the rent fee (`rentFeeCharged`) and the\r\n//       // fee for the events and return value.\r\n//       // Refundable resources are charged based on the actual resources usage.\r\n//       // Since currently refundable resources are only used for the successful\r\n//       // transactions, this will be `0` for failed transactions.\r\n//       int64 totalRefundableResourceFeeCharged;\r\n//       // Amount (in stroops) that has been charged for rent.\r\n//       // This is a part of `totalNonRefundableResourceFeeCharged`.\r\n//       int64 rentFeeCharged;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionMetaExtV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"totalNonRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"totalRefundableResourceFeeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"rentFeeCharged\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanTransactionMetaExt switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   case 1:\r\n//       SorobanTransactionMetaExtV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanTransactionMetaExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"SorobanTransactionMetaExtV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionMeta\r\n//   {\r\n//       SorobanTransactionMetaExt ext;\r\n//\r\n//       ContractEvent events<>;             // custom events populated by the\r\n//                                           // contracts themselves.\r\n//       SCVal returnValue;                  // return value of the host fn invocation\r\n//\r\n//       // Diagnostics events that are not hashed.\r\n//       // This will contain all contract and diagnostic events. Even ones\r\n//       // that were emitted in a failed contract call.\r\n//       DiagnosticEvent diagnosticEvents<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionMeta\", [\r\n  [\"ext\", xdr.lookup(\"SorobanTransactionMetaExt\")],\r\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\r\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\r\n  [\"diagnosticEvents\", xdr.varArray(xdr.lookup(\"DiagnosticEvent\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionMetaV3\r\n//   {\r\n//       ExtensionPoint ext;\r\n//\r\n//       LedgerEntryChanges txChangesBefore;  // tx level changes before operations\r\n//                                            // are applied if any\r\n//       OperationMeta operations<>;          // meta for each operation\r\n//       LedgerEntryChanges txChangesAfter;   // tx level changes after operations are\r\n//                                            // applied if any\r\n//       SorobanTransactionMeta* sorobanMeta; // Soroban-specific meta (only for\r\n//                                            // Soroban transactions).\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionMetaV3\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"txChangesBefore\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647)],\r\n  [\"txChangesAfter\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"sorobanMeta\", xdr.option(xdr.lookup(\"SorobanTransactionMeta\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeHostFunctionSuccessPreImage\r\n//   {\r\n//       SCVal returnValue;\r\n//       ContractEvent events<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeHostFunctionSuccessPreImage\", [\r\n  [\"returnValue\", xdr.lookup(\"ScVal\")],\r\n  [\"events\", xdr.varArray(xdr.lookup(\"ContractEvent\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionMeta switch (int v)\r\n//   {\r\n//   case 0:\r\n//       OperationMeta operations<>;\r\n//   case 1:\r\n//       TransactionMetaV1 v1;\r\n//   case 2:\r\n//       TransactionMetaV2 v2;\r\n//   case 3:\r\n//       TransactionMetaV3 v3;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionMeta\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"operations\"],\r\n    [1, \"v1\"],\r\n    [2, \"v2\"],\r\n    [3, \"v3\"],\r\n  ],\r\n  arms: {\r\n    operations: xdr.varArray(xdr.lookup(\"OperationMeta\"), 2147483647),\r\n    v1: xdr.lookup(\"TransactionMetaV1\"),\r\n    v2: xdr.lookup(\"TransactionMetaV2\"),\r\n    v3: xdr.lookup(\"TransactionMetaV3\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResultMeta\r\n//   {\r\n//       TransactionResultPair result;\r\n//       LedgerEntryChanges feeProcessing;\r\n//       TransactionMeta txApplyProcessing;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResultMeta\", [\r\n  [\"result\", xdr.lookup(\"TransactionResultPair\")],\r\n  [\"feeProcessing\", xdr.lookup(\"LedgerEntryChanges\")],\r\n  [\"txApplyProcessing\", xdr.lookup(\"TransactionMeta\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UpgradeEntryMeta\r\n//   {\r\n//       LedgerUpgrade upgrade;\r\n//       LedgerEntryChanges changes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UpgradeEntryMeta\", [\r\n  [\"upgrade\", xdr.lookup(\"LedgerUpgrade\")],\r\n  [\"changes\", xdr.lookup(\"LedgerEntryChanges\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaV0\r\n//   {\r\n//       LedgerHeaderHistoryEntry ledgerHeader;\r\n//       // NB: txSet is sorted in \"Hash order\"\r\n//       TransactionSet txSet;\r\n//\r\n//       // NB: transactions are sorted in apply order here\r\n//       // fees for all transactions are processed first\r\n//       // followed by applying transactions\r\n//       TransactionResultMeta txProcessing<>;\r\n//\r\n//       // upgrades are applied last\r\n//       UpgradeEntryMeta upgradesProcessing<>;\r\n//\r\n//       // other misc information attached to the ledger close\r\n//       SCPHistoryEntry scpInfo<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaV0\", [\r\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\r\n  [\"txSet\", xdr.lookup(\"TransactionSet\")],\r\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\r\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\r\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaExtV1\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       int64 sorobanFeeWrite1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaExtV1\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"sorobanFeeWrite1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerCloseMetaExt switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   case 1:\r\n//       LedgerCloseMetaExtV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerCloseMetaExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"LedgerCloseMetaExtV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerCloseMetaV1\r\n//   {\r\n//       LedgerCloseMetaExt ext;\r\n//\r\n//       LedgerHeaderHistoryEntry ledgerHeader;\r\n//\r\n//       GeneralizedTransactionSet txSet;\r\n//\r\n//       // NB: transactions are sorted in apply order here\r\n//       // fees for all transactions are processed first\r\n//       // followed by applying transactions\r\n//       TransactionResultMeta txProcessing<>;\r\n//\r\n//       // upgrades are applied last\r\n//       UpgradeEntryMeta upgradesProcessing<>;\r\n//\r\n//       // other misc information attached to the ledger close\r\n//       SCPHistoryEntry scpInfo<>;\r\n//\r\n//       // Size in bytes of BucketList, to support downstream\r\n//       // systems calculating storage fees correctly.\r\n//       uint64 totalByteSizeOfBucketList;\r\n//\r\n//       // Temp keys that are being evicted at this ledger.\r\n//       LedgerKey evictedTemporaryLedgerKeys<>;\r\n//\r\n//       // Archived restorable ledger entries that are being\r\n//       // evicted at this ledger.\r\n//       LedgerEntry evictedPersistentLedgerEntries<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerCloseMetaV1\", [\r\n  [\"ext\", xdr.lookup(\"LedgerCloseMetaExt\")],\r\n  [\"ledgerHeader\", xdr.lookup(\"LedgerHeaderHistoryEntry\")],\r\n  [\"txSet\", xdr.lookup(\"GeneralizedTransactionSet\")],\r\n  [\"txProcessing\", xdr.varArray(xdr.lookup(\"TransactionResultMeta\"), 2147483647)],\r\n  [\"upgradesProcessing\", xdr.varArray(xdr.lookup(\"UpgradeEntryMeta\"), 2147483647)],\r\n  [\"scpInfo\", xdr.varArray(xdr.lookup(\"ScpHistoryEntry\"), 2147483647)],\r\n  [\"totalByteSizeOfBucketList\", xdr.lookup(\"Uint64\")],\r\n  [\"evictedTemporaryLedgerKeys\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n  [\"evictedPersistentLedgerEntries\", xdr.varArray(xdr.lookup(\"LedgerEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LedgerCloseMeta switch (int v)\r\n//   {\r\n//   case 0:\r\n//       LedgerCloseMetaV0 v0;\r\n//   case 1:\r\n//       LedgerCloseMetaV1 v1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LedgerCloseMeta\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n    [1, \"v1\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"LedgerCloseMetaV0\"),\r\n    v1: xdr.lookup(\"LedgerCloseMetaV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ErrorCode\r\n//   {\r\n//       ERR_MISC = 0, // Unspecific error\r\n//       ERR_DATA = 1, // Malformed data\r\n//       ERR_CONF = 2, // Misconfiguration error\r\n//       ERR_AUTH = 3, // Authentication failure\r\n//       ERR_LOAD = 4  // System overloaded\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ErrorCode\", {\r\n  errMisc: 0,\r\n  errData: 1,\r\n  errConf: 2,\r\n  errAuth: 3,\r\n  errLoad: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Error\r\n//   {\r\n//       ErrorCode code;\r\n//       string msg<100>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Error\", [\r\n  [\"code\", xdr.lookup(\"ErrorCode\")],\r\n  [\"msg\", xdr.string(100)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SendMore\r\n//   {\r\n//       uint32 numMessages;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SendMore\", [\r\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SendMoreExtended\r\n//   {\r\n//       uint32 numMessages;\r\n//       uint32 numBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SendMoreExtended\", [\r\n  [\"numMessages\", xdr.lookup(\"Uint32\")],\r\n  [\"numBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AuthCert\r\n//   {\r\n//       Curve25519Public pubkey;\r\n//       uint64 expiration;\r\n//       Signature sig;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AuthCert\", [\r\n  [\"pubkey\", xdr.lookup(\"Curve25519Public\")],\r\n  [\"expiration\", xdr.lookup(\"Uint64\")],\r\n  [\"sig\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Hello\r\n//   {\r\n//       uint32 ledgerVersion;\r\n//       uint32 overlayVersion;\r\n//       uint32 overlayMinVersion;\r\n//       Hash networkID;\r\n//       string versionStr<100>;\r\n//       int listeningPort;\r\n//       NodeID peerID;\r\n//       AuthCert cert;\r\n//       uint256 nonce;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Hello\", [\r\n  [\"ledgerVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"overlayVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"overlayMinVersion\", xdr.lookup(\"Uint32\")],\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"versionStr\", xdr.string(100)],\r\n  [\"listeningPort\", xdr.int()],\r\n  [\"peerId\", xdr.lookup(\"NodeId\")],\r\n  [\"cert\", xdr.lookup(\"AuthCert\")],\r\n  [\"nonce\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED = 200;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED\", 200);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Auth\r\n//   {\r\n//       int flags;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Auth\", [\r\n  [\"flags\", xdr.int()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum IPAddrType\r\n//   {\r\n//       IPv4 = 0,\r\n//       IPv6 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"IpAddrType\", {\r\n  iPv4: 0,\r\n  iPv6: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (IPAddrType type)\r\n//       {\r\n//       case IPv4:\r\n//           opaque ipv4[4];\r\n//       case IPv6:\r\n//           opaque ipv6[16];\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PeerAddressIp\", {\r\n  switchOn: xdr.lookup(\"IpAddrType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"iPv4\", \"ipv4\"],\r\n    [\"iPv6\", \"ipv6\"],\r\n  ],\r\n  arms: {\r\n    ipv4: xdr.opaque(4),\r\n    ipv6: xdr.opaque(16),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PeerAddress\r\n//   {\r\n//       union switch (IPAddrType type)\r\n//       {\r\n//       case IPv4:\r\n//           opaque ipv4[4];\r\n//       case IPv6:\r\n//           opaque ipv6[16];\r\n//       }\r\n//       ip;\r\n//       uint32 port;\r\n//       uint32 numFailures;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PeerAddress\", [\r\n  [\"ip\", xdr.lookup(\"PeerAddressIp\")],\r\n  [\"port\", xdr.lookup(\"Uint32\")],\r\n  [\"numFailures\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum MessageType\r\n//   {\r\n//       ERROR_MSG = 0,\r\n//       AUTH = 2,\r\n//       DONT_HAVE = 3,\r\n//\r\n//       GET_PEERS = 4, // gets a list of peers this guy knows about\r\n//       PEERS = 5,\r\n//\r\n//       GET_TX_SET = 6, // gets a particular txset by hash\r\n//       TX_SET = 7,\r\n//       GENERALIZED_TX_SET = 17,\r\n//\r\n//       TRANSACTION = 8, // pass on a tx you have heard about\r\n//\r\n//       // SCP\r\n//       GET_SCP_QUORUMSET = 9,\r\n//       SCP_QUORUMSET = 10,\r\n//       SCP_MESSAGE = 11,\r\n//       GET_SCP_STATE = 12,\r\n//\r\n//       // new messages\r\n//       HELLO = 13,\r\n//\r\n//       SURVEY_REQUEST = 14,\r\n//       SURVEY_RESPONSE = 15,\r\n//\r\n//       SEND_MORE = 16,\r\n//       SEND_MORE_EXTENDED = 20,\r\n//\r\n//       FLOOD_ADVERT = 18,\r\n//       FLOOD_DEMAND = 19\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"MessageType\", {\r\n  errorMsg: 0,\r\n  auth: 2,\r\n  dontHave: 3,\r\n  getPeers: 4,\r\n  peers: 5,\r\n  getTxSet: 6,\r\n  txSet: 7,\r\n  generalizedTxSet: 17,\r\n  transaction: 8,\r\n  getScpQuorumset: 9,\r\n  scpQuorumset: 10,\r\n  scpMessage: 11,\r\n  getScpState: 12,\r\n  hello: 13,\r\n  surveyRequest: 14,\r\n  surveyResponse: 15,\r\n  sendMore: 16,\r\n  sendMoreExtended: 20,\r\n  floodAdvert: 18,\r\n  floodDemand: 19,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DontHave\r\n//   {\r\n//       MessageType type;\r\n//       uint256 reqHash;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DontHave\", [\r\n  [\"type\", xdr.lookup(\"MessageType\")],\r\n  [\"reqHash\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SurveyMessageCommandType\r\n//   {\r\n//       SURVEY_TOPOLOGY = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SurveyMessageCommandType\", {\r\n  surveyTopology: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SurveyMessageResponseType\r\n//   {\r\n//       SURVEY_TOPOLOGY_RESPONSE_V0 = 0,\r\n//       SURVEY_TOPOLOGY_RESPONSE_V1 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SurveyMessageResponseType\", {\r\n  surveyTopologyResponseV0: 0,\r\n  surveyTopologyResponseV1: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SurveyRequestMessage\r\n//   {\r\n//       NodeID surveyorPeerID;\r\n//       NodeID surveyedPeerID;\r\n//       uint32 ledgerNum;\r\n//       Curve25519Public encryptionKey;\r\n//       SurveyMessageCommandType commandType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SurveyRequestMessage\", [\r\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\r\n  [\"encryptionKey\", xdr.lookup(\"Curve25519Public\")],\r\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SignedSurveyRequestMessage\r\n//   {\r\n//       Signature requestSignature;\r\n//       SurveyRequestMessage request;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignedSurveyRequestMessage\", [\r\n  [\"requestSignature\", xdr.lookup(\"Signature\")],\r\n  [\"request\", xdr.lookup(\"SurveyRequestMessage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque EncryptedBody<64000>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"EncryptedBody\", xdr.varOpaque(64000));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SurveyResponseMessage\r\n//   {\r\n//       NodeID surveyorPeerID;\r\n//       NodeID surveyedPeerID;\r\n//       uint32 ledgerNum;\r\n//       SurveyMessageCommandType commandType;\r\n//       EncryptedBody encryptedBody;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SurveyResponseMessage\", [\r\n  [\"surveyorPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"surveyedPeerId\", xdr.lookup(\"NodeId\")],\r\n  [\"ledgerNum\", xdr.lookup(\"Uint32\")],\r\n  [\"commandType\", xdr.lookup(\"SurveyMessageCommandType\")],\r\n  [\"encryptedBody\", xdr.lookup(\"EncryptedBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SignedSurveyResponseMessage\r\n//   {\r\n//       Signature responseSignature;\r\n//       SurveyResponseMessage response;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignedSurveyResponseMessage\", [\r\n  [\"responseSignature\", xdr.lookup(\"Signature\")],\r\n  [\"response\", xdr.lookup(\"SurveyResponseMessage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PeerStats\r\n//   {\r\n//       NodeID id;\r\n//       string versionStr<100>;\r\n//       uint64 messagesRead;\r\n//       uint64 messagesWritten;\r\n//       uint64 bytesRead;\r\n//       uint64 bytesWritten;\r\n//       uint64 secondsConnected;\r\n//\r\n//       uint64 uniqueFloodBytesRecv;\r\n//       uint64 duplicateFloodBytesRecv;\r\n//       uint64 uniqueFetchBytesRecv;\r\n//       uint64 duplicateFetchBytesRecv;\r\n//\r\n//       uint64 uniqueFloodMessageRecv;\r\n//       uint64 duplicateFloodMessageRecv;\r\n//       uint64 uniqueFetchMessageRecv;\r\n//       uint64 duplicateFetchMessageRecv;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PeerStats\", [\r\n  [\"id\", xdr.lookup(\"NodeId\")],\r\n  [\"versionStr\", xdr.string(100)],\r\n  [\"messagesRead\", xdr.lookup(\"Uint64\")],\r\n  [\"messagesWritten\", xdr.lookup(\"Uint64\")],\r\n  [\"bytesRead\", xdr.lookup(\"Uint64\")],\r\n  [\"bytesWritten\", xdr.lookup(\"Uint64\")],\r\n  [\"secondsConnected\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFloodBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFloodBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFetchBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFetchBytesRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFloodMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFloodMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"uniqueFetchMessageRecv\", xdr.lookup(\"Uint64\")],\r\n  [\"duplicateFetchMessageRecv\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PeerStats PeerStatList<25>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"PeerStatList\", xdr.varArray(xdr.lookup(\"PeerStats\"), 25));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TopologyResponseBodyV0\r\n//   {\r\n//       PeerStatList inboundPeers;\r\n//       PeerStatList outboundPeers;\r\n//\r\n//       uint32 totalInboundPeerCount;\r\n//       uint32 totalOutboundPeerCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TopologyResponseBodyV0\", [\r\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TopologyResponseBodyV1\r\n//   {\r\n//       PeerStatList inboundPeers;\r\n//       PeerStatList outboundPeers;\r\n//\r\n//       uint32 totalInboundPeerCount;\r\n//       uint32 totalOutboundPeerCount;\r\n//\r\n//       uint32 maxInboundPeerCount;\r\n//       uint32 maxOutboundPeerCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TopologyResponseBodyV1\", [\r\n  [\"inboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"outboundPeers\", xdr.lookup(\"PeerStatList\")],\r\n  [\"totalInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"totalOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"maxInboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n  [\"maxOutboundPeerCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SurveyResponseBody switch (SurveyMessageResponseType type)\r\n//   {\r\n//   case SURVEY_TOPOLOGY_RESPONSE_V0:\r\n//       TopologyResponseBodyV0 topologyResponseBodyV0;\r\n//   case SURVEY_TOPOLOGY_RESPONSE_V1:\r\n//       TopologyResponseBodyV1 topologyResponseBodyV1;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SurveyResponseBody\", {\r\n  switchOn: xdr.lookup(\"SurveyMessageResponseType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"surveyTopologyResponseV0\", \"topologyResponseBodyV0\"],\r\n    [\"surveyTopologyResponseV1\", \"topologyResponseBodyV1\"],\r\n  ],\r\n  arms: {\r\n    topologyResponseBodyV0: xdr.lookup(\"TopologyResponseBodyV0\"),\r\n    topologyResponseBodyV1: xdr.lookup(\"TopologyResponseBodyV1\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const TX_ADVERT_VECTOR_MAX_SIZE = 1000;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"TX_ADVERT_VECTOR_MAX_SIZE\", 1000);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash TxAdvertVector<TX_ADVERT_VECTOR_MAX_SIZE>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TxAdvertVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_ADVERT_VECTOR_MAX_SIZE\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FloodAdvert\r\n//   {\r\n//       TxAdvertVector txHashes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FloodAdvert\", [\r\n  [\"txHashes\", xdr.lookup(\"TxAdvertVector\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const TX_DEMAND_VECTOR_MAX_SIZE = 1000;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"TX_DEMAND_VECTOR_MAX_SIZE\", 1000);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef Hash TxDemandVector<TX_DEMAND_VECTOR_MAX_SIZE>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TxDemandVector\", xdr.varArray(xdr.lookup(\"Hash\"), xdr.lookup(\"TX_DEMAND_VECTOR_MAX_SIZE\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FloodDemand\r\n//   {\r\n//       TxDemandVector txHashes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FloodDemand\", [\r\n  [\"txHashes\", xdr.lookup(\"TxDemandVector\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union StellarMessage switch (MessageType type)\r\n//   {\r\n//   case ERROR_MSG:\r\n//       Error error;\r\n//   case HELLO:\r\n//       Hello hello;\r\n//   case AUTH:\r\n//       Auth auth;\r\n//   case DONT_HAVE:\r\n//       DontHave dontHave;\r\n//   case GET_PEERS:\r\n//       void;\r\n//   case PEERS:\r\n//       PeerAddress peers<100>;\r\n//\r\n//   case GET_TX_SET:\r\n//       uint256 txSetHash;\r\n//   case TX_SET:\r\n//       TransactionSet txSet;\r\n//   case GENERALIZED_TX_SET:\r\n//       GeneralizedTransactionSet generalizedTxSet;\r\n//\r\n//   case TRANSACTION:\r\n//       TransactionEnvelope transaction;\r\n//\r\n//   case SURVEY_REQUEST:\r\n//       SignedSurveyRequestMessage signedSurveyRequestMessage;\r\n//\r\n//   case SURVEY_RESPONSE:\r\n//       SignedSurveyResponseMessage signedSurveyResponseMessage;\r\n//\r\n//   // SCP\r\n//   case GET_SCP_QUORUMSET:\r\n//       uint256 qSetHash;\r\n//   case SCP_QUORUMSET:\r\n//       SCPQuorumSet qSet;\r\n//   case SCP_MESSAGE:\r\n//       SCPEnvelope envelope;\r\n//   case GET_SCP_STATE:\r\n//       uint32 getSCPLedgerSeq; // ledger seq requested ; if 0, requests the latest\r\n//   case SEND_MORE:\r\n//       SendMore sendMoreMessage;\r\n//   case SEND_MORE_EXTENDED:\r\n//       SendMoreExtended sendMoreExtendedMessage;\r\n//   // Pull mode\r\n//   case FLOOD_ADVERT:\r\n//        FloodAdvert floodAdvert;\r\n//   case FLOOD_DEMAND:\r\n//        FloodDemand floodDemand;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"StellarMessage\", {\r\n  switchOn: xdr.lookup(\"MessageType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"errorMsg\", \"error\"],\r\n    [\"hello\", \"hello\"],\r\n    [\"auth\", \"auth\"],\r\n    [\"dontHave\", \"dontHave\"],\r\n    [\"getPeers\", xdr.void()],\r\n    [\"peers\", \"peers\"],\r\n    [\"getTxSet\", \"txSetHash\"],\r\n    [\"txSet\", \"txSet\"],\r\n    [\"generalizedTxSet\", \"generalizedTxSet\"],\r\n    [\"transaction\", \"transaction\"],\r\n    [\"surveyRequest\", \"signedSurveyRequestMessage\"],\r\n    [\"surveyResponse\", \"signedSurveyResponseMessage\"],\r\n    [\"getScpQuorumset\", \"qSetHash\"],\r\n    [\"scpQuorumset\", \"qSet\"],\r\n    [\"scpMessage\", \"envelope\"],\r\n    [\"getScpState\", \"getScpLedgerSeq\"],\r\n    [\"sendMore\", \"sendMoreMessage\"],\r\n    [\"sendMoreExtended\", \"sendMoreExtendedMessage\"],\r\n    [\"floodAdvert\", \"floodAdvert\"],\r\n    [\"floodDemand\", \"floodDemand\"],\r\n  ],\r\n  arms: {\r\n    error: xdr.lookup(\"Error\"),\r\n    hello: xdr.lookup(\"Hello\"),\r\n    auth: xdr.lookup(\"Auth\"),\r\n    dontHave: xdr.lookup(\"DontHave\"),\r\n    peers: xdr.varArray(xdr.lookup(\"PeerAddress\"), 100),\r\n    txSetHash: xdr.lookup(\"Uint256\"),\r\n    txSet: xdr.lookup(\"TransactionSet\"),\r\n    generalizedTxSet: xdr.lookup(\"GeneralizedTransactionSet\"),\r\n    transaction: xdr.lookup(\"TransactionEnvelope\"),\r\n    signedSurveyRequestMessage: xdr.lookup(\"SignedSurveyRequestMessage\"),\r\n    signedSurveyResponseMessage: xdr.lookup(\"SignedSurveyResponseMessage\"),\r\n    qSetHash: xdr.lookup(\"Uint256\"),\r\n    qSet: xdr.lookup(\"ScpQuorumSet\"),\r\n    envelope: xdr.lookup(\"ScpEnvelope\"),\r\n    getScpLedgerSeq: xdr.lookup(\"Uint32\"),\r\n    sendMoreMessage: xdr.lookup(\"SendMore\"),\r\n    sendMoreExtendedMessage: xdr.lookup(\"SendMoreExtended\"),\r\n    floodAdvert: xdr.lookup(\"FloodAdvert\"),\r\n    floodDemand: xdr.lookup(\"FloodDemand\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           uint64 sequence;\r\n//           StellarMessage message;\r\n//           HmacSha256Mac mac;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AuthenticatedMessageV0\", [\r\n  [\"sequence\", xdr.lookup(\"Uint64\")],\r\n  [\"message\", xdr.lookup(\"StellarMessage\")],\r\n  [\"mac\", xdr.lookup(\"HmacSha256Mac\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AuthenticatedMessage switch (uint32 v)\r\n//   {\r\n//   case 0:\r\n//       struct\r\n//       {\r\n//           uint64 sequence;\r\n//           StellarMessage message;\r\n//           HmacSha256Mac mac;\r\n//       } v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AuthenticatedMessage\", {\r\n  switchOn: xdr.lookup(\"Uint32\"),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"AuthenticatedMessageV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const MAX_OPS_PER_TX = 100;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"MAX_OPS_PER_TX\", 100);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolParameters switch (LiquidityPoolType type)\r\n//   {\r\n//   case LIQUIDITY_POOL_CONSTANT_PRODUCT:\r\n//       LiquidityPoolConstantProductParameters constantProduct;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolParameters\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"liquidityPoolConstantProduct\", \"constantProduct\"],\r\n  ],\r\n  arms: {\r\n    constantProduct: xdr.lookup(\"LiquidityPoolConstantProductParameters\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           uint64 id;\r\n//           uint256 ed25519;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"MuxedAccountMed25519\", [\r\n  [\"id\", xdr.lookup(\"Uint64\")],\r\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union MuxedAccount switch (CryptoKeyType type)\r\n//   {\r\n//   case KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   case KEY_TYPE_MUXED_ED25519:\r\n//       struct\r\n//       {\r\n//           uint64 id;\r\n//           uint256 ed25519;\r\n//       } med25519;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"MuxedAccount\", {\r\n  switchOn: xdr.lookup(\"CryptoKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"keyTypeEd25519\", \"ed25519\"],\r\n    [\"keyTypeMuxedEd25519\", \"med25519\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n    med25519: xdr.lookup(\"MuxedAccountMed25519\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct DecoratedSignature\r\n//   {\r\n//       SignatureHint hint;  // last 4 bytes of the public key, used as a hint\r\n//       Signature signature; // actual signature\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"DecoratedSignature\", [\r\n  [\"hint\", xdr.lookup(\"SignatureHint\")],\r\n  [\"signature\", xdr.lookup(\"Signature\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OperationType\r\n//   {\r\n//       CREATE_ACCOUNT = 0,\r\n//       PAYMENT = 1,\r\n//       PATH_PAYMENT_STRICT_RECEIVE = 2,\r\n//       MANAGE_SELL_OFFER = 3,\r\n//       CREATE_PASSIVE_SELL_OFFER = 4,\r\n//       SET_OPTIONS = 5,\r\n//       CHANGE_TRUST = 6,\r\n//       ALLOW_TRUST = 7,\r\n//       ACCOUNT_MERGE = 8,\r\n//       INFLATION = 9,\r\n//       MANAGE_DATA = 10,\r\n//       BUMP_SEQUENCE = 11,\r\n//       MANAGE_BUY_OFFER = 12,\r\n//       PATH_PAYMENT_STRICT_SEND = 13,\r\n//       CREATE_CLAIMABLE_BALANCE = 14,\r\n//       CLAIM_CLAIMABLE_BALANCE = 15,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES = 16,\r\n//       END_SPONSORING_FUTURE_RESERVES = 17,\r\n//       REVOKE_SPONSORSHIP = 18,\r\n//       CLAWBACK = 19,\r\n//       CLAWBACK_CLAIMABLE_BALANCE = 20,\r\n//       SET_TRUST_LINE_FLAGS = 21,\r\n//       LIQUIDITY_POOL_DEPOSIT = 22,\r\n//       LIQUIDITY_POOL_WITHDRAW = 23,\r\n//       INVOKE_HOST_FUNCTION = 24,\r\n//       EXTEND_FOOTPRINT_TTL = 25,\r\n//       RESTORE_FOOTPRINT = 26\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OperationType\", {\r\n  createAccount: 0,\r\n  payment: 1,\r\n  pathPaymentStrictReceive: 2,\r\n  manageSellOffer: 3,\r\n  createPassiveSellOffer: 4,\r\n  setOptions: 5,\r\n  changeTrust: 6,\r\n  allowTrust: 7,\r\n  accountMerge: 8,\r\n  inflation: 9,\r\n  manageData: 10,\r\n  bumpSequence: 11,\r\n  manageBuyOffer: 12,\r\n  pathPaymentStrictSend: 13,\r\n  createClaimableBalance: 14,\r\n  claimClaimableBalance: 15,\r\n  beginSponsoringFutureReserves: 16,\r\n  endSponsoringFutureReserves: 17,\r\n  revokeSponsorship: 18,\r\n  clawback: 19,\r\n  clawbackClaimableBalance: 20,\r\n  setTrustLineFlags: 21,\r\n  liquidityPoolDeposit: 22,\r\n  liquidityPoolWithdraw: 23,\r\n  invokeHostFunction: 24,\r\n  extendFootprintTtl: 25,\r\n  restoreFootprint: 26,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateAccountOp\r\n//   {\r\n//       AccountID destination; // account to create\r\n//       int64 startingBalance; // amount they end up with\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateAccountOp\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"startingBalance\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PaymentOp\r\n//   {\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset asset;              // what they end up with\r\n//       int64 amount;             // amount they end up with\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PaymentOp\", [\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PathPaymentStrictReceiveOp\r\n//   {\r\n//       Asset sendAsset; // asset we pay with\r\n//       int64 sendMax;   // the maximum amount of sendAsset to\r\n//                        // send (excluding fees).\r\n//                        // The operation will fail if can't be met\r\n//\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset destAsset;          // what they end up with\r\n//       int64 destAmount;         // amount they end up with\r\n//\r\n//       Asset path<5>; // additional hops it must go through to get there\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictReceiveOp\", [\r\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\r\n  [\"sendMax\", xdr.lookup(\"Int64\")],\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"destAsset\", xdr.lookup(\"Asset\")],\r\n  [\"destAmount\", xdr.lookup(\"Int64\")],\r\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PathPaymentStrictSendOp\r\n//   {\r\n//       Asset sendAsset;  // asset we pay with\r\n//       int64 sendAmount; // amount of sendAsset to send (excluding fees)\r\n//\r\n//       MuxedAccount destination; // recipient of the payment\r\n//       Asset destAsset;          // what they end up with\r\n//       int64 destMin;            // the minimum amount of dest asset to\r\n//                                 // be received\r\n//                                 // The operation will fail if it can't be met\r\n//\r\n//       Asset path<5>; // additional hops it must go through to get there\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictSendOp\", [\r\n  [\"sendAsset\", xdr.lookup(\"Asset\")],\r\n  [\"sendAmount\", xdr.lookup(\"Int64\")],\r\n  [\"destination\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"destAsset\", xdr.lookup(\"Asset\")],\r\n  [\"destMin\", xdr.lookup(\"Int64\")],\r\n  [\"path\", xdr.varArray(xdr.lookup(\"Asset\"), 5)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageSellOfferOp\r\n//   {\r\n//       Asset selling;\r\n//       Asset buying;\r\n//       int64 amount; // amount being sold. if set to 0, delete the offer\r\n//       Price price;  // price of thing being sold in terms of what you are buying\r\n//\r\n//       // 0=create a new offer, otherwise edit an existing offer\r\n//       int64 offerID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageSellOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageBuyOfferOp\r\n//   {\r\n//       Asset selling;\r\n//       Asset buying;\r\n//       int64 buyAmount; // amount being bought. if set to 0, delete the offer\r\n//       Price price;     // price of thing being bought in terms of what you are\r\n//                        // selling\r\n//\r\n//       // 0=create a new offer, otherwise edit an existing offer\r\n//       int64 offerID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageBuyOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"buyAmount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreatePassiveSellOfferOp\r\n//   {\r\n//       Asset selling; // A\r\n//       Asset buying;  // B\r\n//       int64 amount;  // amount taker gets\r\n//       Price price;   // cost of A in terms of B\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreatePassiveSellOfferOp\", [\r\n  [\"selling\", xdr.lookup(\"Asset\")],\r\n  [\"buying\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"price\", xdr.lookup(\"Price\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SetOptionsOp\r\n//   {\r\n//       AccountID* inflationDest; // sets the inflation destination\r\n//\r\n//       uint32* clearFlags; // which flags to clear\r\n//       uint32* setFlags;   // which flags to set\r\n//\r\n//       // account threshold manipulation\r\n//       uint32* masterWeight; // weight of the master account\r\n//       uint32* lowThreshold;\r\n//       uint32* medThreshold;\r\n//       uint32* highThreshold;\r\n//\r\n//       string32* homeDomain; // sets the home domain\r\n//\r\n//       // Add, update or remove a signer for the account\r\n//       // signer is deleted if the weight is 0\r\n//       Signer* signer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SetOptionsOp\", [\r\n  [\"inflationDest\", xdr.option(xdr.lookup(\"AccountId\"))],\r\n  [\"clearFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"setFlags\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"masterWeight\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"lowThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"medThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"highThreshold\", xdr.option(xdr.lookup(\"Uint32\"))],\r\n  [\"homeDomain\", xdr.option(xdr.lookup(\"String32\"))],\r\n  [\"signer\", xdr.option(xdr.lookup(\"Signer\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ChangeTrustAsset switch (AssetType type)\r\n//   {\r\n//   case ASSET_TYPE_NATIVE: // Not credit\r\n//       void;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM4:\r\n//       AlphaNum4 alphaNum4;\r\n//\r\n//   case ASSET_TYPE_CREDIT_ALPHANUM12:\r\n//       AlphaNum12 alphaNum12;\r\n//\r\n//   case ASSET_TYPE_POOL_SHARE:\r\n//       LiquidityPoolParameters liquidityPool;\r\n//\r\n//       // add other asset types here in the future\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ChangeTrustAsset\", {\r\n  switchOn: xdr.lookup(\"AssetType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"assetTypeNative\", xdr.void()],\r\n    [\"assetTypeCreditAlphanum4\", \"alphaNum4\"],\r\n    [\"assetTypeCreditAlphanum12\", \"alphaNum12\"],\r\n    [\"assetTypePoolShare\", \"liquidityPool\"],\r\n  ],\r\n  arms: {\r\n    alphaNum4: xdr.lookup(\"AlphaNum4\"),\r\n    alphaNum12: xdr.lookup(\"AlphaNum12\"),\r\n    liquidityPool: xdr.lookup(\"LiquidityPoolParameters\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ChangeTrustOp\r\n//   {\r\n//       ChangeTrustAsset line;\r\n//\r\n//       // if limit is set to 0, deletes the trust line\r\n//       int64 limit;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ChangeTrustOp\", [\r\n  [\"line\", xdr.lookup(\"ChangeTrustAsset\")],\r\n  [\"limit\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct AllowTrustOp\r\n//   {\r\n//       AccountID trustor;\r\n//       AssetCode asset;\r\n//\r\n//       // One of 0, AUTHORIZED_FLAG, or AUTHORIZED_TO_MAINTAIN_LIABILITIES_FLAG\r\n//       uint32 authorize;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"AllowTrustOp\", [\r\n  [\"trustor\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"AssetCode\")],\r\n  [\"authorize\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageDataOp\r\n//   {\r\n//       string64 dataName;\r\n//       DataValue* dataValue; // set to null to clear\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageDataOp\", [\r\n  [\"dataName\", xdr.lookup(\"String64\")],\r\n  [\"dataValue\", xdr.option(xdr.lookup(\"DataValue\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BumpSequenceOp\r\n//   {\r\n//       SequenceNumber bumpTo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BumpSequenceOp\", [\r\n  [\"bumpTo\", xdr.lookup(\"SequenceNumber\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateClaimableBalanceOp\r\n//   {\r\n//       Asset asset;\r\n//       int64 amount;\r\n//       Claimant claimants<10>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateClaimableBalanceOp\", [\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"claimants\", xdr.varArray(xdr.lookup(\"Claimant\"), 10)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimClaimableBalanceOp\r\n//   {\r\n//       ClaimableBalanceID balanceID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimClaimableBalanceOp\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct BeginSponsoringFutureReservesOp\r\n//   {\r\n//       AccountID sponsoredID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"BeginSponsoringFutureReservesOp\", [\r\n  [\"sponsoredId\", xdr.lookup(\"AccountId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RevokeSponsorshipType\r\n//   {\r\n//       REVOKE_SPONSORSHIP_LEDGER_ENTRY = 0,\r\n//       REVOKE_SPONSORSHIP_SIGNER = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RevokeSponsorshipType\", {\r\n  revokeSponsorshipLedgerEntry: 0,\r\n  revokeSponsorshipSigner: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID accountID;\r\n//           SignerKey signerKey;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"RevokeSponsorshipOpSigner\", [\r\n  [\"accountId\", xdr.lookup(\"AccountId\")],\r\n  [\"signerKey\", xdr.lookup(\"SignerKey\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RevokeSponsorshipOp switch (RevokeSponsorshipType type)\r\n//   {\r\n//   case REVOKE_SPONSORSHIP_LEDGER_ENTRY:\r\n//       LedgerKey ledgerKey;\r\n//   case REVOKE_SPONSORSHIP_SIGNER:\r\n//       struct\r\n//       {\r\n//           AccountID accountID;\r\n//           SignerKey signerKey;\r\n//       } signer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RevokeSponsorshipOp\", {\r\n  switchOn: xdr.lookup(\"RevokeSponsorshipType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"revokeSponsorshipLedgerEntry\", \"ledgerKey\"],\r\n    [\"revokeSponsorshipSigner\", \"signer\"],\r\n  ],\r\n  arms: {\r\n    ledgerKey: xdr.lookup(\"LedgerKey\"),\r\n    signer: xdr.lookup(\"RevokeSponsorshipOpSigner\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClawbackOp\r\n//   {\r\n//       Asset asset;\r\n//       MuxedAccount from;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClawbackOp\", [\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"from\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClawbackClaimableBalanceOp\r\n//   {\r\n//       ClaimableBalanceID balanceID;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClawbackClaimableBalanceOp\", [\r\n  [\"balanceId\", xdr.lookup(\"ClaimableBalanceId\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SetTrustLineFlagsOp\r\n//   {\r\n//       AccountID trustor;\r\n//       Asset asset;\r\n//\r\n//       uint32 clearFlags; // which flags to clear\r\n//       uint32 setFlags;   // which flags to set\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SetTrustLineFlagsOp\", [\r\n  [\"trustor\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"clearFlags\", xdr.lookup(\"Uint32\")],\r\n  [\"setFlags\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const LIQUIDITY_POOL_FEE_V18 = 30;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"LIQUIDITY_POOL_FEE_V18\", 30);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolDepositOp\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//       int64 maxAmountA; // maximum amount of first asset to deposit\r\n//       int64 maxAmountB; // maximum amount of second asset to deposit\r\n//       Price minPrice;   // minimum depositA/depositB\r\n//       Price maxPrice;   // maximum depositA/depositB\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolDepositOp\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"maxAmountA\", xdr.lookup(\"Int64\")],\r\n  [\"maxAmountB\", xdr.lookup(\"Int64\")],\r\n  [\"minPrice\", xdr.lookup(\"Price\")],\r\n  [\"maxPrice\", xdr.lookup(\"Price\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LiquidityPoolWithdrawOp\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//       int64 amount;     // amount of pool shares to withdraw\r\n//       int64 minAmountA; // minimum amount of first asset to withdraw\r\n//       int64 minAmountB; // minimum amount of second asset to withdraw\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LiquidityPoolWithdrawOp\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n  [\"minAmountA\", xdr.lookup(\"Int64\")],\r\n  [\"minAmountB\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum HostFunctionType\r\n//   {\r\n//       HOST_FUNCTION_TYPE_INVOKE_CONTRACT = 0,\r\n//       HOST_FUNCTION_TYPE_CREATE_CONTRACT = 1,\r\n//       HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"HostFunctionType\", {\r\n  hostFunctionTypeInvokeContract: 0,\r\n  hostFunctionTypeCreateContract: 1,\r\n  hostFunctionTypeUploadContractWasm: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractIDPreimageType\r\n//   {\r\n//       CONTRACT_ID_PREIMAGE_FROM_ADDRESS = 0,\r\n//       CONTRACT_ID_PREIMAGE_FROM_ASSET = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractIdPreimageType\", {\r\n  contractIdPreimageFromAddress: 0,\r\n  contractIdPreimageFromAsset: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           SCAddress address;\r\n//           uint256 salt;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractIdPreimageFromAddress\", [\r\n  [\"address\", xdr.lookup(\"ScAddress\")],\r\n  [\"salt\", xdr.lookup(\"Uint256\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ContractIDPreimage switch (ContractIDPreimageType type)\r\n//   {\r\n//   case CONTRACT_ID_PREIMAGE_FROM_ADDRESS:\r\n//       struct\r\n//       {\r\n//           SCAddress address;\r\n//           uint256 salt;\r\n//       } fromAddress;\r\n//   case CONTRACT_ID_PREIMAGE_FROM_ASSET:\r\n//       Asset fromAsset;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractIdPreimage\", {\r\n  switchOn: xdr.lookup(\"ContractIdPreimageType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"contractIdPreimageFromAddress\", \"fromAddress\"],\r\n    [\"contractIdPreimageFromAsset\", \"fromAsset\"],\r\n  ],\r\n  arms: {\r\n    fromAddress: xdr.lookup(\"ContractIdPreimageFromAddress\"),\r\n    fromAsset: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct CreateContractArgs\r\n//   {\r\n//       ContractIDPreimage contractIDPreimage;\r\n//       ContractExecutable executable;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"CreateContractArgs\", [\r\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\r\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeContractArgs {\r\n//       SCAddress contractAddress;\r\n//       SCSymbol functionName;\r\n//       SCVal args<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeContractArgs\", [\r\n  [\"contractAddress\", xdr.lookup(\"ScAddress\")],\r\n  [\"functionName\", xdr.lookup(\"ScSymbol\")],\r\n  [\"args\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union HostFunction switch (HostFunctionType type)\r\n//   {\r\n//   case HOST_FUNCTION_TYPE_INVOKE_CONTRACT:\r\n//       InvokeContractArgs invokeContract;\r\n//   case HOST_FUNCTION_TYPE_CREATE_CONTRACT:\r\n//       CreateContractArgs createContract;\r\n//   case HOST_FUNCTION_TYPE_UPLOAD_CONTRACT_WASM:\r\n//       opaque wasm<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"HostFunction\", {\r\n  switchOn: xdr.lookup(\"HostFunctionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"hostFunctionTypeInvokeContract\", \"invokeContract\"],\r\n    [\"hostFunctionTypeCreateContract\", \"createContract\"],\r\n    [\"hostFunctionTypeUploadContractWasm\", \"wasm\"],\r\n  ],\r\n  arms: {\r\n    invokeContract: xdr.lookup(\"InvokeContractArgs\"),\r\n    createContract: xdr.lookup(\"CreateContractArgs\"),\r\n    wasm: xdr.varOpaque(),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SorobanAuthorizedFunctionType\r\n//   {\r\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN = 0,\r\n//       SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SorobanAuthorizedFunctionType\", {\r\n  sorobanAuthorizedFunctionTypeContractFn: 0,\r\n  sorobanAuthorizedFunctionTypeCreateContractHostFn: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanAuthorizedFunction switch (SorobanAuthorizedFunctionType type)\r\n//   {\r\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CONTRACT_FN:\r\n//       InvokeContractArgs contractFn;\r\n//   case SOROBAN_AUTHORIZED_FUNCTION_TYPE_CREATE_CONTRACT_HOST_FN:\r\n//       CreateContractArgs createContractHostFn;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanAuthorizedFunction\", {\r\n  switchOn: xdr.lookup(\"SorobanAuthorizedFunctionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sorobanAuthorizedFunctionTypeContractFn\", \"contractFn\"],\r\n    [\"sorobanAuthorizedFunctionTypeCreateContractHostFn\", \"createContractHostFn\"],\r\n  ],\r\n  arms: {\r\n    contractFn: xdr.lookup(\"InvokeContractArgs\"),\r\n    createContractHostFn: xdr.lookup(\"CreateContractArgs\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAuthorizedInvocation\r\n//   {\r\n//       SorobanAuthorizedFunction function;\r\n//       SorobanAuthorizedInvocation subInvocations<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAuthorizedInvocation\", [\r\n  [\"function\", xdr.lookup(\"SorobanAuthorizedFunction\")],\r\n  [\"subInvocations\", xdr.varArray(xdr.lookup(\"SorobanAuthorizedInvocation\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAddressCredentials\r\n//   {\r\n//       SCAddress address;\r\n//       int64 nonce;\r\n//       uint32 signatureExpirationLedger;\r\n//       SCVal signature;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAddressCredentials\", [\r\n  [\"address\", xdr.lookup(\"ScAddress\")],\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"signature\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SorobanCredentialsType\r\n//   {\r\n//       SOROBAN_CREDENTIALS_SOURCE_ACCOUNT = 0,\r\n//       SOROBAN_CREDENTIALS_ADDRESS = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SorobanCredentialsType\", {\r\n  sorobanCredentialsSourceAccount: 0,\r\n  sorobanCredentialsAddress: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SorobanCredentials switch (SorobanCredentialsType type)\r\n//   {\r\n//   case SOROBAN_CREDENTIALS_SOURCE_ACCOUNT:\r\n//       void;\r\n//   case SOROBAN_CREDENTIALS_ADDRESS:\r\n//       SorobanAddressCredentials address;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SorobanCredentials\", {\r\n  switchOn: xdr.lookup(\"SorobanCredentialsType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sorobanCredentialsSourceAccount\", xdr.void()],\r\n    [\"sorobanCredentialsAddress\", \"address\"],\r\n  ],\r\n  arms: {\r\n    address: xdr.lookup(\"SorobanAddressCredentials\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanAuthorizationEntry\r\n//   {\r\n//       SorobanCredentials credentials;\r\n//       SorobanAuthorizedInvocation rootInvocation;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanAuthorizationEntry\", [\r\n  [\"credentials\", xdr.lookup(\"SorobanCredentials\")],\r\n  [\"rootInvocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InvokeHostFunctionOp\r\n//   {\r\n//       // Host function to invoke.\r\n//       HostFunction hostFunction;\r\n//       // Per-address authorizations for this host function.\r\n//       SorobanAuthorizationEntry auth<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InvokeHostFunctionOp\", [\r\n  [\"hostFunction\", xdr.lookup(\"HostFunction\")],\r\n  [\"auth\", xdr.varArray(xdr.lookup(\"SorobanAuthorizationEntry\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ExtendFootprintTTLOp\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       uint32 extendTo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ExtendFootprintTtlOp\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"extendTo\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct RestoreFootprintOp\r\n//   {\r\n//       ExtensionPoint ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"RestoreFootprintOp\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountOp createAccountOp;\r\n//       case PAYMENT:\r\n//           PaymentOp paymentOp;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferOp manageSellOfferOp;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsOp setOptionsOp;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustOp changeTrustOp;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustOp allowTrustOp;\r\n//       case ACCOUNT_MERGE:\r\n//           MuxedAccount destination;\r\n//       case INFLATION:\r\n//           void;\r\n//       case MANAGE_DATA:\r\n//           ManageDataOp manageDataOp;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceOp bumpSequenceOp;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferOp manageBuyOfferOp;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           void;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipOp revokeSponsorshipOp;\r\n//       case CLAWBACK:\r\n//           ClawbackOp clawbackOp;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionOp invokeHostFunctionOp;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintOp restoreFootprintOp;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationBody\", {\r\n  switchOn: xdr.lookup(\"OperationType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"createAccount\", \"createAccountOp\"],\r\n    [\"payment\", \"paymentOp\"],\r\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveOp\"],\r\n    [\"manageSellOffer\", \"manageSellOfferOp\"],\r\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferOp\"],\r\n    [\"setOptions\", \"setOptionsOp\"],\r\n    [\"changeTrust\", \"changeTrustOp\"],\r\n    [\"allowTrust\", \"allowTrustOp\"],\r\n    [\"accountMerge\", \"destination\"],\r\n    [\"inflation\", xdr.void()],\r\n    [\"manageData\", \"manageDataOp\"],\r\n    [\"bumpSequence\", \"bumpSequenceOp\"],\r\n    [\"manageBuyOffer\", \"manageBuyOfferOp\"],\r\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendOp\"],\r\n    [\"createClaimableBalance\", \"createClaimableBalanceOp\"],\r\n    [\"claimClaimableBalance\", \"claimClaimableBalanceOp\"],\r\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesOp\"],\r\n    [\"endSponsoringFutureReserves\", xdr.void()],\r\n    [\"revokeSponsorship\", \"revokeSponsorshipOp\"],\r\n    [\"clawback\", \"clawbackOp\"],\r\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceOp\"],\r\n    [\"setTrustLineFlags\", \"setTrustLineFlagsOp\"],\r\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositOp\"],\r\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawOp\"],\r\n    [\"invokeHostFunction\", \"invokeHostFunctionOp\"],\r\n    [\"extendFootprintTtl\", \"extendFootprintTtlOp\"],\r\n    [\"restoreFootprint\", \"restoreFootprintOp\"],\r\n  ],\r\n  arms: {\r\n    createAccountOp: xdr.lookup(\"CreateAccountOp\"),\r\n    paymentOp: xdr.lookup(\"PaymentOp\"),\r\n    pathPaymentStrictReceiveOp: xdr.lookup(\"PathPaymentStrictReceiveOp\"),\r\n    manageSellOfferOp: xdr.lookup(\"ManageSellOfferOp\"),\r\n    createPassiveSellOfferOp: xdr.lookup(\"CreatePassiveSellOfferOp\"),\r\n    setOptionsOp: xdr.lookup(\"SetOptionsOp\"),\r\n    changeTrustOp: xdr.lookup(\"ChangeTrustOp\"),\r\n    allowTrustOp: xdr.lookup(\"AllowTrustOp\"),\r\n    destination: xdr.lookup(\"MuxedAccount\"),\r\n    manageDataOp: xdr.lookup(\"ManageDataOp\"),\r\n    bumpSequenceOp: xdr.lookup(\"BumpSequenceOp\"),\r\n    manageBuyOfferOp: xdr.lookup(\"ManageBuyOfferOp\"),\r\n    pathPaymentStrictSendOp: xdr.lookup(\"PathPaymentStrictSendOp\"),\r\n    createClaimableBalanceOp: xdr.lookup(\"CreateClaimableBalanceOp\"),\r\n    claimClaimableBalanceOp: xdr.lookup(\"ClaimClaimableBalanceOp\"),\r\n    beginSponsoringFutureReservesOp: xdr.lookup(\"BeginSponsoringFutureReservesOp\"),\r\n    revokeSponsorshipOp: xdr.lookup(\"RevokeSponsorshipOp\"),\r\n    clawbackOp: xdr.lookup(\"ClawbackOp\"),\r\n    clawbackClaimableBalanceOp: xdr.lookup(\"ClawbackClaimableBalanceOp\"),\r\n    setTrustLineFlagsOp: xdr.lookup(\"SetTrustLineFlagsOp\"),\r\n    liquidityPoolDepositOp: xdr.lookup(\"LiquidityPoolDepositOp\"),\r\n    liquidityPoolWithdrawOp: xdr.lookup(\"LiquidityPoolWithdrawOp\"),\r\n    invokeHostFunctionOp: xdr.lookup(\"InvokeHostFunctionOp\"),\r\n    extendFootprintTtlOp: xdr.lookup(\"ExtendFootprintTtlOp\"),\r\n    restoreFootprintOp: xdr.lookup(\"RestoreFootprintOp\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Operation\r\n//   {\r\n//       // sourceAccount is the account used to run the operation\r\n//       // if not set, the runtime defaults to \"sourceAccount\" specified at\r\n//       // the transaction level\r\n//       MuxedAccount* sourceAccount;\r\n//\r\n//       union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountOp createAccountOp;\r\n//       case PAYMENT:\r\n//           PaymentOp paymentOp;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveOp pathPaymentStrictReceiveOp;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferOp manageSellOfferOp;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           CreatePassiveSellOfferOp createPassiveSellOfferOp;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsOp setOptionsOp;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustOp changeTrustOp;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustOp allowTrustOp;\r\n//       case ACCOUNT_MERGE:\r\n//           MuxedAccount destination;\r\n//       case INFLATION:\r\n//           void;\r\n//       case MANAGE_DATA:\r\n//           ManageDataOp manageDataOp;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceOp bumpSequenceOp;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferOp manageBuyOfferOp;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendOp pathPaymentStrictSendOp;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceOp createClaimableBalanceOp;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceOp claimClaimableBalanceOp;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesOp beginSponsoringFutureReservesOp;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           void;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipOp revokeSponsorshipOp;\r\n//       case CLAWBACK:\r\n//           ClawbackOp clawbackOp;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceOp clawbackClaimableBalanceOp;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsOp setTrustLineFlagsOp;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositOp liquidityPoolDepositOp;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawOp liquidityPoolWithdrawOp;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionOp invokeHostFunctionOp;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLOp extendFootprintTTLOp;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintOp restoreFootprintOp;\r\n//       }\r\n//       body;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Operation\", [\r\n  [\"sourceAccount\", xdr.option(xdr.lookup(\"MuxedAccount\"))],\r\n  [\"body\", xdr.lookup(\"OperationBody\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageOperationId\", [\r\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"opNum\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//           PoolID liquidityPoolID;\r\n//           Asset asset;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageRevokeId\", [\r\n  [\"sourceAccount\", xdr.lookup(\"AccountId\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"opNum\", xdr.lookup(\"Uint32\")],\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash networkID;\r\n//           ContractIDPreimage contractIDPreimage;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageContractId\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"contractIdPreimage\", xdr.lookup(\"ContractIdPreimage\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           Hash networkID;\r\n//           int64 nonce;\r\n//           uint32 signatureExpirationLedger;\r\n//           SorobanAuthorizedInvocation invocation;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HashIdPreimageSorobanAuthorization\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n  [\"signatureExpirationLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"invocation\", xdr.lookup(\"SorobanAuthorizedInvocation\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union HashIDPreimage switch (EnvelopeType type)\r\n//   {\r\n//   case ENVELOPE_TYPE_OP_ID:\r\n//       struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//       } operationID;\r\n//   case ENVELOPE_TYPE_POOL_REVOKE_OP_ID:\r\n//       struct\r\n//       {\r\n//           AccountID sourceAccount;\r\n//           SequenceNumber seqNum;\r\n//           uint32 opNum;\r\n//           PoolID liquidityPoolID;\r\n//           Asset asset;\r\n//       } revokeID;\r\n//   case ENVELOPE_TYPE_CONTRACT_ID:\r\n//       struct\r\n//       {\r\n//           Hash networkID;\r\n//           ContractIDPreimage contractIDPreimage;\r\n//       } contractID;\r\n//   case ENVELOPE_TYPE_SOROBAN_AUTHORIZATION:\r\n//       struct\r\n//       {\r\n//           Hash networkID;\r\n//           int64 nonce;\r\n//           uint32 signatureExpirationLedger;\r\n//           SorobanAuthorizedInvocation invocation;\r\n//       } sorobanAuthorization;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"HashIdPreimage\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeOpId\", \"operationId\"],\r\n    [\"envelopeTypePoolRevokeOpId\", \"revokeId\"],\r\n    [\"envelopeTypeContractId\", \"contractId\"],\r\n    [\"envelopeTypeSorobanAuthorization\", \"sorobanAuthorization\"],\r\n  ],\r\n  arms: {\r\n    operationId: xdr.lookup(\"HashIdPreimageOperationId\"),\r\n    revokeId: xdr.lookup(\"HashIdPreimageRevokeId\"),\r\n    contractId: xdr.lookup(\"HashIdPreimageContractId\"),\r\n    sorobanAuthorization: xdr.lookup(\"HashIdPreimageSorobanAuthorization\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum MemoType\r\n//   {\r\n//       MEMO_NONE = 0,\r\n//       MEMO_TEXT = 1,\r\n//       MEMO_ID = 2,\r\n//       MEMO_HASH = 3,\r\n//       MEMO_RETURN = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"MemoType\", {\r\n  memoNone: 0,\r\n  memoText: 1,\r\n  memoId: 2,\r\n  memoHash: 3,\r\n  memoReturn: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Memo switch (MemoType type)\r\n//   {\r\n//   case MEMO_NONE:\r\n//       void;\r\n//   case MEMO_TEXT:\r\n//       string text<28>;\r\n//   case MEMO_ID:\r\n//       uint64 id;\r\n//   case MEMO_HASH:\r\n//       Hash hash; // the hash of what to pull from the content server\r\n//   case MEMO_RETURN:\r\n//       Hash retHash; // the hash of the tx you are rejecting\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Memo\", {\r\n  switchOn: xdr.lookup(\"MemoType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"memoNone\", xdr.void()],\r\n    [\"memoText\", \"text\"],\r\n    [\"memoId\", \"id\"],\r\n    [\"memoHash\", \"hash\"],\r\n    [\"memoReturn\", \"retHash\"],\r\n  ],\r\n  arms: {\r\n    text: xdr.string(28),\r\n    id: xdr.lookup(\"Uint64\"),\r\n    hash: xdr.lookup(\"Hash\"),\r\n    retHash: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TimeBounds\r\n//   {\r\n//       TimePoint minTime;\r\n//       TimePoint maxTime; // 0 here means no maxTime\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TimeBounds\", [\r\n  [\"minTime\", xdr.lookup(\"TimePoint\")],\r\n  [\"maxTime\", xdr.lookup(\"TimePoint\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerBounds\r\n//   {\r\n//       uint32 minLedger;\r\n//       uint32 maxLedger; // 0 here means no maxLedger\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerBounds\", [\r\n  [\"minLedger\", xdr.lookup(\"Uint32\")],\r\n  [\"maxLedger\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct PreconditionsV2\r\n//   {\r\n//       TimeBounds* timeBounds;\r\n//\r\n//       // Transaction only valid for ledger numbers n such that\r\n//       // minLedger <= n < maxLedger (if maxLedger == 0, then\r\n//       // only minLedger is checked)\r\n//       LedgerBounds* ledgerBounds;\r\n//\r\n//       // If NULL, only valid when sourceAccount's sequence number\r\n//       // is seqNum - 1.  Otherwise, valid when sourceAccount's\r\n//       // sequence number n satisfies minSeqNum <= n < tx.seqNum.\r\n//       // Note that after execution the account's sequence number\r\n//       // is always raised to tx.seqNum, and a transaction is not\r\n//       // valid if tx.seqNum is too high to ensure replay protection.\r\n//       SequenceNumber* minSeqNum;\r\n//\r\n//       // For the transaction to be valid, the current ledger time must\r\n//       // be at least minSeqAge greater than sourceAccount's seqTime.\r\n//       Duration minSeqAge;\r\n//\r\n//       // For the transaction to be valid, the current ledger number\r\n//       // must be at least minSeqLedgerGap greater than sourceAccount's\r\n//       // seqLedger.\r\n//       uint32 minSeqLedgerGap;\r\n//\r\n//       // For the transaction to be valid, there must be a signature\r\n//       // corresponding to every Signer in this array, even if the\r\n//       // signature is not otherwise required by the sourceAccount or\r\n//       // operations.\r\n//       SignerKey extraSigners<2>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PreconditionsV2\", [\r\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\r\n  [\"ledgerBounds\", xdr.option(xdr.lookup(\"LedgerBounds\"))],\r\n  [\"minSeqNum\", xdr.option(xdr.lookup(\"SequenceNumber\"))],\r\n  [\"minSeqAge\", xdr.lookup(\"Duration\")],\r\n  [\"minSeqLedgerGap\", xdr.lookup(\"Uint32\")],\r\n  [\"extraSigners\", xdr.varArray(xdr.lookup(\"SignerKey\"), 2)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PreconditionType\r\n//   {\r\n//       PRECOND_NONE = 0,\r\n//       PRECOND_TIME = 1,\r\n//       PRECOND_V2 = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PreconditionType\", {\r\n  precondNone: 0,\r\n  precondTime: 1,\r\n  precondV2: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union Preconditions switch (PreconditionType type)\r\n//   {\r\n//   case PRECOND_NONE:\r\n//       void;\r\n//   case PRECOND_TIME:\r\n//       TimeBounds timeBounds;\r\n//   case PRECOND_V2:\r\n//       PreconditionsV2 v2;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"Preconditions\", {\r\n  switchOn: xdr.lookup(\"PreconditionType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"precondNone\", xdr.void()],\r\n    [\"precondTime\", \"timeBounds\"],\r\n    [\"precondV2\", \"v2\"],\r\n  ],\r\n  arms: {\r\n    timeBounds: xdr.lookup(\"TimeBounds\"),\r\n    v2: xdr.lookup(\"PreconditionsV2\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct LedgerFootprint\r\n//   {\r\n//       LedgerKey readOnly<>;\r\n//       LedgerKey readWrite<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"LedgerFootprint\", [\r\n  [\"readOnly\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n  [\"readWrite\", xdr.varArray(xdr.lookup(\"LedgerKey\"), 2147483647)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanResources\r\n//   {\r\n//       // The ledger footprint of the transaction.\r\n//       LedgerFootprint footprint;\r\n//       // The maximum number of instructions this transaction can use\r\n//       uint32 instructions;\r\n//\r\n//       // The maximum number of bytes this transaction can read from ledger\r\n//       uint32 readBytes;\r\n//       // The maximum number of bytes this transaction can write to ledger\r\n//       uint32 writeBytes;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanResources\", [\r\n  [\"footprint\", xdr.lookup(\"LedgerFootprint\")],\r\n  [\"instructions\", xdr.lookup(\"Uint32\")],\r\n  [\"readBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"writeBytes\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SorobanTransactionData\r\n//   {\r\n//       ExtensionPoint ext;\r\n//       SorobanResources resources;\r\n//       // Amount of the transaction `fee` allocated to the Soroban resource fees.\r\n//       // The fraction of `resourceFee` corresponding to `resources` specified\r\n//       // above is *not* refundable (i.e. fees for instructions, ledger I/O), as\r\n//       // well as fees for the transaction size.\r\n//       // The remaining part of the fee is refundable and the charged value is\r\n//       // based on the actual consumption of refundable resources (events, ledger\r\n//       // rent bumps).\r\n//       // The `inclusionFee` used for prioritization of the transaction is defined\r\n//       // as `tx.fee - resourceFee`.\r\n//       int64 resourceFee;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SorobanTransactionData\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"resources\", xdr.lookup(\"SorobanResources\")],\r\n  [\"resourceFee\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionV0Ext\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV0\r\n//   {\r\n//       uint256 sourceAccountEd25519;\r\n//       uint32 fee;\r\n//       SequenceNumber seqNum;\r\n//       TimeBounds* timeBounds;\r\n//       Memo memo;\r\n//       Operation operations<MAX_OPS_PER_TX>;\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV0\", [\r\n  [\"sourceAccountEd25519\", xdr.lookup(\"Uint256\")],\r\n  [\"fee\", xdr.lookup(\"Uint32\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"timeBounds\", xdr.option(xdr.lookup(\"TimeBounds\"))],\r\n  [\"memo\", xdr.lookup(\"Memo\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\r\n  [\"ext\", xdr.lookup(\"TransactionV0Ext\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV0Envelope\r\n//   {\r\n//       TransactionV0 tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV0Envelope\", [\r\n  [\"tx\", xdr.lookup(\"TransactionV0\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           SorobanTransactionData sorobanData;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n    [1, \"sorobanData\"],\r\n  ],\r\n  arms: {\r\n    sorobanData: xdr.lookup(\"SorobanTransactionData\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Transaction\r\n//   {\r\n//       // account used to run the transaction\r\n//       MuxedAccount sourceAccount;\r\n//\r\n//       // the fee the sourceAccount will pay\r\n//       uint32 fee;\r\n//\r\n//       // sequence number to consume in the account\r\n//       SequenceNumber seqNum;\r\n//\r\n//       // validity conditions\r\n//       Preconditions cond;\r\n//\r\n//       Memo memo;\r\n//\r\n//       Operation operations<MAX_OPS_PER_TX>;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       case 1:\r\n//           SorobanTransactionData sorobanData;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Transaction\", [\r\n  [\"sourceAccount\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"fee\", xdr.lookup(\"Uint32\")],\r\n  [\"seqNum\", xdr.lookup(\"SequenceNumber\")],\r\n  [\"cond\", xdr.lookup(\"Preconditions\")],\r\n  [\"memo\", xdr.lookup(\"Memo\")],\r\n  [\"operations\", xdr.varArray(xdr.lookup(\"Operation\"), xdr.lookup(\"MAX_OPS_PER_TX\"))],\r\n  [\"ext\", xdr.lookup(\"TransactionExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionV1Envelope\r\n//   {\r\n//       Transaction tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionV1Envelope\", [\r\n  [\"tx\", xdr.lookup(\"Transaction\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (EnvelopeType type)\r\n//       {\r\n//       case ENVELOPE_TYPE_TX:\r\n//           TransactionV1Envelope v1;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"FeeBumpTransactionInnerTx\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTx\", \"v1\"],\r\n  ],\r\n  arms: {\r\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"FeeBumpTransactionExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FeeBumpTransaction\r\n//   {\r\n//       MuxedAccount feeSource;\r\n//       int64 fee;\r\n//       union switch (EnvelopeType type)\r\n//       {\r\n//       case ENVELOPE_TYPE_TX:\r\n//           TransactionV1Envelope v1;\r\n//       }\r\n//       innerTx;\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FeeBumpTransaction\", [\r\n  [\"feeSource\", xdr.lookup(\"MuxedAccount\")],\r\n  [\"fee\", xdr.lookup(\"Int64\")],\r\n  [\"innerTx\", xdr.lookup(\"FeeBumpTransactionInnerTx\")],\r\n  [\"ext\", xdr.lookup(\"FeeBumpTransactionExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct FeeBumpTransactionEnvelope\r\n//   {\r\n//       FeeBumpTransaction tx;\r\n//       /* Each decorated signature is a signature over the SHA256 hash of\r\n//        * a TransactionSignaturePayload */\r\n//       DecoratedSignature signatures<20>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"FeeBumpTransactionEnvelope\", [\r\n  [\"tx\", xdr.lookup(\"FeeBumpTransaction\")],\r\n  [\"signatures\", xdr.varArray(xdr.lookup(\"DecoratedSignature\"), 20)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union TransactionEnvelope switch (EnvelopeType type)\r\n//   {\r\n//   case ENVELOPE_TYPE_TX_V0:\r\n//       TransactionV0Envelope v0;\r\n//   case ENVELOPE_TYPE_TX:\r\n//       TransactionV1Envelope v1;\r\n//   case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//       FeeBumpTransactionEnvelope feeBump;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionEnvelope\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTxV0\", \"v0\"],\r\n    [\"envelopeTypeTx\", \"v1\"],\r\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"TransactionV0Envelope\"),\r\n    v1: xdr.lookup(\"TransactionV1Envelope\"),\r\n    feeBump: xdr.lookup(\"FeeBumpTransactionEnvelope\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (EnvelopeType type)\r\n//       {\r\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n//       case ENVELOPE_TYPE_TX:\r\n//           Transaction tx;\r\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//           FeeBumpTransaction feeBump;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionSignaturePayloadTaggedTransaction\", {\r\n  switchOn: xdr.lookup(\"EnvelopeType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"envelopeTypeTx\", \"tx\"],\r\n    [\"envelopeTypeTxFeeBump\", \"feeBump\"],\r\n  ],\r\n  arms: {\r\n    tx: xdr.lookup(\"Transaction\"),\r\n    feeBump: xdr.lookup(\"FeeBumpTransaction\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionSignaturePayload\r\n//   {\r\n//       Hash networkId;\r\n//       union switch (EnvelopeType type)\r\n//       {\r\n//       // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n//       case ENVELOPE_TYPE_TX:\r\n//           Transaction tx;\r\n//       case ENVELOPE_TYPE_TX_FEE_BUMP:\r\n//           FeeBumpTransaction feeBump;\r\n//       }\r\n//       taggedTransaction;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionSignaturePayload\", [\r\n  [\"networkId\", xdr.lookup(\"Hash\")],\r\n  [\"taggedTransaction\", xdr.lookup(\"TransactionSignaturePayloadTaggedTransaction\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimAtomType\r\n//   {\r\n//       CLAIM_ATOM_TYPE_V0 = 0,\r\n//       CLAIM_ATOM_TYPE_ORDER_BOOK = 1,\r\n//       CLAIM_ATOM_TYPE_LIQUIDITY_POOL = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimAtomType\", {\r\n  claimAtomTypeV0: 0,\r\n  claimAtomTypeOrderBook: 1,\r\n  claimAtomTypeLiquidityPool: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimOfferAtomV0\r\n//   {\r\n//       // emitted to identify the offer\r\n//       uint256 sellerEd25519; // Account that owns the offer\r\n//       int64 offerID;\r\n//\r\n//       // amount and asset taken from the owner\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the owner\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimOfferAtomV0\", [\r\n  [\"sellerEd25519\", xdr.lookup(\"Uint256\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimOfferAtom\r\n//   {\r\n//       // emitted to identify the offer\r\n//       AccountID sellerID; // Account that owns the offer\r\n//       int64 offerID;\r\n//\r\n//       // amount and asset taken from the owner\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the owner\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimOfferAtom\", [\r\n  [\"sellerId\", xdr.lookup(\"AccountId\")],\r\n  [\"offerId\", xdr.lookup(\"Int64\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ClaimLiquidityAtom\r\n//   {\r\n//       PoolID liquidityPoolID;\r\n//\r\n//       // amount and asset taken from the pool\r\n//       Asset assetSold;\r\n//       int64 amountSold;\r\n//\r\n//       // amount and asset sent to the pool\r\n//       Asset assetBought;\r\n//       int64 amountBought;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ClaimLiquidityAtom\", [\r\n  [\"liquidityPoolId\", xdr.lookup(\"PoolId\")],\r\n  [\"assetSold\", xdr.lookup(\"Asset\")],\r\n  [\"amountSold\", xdr.lookup(\"Int64\")],\r\n  [\"assetBought\", xdr.lookup(\"Asset\")],\r\n  [\"amountBought\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimAtom switch (ClaimAtomType type)\r\n//   {\r\n//   case CLAIM_ATOM_TYPE_V0:\r\n//       ClaimOfferAtomV0 v0;\r\n//   case CLAIM_ATOM_TYPE_ORDER_BOOK:\r\n//       ClaimOfferAtom orderBook;\r\n//   case CLAIM_ATOM_TYPE_LIQUIDITY_POOL:\r\n//       ClaimLiquidityAtom liquidityPool;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimAtom\", {\r\n  switchOn: xdr.lookup(\"ClaimAtomType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"claimAtomTypeV0\", \"v0\"],\r\n    [\"claimAtomTypeOrderBook\", \"orderBook\"],\r\n    [\"claimAtomTypeLiquidityPool\", \"liquidityPool\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ClaimOfferAtomV0\"),\r\n    orderBook: xdr.lookup(\"ClaimOfferAtom\"),\r\n    liquidityPool: xdr.lookup(\"ClaimLiquidityAtom\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CreateAccountResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CREATE_ACCOUNT_SUCCESS = 0, // account was created\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CREATE_ACCOUNT_MALFORMED = -1,   // invalid destination\r\n//       CREATE_ACCOUNT_UNDERFUNDED = -2, // not enough funds in source account\r\n//       CREATE_ACCOUNT_LOW_RESERVE =\r\n//           -3, // would create an account below the min reserve\r\n//       CREATE_ACCOUNT_ALREADY_EXIST = -4 // account already exists\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CreateAccountResultCode\", {\r\n  createAccountSuccess: 0,\r\n  createAccountMalformed: -1,\r\n  createAccountUnderfunded: -2,\r\n  createAccountLowReserve: -3,\r\n  createAccountAlreadyExist: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union CreateAccountResult switch (CreateAccountResultCode code)\r\n//   {\r\n//   case CREATE_ACCOUNT_SUCCESS:\r\n//       void;\r\n//   case CREATE_ACCOUNT_MALFORMED:\r\n//   case CREATE_ACCOUNT_UNDERFUNDED:\r\n//   case CREATE_ACCOUNT_LOW_RESERVE:\r\n//   case CREATE_ACCOUNT_ALREADY_EXIST:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"CreateAccountResult\", {\r\n  switchOn: xdr.lookup(\"CreateAccountResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"createAccountSuccess\", xdr.void()],\r\n    [\"createAccountMalformed\", xdr.void()],\r\n    [\"createAccountUnderfunded\", xdr.void()],\r\n    [\"createAccountLowReserve\", xdr.void()],\r\n    [\"createAccountAlreadyExist\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PaymentResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PAYMENT_SUCCESS = 0, // payment successfully completed\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PAYMENT_MALFORMED = -1,          // bad input\r\n//       PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account\r\n//       PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account\r\n//       PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer\r\n//       PAYMENT_NO_DESTINATION = -5,     // destination account does not exist\r\n//       PAYMENT_NO_TRUST = -6,       // destination missing a trust line for asset\r\n//       PAYMENT_NOT_AUTHORIZED = -7, // destination not authorized to hold asset\r\n//       PAYMENT_LINE_FULL = -8,      // destination would go above their limit\r\n//       PAYMENT_NO_ISSUER = -9       // missing issuer on asset\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PaymentResultCode\", {\r\n  paymentSuccess: 0,\r\n  paymentMalformed: -1,\r\n  paymentUnderfunded: -2,\r\n  paymentSrcNoTrust: -3,\r\n  paymentSrcNotAuthorized: -4,\r\n  paymentNoDestination: -5,\r\n  paymentNoTrust: -6,\r\n  paymentNotAuthorized: -7,\r\n  paymentLineFull: -8,\r\n  paymentNoIssuer: -9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PaymentResult switch (PaymentResultCode code)\r\n//   {\r\n//   case PAYMENT_SUCCESS:\r\n//       void;\r\n//   case PAYMENT_MALFORMED:\r\n//   case PAYMENT_UNDERFUNDED:\r\n//   case PAYMENT_SRC_NO_TRUST:\r\n//   case PAYMENT_SRC_NOT_AUTHORIZED:\r\n//   case PAYMENT_NO_DESTINATION:\r\n//   case PAYMENT_NO_TRUST:\r\n//   case PAYMENT_NOT_AUTHORIZED:\r\n//   case PAYMENT_LINE_FULL:\r\n//   case PAYMENT_NO_ISSUER:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PaymentResult\", {\r\n  switchOn: xdr.lookup(\"PaymentResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"paymentSuccess\", xdr.void()],\r\n    [\"paymentMalformed\", xdr.void()],\r\n    [\"paymentUnderfunded\", xdr.void()],\r\n    [\"paymentSrcNoTrust\", xdr.void()],\r\n    [\"paymentSrcNotAuthorized\", xdr.void()],\r\n    [\"paymentNoDestination\", xdr.void()],\r\n    [\"paymentNoTrust\", xdr.void()],\r\n    [\"paymentNotAuthorized\", xdr.void()],\r\n    [\"paymentLineFull\", xdr.void()],\r\n    [\"paymentNoIssuer\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PathPaymentStrictReceiveResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SUCCESS = 0, // success\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PATH_PAYMENT_STRICT_RECEIVE_MALFORMED = -1, // bad input\r\n//       PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED =\r\n//           -2, // not enough funds in source account\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST =\r\n//           -3, // no trust line on source account\r\n//       PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED =\r\n//           -4, // source not authorized to transfer\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION =\r\n//           -5, // destination account does not exist\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST =\r\n//           -6, // dest missing a trust line for asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED =\r\n//           -7, // dest not authorized to hold asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL =\r\n//           -8, // dest would go above their limit\r\n//       PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER = -9, // missing issuer on one asset\r\n//       PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS =\r\n//           -10, // not enough offers to satisfy path\r\n//       PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF =\r\n//           -11, // would cross one of its own offers\r\n//       PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX = -12 // could not satisfy sendmax\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PathPaymentStrictReceiveResultCode\", {\r\n  pathPaymentStrictReceiveSuccess: 0,\r\n  pathPaymentStrictReceiveMalformed: -1,\r\n  pathPaymentStrictReceiveUnderfunded: -2,\r\n  pathPaymentStrictReceiveSrcNoTrust: -3,\r\n  pathPaymentStrictReceiveSrcNotAuthorized: -4,\r\n  pathPaymentStrictReceiveNoDestination: -5,\r\n  pathPaymentStrictReceiveNoTrust: -6,\r\n  pathPaymentStrictReceiveNotAuthorized: -7,\r\n  pathPaymentStrictReceiveLineFull: -8,\r\n  pathPaymentStrictReceiveNoIssuer: -9,\r\n  pathPaymentStrictReceiveTooFewOffers: -10,\r\n  pathPaymentStrictReceiveOfferCrossSelf: -11,\r\n  pathPaymentStrictReceiveOverSendmax: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SimplePaymentResult\r\n//   {\r\n//       AccountID destination;\r\n//       Asset asset;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SimplePaymentResult\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"asset\", xdr.lookup(\"Asset\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictReceiveResultSuccess\", [\r\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PathPaymentStrictReceiveResult switch (\r\n//       PathPaymentStrictReceiveResultCode code)\r\n//   {\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SUCCESS:\r\n//       struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       } success;\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_MALFORMED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_UNDERFUNDED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_SRC_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_DESTINATION:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_LINE_FULL:\r\n//       void;\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_NO_ISSUER:\r\n//       Asset noIssuer; // the asset that caused the error\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_TOO_FEW_OFFERS:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_OFFER_CROSS_SELF:\r\n//   case PATH_PAYMENT_STRICT_RECEIVE_OVER_SENDMAX:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PathPaymentStrictReceiveResult\", {\r\n  switchOn: xdr.lookup(\"PathPaymentStrictReceiveResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"pathPaymentStrictReceiveSuccess\", \"success\"],\r\n    [\"pathPaymentStrictReceiveMalformed\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveUnderfunded\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveSrcNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveSrcNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoDestination\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveLineFull\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveNoIssuer\", \"noIssuer\"],\r\n    [\"pathPaymentStrictReceiveTooFewOffers\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveOfferCrossSelf\", xdr.void()],\r\n    [\"pathPaymentStrictReceiveOverSendmax\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"PathPaymentStrictReceiveResultSuccess\"),\r\n    noIssuer: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PathPaymentStrictSendResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       PATH_PAYMENT_STRICT_SEND_SUCCESS = 0, // success\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       PATH_PAYMENT_STRICT_SEND_MALFORMED = -1, // bad input\r\n//       PATH_PAYMENT_STRICT_SEND_UNDERFUNDED =\r\n//           -2, // not enough funds in source account\r\n//       PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST =\r\n//           -3, // no trust line on source account\r\n//       PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED =\r\n//           -4, // source not authorized to transfer\r\n//       PATH_PAYMENT_STRICT_SEND_NO_DESTINATION =\r\n//           -5, // destination account does not exist\r\n//       PATH_PAYMENT_STRICT_SEND_NO_TRUST =\r\n//           -6, // dest missing a trust line for asset\r\n//       PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED =\r\n//           -7, // dest not authorized to hold asset\r\n//       PATH_PAYMENT_STRICT_SEND_LINE_FULL = -8, // dest would go above their limit\r\n//       PATH_PAYMENT_STRICT_SEND_NO_ISSUER = -9, // missing issuer on one asset\r\n//       PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS =\r\n//           -10, // not enough offers to satisfy path\r\n//       PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF =\r\n//           -11, // would cross one of its own offers\r\n//       PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN = -12 // could not satisfy destMin\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PathPaymentStrictSendResultCode\", {\r\n  pathPaymentStrictSendSuccess: 0,\r\n  pathPaymentStrictSendMalformed: -1,\r\n  pathPaymentStrictSendUnderfunded: -2,\r\n  pathPaymentStrictSendSrcNoTrust: -3,\r\n  pathPaymentStrictSendSrcNotAuthorized: -4,\r\n  pathPaymentStrictSendNoDestination: -5,\r\n  pathPaymentStrictSendNoTrust: -6,\r\n  pathPaymentStrictSendNotAuthorized: -7,\r\n  pathPaymentStrictSendLineFull: -8,\r\n  pathPaymentStrictSendNoIssuer: -9,\r\n  pathPaymentStrictSendTooFewOffers: -10,\r\n  pathPaymentStrictSendOfferCrossSelf: -11,\r\n  pathPaymentStrictSendUnderDestmin: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"PathPaymentStrictSendResultSuccess\", [\r\n  [\"offers\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"last\", xdr.lookup(\"SimplePaymentResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PathPaymentStrictSendResult switch (PathPaymentStrictSendResultCode code)\r\n//   {\r\n//   case PATH_PAYMENT_STRICT_SEND_SUCCESS:\r\n//       struct\r\n//       {\r\n//           ClaimAtom offers<>;\r\n//           SimplePaymentResult last;\r\n//       } success;\r\n//   case PATH_PAYMENT_STRICT_SEND_MALFORMED:\r\n//   case PATH_PAYMENT_STRICT_SEND_UNDERFUNDED:\r\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_SEND_SRC_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_DESTINATION:\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_TRUST:\r\n//   case PATH_PAYMENT_STRICT_SEND_NOT_AUTHORIZED:\r\n//   case PATH_PAYMENT_STRICT_SEND_LINE_FULL:\r\n//       void;\r\n//   case PATH_PAYMENT_STRICT_SEND_NO_ISSUER:\r\n//       Asset noIssuer; // the asset that caused the error\r\n//   case PATH_PAYMENT_STRICT_SEND_TOO_FEW_OFFERS:\r\n//   case PATH_PAYMENT_STRICT_SEND_OFFER_CROSS_SELF:\r\n//   case PATH_PAYMENT_STRICT_SEND_UNDER_DESTMIN:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PathPaymentStrictSendResult\", {\r\n  switchOn: xdr.lookup(\"PathPaymentStrictSendResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"pathPaymentStrictSendSuccess\", \"success\"],\r\n    [\"pathPaymentStrictSendMalformed\", xdr.void()],\r\n    [\"pathPaymentStrictSendUnderfunded\", xdr.void()],\r\n    [\"pathPaymentStrictSendSrcNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictSendSrcNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoDestination\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoTrust\", xdr.void()],\r\n    [\"pathPaymentStrictSendNotAuthorized\", xdr.void()],\r\n    [\"pathPaymentStrictSendLineFull\", xdr.void()],\r\n    [\"pathPaymentStrictSendNoIssuer\", \"noIssuer\"],\r\n    [\"pathPaymentStrictSendTooFewOffers\", xdr.void()],\r\n    [\"pathPaymentStrictSendOfferCrossSelf\", xdr.void()],\r\n    [\"pathPaymentStrictSendUnderDestmin\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"PathPaymentStrictSendResultSuccess\"),\r\n    noIssuer: xdr.lookup(\"Asset\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageSellOfferResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_SELL_OFFER_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_SELL_OFFER_MALFORMED = -1, // generated offer would be invalid\r\n//       MANAGE_SELL_OFFER_SELL_NO_TRUST =\r\n//           -2,                              // no trust line for what we're selling\r\n//       MANAGE_SELL_OFFER_BUY_NO_TRUST = -3, // no trust line for what we're buying\r\n//       MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\r\n//       MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\r\n//       MANAGE_SELL_OFFER_LINE_FULL = -6, // can't receive more of what it's buying\r\n//       MANAGE_SELL_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\r\n//       MANAGE_SELL_OFFER_CROSS_SELF =\r\n//           -8, // would cross an offer from the same user\r\n//       MANAGE_SELL_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\r\n//       MANAGE_SELL_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\r\n//\r\n//       // update errors\r\n//       MANAGE_SELL_OFFER_NOT_FOUND =\r\n//           -11, // offerID does not match an existing offer\r\n//\r\n//       MANAGE_SELL_OFFER_LOW_RESERVE =\r\n//           -12 // not enough funds to create a new Offer\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageSellOfferResultCode\", {\r\n  manageSellOfferSuccess: 0,\r\n  manageSellOfferMalformed: -1,\r\n  manageSellOfferSellNoTrust: -2,\r\n  manageSellOfferBuyNoTrust: -3,\r\n  manageSellOfferSellNotAuthorized: -4,\r\n  manageSellOfferBuyNotAuthorized: -5,\r\n  manageSellOfferLineFull: -6,\r\n  manageSellOfferUnderfunded: -7,\r\n  manageSellOfferCrossSelf: -8,\r\n  manageSellOfferSellNoIssuer: -9,\r\n  manageSellOfferBuyNoIssuer: -10,\r\n  manageSellOfferNotFound: -11,\r\n  manageSellOfferLowReserve: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageOfferEffect\r\n//   {\r\n//       MANAGE_OFFER_CREATED = 0,\r\n//       MANAGE_OFFER_UPDATED = 1,\r\n//       MANAGE_OFFER_DELETED = 2\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageOfferEffect\", {\r\n  manageOfferCreated: 0,\r\n  manageOfferUpdated: 1,\r\n  manageOfferDeleted: 2,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (ManageOfferEffect effect)\r\n//       {\r\n//       case MANAGE_OFFER_CREATED:\r\n//       case MANAGE_OFFER_UPDATED:\r\n//           OfferEntry offer;\r\n//       case MANAGE_OFFER_DELETED:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageOfferSuccessResultOffer\", {\r\n  switchOn: xdr.lookup(\"ManageOfferEffect\"),\r\n  switchName: \"effect\",\r\n  switches: [\r\n    [\"manageOfferCreated\", \"offer\"],\r\n    [\"manageOfferUpdated\", \"offer\"],\r\n    [\"manageOfferDeleted\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    offer: xdr.lookup(\"OfferEntry\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ManageOfferSuccessResult\r\n//   {\r\n//       // offers that got claimed while creating this offer\r\n//       ClaimAtom offersClaimed<>;\r\n//\r\n//       union switch (ManageOfferEffect effect)\r\n//       {\r\n//       case MANAGE_OFFER_CREATED:\r\n//       case MANAGE_OFFER_UPDATED:\r\n//           OfferEntry offer;\r\n//       case MANAGE_OFFER_DELETED:\r\n//           void;\r\n//       }\r\n//       offer;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ManageOfferSuccessResult\", [\r\n  [\"offersClaimed\", xdr.varArray(xdr.lookup(\"ClaimAtom\"), 2147483647)],\r\n  [\"offer\", xdr.lookup(\"ManageOfferSuccessResultOffer\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageSellOfferResult switch (ManageSellOfferResultCode code)\r\n//   {\r\n//   case MANAGE_SELL_OFFER_SUCCESS:\r\n//       ManageOfferSuccessResult success;\r\n//   case MANAGE_SELL_OFFER_MALFORMED:\r\n//   case MANAGE_SELL_OFFER_SELL_NO_TRUST:\r\n//   case MANAGE_SELL_OFFER_BUY_NO_TRUST:\r\n//   case MANAGE_SELL_OFFER_SELL_NOT_AUTHORIZED:\r\n//   case MANAGE_SELL_OFFER_BUY_NOT_AUTHORIZED:\r\n//   case MANAGE_SELL_OFFER_LINE_FULL:\r\n//   case MANAGE_SELL_OFFER_UNDERFUNDED:\r\n//   case MANAGE_SELL_OFFER_CROSS_SELF:\r\n//   case MANAGE_SELL_OFFER_SELL_NO_ISSUER:\r\n//   case MANAGE_SELL_OFFER_BUY_NO_ISSUER:\r\n//   case MANAGE_SELL_OFFER_NOT_FOUND:\r\n//   case MANAGE_SELL_OFFER_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageSellOfferResult\", {\r\n  switchOn: xdr.lookup(\"ManageSellOfferResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageSellOfferSuccess\", \"success\"],\r\n    [\"manageSellOfferMalformed\", xdr.void()],\r\n    [\"manageSellOfferSellNoTrust\", xdr.void()],\r\n    [\"manageSellOfferBuyNoTrust\", xdr.void()],\r\n    [\"manageSellOfferSellNotAuthorized\", xdr.void()],\r\n    [\"manageSellOfferBuyNotAuthorized\", xdr.void()],\r\n    [\"manageSellOfferLineFull\", xdr.void()],\r\n    [\"manageSellOfferUnderfunded\", xdr.void()],\r\n    [\"manageSellOfferCrossSelf\", xdr.void()],\r\n    [\"manageSellOfferSellNoIssuer\", xdr.void()],\r\n    [\"manageSellOfferBuyNoIssuer\", xdr.void()],\r\n    [\"manageSellOfferNotFound\", xdr.void()],\r\n    [\"manageSellOfferLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageBuyOfferResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_BUY_OFFER_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_BUY_OFFER_MALFORMED = -1,     // generated offer would be invalid\r\n//       MANAGE_BUY_OFFER_SELL_NO_TRUST = -2, // no trust line for what we're selling\r\n//       MANAGE_BUY_OFFER_BUY_NO_TRUST = -3,  // no trust line for what we're buying\r\n//       MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED = -4, // not authorized to sell\r\n//       MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED = -5,  // not authorized to buy\r\n//       MANAGE_BUY_OFFER_LINE_FULL = -6,   // can't receive more of what it's buying\r\n//       MANAGE_BUY_OFFER_UNDERFUNDED = -7, // doesn't hold what it's trying to sell\r\n//       MANAGE_BUY_OFFER_CROSS_SELF = -8, // would cross an offer from the same user\r\n//       MANAGE_BUY_OFFER_SELL_NO_ISSUER = -9, // no issuer for what we're selling\r\n//       MANAGE_BUY_OFFER_BUY_NO_ISSUER = -10, // no issuer for what we're buying\r\n//\r\n//       // update errors\r\n//       MANAGE_BUY_OFFER_NOT_FOUND =\r\n//           -11, // offerID does not match an existing offer\r\n//\r\n//       MANAGE_BUY_OFFER_LOW_RESERVE = -12 // not enough funds to create a new Offer\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageBuyOfferResultCode\", {\r\n  manageBuyOfferSuccess: 0,\r\n  manageBuyOfferMalformed: -1,\r\n  manageBuyOfferSellNoTrust: -2,\r\n  manageBuyOfferBuyNoTrust: -3,\r\n  manageBuyOfferSellNotAuthorized: -4,\r\n  manageBuyOfferBuyNotAuthorized: -5,\r\n  manageBuyOfferLineFull: -6,\r\n  manageBuyOfferUnderfunded: -7,\r\n  manageBuyOfferCrossSelf: -8,\r\n  manageBuyOfferSellNoIssuer: -9,\r\n  manageBuyOfferBuyNoIssuer: -10,\r\n  manageBuyOfferNotFound: -11,\r\n  manageBuyOfferLowReserve: -12,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageBuyOfferResult switch (ManageBuyOfferResultCode code)\r\n//   {\r\n//   case MANAGE_BUY_OFFER_SUCCESS:\r\n//       ManageOfferSuccessResult success;\r\n//   case MANAGE_BUY_OFFER_MALFORMED:\r\n//   case MANAGE_BUY_OFFER_SELL_NO_TRUST:\r\n//   case MANAGE_BUY_OFFER_BUY_NO_TRUST:\r\n//   case MANAGE_BUY_OFFER_SELL_NOT_AUTHORIZED:\r\n//   case MANAGE_BUY_OFFER_BUY_NOT_AUTHORIZED:\r\n//   case MANAGE_BUY_OFFER_LINE_FULL:\r\n//   case MANAGE_BUY_OFFER_UNDERFUNDED:\r\n//   case MANAGE_BUY_OFFER_CROSS_SELF:\r\n//   case MANAGE_BUY_OFFER_SELL_NO_ISSUER:\r\n//   case MANAGE_BUY_OFFER_BUY_NO_ISSUER:\r\n//   case MANAGE_BUY_OFFER_NOT_FOUND:\r\n//   case MANAGE_BUY_OFFER_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageBuyOfferResult\", {\r\n  switchOn: xdr.lookup(\"ManageBuyOfferResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageBuyOfferSuccess\", \"success\"],\r\n    [\"manageBuyOfferMalformed\", xdr.void()],\r\n    [\"manageBuyOfferSellNoTrust\", xdr.void()],\r\n    [\"manageBuyOfferBuyNoTrust\", xdr.void()],\r\n    [\"manageBuyOfferSellNotAuthorized\", xdr.void()],\r\n    [\"manageBuyOfferBuyNotAuthorized\", xdr.void()],\r\n    [\"manageBuyOfferLineFull\", xdr.void()],\r\n    [\"manageBuyOfferUnderfunded\", xdr.void()],\r\n    [\"manageBuyOfferCrossSelf\", xdr.void()],\r\n    [\"manageBuyOfferSellNoIssuer\", xdr.void()],\r\n    [\"manageBuyOfferBuyNoIssuer\", xdr.void()],\r\n    [\"manageBuyOfferNotFound\", xdr.void()],\r\n    [\"manageBuyOfferLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"ManageOfferSuccessResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SetOptionsResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       SET_OPTIONS_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       SET_OPTIONS_LOW_RESERVE = -1,      // not enough funds to add a signer\r\n//       SET_OPTIONS_TOO_MANY_SIGNERS = -2, // max number of signers already reached\r\n//       SET_OPTIONS_BAD_FLAGS = -3,        // invalid combination of clear/set flags\r\n//       SET_OPTIONS_INVALID_INFLATION = -4,      // inflation account does not exist\r\n//       SET_OPTIONS_CANT_CHANGE = -5,            // can no longer change this option\r\n//       SET_OPTIONS_UNKNOWN_FLAG = -6,           // can't set an unknown flag\r\n//       SET_OPTIONS_THRESHOLD_OUT_OF_RANGE = -7, // bad value for weight/threshold\r\n//       SET_OPTIONS_BAD_SIGNER = -8,             // signer cannot be masterkey\r\n//       SET_OPTIONS_INVALID_HOME_DOMAIN = -9,    // malformed home domain\r\n//       SET_OPTIONS_AUTH_REVOCABLE_REQUIRED =\r\n//           -10 // auth revocable is required for clawback\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SetOptionsResultCode\", {\r\n  setOptionsSuccess: 0,\r\n  setOptionsLowReserve: -1,\r\n  setOptionsTooManySigners: -2,\r\n  setOptionsBadFlags: -3,\r\n  setOptionsInvalidInflation: -4,\r\n  setOptionsCantChange: -5,\r\n  setOptionsUnknownFlag: -6,\r\n  setOptionsThresholdOutOfRange: -7,\r\n  setOptionsBadSigner: -8,\r\n  setOptionsInvalidHomeDomain: -9,\r\n  setOptionsAuthRevocableRequired: -10,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SetOptionsResult switch (SetOptionsResultCode code)\r\n//   {\r\n//   case SET_OPTIONS_SUCCESS:\r\n//       void;\r\n//   case SET_OPTIONS_LOW_RESERVE:\r\n//   case SET_OPTIONS_TOO_MANY_SIGNERS:\r\n//   case SET_OPTIONS_BAD_FLAGS:\r\n//   case SET_OPTIONS_INVALID_INFLATION:\r\n//   case SET_OPTIONS_CANT_CHANGE:\r\n//   case SET_OPTIONS_UNKNOWN_FLAG:\r\n//   case SET_OPTIONS_THRESHOLD_OUT_OF_RANGE:\r\n//   case SET_OPTIONS_BAD_SIGNER:\r\n//   case SET_OPTIONS_INVALID_HOME_DOMAIN:\r\n//   case SET_OPTIONS_AUTH_REVOCABLE_REQUIRED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SetOptionsResult\", {\r\n  switchOn: xdr.lookup(\"SetOptionsResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"setOptionsSuccess\", xdr.void()],\r\n    [\"setOptionsLowReserve\", xdr.void()],\r\n    [\"setOptionsTooManySigners\", xdr.void()],\r\n    [\"setOptionsBadFlags\", xdr.void()],\r\n    [\"setOptionsInvalidInflation\", xdr.void()],\r\n    [\"setOptionsCantChange\", xdr.void()],\r\n    [\"setOptionsUnknownFlag\", xdr.void()],\r\n    [\"setOptionsThresholdOutOfRange\", xdr.void()],\r\n    [\"setOptionsBadSigner\", xdr.void()],\r\n    [\"setOptionsInvalidHomeDomain\", xdr.void()],\r\n    [\"setOptionsAuthRevocableRequired\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ChangeTrustResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CHANGE_TRUST_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       CHANGE_TRUST_MALFORMED = -1,     // bad input\r\n//       CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer\r\n//       CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance\r\n//                                        // cannot create with a limit of 0\r\n//       CHANGE_TRUST_LOW_RESERVE =\r\n//           -4, // not enough funds to create a new trust line,\r\n//       CHANGE_TRUST_SELF_NOT_ALLOWED = -5,   // trusting self is not allowed\r\n//       CHANGE_TRUST_TRUST_LINE_MISSING = -6, // Asset trustline is missing for pool\r\n//       CHANGE_TRUST_CANNOT_DELETE =\r\n//           -7, // Asset trustline is still referenced in a pool\r\n//       CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES =\r\n//           -8 // Asset trustline is deauthorized\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ChangeTrustResultCode\", {\r\n  changeTrustSuccess: 0,\r\n  changeTrustMalformed: -1,\r\n  changeTrustNoIssuer: -2,\r\n  changeTrustInvalidLimit: -3,\r\n  changeTrustLowReserve: -4,\r\n  changeTrustSelfNotAllowed: -5,\r\n  changeTrustTrustLineMissing: -6,\r\n  changeTrustCannotDelete: -7,\r\n  changeTrustNotAuthMaintainLiabilities: -8,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ChangeTrustResult switch (ChangeTrustResultCode code)\r\n//   {\r\n//   case CHANGE_TRUST_SUCCESS:\r\n//       void;\r\n//   case CHANGE_TRUST_MALFORMED:\r\n//   case CHANGE_TRUST_NO_ISSUER:\r\n//   case CHANGE_TRUST_INVALID_LIMIT:\r\n//   case CHANGE_TRUST_LOW_RESERVE:\r\n//   case CHANGE_TRUST_SELF_NOT_ALLOWED:\r\n//   case CHANGE_TRUST_TRUST_LINE_MISSING:\r\n//   case CHANGE_TRUST_CANNOT_DELETE:\r\n//   case CHANGE_TRUST_NOT_AUTH_MAINTAIN_LIABILITIES:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ChangeTrustResult\", {\r\n  switchOn: xdr.lookup(\"ChangeTrustResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"changeTrustSuccess\", xdr.void()],\r\n    [\"changeTrustMalformed\", xdr.void()],\r\n    [\"changeTrustNoIssuer\", xdr.void()],\r\n    [\"changeTrustInvalidLimit\", xdr.void()],\r\n    [\"changeTrustLowReserve\", xdr.void()],\r\n    [\"changeTrustSelfNotAllowed\", xdr.void()],\r\n    [\"changeTrustTrustLineMissing\", xdr.void()],\r\n    [\"changeTrustCannotDelete\", xdr.void()],\r\n    [\"changeTrustNotAuthMaintainLiabilities\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AllowTrustResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       ALLOW_TRUST_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       ALLOW_TRUST_MALFORMED = -1,     // asset is not ASSET_TYPE_ALPHANUM\r\n//       ALLOW_TRUST_NO_TRUST_LINE = -2, // trustor does not have a trustline\r\n//                                       // source account does not require trust\r\n//       ALLOW_TRUST_TRUST_NOT_REQUIRED = -3,\r\n//       ALLOW_TRUST_CANT_REVOKE = -4,      // source account can't revoke trust,\r\n//       ALLOW_TRUST_SELF_NOT_ALLOWED = -5, // trusting self is not allowed\r\n//       ALLOW_TRUST_LOW_RESERVE = -6       // claimable balances can't be created\r\n//                                          // on revoke due to low reserves\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AllowTrustResultCode\", {\r\n  allowTrustSuccess: 0,\r\n  allowTrustMalformed: -1,\r\n  allowTrustNoTrustLine: -2,\r\n  allowTrustTrustNotRequired: -3,\r\n  allowTrustCantRevoke: -4,\r\n  allowTrustSelfNotAllowed: -5,\r\n  allowTrustLowReserve: -6,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AllowTrustResult switch (AllowTrustResultCode code)\r\n//   {\r\n//   case ALLOW_TRUST_SUCCESS:\r\n//       void;\r\n//   case ALLOW_TRUST_MALFORMED:\r\n//   case ALLOW_TRUST_NO_TRUST_LINE:\r\n//   case ALLOW_TRUST_TRUST_NOT_REQUIRED:\r\n//   case ALLOW_TRUST_CANT_REVOKE:\r\n//   case ALLOW_TRUST_SELF_NOT_ALLOWED:\r\n//   case ALLOW_TRUST_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AllowTrustResult\", {\r\n  switchOn: xdr.lookup(\"AllowTrustResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"allowTrustSuccess\", xdr.void()],\r\n    [\"allowTrustMalformed\", xdr.void()],\r\n    [\"allowTrustNoTrustLine\", xdr.void()],\r\n    [\"allowTrustTrustNotRequired\", xdr.void()],\r\n    [\"allowTrustCantRevoke\", xdr.void()],\r\n    [\"allowTrustSelfNotAllowed\", xdr.void()],\r\n    [\"allowTrustLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum AccountMergeResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       ACCOUNT_MERGE_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       ACCOUNT_MERGE_MALFORMED = -1,       // can't merge onto itself\r\n//       ACCOUNT_MERGE_NO_ACCOUNT = -2,      // destination does not exist\r\n//       ACCOUNT_MERGE_IMMUTABLE_SET = -3,   // source account has AUTH_IMMUTABLE set\r\n//       ACCOUNT_MERGE_HAS_SUB_ENTRIES = -4, // account has trust lines/offers\r\n//       ACCOUNT_MERGE_SEQNUM_TOO_FAR = -5,  // sequence number is over max allowed\r\n//       ACCOUNT_MERGE_DEST_FULL = -6,       // can't add source balance to\r\n//                                           // destination balance\r\n//       ACCOUNT_MERGE_IS_SPONSOR = -7       // can't merge account that is a sponsor\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"AccountMergeResultCode\", {\r\n  accountMergeSuccess: 0,\r\n  accountMergeMalformed: -1,\r\n  accountMergeNoAccount: -2,\r\n  accountMergeImmutableSet: -3,\r\n  accountMergeHasSubEntries: -4,\r\n  accountMergeSeqnumTooFar: -5,\r\n  accountMergeDestFull: -6,\r\n  accountMergeIsSponsor: -7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union AccountMergeResult switch (AccountMergeResultCode code)\r\n//   {\r\n//   case ACCOUNT_MERGE_SUCCESS:\r\n//       int64 sourceAccountBalance; // how much got transferred from source account\r\n//   case ACCOUNT_MERGE_MALFORMED:\r\n//   case ACCOUNT_MERGE_NO_ACCOUNT:\r\n//   case ACCOUNT_MERGE_IMMUTABLE_SET:\r\n//   case ACCOUNT_MERGE_HAS_SUB_ENTRIES:\r\n//   case ACCOUNT_MERGE_SEQNUM_TOO_FAR:\r\n//   case ACCOUNT_MERGE_DEST_FULL:\r\n//   case ACCOUNT_MERGE_IS_SPONSOR:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"AccountMergeResult\", {\r\n  switchOn: xdr.lookup(\"AccountMergeResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"accountMergeSuccess\", \"sourceAccountBalance\"],\r\n    [\"accountMergeMalformed\", xdr.void()],\r\n    [\"accountMergeNoAccount\", xdr.void()],\r\n    [\"accountMergeImmutableSet\", xdr.void()],\r\n    [\"accountMergeHasSubEntries\", xdr.void()],\r\n    [\"accountMergeSeqnumTooFar\", xdr.void()],\r\n    [\"accountMergeDestFull\", xdr.void()],\r\n    [\"accountMergeIsSponsor\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    sourceAccountBalance: xdr.lookup(\"Int64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum InflationResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       INFLATION_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       INFLATION_NOT_TIME = -1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"InflationResultCode\", {\r\n  inflationSuccess: 0,\r\n  inflationNotTime: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InflationPayout // or use PaymentResultAtom to limit types?\r\n//   {\r\n//       AccountID destination;\r\n//       int64 amount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InflationPayout\", [\r\n  [\"destination\", xdr.lookup(\"AccountId\")],\r\n  [\"amount\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union InflationResult switch (InflationResultCode code)\r\n//   {\r\n//   case INFLATION_SUCCESS:\r\n//       InflationPayout payouts<>;\r\n//   case INFLATION_NOT_TIME:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InflationResult\", {\r\n  switchOn: xdr.lookup(\"InflationResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"inflationSuccess\", \"payouts\"],\r\n    [\"inflationNotTime\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    payouts: xdr.varArray(xdr.lookup(\"InflationPayout\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ManageDataResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       MANAGE_DATA_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       MANAGE_DATA_NOT_SUPPORTED_YET =\r\n//           -1, // The network hasn't moved to this protocol change yet\r\n//       MANAGE_DATA_NAME_NOT_FOUND =\r\n//           -2, // Trying to remove a Data Entry that isn't there\r\n//       MANAGE_DATA_LOW_RESERVE = -3, // not enough funds to create a new Data Entry\r\n//       MANAGE_DATA_INVALID_NAME = -4 // Name not a valid string\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ManageDataResultCode\", {\r\n  manageDataSuccess: 0,\r\n  manageDataNotSupportedYet: -1,\r\n  manageDataNameNotFound: -2,\r\n  manageDataLowReserve: -3,\r\n  manageDataInvalidName: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ManageDataResult switch (ManageDataResultCode code)\r\n//   {\r\n//   case MANAGE_DATA_SUCCESS:\r\n//       void;\r\n//   case MANAGE_DATA_NOT_SUPPORTED_YET:\r\n//   case MANAGE_DATA_NAME_NOT_FOUND:\r\n//   case MANAGE_DATA_LOW_RESERVE:\r\n//   case MANAGE_DATA_INVALID_NAME:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ManageDataResult\", {\r\n  switchOn: xdr.lookup(\"ManageDataResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"manageDataSuccess\", xdr.void()],\r\n    [\"manageDataNotSupportedYet\", xdr.void()],\r\n    [\"manageDataNameNotFound\", xdr.void()],\r\n    [\"manageDataLowReserve\", xdr.void()],\r\n    [\"manageDataInvalidName\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BumpSequenceResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       BUMP_SEQUENCE_SUCCESS = 0,\r\n//       // codes considered as \"failure\" for the operation\r\n//       BUMP_SEQUENCE_BAD_SEQ = -1 // `bumpTo` is not within bounds\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BumpSequenceResultCode\", {\r\n  bumpSequenceSuccess: 0,\r\n  bumpSequenceBadSeq: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BumpSequenceResult switch (BumpSequenceResultCode code)\r\n//   {\r\n//   case BUMP_SEQUENCE_SUCCESS:\r\n//       void;\r\n//   case BUMP_SEQUENCE_BAD_SEQ:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BumpSequenceResult\", {\r\n  switchOn: xdr.lookup(\"BumpSequenceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"bumpSequenceSuccess\", xdr.void()],\r\n    [\"bumpSequenceBadSeq\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CreateClaimableBalanceResultCode\r\n//   {\r\n//       CREATE_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//       CREATE_CLAIMABLE_BALANCE_MALFORMED = -1,\r\n//       CREATE_CLAIMABLE_BALANCE_LOW_RESERVE = -2,\r\n//       CREATE_CLAIMABLE_BALANCE_NO_TRUST = -3,\r\n//       CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -4,\r\n//       CREATE_CLAIMABLE_BALANCE_UNDERFUNDED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CreateClaimableBalanceResultCode\", {\r\n  createClaimableBalanceSuccess: 0,\r\n  createClaimableBalanceMalformed: -1,\r\n  createClaimableBalanceLowReserve: -2,\r\n  createClaimableBalanceNoTrust: -3,\r\n  createClaimableBalanceNotAuthorized: -4,\r\n  createClaimableBalanceUnderfunded: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union CreateClaimableBalanceResult switch (\r\n//       CreateClaimableBalanceResultCode code)\r\n//   {\r\n//   case CREATE_CLAIMABLE_BALANCE_SUCCESS:\r\n//       ClaimableBalanceID balanceID;\r\n//   case CREATE_CLAIMABLE_BALANCE_MALFORMED:\r\n//   case CREATE_CLAIMABLE_BALANCE_LOW_RESERVE:\r\n//   case CREATE_CLAIMABLE_BALANCE_NO_TRUST:\r\n//   case CREATE_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\r\n//   case CREATE_CLAIMABLE_BALANCE_UNDERFUNDED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"CreateClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"CreateClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"createClaimableBalanceSuccess\", \"balanceId\"],\r\n    [\"createClaimableBalanceMalformed\", xdr.void()],\r\n    [\"createClaimableBalanceLowReserve\", xdr.void()],\r\n    [\"createClaimableBalanceNoTrust\", xdr.void()],\r\n    [\"createClaimableBalanceNotAuthorized\", xdr.void()],\r\n    [\"createClaimableBalanceUnderfunded\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    balanceId: xdr.lookup(\"ClaimableBalanceId\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClaimClaimableBalanceResultCode\r\n//   {\r\n//       CLAIM_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//       CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\r\n//       CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM = -2,\r\n//       CLAIM_CLAIMABLE_BALANCE_LINE_FULL = -3,\r\n//       CLAIM_CLAIMABLE_BALANCE_NO_TRUST = -4,\r\n//       CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClaimClaimableBalanceResultCode\", {\r\n  claimClaimableBalanceSuccess: 0,\r\n  claimClaimableBalanceDoesNotExist: -1,\r\n  claimClaimableBalanceCannotClaim: -2,\r\n  claimClaimableBalanceLineFull: -3,\r\n  claimClaimableBalanceNoTrust: -4,\r\n  claimClaimableBalanceNotAuthorized: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClaimClaimableBalanceResult switch (ClaimClaimableBalanceResultCode code)\r\n//   {\r\n//   case CLAIM_CLAIMABLE_BALANCE_SUCCESS:\r\n//       void;\r\n//   case CLAIM_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\r\n//   case CLAIM_CLAIMABLE_BALANCE_CANNOT_CLAIM:\r\n//   case CLAIM_CLAIMABLE_BALANCE_LINE_FULL:\r\n//   case CLAIM_CLAIMABLE_BALANCE_NO_TRUST:\r\n//   case CLAIM_CLAIMABLE_BALANCE_NOT_AUTHORIZED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClaimClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"ClaimClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"claimClaimableBalanceSuccess\", xdr.void()],\r\n    [\"claimClaimableBalanceDoesNotExist\", xdr.void()],\r\n    [\"claimClaimableBalanceCannotClaim\", xdr.void()],\r\n    [\"claimClaimableBalanceLineFull\", xdr.void()],\r\n    [\"claimClaimableBalanceNoTrust\", xdr.void()],\r\n    [\"claimClaimableBalanceNotAuthorized\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum BeginSponsoringFutureReservesResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED = -1,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED = -2,\r\n//       BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"BeginSponsoringFutureReservesResultCode\", {\r\n  beginSponsoringFutureReservesSuccess: 0,\r\n  beginSponsoringFutureReservesMalformed: -1,\r\n  beginSponsoringFutureReservesAlreadySponsored: -2,\r\n  beginSponsoringFutureReservesRecursive: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union BeginSponsoringFutureReservesResult switch (\r\n//       BeginSponsoringFutureReservesResultCode code)\r\n//   {\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_SUCCESS:\r\n//       void;\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_MALFORMED:\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_ALREADY_SPONSORED:\r\n//   case BEGIN_SPONSORING_FUTURE_RESERVES_RECURSIVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"BeginSponsoringFutureReservesResult\", {\r\n  switchOn: xdr.lookup(\"BeginSponsoringFutureReservesResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"beginSponsoringFutureReservesSuccess\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesMalformed\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesAlreadySponsored\", xdr.void()],\r\n    [\"beginSponsoringFutureReservesRecursive\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum EndSponsoringFutureReservesResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       END_SPONSORING_FUTURE_RESERVES_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED = -1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"EndSponsoringFutureReservesResultCode\", {\r\n  endSponsoringFutureReservesSuccess: 0,\r\n  endSponsoringFutureReservesNotSponsored: -1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union EndSponsoringFutureReservesResult switch (\r\n//       EndSponsoringFutureReservesResultCode code)\r\n//   {\r\n//   case END_SPONSORING_FUTURE_RESERVES_SUCCESS:\r\n//       void;\r\n//   case END_SPONSORING_FUTURE_RESERVES_NOT_SPONSORED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"EndSponsoringFutureReservesResult\", {\r\n  switchOn: xdr.lookup(\"EndSponsoringFutureReservesResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"endSponsoringFutureReservesSuccess\", xdr.void()],\r\n    [\"endSponsoringFutureReservesNotSponsored\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RevokeSponsorshipResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       REVOKE_SPONSORSHIP_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       REVOKE_SPONSORSHIP_DOES_NOT_EXIST = -1,\r\n//       REVOKE_SPONSORSHIP_NOT_SPONSOR = -2,\r\n//       REVOKE_SPONSORSHIP_LOW_RESERVE = -3,\r\n//       REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE = -4,\r\n//       REVOKE_SPONSORSHIP_MALFORMED = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RevokeSponsorshipResultCode\", {\r\n  revokeSponsorshipSuccess: 0,\r\n  revokeSponsorshipDoesNotExist: -1,\r\n  revokeSponsorshipNotSponsor: -2,\r\n  revokeSponsorshipLowReserve: -3,\r\n  revokeSponsorshipOnlyTransferable: -4,\r\n  revokeSponsorshipMalformed: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RevokeSponsorshipResult switch (RevokeSponsorshipResultCode code)\r\n//   {\r\n//   case REVOKE_SPONSORSHIP_SUCCESS:\r\n//       void;\r\n//   case REVOKE_SPONSORSHIP_DOES_NOT_EXIST:\r\n//   case REVOKE_SPONSORSHIP_NOT_SPONSOR:\r\n//   case REVOKE_SPONSORSHIP_LOW_RESERVE:\r\n//   case REVOKE_SPONSORSHIP_ONLY_TRANSFERABLE:\r\n//   case REVOKE_SPONSORSHIP_MALFORMED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RevokeSponsorshipResult\", {\r\n  switchOn: xdr.lookup(\"RevokeSponsorshipResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"revokeSponsorshipSuccess\", xdr.void()],\r\n    [\"revokeSponsorshipDoesNotExist\", xdr.void()],\r\n    [\"revokeSponsorshipNotSponsor\", xdr.void()],\r\n    [\"revokeSponsorshipLowReserve\", xdr.void()],\r\n    [\"revokeSponsorshipOnlyTransferable\", xdr.void()],\r\n    [\"revokeSponsorshipMalformed\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClawbackResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CLAWBACK_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CLAWBACK_MALFORMED = -1,\r\n//       CLAWBACK_NOT_CLAWBACK_ENABLED = -2,\r\n//       CLAWBACK_NO_TRUST = -3,\r\n//       CLAWBACK_UNDERFUNDED = -4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClawbackResultCode\", {\r\n  clawbackSuccess: 0,\r\n  clawbackMalformed: -1,\r\n  clawbackNotClawbackEnabled: -2,\r\n  clawbackNoTrust: -3,\r\n  clawbackUnderfunded: -4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClawbackResult switch (ClawbackResultCode code)\r\n//   {\r\n//   case CLAWBACK_SUCCESS:\r\n//       void;\r\n//   case CLAWBACK_MALFORMED:\r\n//   case CLAWBACK_NOT_CLAWBACK_ENABLED:\r\n//   case CLAWBACK_NO_TRUST:\r\n//   case CLAWBACK_UNDERFUNDED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClawbackResult\", {\r\n  switchOn: xdr.lookup(\"ClawbackResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"clawbackSuccess\", xdr.void()],\r\n    [\"clawbackMalformed\", xdr.void()],\r\n    [\"clawbackNotClawbackEnabled\", xdr.void()],\r\n    [\"clawbackNoTrust\", xdr.void()],\r\n    [\"clawbackUnderfunded\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ClawbackClaimableBalanceResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       CLAWBACK_CLAIMABLE_BALANCE_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST = -1,\r\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER = -2,\r\n//       CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ClawbackClaimableBalanceResultCode\", {\r\n  clawbackClaimableBalanceSuccess: 0,\r\n  clawbackClaimableBalanceDoesNotExist: -1,\r\n  clawbackClaimableBalanceNotIssuer: -2,\r\n  clawbackClaimableBalanceNotClawbackEnabled: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ClawbackClaimableBalanceResult switch (\r\n//       ClawbackClaimableBalanceResultCode code)\r\n//   {\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_SUCCESS:\r\n//       void;\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_DOES_NOT_EXIST:\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_ISSUER:\r\n//   case CLAWBACK_CLAIMABLE_BALANCE_NOT_CLAWBACK_ENABLED:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ClawbackClaimableBalanceResult\", {\r\n  switchOn: xdr.lookup(\"ClawbackClaimableBalanceResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"clawbackClaimableBalanceSuccess\", xdr.void()],\r\n    [\"clawbackClaimableBalanceDoesNotExist\", xdr.void()],\r\n    [\"clawbackClaimableBalanceNotIssuer\", xdr.void()],\r\n    [\"clawbackClaimableBalanceNotClawbackEnabled\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SetTrustLineFlagsResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       SET_TRUST_LINE_FLAGS_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       SET_TRUST_LINE_FLAGS_MALFORMED = -1,\r\n//       SET_TRUST_LINE_FLAGS_NO_TRUST_LINE = -2,\r\n//       SET_TRUST_LINE_FLAGS_CANT_REVOKE = -3,\r\n//       SET_TRUST_LINE_FLAGS_INVALID_STATE = -4,\r\n//       SET_TRUST_LINE_FLAGS_LOW_RESERVE = -5 // claimable balances can't be created\r\n//                                             // on revoke due to low reserves\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SetTrustLineFlagsResultCode\", {\r\n  setTrustLineFlagsSuccess: 0,\r\n  setTrustLineFlagsMalformed: -1,\r\n  setTrustLineFlagsNoTrustLine: -2,\r\n  setTrustLineFlagsCantRevoke: -3,\r\n  setTrustLineFlagsInvalidState: -4,\r\n  setTrustLineFlagsLowReserve: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SetTrustLineFlagsResult switch (SetTrustLineFlagsResultCode code)\r\n//   {\r\n//   case SET_TRUST_LINE_FLAGS_SUCCESS:\r\n//       void;\r\n//   case SET_TRUST_LINE_FLAGS_MALFORMED:\r\n//   case SET_TRUST_LINE_FLAGS_NO_TRUST_LINE:\r\n//   case SET_TRUST_LINE_FLAGS_CANT_REVOKE:\r\n//   case SET_TRUST_LINE_FLAGS_INVALID_STATE:\r\n//   case SET_TRUST_LINE_FLAGS_LOW_RESERVE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SetTrustLineFlagsResult\", {\r\n  switchOn: xdr.lookup(\"SetTrustLineFlagsResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"setTrustLineFlagsSuccess\", xdr.void()],\r\n    [\"setTrustLineFlagsMalformed\", xdr.void()],\r\n    [\"setTrustLineFlagsNoTrustLine\", xdr.void()],\r\n    [\"setTrustLineFlagsCantRevoke\", xdr.void()],\r\n    [\"setTrustLineFlagsInvalidState\", xdr.void()],\r\n    [\"setTrustLineFlagsLowReserve\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolDepositResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       LIQUIDITY_POOL_DEPOSIT_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       LIQUIDITY_POOL_DEPOSIT_MALFORMED = -1,      // bad input\r\n//       LIQUIDITY_POOL_DEPOSIT_NO_TRUST = -2,       // no trust line for one of the\r\n//                                                   // assets\r\n//       LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED = -3, // not authorized for one of the\r\n//                                                   // assets\r\n//       LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED = -4,    // not enough balance for one of\r\n//                                                   // the assets\r\n//       LIQUIDITY_POOL_DEPOSIT_LINE_FULL = -5,      // pool share trust line doesn't\r\n//                                                   // have sufficient limit\r\n//       LIQUIDITY_POOL_DEPOSIT_BAD_PRICE = -6,      // deposit price outside bounds\r\n//       LIQUIDITY_POOL_DEPOSIT_POOL_FULL = -7       // pool reserves are full\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolDepositResultCode\", {\r\n  liquidityPoolDepositSuccess: 0,\r\n  liquidityPoolDepositMalformed: -1,\r\n  liquidityPoolDepositNoTrust: -2,\r\n  liquidityPoolDepositNotAuthorized: -3,\r\n  liquidityPoolDepositUnderfunded: -4,\r\n  liquidityPoolDepositLineFull: -5,\r\n  liquidityPoolDepositBadPrice: -6,\r\n  liquidityPoolDepositPoolFull: -7,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolDepositResult switch (LiquidityPoolDepositResultCode code)\r\n//   {\r\n//   case LIQUIDITY_POOL_DEPOSIT_SUCCESS:\r\n//       void;\r\n//   case LIQUIDITY_POOL_DEPOSIT_MALFORMED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_NO_TRUST:\r\n//   case LIQUIDITY_POOL_DEPOSIT_NOT_AUTHORIZED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_UNDERFUNDED:\r\n//   case LIQUIDITY_POOL_DEPOSIT_LINE_FULL:\r\n//   case LIQUIDITY_POOL_DEPOSIT_BAD_PRICE:\r\n//   case LIQUIDITY_POOL_DEPOSIT_POOL_FULL:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolDepositResult\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolDepositResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"liquidityPoolDepositSuccess\", xdr.void()],\r\n    [\"liquidityPoolDepositMalformed\", xdr.void()],\r\n    [\"liquidityPoolDepositNoTrust\", xdr.void()],\r\n    [\"liquidityPoolDepositNotAuthorized\", xdr.void()],\r\n    [\"liquidityPoolDepositUnderfunded\", xdr.void()],\r\n    [\"liquidityPoolDepositLineFull\", xdr.void()],\r\n    [\"liquidityPoolDepositBadPrice\", xdr.void()],\r\n    [\"liquidityPoolDepositPoolFull\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum LiquidityPoolWithdrawResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       LIQUIDITY_POOL_WITHDRAW_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       LIQUIDITY_POOL_WITHDRAW_MALFORMED = -1,    // bad input\r\n//       LIQUIDITY_POOL_WITHDRAW_NO_TRUST = -2,     // no trust line for one of the\r\n//                                                  // assets\r\n//       LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED = -3,  // not enough balance of the\r\n//                                                  // pool share\r\n//       LIQUIDITY_POOL_WITHDRAW_LINE_FULL = -4,    // would go above limit for one\r\n//                                                  // of the assets\r\n//       LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM = -5 // didn't withdraw enough\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"LiquidityPoolWithdrawResultCode\", {\r\n  liquidityPoolWithdrawSuccess: 0,\r\n  liquidityPoolWithdrawMalformed: -1,\r\n  liquidityPoolWithdrawNoTrust: -2,\r\n  liquidityPoolWithdrawUnderfunded: -3,\r\n  liquidityPoolWithdrawLineFull: -4,\r\n  liquidityPoolWithdrawUnderMinimum: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union LiquidityPoolWithdrawResult switch (LiquidityPoolWithdrawResultCode code)\r\n//   {\r\n//   case LIQUIDITY_POOL_WITHDRAW_SUCCESS:\r\n//       void;\r\n//   case LIQUIDITY_POOL_WITHDRAW_MALFORMED:\r\n//   case LIQUIDITY_POOL_WITHDRAW_NO_TRUST:\r\n//   case LIQUIDITY_POOL_WITHDRAW_UNDERFUNDED:\r\n//   case LIQUIDITY_POOL_WITHDRAW_LINE_FULL:\r\n//   case LIQUIDITY_POOL_WITHDRAW_UNDER_MINIMUM:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"LiquidityPoolWithdrawResult\", {\r\n  switchOn: xdr.lookup(\"LiquidityPoolWithdrawResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"liquidityPoolWithdrawSuccess\", xdr.void()],\r\n    [\"liquidityPoolWithdrawMalformed\", xdr.void()],\r\n    [\"liquidityPoolWithdrawNoTrust\", xdr.void()],\r\n    [\"liquidityPoolWithdrawUnderfunded\", xdr.void()],\r\n    [\"liquidityPoolWithdrawLineFull\", xdr.void()],\r\n    [\"liquidityPoolWithdrawUnderMinimum\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum InvokeHostFunctionResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       INVOKE_HOST_FUNCTION_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       INVOKE_HOST_FUNCTION_MALFORMED = -1,\r\n//       INVOKE_HOST_FUNCTION_TRAPPED = -2,\r\n//       INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED = -3,\r\n//       INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED = -4,\r\n//       INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE = -5\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"InvokeHostFunctionResultCode\", {\r\n  invokeHostFunctionSuccess: 0,\r\n  invokeHostFunctionMalformed: -1,\r\n  invokeHostFunctionTrapped: -2,\r\n  invokeHostFunctionResourceLimitExceeded: -3,\r\n  invokeHostFunctionEntryArchived: -4,\r\n  invokeHostFunctionInsufficientRefundableFee: -5,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union InvokeHostFunctionResult switch (InvokeHostFunctionResultCode code)\r\n//   {\r\n//   case INVOKE_HOST_FUNCTION_SUCCESS:\r\n//       Hash success; // sha256(InvokeHostFunctionSuccessPreImage)\r\n//   case INVOKE_HOST_FUNCTION_MALFORMED:\r\n//   case INVOKE_HOST_FUNCTION_TRAPPED:\r\n//   case INVOKE_HOST_FUNCTION_RESOURCE_LIMIT_EXCEEDED:\r\n//   case INVOKE_HOST_FUNCTION_ENTRY_ARCHIVED:\r\n//   case INVOKE_HOST_FUNCTION_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InvokeHostFunctionResult\", {\r\n  switchOn: xdr.lookup(\"InvokeHostFunctionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"invokeHostFunctionSuccess\", \"success\"],\r\n    [\"invokeHostFunctionMalformed\", xdr.void()],\r\n    [\"invokeHostFunctionTrapped\", xdr.void()],\r\n    [\"invokeHostFunctionResourceLimitExceeded\", xdr.void()],\r\n    [\"invokeHostFunctionEntryArchived\", xdr.void()],\r\n    [\"invokeHostFunctionInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    success: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ExtendFootprintTTLResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       EXTEND_FOOTPRINT_TTL_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       EXTEND_FOOTPRINT_TTL_MALFORMED = -1,\r\n//       EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED = -2,\r\n//       EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ExtendFootprintTtlResultCode\", {\r\n  extendFootprintTtlSuccess: 0,\r\n  extendFootprintTtlMalformed: -1,\r\n  extendFootprintTtlResourceLimitExceeded: -2,\r\n  extendFootprintTtlInsufficientRefundableFee: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ExtendFootprintTTLResult switch (ExtendFootprintTTLResultCode code)\r\n//   {\r\n//   case EXTEND_FOOTPRINT_TTL_SUCCESS:\r\n//       void;\r\n//   case EXTEND_FOOTPRINT_TTL_MALFORMED:\r\n//   case EXTEND_FOOTPRINT_TTL_RESOURCE_LIMIT_EXCEEDED:\r\n//   case EXTEND_FOOTPRINT_TTL_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ExtendFootprintTtlResult\", {\r\n  switchOn: xdr.lookup(\"ExtendFootprintTtlResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"extendFootprintTtlSuccess\", xdr.void()],\r\n    [\"extendFootprintTtlMalformed\", xdr.void()],\r\n    [\"extendFootprintTtlResourceLimitExceeded\", xdr.void()],\r\n    [\"extendFootprintTtlInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum RestoreFootprintResultCode\r\n//   {\r\n//       // codes considered as \"success\" for the operation\r\n//       RESTORE_FOOTPRINT_SUCCESS = 0,\r\n//\r\n//       // codes considered as \"failure\" for the operation\r\n//       RESTORE_FOOTPRINT_MALFORMED = -1,\r\n//       RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED = -2,\r\n//       RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE = -3\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"RestoreFootprintResultCode\", {\r\n  restoreFootprintSuccess: 0,\r\n  restoreFootprintMalformed: -1,\r\n  restoreFootprintResourceLimitExceeded: -2,\r\n  restoreFootprintInsufficientRefundableFee: -3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union RestoreFootprintResult switch (RestoreFootprintResultCode code)\r\n//   {\r\n//   case RESTORE_FOOTPRINT_SUCCESS:\r\n//       void;\r\n//   case RESTORE_FOOTPRINT_MALFORMED:\r\n//   case RESTORE_FOOTPRINT_RESOURCE_LIMIT_EXCEEDED:\r\n//   case RESTORE_FOOTPRINT_INSUFFICIENT_REFUNDABLE_FEE:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"RestoreFootprintResult\", {\r\n  switchOn: xdr.lookup(\"RestoreFootprintResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"restoreFootprintSuccess\", xdr.void()],\r\n    [\"restoreFootprintMalformed\", xdr.void()],\r\n    [\"restoreFootprintResourceLimitExceeded\", xdr.void()],\r\n    [\"restoreFootprintInsufficientRefundableFee\", xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum OperationResultCode\r\n//   {\r\n//       opINNER = 0, // inner object result is valid\r\n//\r\n//       opBAD_AUTH = -1,            // too few valid signatures / wrong network\r\n//       opNO_ACCOUNT = -2,          // source account was not found\r\n//       opNOT_SUPPORTED = -3,       // operation not supported at this time\r\n//       opTOO_MANY_SUBENTRIES = -4, // max number of subentries already reached\r\n//       opEXCEEDED_WORK_LIMIT = -5, // operation did too much work\r\n//       opTOO_MANY_SPONSORING = -6  // account is sponsoring too many entries\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"OperationResultCode\", {\r\n  opInner: 0,\r\n  opBadAuth: -1,\r\n  opNoAccount: -2,\r\n  opNotSupported: -3,\r\n  opTooManySubentries: -4,\r\n  opExceededWorkLimit: -5,\r\n  opTooManySponsoring: -6,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountResult createAccountResult;\r\n//       case PAYMENT:\r\n//           PaymentResult paymentResult;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferResult manageSellOfferResult;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           ManageSellOfferResult createPassiveSellOfferResult;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsResult setOptionsResult;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustResult changeTrustResult;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustResult allowTrustResult;\r\n//       case ACCOUNT_MERGE:\r\n//           AccountMergeResult accountMergeResult;\r\n//       case INFLATION:\r\n//           InflationResult inflationResult;\r\n//       case MANAGE_DATA:\r\n//           ManageDataResult manageDataResult;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceResult bumpSeqResult;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferResult manageBuyOfferResult;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipResult revokeSponsorshipResult;\r\n//       case CLAWBACK:\r\n//           ClawbackResult clawbackResult;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionResult invokeHostFunctionResult;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintResult restoreFootprintResult;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationResultTr\", {\r\n  switchOn: xdr.lookup(\"OperationType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"createAccount\", \"createAccountResult\"],\r\n    [\"payment\", \"paymentResult\"],\r\n    [\"pathPaymentStrictReceive\", \"pathPaymentStrictReceiveResult\"],\r\n    [\"manageSellOffer\", \"manageSellOfferResult\"],\r\n    [\"createPassiveSellOffer\", \"createPassiveSellOfferResult\"],\r\n    [\"setOptions\", \"setOptionsResult\"],\r\n    [\"changeTrust\", \"changeTrustResult\"],\r\n    [\"allowTrust\", \"allowTrustResult\"],\r\n    [\"accountMerge\", \"accountMergeResult\"],\r\n    [\"inflation\", \"inflationResult\"],\r\n    [\"manageData\", \"manageDataResult\"],\r\n    [\"bumpSequence\", \"bumpSeqResult\"],\r\n    [\"manageBuyOffer\", \"manageBuyOfferResult\"],\r\n    [\"pathPaymentStrictSend\", \"pathPaymentStrictSendResult\"],\r\n    [\"createClaimableBalance\", \"createClaimableBalanceResult\"],\r\n    [\"claimClaimableBalance\", \"claimClaimableBalanceResult\"],\r\n    [\"beginSponsoringFutureReserves\", \"beginSponsoringFutureReservesResult\"],\r\n    [\"endSponsoringFutureReserves\", \"endSponsoringFutureReservesResult\"],\r\n    [\"revokeSponsorship\", \"revokeSponsorshipResult\"],\r\n    [\"clawback\", \"clawbackResult\"],\r\n    [\"clawbackClaimableBalance\", \"clawbackClaimableBalanceResult\"],\r\n    [\"setTrustLineFlags\", \"setTrustLineFlagsResult\"],\r\n    [\"liquidityPoolDeposit\", \"liquidityPoolDepositResult\"],\r\n    [\"liquidityPoolWithdraw\", \"liquidityPoolWithdrawResult\"],\r\n    [\"invokeHostFunction\", \"invokeHostFunctionResult\"],\r\n    [\"extendFootprintTtl\", \"extendFootprintTtlResult\"],\r\n    [\"restoreFootprint\", \"restoreFootprintResult\"],\r\n  ],\r\n  arms: {\r\n    createAccountResult: xdr.lookup(\"CreateAccountResult\"),\r\n    paymentResult: xdr.lookup(\"PaymentResult\"),\r\n    pathPaymentStrictReceiveResult: xdr.lookup(\"PathPaymentStrictReceiveResult\"),\r\n    manageSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\r\n    createPassiveSellOfferResult: xdr.lookup(\"ManageSellOfferResult\"),\r\n    setOptionsResult: xdr.lookup(\"SetOptionsResult\"),\r\n    changeTrustResult: xdr.lookup(\"ChangeTrustResult\"),\r\n    allowTrustResult: xdr.lookup(\"AllowTrustResult\"),\r\n    accountMergeResult: xdr.lookup(\"AccountMergeResult\"),\r\n    inflationResult: xdr.lookup(\"InflationResult\"),\r\n    manageDataResult: xdr.lookup(\"ManageDataResult\"),\r\n    bumpSeqResult: xdr.lookup(\"BumpSequenceResult\"),\r\n    manageBuyOfferResult: xdr.lookup(\"ManageBuyOfferResult\"),\r\n    pathPaymentStrictSendResult: xdr.lookup(\"PathPaymentStrictSendResult\"),\r\n    createClaimableBalanceResult: xdr.lookup(\"CreateClaimableBalanceResult\"),\r\n    claimClaimableBalanceResult: xdr.lookup(\"ClaimClaimableBalanceResult\"),\r\n    beginSponsoringFutureReservesResult: xdr.lookup(\"BeginSponsoringFutureReservesResult\"),\r\n    endSponsoringFutureReservesResult: xdr.lookup(\"EndSponsoringFutureReservesResult\"),\r\n    revokeSponsorshipResult: xdr.lookup(\"RevokeSponsorshipResult\"),\r\n    clawbackResult: xdr.lookup(\"ClawbackResult\"),\r\n    clawbackClaimableBalanceResult: xdr.lookup(\"ClawbackClaimableBalanceResult\"),\r\n    setTrustLineFlagsResult: xdr.lookup(\"SetTrustLineFlagsResult\"),\r\n    liquidityPoolDepositResult: xdr.lookup(\"LiquidityPoolDepositResult\"),\r\n    liquidityPoolWithdrawResult: xdr.lookup(\"LiquidityPoolWithdrawResult\"),\r\n    invokeHostFunctionResult: xdr.lookup(\"InvokeHostFunctionResult\"),\r\n    extendFootprintTtlResult: xdr.lookup(\"ExtendFootprintTtlResult\"),\r\n    restoreFootprintResult: xdr.lookup(\"RestoreFootprintResult\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union OperationResult switch (OperationResultCode code)\r\n//   {\r\n//   case opINNER:\r\n//       union switch (OperationType type)\r\n//       {\r\n//       case CREATE_ACCOUNT:\r\n//           CreateAccountResult createAccountResult;\r\n//       case PAYMENT:\r\n//           PaymentResult paymentResult;\r\n//       case PATH_PAYMENT_STRICT_RECEIVE:\r\n//           PathPaymentStrictReceiveResult pathPaymentStrictReceiveResult;\r\n//       case MANAGE_SELL_OFFER:\r\n//           ManageSellOfferResult manageSellOfferResult;\r\n//       case CREATE_PASSIVE_SELL_OFFER:\r\n//           ManageSellOfferResult createPassiveSellOfferResult;\r\n//       case SET_OPTIONS:\r\n//           SetOptionsResult setOptionsResult;\r\n//       case CHANGE_TRUST:\r\n//           ChangeTrustResult changeTrustResult;\r\n//       case ALLOW_TRUST:\r\n//           AllowTrustResult allowTrustResult;\r\n//       case ACCOUNT_MERGE:\r\n//           AccountMergeResult accountMergeResult;\r\n//       case INFLATION:\r\n//           InflationResult inflationResult;\r\n//       case MANAGE_DATA:\r\n//           ManageDataResult manageDataResult;\r\n//       case BUMP_SEQUENCE:\r\n//           BumpSequenceResult bumpSeqResult;\r\n//       case MANAGE_BUY_OFFER:\r\n//           ManageBuyOfferResult manageBuyOfferResult;\r\n//       case PATH_PAYMENT_STRICT_SEND:\r\n//           PathPaymentStrictSendResult pathPaymentStrictSendResult;\r\n//       case CREATE_CLAIMABLE_BALANCE:\r\n//           CreateClaimableBalanceResult createClaimableBalanceResult;\r\n//       case CLAIM_CLAIMABLE_BALANCE:\r\n//           ClaimClaimableBalanceResult claimClaimableBalanceResult;\r\n//       case BEGIN_SPONSORING_FUTURE_RESERVES:\r\n//           BeginSponsoringFutureReservesResult beginSponsoringFutureReservesResult;\r\n//       case END_SPONSORING_FUTURE_RESERVES:\r\n//           EndSponsoringFutureReservesResult endSponsoringFutureReservesResult;\r\n//       case REVOKE_SPONSORSHIP:\r\n//           RevokeSponsorshipResult revokeSponsorshipResult;\r\n//       case CLAWBACK:\r\n//           ClawbackResult clawbackResult;\r\n//       case CLAWBACK_CLAIMABLE_BALANCE:\r\n//           ClawbackClaimableBalanceResult clawbackClaimableBalanceResult;\r\n//       case SET_TRUST_LINE_FLAGS:\r\n//           SetTrustLineFlagsResult setTrustLineFlagsResult;\r\n//       case LIQUIDITY_POOL_DEPOSIT:\r\n//           LiquidityPoolDepositResult liquidityPoolDepositResult;\r\n//       case LIQUIDITY_POOL_WITHDRAW:\r\n//           LiquidityPoolWithdrawResult liquidityPoolWithdrawResult;\r\n//       case INVOKE_HOST_FUNCTION:\r\n//           InvokeHostFunctionResult invokeHostFunctionResult;\r\n//       case EXTEND_FOOTPRINT_TTL:\r\n//           ExtendFootprintTTLResult extendFootprintTTLResult;\r\n//       case RESTORE_FOOTPRINT:\r\n//           RestoreFootprintResult restoreFootprintResult;\r\n//       }\r\n//       tr;\r\n//   case opBAD_AUTH:\r\n//   case opNO_ACCOUNT:\r\n//   case opNOT_SUPPORTED:\r\n//   case opTOO_MANY_SUBENTRIES:\r\n//   case opEXCEEDED_WORK_LIMIT:\r\n//   case opTOO_MANY_SPONSORING:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"OperationResult\", {\r\n  switchOn: xdr.lookup(\"OperationResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"opInner\", \"tr\"],\r\n    [\"opBadAuth\", xdr.void()],\r\n    [\"opNoAccount\", xdr.void()],\r\n    [\"opNotSupported\", xdr.void()],\r\n    [\"opTooManySubentries\", xdr.void()],\r\n    [\"opExceededWorkLimit\", xdr.void()],\r\n    [\"opTooManySponsoring\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    tr: xdr.lookup(\"OperationResultTr\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum TransactionResultCode\r\n//   {\r\n//       txFEE_BUMP_INNER_SUCCESS = 1, // fee bump inner transaction succeeded\r\n//       txSUCCESS = 0,                // all operations succeeded\r\n//\r\n//       txFAILED = -1, // one of the operations failed (none were applied)\r\n//\r\n//       txTOO_EARLY = -2,         // ledger closeTime before minTime\r\n//       txTOO_LATE = -3,          // ledger closeTime after maxTime\r\n//       txMISSING_OPERATION = -4, // no operation was specified\r\n//       txBAD_SEQ = -5,           // sequence number does not match source account\r\n//\r\n//       txBAD_AUTH = -6,             // too few valid signatures / wrong network\r\n//       txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve\r\n//       txNO_ACCOUNT = -8,           // source account not found\r\n//       txINSUFFICIENT_FEE = -9,     // fee is too small\r\n//       txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction\r\n//       txINTERNAL_ERROR = -11,      // an unknown error occurred\r\n//\r\n//       txNOT_SUPPORTED = -12,          // transaction type not supported\r\n//       txFEE_BUMP_INNER_FAILED = -13,  // fee bump inner transaction failed\r\n//       txBAD_SPONSORSHIP = -14,        // sponsorship not confirmed\r\n//       txBAD_MIN_SEQ_AGE_OR_GAP = -15, // minSeqAge or minSeqLedgerGap conditions not met\r\n//       txMALFORMED = -16,              // precondition is invalid\r\n//       txSOROBAN_INVALID = -17         // soroban-specific preconditions were not met\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"TransactionResultCode\", {\r\n  txFeeBumpInnerSuccess: 1,\r\n  txSuccess: 0,\r\n  txFailed: -1,\r\n  txTooEarly: -2,\r\n  txTooLate: -3,\r\n  txMissingOperation: -4,\r\n  txBadSeq: -5,\r\n  txBadAuth: -6,\r\n  txInsufficientBalance: -7,\r\n  txNoAccount: -8,\r\n  txInsufficientFee: -9,\r\n  txBadAuthExtra: -10,\r\n  txInternalError: -11,\r\n  txNotSupported: -12,\r\n  txFeeBumpInnerFailed: -13,\r\n  txBadSponsorship: -14,\r\n  txBadMinSeqAgeOrGap: -15,\r\n  txMalformed: -16,\r\n  txSorobanInvalid: -17,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (TransactionResultCode code)\r\n//       {\r\n//       // txFEE_BUMP_INNER_SUCCESS is not included\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // txFEE_BUMP_INNER_FAILED is not included\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InnerTransactionResultResult\", {\r\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"txSuccess\", \"results\"],\r\n    [\"txFailed\", \"results\"],\r\n    [\"txTooEarly\", xdr.void()],\r\n    [\"txTooLate\", xdr.void()],\r\n    [\"txMissingOperation\", xdr.void()],\r\n    [\"txBadSeq\", xdr.void()],\r\n    [\"txBadAuth\", xdr.void()],\r\n    [\"txInsufficientBalance\", xdr.void()],\r\n    [\"txNoAccount\", xdr.void()],\r\n    [\"txInsufficientFee\", xdr.void()],\r\n    [\"txBadAuthExtra\", xdr.void()],\r\n    [\"txInternalError\", xdr.void()],\r\n    [\"txNotSupported\", xdr.void()],\r\n    [\"txBadSponsorship\", xdr.void()],\r\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\r\n    [\"txMalformed\", xdr.void()],\r\n    [\"txSorobanInvalid\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"InnerTransactionResultExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InnerTransactionResult\r\n//   {\r\n//       // Always 0. Here for binary compatibility.\r\n//       int64 feeCharged;\r\n//\r\n//       union switch (TransactionResultCode code)\r\n//       {\r\n//       // txFEE_BUMP_INNER_SUCCESS is not included\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // txFEE_BUMP_INNER_FAILED is not included\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//       result;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InnerTransactionResult\", [\r\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"result\", xdr.lookup(\"InnerTransactionResultResult\")],\r\n  [\"ext\", xdr.lookup(\"InnerTransactionResultExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct InnerTransactionResultPair\r\n//   {\r\n//       Hash transactionHash;          // hash of the inner transaction\r\n//       InnerTransactionResult result; // result for the inner transaction\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"InnerTransactionResultPair\", [\r\n  [\"transactionHash\", xdr.lookup(\"Hash\")],\r\n  [\"result\", xdr.lookup(\"InnerTransactionResult\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (TransactionResultCode code)\r\n//       {\r\n//       case txFEE_BUMP_INNER_SUCCESS:\r\n//       case txFEE_BUMP_INNER_FAILED:\r\n//           InnerTransactionResultPair innerResultPair;\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // case txFEE_BUMP_INNER_FAILED: handled above\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionResultResult\", {\r\n  switchOn: xdr.lookup(\"TransactionResultCode\"),\r\n  switchName: \"code\",\r\n  switches: [\r\n    [\"txFeeBumpInnerSuccess\", \"innerResultPair\"],\r\n    [\"txFeeBumpInnerFailed\", \"innerResultPair\"],\r\n    [\"txSuccess\", \"results\"],\r\n    [\"txFailed\", \"results\"],\r\n    [\"txTooEarly\", xdr.void()],\r\n    [\"txTooLate\", xdr.void()],\r\n    [\"txMissingOperation\", xdr.void()],\r\n    [\"txBadSeq\", xdr.void()],\r\n    [\"txBadAuth\", xdr.void()],\r\n    [\"txInsufficientBalance\", xdr.void()],\r\n    [\"txNoAccount\", xdr.void()],\r\n    [\"txInsufficientFee\", xdr.void()],\r\n    [\"txBadAuthExtra\", xdr.void()],\r\n    [\"txInternalError\", xdr.void()],\r\n    [\"txNotSupported\", xdr.void()],\r\n    [\"txBadSponsorship\", xdr.void()],\r\n    [\"txBadMinSeqAgeOrGap\", xdr.void()],\r\n    [\"txMalformed\", xdr.void()],\r\n    [\"txSorobanInvalid\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    innerResultPair: xdr.lookup(\"InnerTransactionResultPair\"),\r\n    results: xdr.varArray(xdr.lookup(\"OperationResult\"), 2147483647),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.union(\"TransactionResultExt\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct TransactionResult\r\n//   {\r\n//       int64 feeCharged; // actual fee charged for the transaction\r\n//\r\n//       union switch (TransactionResultCode code)\r\n//       {\r\n//       case txFEE_BUMP_INNER_SUCCESS:\r\n//       case txFEE_BUMP_INNER_FAILED:\r\n//           InnerTransactionResultPair innerResultPair;\r\n//       case txSUCCESS:\r\n//       case txFAILED:\r\n//           OperationResult results<>;\r\n//       case txTOO_EARLY:\r\n//       case txTOO_LATE:\r\n//       case txMISSING_OPERATION:\r\n//       case txBAD_SEQ:\r\n//       case txBAD_AUTH:\r\n//       case txINSUFFICIENT_BALANCE:\r\n//       case txNO_ACCOUNT:\r\n//       case txINSUFFICIENT_FEE:\r\n//       case txBAD_AUTH_EXTRA:\r\n//       case txINTERNAL_ERROR:\r\n//       case txNOT_SUPPORTED:\r\n//       // case txFEE_BUMP_INNER_FAILED: handled above\r\n//       case txBAD_SPONSORSHIP:\r\n//       case txBAD_MIN_SEQ_AGE_OR_GAP:\r\n//       case txMALFORMED:\r\n//       case txSOROBAN_INVALID:\r\n//           void;\r\n//       }\r\n//       result;\r\n//\r\n//       // reserved for future use\r\n//       union switch (int v)\r\n//       {\r\n//       case 0:\r\n//           void;\r\n//       }\r\n//       ext;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"TransactionResult\", [\r\n  [\"feeCharged\", xdr.lookup(\"Int64\")],\r\n  [\"result\", xdr.lookup(\"TransactionResultResult\")],\r\n  [\"ext\", xdr.lookup(\"TransactionResultExt\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Hash[32];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Hash\", xdr.opaque(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque uint256[32];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint256\", xdr.opaque(32));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef unsigned int uint32;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint32\", xdr.uint());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef int int32;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Int32\", xdr.int());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef unsigned hyper uint64;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Uint64\", xdr.uhyper());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef hyper int64;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Int64\", xdr.hyper());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef uint64 TimePoint;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"TimePoint\", xdr.lookup(\"Uint64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef uint64 Duration;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Duration\", xdr.lookup(\"Uint64\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ExtensionPoint switch (int v)\r\n//   {\r\n//   case 0:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ExtensionPoint\", {\r\n  switchOn: xdr.int(),\r\n  switchName: \"v\",\r\n  switches: [\r\n    [0, xdr.void()],\r\n  ],\r\n  arms: {\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum CryptoKeyType\r\n//   {\r\n//       KEY_TYPE_ED25519 = 0,\r\n//       KEY_TYPE_PRE_AUTH_TX = 1,\r\n//       KEY_TYPE_HASH_X = 2,\r\n//       KEY_TYPE_ED25519_SIGNED_PAYLOAD = 3,\r\n//       // MUXED enum values for supported type are derived from the enum values\r\n//       // above by ORing them with 0x100\r\n//       KEY_TYPE_MUXED_ED25519 = 0x100\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"CryptoKeyType\", {\r\n  keyTypeEd25519: 0,\r\n  keyTypePreAuthTx: 1,\r\n  keyTypeHashX: 2,\r\n  keyTypeEd25519SignedPayload: 3,\r\n  keyTypeMuxedEd25519: 256,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum PublicKeyType\r\n//   {\r\n//       PUBLIC_KEY_TYPE_ED25519 = KEY_TYPE_ED25519\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"PublicKeyType\", {\r\n  publicKeyTypeEd25519: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SignerKeyType\r\n//   {\r\n//       SIGNER_KEY_TYPE_ED25519 = KEY_TYPE_ED25519,\r\n//       SIGNER_KEY_TYPE_PRE_AUTH_TX = KEY_TYPE_PRE_AUTH_TX,\r\n//       SIGNER_KEY_TYPE_HASH_X = KEY_TYPE_HASH_X,\r\n//       SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD = KEY_TYPE_ED25519_SIGNED_PAYLOAD\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"SignerKeyType\", {\r\n  signerKeyTypeEd25519: 0,\r\n  signerKeyTypePreAuthTx: 1,\r\n  signerKeyTypeHashX: 2,\r\n  signerKeyTypeEd25519SignedPayload: 3,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union PublicKey switch (PublicKeyType type)\r\n//   {\r\n//   case PUBLIC_KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"PublicKey\", {\r\n  switchOn: xdr.lookup(\"PublicKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"publicKeyTypeEd25519\", \"ed25519\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct\r\n//       {\r\n//           /* Public key that must sign the payload. */\r\n//           uint256 ed25519;\r\n//           /* Payload to be raw signed by ed25519. */\r\n//           opaque payload<64>;\r\n//       }\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"SignerKeyEd25519SignedPayload\", [\r\n  [\"ed25519\", xdr.lookup(\"Uint256\")],\r\n  [\"payload\", xdr.varOpaque(64)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SignerKey switch (SignerKeyType type)\r\n//   {\r\n//   case SIGNER_KEY_TYPE_ED25519:\r\n//       uint256 ed25519;\r\n//   case SIGNER_KEY_TYPE_PRE_AUTH_TX:\r\n//       /* SHA-256 Hash of TransactionSignaturePayload structure */\r\n//       uint256 preAuthTx;\r\n//   case SIGNER_KEY_TYPE_HASH_X:\r\n//       /* Hash of random 256 bit preimage X */\r\n//       uint256 hashX;\r\n//   case SIGNER_KEY_TYPE_ED25519_SIGNED_PAYLOAD:\r\n//       struct\r\n//       {\r\n//           /* Public key that must sign the payload. */\r\n//           uint256 ed25519;\r\n//           /* Payload to be raw signed by ed25519. */\r\n//           opaque payload<64>;\r\n//       } ed25519SignedPayload;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"SignerKey\", {\r\n  switchOn: xdr.lookup(\"SignerKeyType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"signerKeyTypeEd25519\", \"ed25519\"],\r\n    [\"signerKeyTypePreAuthTx\", \"preAuthTx\"],\r\n    [\"signerKeyTypeHashX\", \"hashX\"],\r\n    [\"signerKeyTypeEd25519SignedPayload\", \"ed25519SignedPayload\"],\r\n  ],\r\n  arms: {\r\n    ed25519: xdr.lookup(\"Uint256\"),\r\n    preAuthTx: xdr.lookup(\"Uint256\"),\r\n    hashX: xdr.lookup(\"Uint256\"),\r\n    ed25519SignedPayload: xdr.lookup(\"SignerKeyEd25519SignedPayload\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque Signature<64>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"Signature\", xdr.varOpaque(64));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque SignatureHint[4];\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"SignatureHint\", xdr.opaque(4));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PublicKey NodeID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"NodeId\", xdr.lookup(\"PublicKey\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef PublicKey AccountID;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"AccountId\", xdr.lookup(\"PublicKey\"));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Curve25519Secret\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Curve25519Secret\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Curve25519Public\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Curve25519Public\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct HmacSha256Key\r\n//   {\r\n//       opaque key[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HmacSha256Key\", [\r\n  [\"key\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct HmacSha256Mac\r\n//   {\r\n//       opaque mac[32];\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"HmacSha256Mac\", [\r\n  [\"mac\", xdr.opaque(32)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCValType\r\n//   {\r\n//       SCV_BOOL = 0,\r\n//       SCV_VOID = 1,\r\n//       SCV_ERROR = 2,\r\n//\r\n//       // 32 bits is the smallest type in WASM or XDR; no need for u8/u16.\r\n//       SCV_U32 = 3,\r\n//       SCV_I32 = 4,\r\n//\r\n//       // 64 bits is naturally supported by both WASM and XDR also.\r\n//       SCV_U64 = 5,\r\n//       SCV_I64 = 6,\r\n//\r\n//       // Time-related u64 subtypes with their own functions and formatting.\r\n//       SCV_TIMEPOINT = 7,\r\n//       SCV_DURATION = 8,\r\n//\r\n//       // 128 bits is naturally supported by Rust and we use it for Soroban\r\n//       // fixed-point arithmetic prices / balances / similar \"quantities\". These\r\n//       // are represented in XDR as a pair of 2 u64s.\r\n//       SCV_U128 = 9,\r\n//       SCV_I128 = 10,\r\n//\r\n//       // 256 bits is the size of sha256 output, ed25519 keys, and the EVM machine\r\n//       // word, so for interop use we include this even though it requires a small\r\n//       // amount of Rust guest and/or host library code.\r\n//       SCV_U256 = 11,\r\n//       SCV_I256 = 12,\r\n//\r\n//       // Bytes come in 3 flavors, 2 of which have meaningfully different\r\n//       // formatting and validity-checking / domain-restriction.\r\n//       SCV_BYTES = 13,\r\n//       SCV_STRING = 14,\r\n//       SCV_SYMBOL = 15,\r\n//\r\n//       // Vecs and maps are just polymorphic containers of other ScVals.\r\n//       SCV_VEC = 16,\r\n//       SCV_MAP = 17,\r\n//\r\n//       // Address is the universal identifier for contracts and classic\r\n//       // accounts.\r\n//       SCV_ADDRESS = 18,\r\n//\r\n//       // The following are the internal SCVal variants that are not\r\n//       // exposed to the contracts.\r\n//       SCV_CONTRACT_INSTANCE = 19,\r\n//\r\n//       // SCV_LEDGER_KEY_CONTRACT_INSTANCE and SCV_LEDGER_KEY_NONCE are unique\r\n//       // symbolic SCVals used as the key for ledger entries for a contract's\r\n//       // instance and an address' nonce, respectively.\r\n//       SCV_LEDGER_KEY_CONTRACT_INSTANCE = 20,\r\n//       SCV_LEDGER_KEY_NONCE = 21\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScValType\", {\r\n  scvBool: 0,\r\n  scvVoid: 1,\r\n  scvError: 2,\r\n  scvU32: 3,\r\n  scvI32: 4,\r\n  scvU64: 5,\r\n  scvI64: 6,\r\n  scvTimepoint: 7,\r\n  scvDuration: 8,\r\n  scvU128: 9,\r\n  scvI128: 10,\r\n  scvU256: 11,\r\n  scvI256: 12,\r\n  scvBytes: 13,\r\n  scvString: 14,\r\n  scvSymbol: 15,\r\n  scvVec: 16,\r\n  scvMap: 17,\r\n  scvAddress: 18,\r\n  scvContractInstance: 19,\r\n  scvLedgerKeyContractInstance: 20,\r\n  scvLedgerKeyNonce: 21,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCErrorType\r\n//   {\r\n//       SCE_CONTRACT = 0,          // Contract-specific, user-defined codes.\r\n//       SCE_WASM_VM = 1,           // Errors while interpreting WASM bytecode.\r\n//       SCE_CONTEXT = 2,           // Errors in the contract's host context.\r\n//       SCE_STORAGE = 3,           // Errors accessing host storage.\r\n//       SCE_OBJECT = 4,            // Errors working with host objects.\r\n//       SCE_CRYPTO = 5,            // Errors in cryptographic operations.\r\n//       SCE_EVENTS = 6,            // Errors while emitting events.\r\n//       SCE_BUDGET = 7,            // Errors relating to budget limits.\r\n//       SCE_VALUE = 8,             // Errors working with host values or SCVals.\r\n//       SCE_AUTH = 9               // Errors from the authentication subsystem.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScErrorType\", {\r\n  sceContract: 0,\r\n  sceWasmVm: 1,\r\n  sceContext: 2,\r\n  sceStorage: 3,\r\n  sceObject: 4,\r\n  sceCrypto: 5,\r\n  sceEvents: 6,\r\n  sceBudget: 7,\r\n  sceValue: 8,\r\n  sceAuth: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCErrorCode\r\n//   {\r\n//       SCEC_ARITH_DOMAIN = 0,      // Some arithmetic was undefined (overflow, divide-by-zero).\r\n//       SCEC_INDEX_BOUNDS = 1,      // Something was indexed beyond its bounds.\r\n//       SCEC_INVALID_INPUT = 2,     // User provided some otherwise-bad data.\r\n//       SCEC_MISSING_VALUE = 3,     // Some value was required but not provided.\r\n//       SCEC_EXISTING_VALUE = 4,    // Some value was provided where not allowed.\r\n//       SCEC_EXCEEDED_LIMIT = 5,    // Some arbitrary limit -- gas or otherwise -- was hit.\r\n//       SCEC_INVALID_ACTION = 6,    // Data was valid but action requested was not.\r\n//       SCEC_INTERNAL_ERROR = 7,    // The host detected an error in its own logic.\r\n//       SCEC_UNEXPECTED_TYPE = 8,   // Some type wasn't as expected.\r\n//       SCEC_UNEXPECTED_SIZE = 9    // Something's size wasn't as expected.\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScErrorCode\", {\r\n  scecArithDomain: 0,\r\n  scecIndexBounds: 1,\r\n  scecInvalidInput: 2,\r\n  scecMissingValue: 3,\r\n  scecExistingValue: 4,\r\n  scecExceededLimit: 5,\r\n  scecInvalidAction: 6,\r\n  scecInternalError: 7,\r\n  scecUnexpectedType: 8,\r\n  scecUnexpectedSize: 9,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCError switch (SCErrorType type)\r\n//   {\r\n//   case SCE_CONTRACT:\r\n//       uint32 contractCode;\r\n//   case SCE_WASM_VM:\r\n//   case SCE_CONTEXT:\r\n//   case SCE_STORAGE:\r\n//   case SCE_OBJECT:\r\n//   case SCE_CRYPTO:\r\n//   case SCE_EVENTS:\r\n//   case SCE_BUDGET:\r\n//   case SCE_VALUE:\r\n//   case SCE_AUTH:\r\n//       SCErrorCode code;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScError\", {\r\n  switchOn: xdr.lookup(\"ScErrorType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"sceContract\", \"contractCode\"],\r\n    [\"sceWasmVm\", \"code\"],\r\n    [\"sceContext\", \"code\"],\r\n    [\"sceStorage\", \"code\"],\r\n    [\"sceObject\", \"code\"],\r\n    [\"sceCrypto\", \"code\"],\r\n    [\"sceEvents\", \"code\"],\r\n    [\"sceBudget\", \"code\"],\r\n    [\"sceValue\", \"code\"],\r\n    [\"sceAuth\", \"code\"],\r\n  ],\r\n  arms: {\r\n    contractCode: xdr.lookup(\"Uint32\"),\r\n    code: xdr.lookup(\"ScErrorCode\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UInt128Parts {\r\n//       uint64 hi;\r\n//       uint64 lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UInt128Parts\", [\r\n  [\"hi\", xdr.lookup(\"Uint64\")],\r\n  [\"lo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Int128Parts {\r\n//       int64 hi;\r\n//       uint64 lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Int128Parts\", [\r\n  [\"hi\", xdr.lookup(\"Int64\")],\r\n  [\"lo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct UInt256Parts {\r\n//       uint64 hi_hi;\r\n//       uint64 hi_lo;\r\n//       uint64 lo_hi;\r\n//       uint64 lo_lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"UInt256Parts\", [\r\n  [\"hiHi\", xdr.lookup(\"Uint64\")],\r\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\r\n  [\"loHi\", xdr.lookup(\"Uint64\")],\r\n  [\"loLo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct Int256Parts {\r\n//       int64 hi_hi;\r\n//       uint64 hi_lo;\r\n//       uint64 lo_hi;\r\n//       uint64 lo_lo;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"Int256Parts\", [\r\n  [\"hiHi\", xdr.lookup(\"Int64\")],\r\n  [\"hiLo\", xdr.lookup(\"Uint64\")],\r\n  [\"loHi\", xdr.lookup(\"Uint64\")],\r\n  [\"loLo\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractExecutableType\r\n//   {\r\n//       CONTRACT_EXECUTABLE_WASM = 0,\r\n//       CONTRACT_EXECUTABLE_STELLAR_ASSET = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractExecutableType\", {\r\n  contractExecutableWasm: 0,\r\n  contractExecutableStellarAsset: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ContractExecutable switch (ContractExecutableType type)\r\n//   {\r\n//   case CONTRACT_EXECUTABLE_WASM:\r\n//       Hash wasm_hash;\r\n//   case CONTRACT_EXECUTABLE_STELLAR_ASSET:\r\n//       void;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ContractExecutable\", {\r\n  switchOn: xdr.lookup(\"ContractExecutableType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"contractExecutableWasm\", \"wasmHash\"],\r\n    [\"contractExecutableStellarAsset\", xdr.void()],\r\n  ],\r\n  arms: {\r\n    wasmHash: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCAddressType\r\n//   {\r\n//       SC_ADDRESS_TYPE_ACCOUNT = 0,\r\n//       SC_ADDRESS_TYPE_CONTRACT = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScAddressType\", {\r\n  scAddressTypeAccount: 0,\r\n  scAddressTypeContract: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCAddress switch (SCAddressType type)\r\n//   {\r\n//   case SC_ADDRESS_TYPE_ACCOUNT:\r\n//       AccountID accountId;\r\n//   case SC_ADDRESS_TYPE_CONTRACT:\r\n//       Hash contractId;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScAddress\", {\r\n  switchOn: xdr.lookup(\"ScAddressType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scAddressTypeAccount\", \"accountId\"],\r\n    [\"scAddressTypeContract\", \"contractId\"],\r\n  ],\r\n  arms: {\r\n    accountId: xdr.lookup(\"AccountId\"),\r\n    contractId: xdr.lookup(\"Hash\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const SCSYMBOL_LIMIT = 32;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"SCSYMBOL_LIMIT\", 32);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef SCVal SCVec<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScVec\", xdr.varArray(xdr.lookup(\"ScVal\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef SCMapEntry SCMap<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScMap\", xdr.varArray(xdr.lookup(\"ScMapEntry\"), 2147483647));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef opaque SCBytes<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScBytes\", xdr.varOpaque());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string SCString<>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScString\", xdr.string());\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef string SCSymbol<SCSYMBOL_LIMIT>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ScSymbol\", xdr.string(SCSYMBOL_LIMIT));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCNonceKey {\r\n//       int64 nonce;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScNonceKey\", [\r\n  [\"nonce\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCContractInstance {\r\n//       ContractExecutable executable;\r\n//       SCMap* storage;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScContractInstance\", [\r\n  [\"executable\", xdr.lookup(\"ContractExecutable\")],\r\n  [\"storage\", xdr.option(xdr.lookup(\"ScMap\"))],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCVal switch (SCValType type)\r\n//   {\r\n//\r\n//   case SCV_BOOL:\r\n//       bool b;\r\n//   case SCV_VOID:\r\n//       void;\r\n//   case SCV_ERROR:\r\n//       SCError error;\r\n//\r\n//   case SCV_U32:\r\n//       uint32 u32;\r\n//   case SCV_I32:\r\n//       int32 i32;\r\n//\r\n//   case SCV_U64:\r\n//       uint64 u64;\r\n//   case SCV_I64:\r\n//       int64 i64;\r\n//   case SCV_TIMEPOINT:\r\n//       TimePoint timepoint;\r\n//   case SCV_DURATION:\r\n//       Duration duration;\r\n//\r\n//   case SCV_U128:\r\n//       UInt128Parts u128;\r\n//   case SCV_I128:\r\n//       Int128Parts i128;\r\n//\r\n//   case SCV_U256:\r\n//       UInt256Parts u256;\r\n//   case SCV_I256:\r\n//       Int256Parts i256;\r\n//\r\n//   case SCV_BYTES:\r\n//       SCBytes bytes;\r\n//   case SCV_STRING:\r\n//       SCString str;\r\n//   case SCV_SYMBOL:\r\n//       SCSymbol sym;\r\n//\r\n//   // Vec and Map are recursive so need to live\r\n//   // behind an option, due to xdrpp limitations.\r\n//   case SCV_VEC:\r\n//       SCVec *vec;\r\n//   case SCV_MAP:\r\n//       SCMap *map;\r\n//\r\n//   case SCV_ADDRESS:\r\n//       SCAddress address;\r\n//\r\n//   // Special SCVals reserved for system-constructed contract-data\r\n//   // ledger keys, not generally usable elsewhere.\r\n//   case SCV_LEDGER_KEY_CONTRACT_INSTANCE:\r\n//       void;\r\n//   case SCV_LEDGER_KEY_NONCE:\r\n//       SCNonceKey nonce_key;\r\n//\r\n//   case SCV_CONTRACT_INSTANCE:\r\n//       SCContractInstance instance;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScVal\", {\r\n  switchOn: xdr.lookup(\"ScValType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scvBool\", \"b\"],\r\n    [\"scvVoid\", xdr.void()],\r\n    [\"scvError\", \"error\"],\r\n    [\"scvU32\", \"u32\"],\r\n    [\"scvI32\", \"i32\"],\r\n    [\"scvU64\", \"u64\"],\r\n    [\"scvI64\", \"i64\"],\r\n    [\"scvTimepoint\", \"timepoint\"],\r\n    [\"scvDuration\", \"duration\"],\r\n    [\"scvU128\", \"u128\"],\r\n    [\"scvI128\", \"i128\"],\r\n    [\"scvU256\", \"u256\"],\r\n    [\"scvI256\", \"i256\"],\r\n    [\"scvBytes\", \"bytes\"],\r\n    [\"scvString\", \"str\"],\r\n    [\"scvSymbol\", \"sym\"],\r\n    [\"scvVec\", \"vec\"],\r\n    [\"scvMap\", \"map\"],\r\n    [\"scvAddress\", \"address\"],\r\n    [\"scvLedgerKeyContractInstance\", xdr.void()],\r\n    [\"scvLedgerKeyNonce\", \"nonceKey\"],\r\n    [\"scvContractInstance\", \"instance\"],\r\n  ],\r\n  arms: {\r\n    b: xdr.bool(),\r\n    error: xdr.lookup(\"ScError\"),\r\n    u32: xdr.lookup(\"Uint32\"),\r\n    i32: xdr.lookup(\"Int32\"),\r\n    u64: xdr.lookup(\"Uint64\"),\r\n    i64: xdr.lookup(\"Int64\"),\r\n    timepoint: xdr.lookup(\"TimePoint\"),\r\n    duration: xdr.lookup(\"Duration\"),\r\n    u128: xdr.lookup(\"UInt128Parts\"),\r\n    i128: xdr.lookup(\"Int128Parts\"),\r\n    u256: xdr.lookup(\"UInt256Parts\"),\r\n    i256: xdr.lookup(\"Int256Parts\"),\r\n    bytes: xdr.lookup(\"ScBytes\"),\r\n    str: xdr.lookup(\"ScString\"),\r\n    sym: xdr.lookup(\"ScSymbol\"),\r\n    vec: xdr.option(xdr.lookup(\"ScVec\")),\r\n    map: xdr.option(xdr.lookup(\"ScMap\")),\r\n    address: xdr.lookup(\"ScAddress\"),\r\n    nonceKey: xdr.lookup(\"ScNonceKey\"),\r\n    instance: xdr.lookup(\"ScContractInstance\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCMapEntry\r\n//   {\r\n//       SCVal key;\r\n//       SCVal val;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScMapEntry\", [\r\n  [\"key\", xdr.lookup(\"ScVal\")],\r\n  [\"val\", xdr.lookup(\"ScVal\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCEnvMetaKind\r\n//   {\r\n//       SC_ENV_META_KIND_INTERFACE_VERSION = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScEnvMetaKind\", {\r\n  scEnvMetaKindInterfaceVersion: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCEnvMetaEntry switch (SCEnvMetaKind kind)\r\n//   {\r\n//   case SC_ENV_META_KIND_INTERFACE_VERSION:\r\n//       uint64 interfaceVersion;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScEnvMetaEntry\", {\r\n  switchOn: xdr.lookup(\"ScEnvMetaKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scEnvMetaKindInterfaceVersion\", \"interfaceVersion\"],\r\n  ],\r\n  arms: {\r\n    interfaceVersion: xdr.lookup(\"Uint64\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCMetaV0\r\n//   {\r\n//       string key<>;\r\n//       string val<>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScMetaV0\", [\r\n  [\"key\", xdr.string()],\r\n  [\"val\", xdr.string()],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCMetaKind\r\n//   {\r\n//       SC_META_V0 = 0\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScMetaKind\", {\r\n  scMetaV0: 0,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCMetaEntry switch (SCMetaKind kind)\r\n//   {\r\n//   case SC_META_V0:\r\n//       SCMetaV0 v0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScMetaEntry\", {\r\n  switchOn: xdr.lookup(\"ScMetaKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scMetaV0\", \"v0\"],\r\n  ],\r\n  arms: {\r\n    v0: xdr.lookup(\"ScMetaV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const SC_SPEC_DOC_LIMIT = 1024;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"SC_SPEC_DOC_LIMIT\", 1024);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecType\r\n//   {\r\n//       SC_SPEC_TYPE_VAL = 0,\r\n//\r\n//       // Types with no parameters.\r\n//       SC_SPEC_TYPE_BOOL = 1,\r\n//       SC_SPEC_TYPE_VOID = 2,\r\n//       SC_SPEC_TYPE_ERROR = 3,\r\n//       SC_SPEC_TYPE_U32 = 4,\r\n//       SC_SPEC_TYPE_I32 = 5,\r\n//       SC_SPEC_TYPE_U64 = 6,\r\n//       SC_SPEC_TYPE_I64 = 7,\r\n//       SC_SPEC_TYPE_TIMEPOINT = 8,\r\n//       SC_SPEC_TYPE_DURATION = 9,\r\n//       SC_SPEC_TYPE_U128 = 10,\r\n//       SC_SPEC_TYPE_I128 = 11,\r\n//       SC_SPEC_TYPE_U256 = 12,\r\n//       SC_SPEC_TYPE_I256 = 13,\r\n//       SC_SPEC_TYPE_BYTES = 14,\r\n//       SC_SPEC_TYPE_STRING = 16,\r\n//       SC_SPEC_TYPE_SYMBOL = 17,\r\n//       SC_SPEC_TYPE_ADDRESS = 19,\r\n//\r\n//       // Types with parameters.\r\n//       SC_SPEC_TYPE_OPTION = 1000,\r\n//       SC_SPEC_TYPE_RESULT = 1001,\r\n//       SC_SPEC_TYPE_VEC = 1002,\r\n//       SC_SPEC_TYPE_MAP = 1004,\r\n//       SC_SPEC_TYPE_TUPLE = 1005,\r\n//       SC_SPEC_TYPE_BYTES_N = 1006,\r\n//\r\n//       // User defined types.\r\n//       SC_SPEC_TYPE_UDT = 2000\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecType\", {\r\n  scSpecTypeVal: 0,\r\n  scSpecTypeBool: 1,\r\n  scSpecTypeVoid: 2,\r\n  scSpecTypeError: 3,\r\n  scSpecTypeU32: 4,\r\n  scSpecTypeI32: 5,\r\n  scSpecTypeU64: 6,\r\n  scSpecTypeI64: 7,\r\n  scSpecTypeTimepoint: 8,\r\n  scSpecTypeDuration: 9,\r\n  scSpecTypeU128: 10,\r\n  scSpecTypeI128: 11,\r\n  scSpecTypeU256: 12,\r\n  scSpecTypeI256: 13,\r\n  scSpecTypeBytes: 14,\r\n  scSpecTypeString: 16,\r\n  scSpecTypeSymbol: 17,\r\n  scSpecTypeAddress: 19,\r\n  scSpecTypeOption: 1000,\r\n  scSpecTypeResult: 1001,\r\n  scSpecTypeVec: 1002,\r\n  scSpecTypeMap: 1004,\r\n  scSpecTypeTuple: 1005,\r\n  scSpecTypeBytesN: 1006,\r\n  scSpecTypeUdt: 2000,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeOption\r\n//   {\r\n//       SCSpecTypeDef valueType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeOption\", [\r\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeResult\r\n//   {\r\n//       SCSpecTypeDef okType;\r\n//       SCSpecTypeDef errorType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeResult\", [\r\n  [\"okType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n  [\"errorType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeVec\r\n//   {\r\n//       SCSpecTypeDef elementType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeVec\", [\r\n  [\"elementType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeMap\r\n//   {\r\n//       SCSpecTypeDef keyType;\r\n//       SCSpecTypeDef valueType;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeMap\", [\r\n  [\"keyType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n  [\"valueType\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeTuple\r\n//   {\r\n//       SCSpecTypeDef valueTypes<12>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeTuple\", [\r\n  [\"valueTypes\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeBytesN\r\n//   {\r\n//       uint32 n;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeBytesN\", [\r\n  [\"n\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecTypeUDT\r\n//   {\r\n//       string name<60>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecTypeUdt\", [\r\n  [\"name\", xdr.string(60)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecTypeDef switch (SCSpecType type)\r\n//   {\r\n//   case SC_SPEC_TYPE_VAL:\r\n//   case SC_SPEC_TYPE_BOOL:\r\n//   case SC_SPEC_TYPE_VOID:\r\n//   case SC_SPEC_TYPE_ERROR:\r\n//   case SC_SPEC_TYPE_U32:\r\n//   case SC_SPEC_TYPE_I32:\r\n//   case SC_SPEC_TYPE_U64:\r\n//   case SC_SPEC_TYPE_I64:\r\n//   case SC_SPEC_TYPE_TIMEPOINT:\r\n//   case SC_SPEC_TYPE_DURATION:\r\n//   case SC_SPEC_TYPE_U128:\r\n//   case SC_SPEC_TYPE_I128:\r\n//   case SC_SPEC_TYPE_U256:\r\n//   case SC_SPEC_TYPE_I256:\r\n//   case SC_SPEC_TYPE_BYTES:\r\n//   case SC_SPEC_TYPE_STRING:\r\n//   case SC_SPEC_TYPE_SYMBOL:\r\n//   case SC_SPEC_TYPE_ADDRESS:\r\n//       void;\r\n//   case SC_SPEC_TYPE_OPTION:\r\n//       SCSpecTypeOption option;\r\n//   case SC_SPEC_TYPE_RESULT:\r\n//       SCSpecTypeResult result;\r\n//   case SC_SPEC_TYPE_VEC:\r\n//       SCSpecTypeVec vec;\r\n//   case SC_SPEC_TYPE_MAP:\r\n//       SCSpecTypeMap map;\r\n//   case SC_SPEC_TYPE_TUPLE:\r\n//       SCSpecTypeTuple tuple;\r\n//   case SC_SPEC_TYPE_BYTES_N:\r\n//       SCSpecTypeBytesN bytesN;\r\n//   case SC_SPEC_TYPE_UDT:\r\n//       SCSpecTypeUDT udt;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecTypeDef\", {\r\n  switchOn: xdr.lookup(\"ScSpecType\"),\r\n  switchName: \"type\",\r\n  switches: [\r\n    [\"scSpecTypeVal\", xdr.void()],\r\n    [\"scSpecTypeBool\", xdr.void()],\r\n    [\"scSpecTypeVoid\", xdr.void()],\r\n    [\"scSpecTypeError\", xdr.void()],\r\n    [\"scSpecTypeU32\", xdr.void()],\r\n    [\"scSpecTypeI32\", xdr.void()],\r\n    [\"scSpecTypeU64\", xdr.void()],\r\n    [\"scSpecTypeI64\", xdr.void()],\r\n    [\"scSpecTypeTimepoint\", xdr.void()],\r\n    [\"scSpecTypeDuration\", xdr.void()],\r\n    [\"scSpecTypeU128\", xdr.void()],\r\n    [\"scSpecTypeI128\", xdr.void()],\r\n    [\"scSpecTypeU256\", xdr.void()],\r\n    [\"scSpecTypeI256\", xdr.void()],\r\n    [\"scSpecTypeBytes\", xdr.void()],\r\n    [\"scSpecTypeString\", xdr.void()],\r\n    [\"scSpecTypeSymbol\", xdr.void()],\r\n    [\"scSpecTypeAddress\", xdr.void()],\r\n    [\"scSpecTypeOption\", \"option\"],\r\n    [\"scSpecTypeResult\", \"result\"],\r\n    [\"scSpecTypeVec\", \"vec\"],\r\n    [\"scSpecTypeMap\", \"map\"],\r\n    [\"scSpecTypeTuple\", \"tuple\"],\r\n    [\"scSpecTypeBytesN\", \"bytesN\"],\r\n    [\"scSpecTypeUdt\", \"udt\"],\r\n  ],\r\n  arms: {\r\n    option: xdr.lookup(\"ScSpecTypeOption\"),\r\n    result: xdr.lookup(\"ScSpecTypeResult\"),\r\n    vec: xdr.lookup(\"ScSpecTypeVec\"),\r\n    map: xdr.lookup(\"ScSpecTypeMap\"),\r\n    tuple: xdr.lookup(\"ScSpecTypeTuple\"),\r\n    bytesN: xdr.lookup(\"ScSpecTypeBytesN\"),\r\n    udt: xdr.lookup(\"ScSpecTypeUdt\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTStructFieldV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<30>;\r\n//       SCSpecTypeDef type;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtStructFieldV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(30)],\r\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTStructV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTStructFieldV0 fields<40>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtStructV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"fields\", xdr.varArray(xdr.lookup(\"ScSpecUdtStructFieldV0\"), 40)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionCaseVoidV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionCaseVoidV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionCaseTupleV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       SCSpecTypeDef type<12>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionCaseTupleV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"type\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 12)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecUDTUnionCaseV0Kind\r\n//   {\r\n//       SC_SPEC_UDT_UNION_CASE_VOID_V0 = 0,\r\n//       SC_SPEC_UDT_UNION_CASE_TUPLE_V0 = 1\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecUdtUnionCaseV0Kind\", {\r\n  scSpecUdtUnionCaseVoidV0: 0,\r\n  scSpecUdtUnionCaseTupleV0: 1,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecUDTUnionCaseV0 switch (SCSpecUDTUnionCaseV0Kind kind)\r\n//   {\r\n//   case SC_SPEC_UDT_UNION_CASE_VOID_V0:\r\n//       SCSpecUDTUnionCaseVoidV0 voidCase;\r\n//   case SC_SPEC_UDT_UNION_CASE_TUPLE_V0:\r\n//       SCSpecUDTUnionCaseTupleV0 tupleCase;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecUdtUnionCaseV0\", {\r\n  switchOn: xdr.lookup(\"ScSpecUdtUnionCaseV0Kind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scSpecUdtUnionCaseVoidV0\", \"voidCase\"],\r\n    [\"scSpecUdtUnionCaseTupleV0\", \"tupleCase\"],\r\n  ],\r\n  arms: {\r\n    voidCase: xdr.lookup(\"ScSpecUdtUnionCaseVoidV0\"),\r\n    tupleCase: xdr.lookup(\"ScSpecUdtUnionCaseTupleV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTUnionV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTUnionCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtUnionV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtUnionCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTEnumCaseV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       uint32 value;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtEnumCaseV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"value\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTEnumV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTEnumCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtEnumV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtEnumCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTErrorEnumCaseV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<60>;\r\n//       uint32 value;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtErrorEnumCaseV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"value\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecUDTErrorEnumV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string lib<80>;\r\n//       string name<60>;\r\n//       SCSpecUDTErrorEnumCaseV0 cases<50>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecUdtErrorEnumV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"lib\", xdr.string(80)],\r\n  [\"name\", xdr.string(60)],\r\n  [\"cases\", xdr.varArray(xdr.lookup(\"ScSpecUdtErrorEnumCaseV0\"), 50)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecFunctionInputV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       string name<30>;\r\n//       SCSpecTypeDef type;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecFunctionInputV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.string(30)],\r\n  [\"type\", xdr.lookup(\"ScSpecTypeDef\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct SCSpecFunctionV0\r\n//   {\r\n//       string doc<SC_SPEC_DOC_LIMIT>;\r\n//       SCSymbol name;\r\n//       SCSpecFunctionInputV0 inputs<10>;\r\n//       SCSpecTypeDef outputs<1>;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ScSpecFunctionV0\", [\r\n  [\"doc\", xdr.string(SC_SPEC_DOC_LIMIT)],\r\n  [\"name\", xdr.lookup(\"ScSymbol\")],\r\n  [\"inputs\", xdr.varArray(xdr.lookup(\"ScSpecFunctionInputV0\"), 10)],\r\n  [\"outputs\", xdr.varArray(xdr.lookup(\"ScSpecTypeDef\"), 1)],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum SCSpecEntryKind\r\n//   {\r\n//       SC_SPEC_ENTRY_FUNCTION_V0 = 0,\r\n//       SC_SPEC_ENTRY_UDT_STRUCT_V0 = 1,\r\n//       SC_SPEC_ENTRY_UDT_UNION_V0 = 2,\r\n//       SC_SPEC_ENTRY_UDT_ENUM_V0 = 3,\r\n//       SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0 = 4\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ScSpecEntryKind\", {\r\n  scSpecEntryFunctionV0: 0,\r\n  scSpecEntryUdtStructV0: 1,\r\n  scSpecEntryUdtUnionV0: 2,\r\n  scSpecEntryUdtEnumV0: 3,\r\n  scSpecEntryUdtErrorEnumV0: 4,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union SCSpecEntry switch (SCSpecEntryKind kind)\r\n//   {\r\n//   case SC_SPEC_ENTRY_FUNCTION_V0:\r\n//       SCSpecFunctionV0 functionV0;\r\n//   case SC_SPEC_ENTRY_UDT_STRUCT_V0:\r\n//       SCSpecUDTStructV0 udtStructV0;\r\n//   case SC_SPEC_ENTRY_UDT_UNION_V0:\r\n//       SCSpecUDTUnionV0 udtUnionV0;\r\n//   case SC_SPEC_ENTRY_UDT_ENUM_V0:\r\n//       SCSpecUDTEnumV0 udtEnumV0;\r\n//   case SC_SPEC_ENTRY_UDT_ERROR_ENUM_V0:\r\n//       SCSpecUDTErrorEnumV0 udtErrorEnumV0;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ScSpecEntry\", {\r\n  switchOn: xdr.lookup(\"ScSpecEntryKind\"),\r\n  switchName: \"kind\",\r\n  switches: [\r\n    [\"scSpecEntryFunctionV0\", \"functionV0\"],\r\n    [\"scSpecEntryUdtStructV0\", \"udtStructV0\"],\r\n    [\"scSpecEntryUdtUnionV0\", \"udtUnionV0\"],\r\n    [\"scSpecEntryUdtEnumV0\", \"udtEnumV0\"],\r\n    [\"scSpecEntryUdtErrorEnumV0\", \"udtErrorEnumV0\"],\r\n  ],\r\n  arms: {\r\n    functionV0: xdr.lookup(\"ScSpecFunctionV0\"),\r\n    udtStructV0: xdr.lookup(\"ScSpecUdtStructV0\"),\r\n    udtUnionV0: xdr.lookup(\"ScSpecUdtUnionV0\"),\r\n    udtEnumV0: xdr.lookup(\"ScSpecUdtEnumV0\"),\r\n    udtErrorEnumV0: xdr.lookup(\"ScSpecUdtErrorEnumV0\"),\r\n  },\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractExecutionLanesV0\r\n//   {\r\n//       // maximum number of Soroban transactions per ledger\r\n//       uint32 ledgerMaxTxCount;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractExecutionLanesV0\", [\r\n  [\"ledgerMaxTxCount\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractComputeV0\r\n//   {\r\n//       // Maximum instructions per ledger\r\n//       int64 ledgerMaxInstructions;\r\n//       // Maximum instructions per transaction\r\n//       int64 txMaxInstructions;\r\n//       // Cost of 10000 instructions\r\n//       int64 feeRatePerInstructionsIncrement;\r\n//\r\n//       // Memory limit per transaction. Unlike instructions, there is no fee\r\n//       // for memory, just the limit.\r\n//       uint32 txMemoryLimit;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractComputeV0\", [\r\n  [\"ledgerMaxInstructions\", xdr.lookup(\"Int64\")],\r\n  [\"txMaxInstructions\", xdr.lookup(\"Int64\")],\r\n  [\"feeRatePerInstructionsIncrement\", xdr.lookup(\"Int64\")],\r\n  [\"txMemoryLimit\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractLedgerCostV0\r\n//   {\r\n//       // Maximum number of ledger entry read operations per ledger\r\n//       uint32 ledgerMaxReadLedgerEntries;\r\n//       // Maximum number of bytes that can be read per ledger\r\n//       uint32 ledgerMaxReadBytes;\r\n//       // Maximum number of ledger entry write operations per ledger\r\n//       uint32 ledgerMaxWriteLedgerEntries;\r\n//       // Maximum number of bytes that can be written per ledger\r\n//       uint32 ledgerMaxWriteBytes;\r\n//\r\n//       // Maximum number of ledger entry read operations per transaction\r\n//       uint32 txMaxReadLedgerEntries;\r\n//       // Maximum number of bytes that can be read per transaction\r\n//       uint32 txMaxReadBytes;\r\n//       // Maximum number of ledger entry write operations per transaction\r\n//       uint32 txMaxWriteLedgerEntries;\r\n//       // Maximum number of bytes that can be written per transaction\r\n//       uint32 txMaxWriteBytes;\r\n//\r\n//       int64 feeReadLedgerEntry;  // Fee per ledger entry read\r\n//       int64 feeWriteLedgerEntry; // Fee per ledger entry write\r\n//\r\n//       int64 feeRead1KB;  // Fee for reading 1KB\r\n//\r\n//       // The following parameters determine the write fee per 1KB.\r\n//       // Write fee grows linearly until bucket list reaches this size\r\n//       int64 bucketListTargetSizeBytes;\r\n//       // Fee per 1KB write when the bucket list is empty\r\n//       int64 writeFee1KBBucketListLow;\r\n//       // Fee per 1KB write when the bucket list has reached `bucketListTargetSizeBytes`\r\n//       int64 writeFee1KBBucketListHigh;\r\n//       // Write fee multiplier for any additional data past the first `bucketListTargetSizeBytes`\r\n//       uint32 bucketListWriteFeeGrowthFactor;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractLedgerCostV0\", [\r\n  [\"ledgerMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxReadBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"ledgerMaxWriteBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxReadLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxReadBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxWriteLedgerEntries\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxWriteBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeReadLedgerEntry\", xdr.lookup(\"Int64\")],\r\n  [\"feeWriteLedgerEntry\", xdr.lookup(\"Int64\")],\r\n  [\"feeRead1Kb\", xdr.lookup(\"Int64\")],\r\n  [\"bucketListTargetSizeBytes\", xdr.lookup(\"Int64\")],\r\n  [\"writeFee1KbBucketListLow\", xdr.lookup(\"Int64\")],\r\n  [\"writeFee1KbBucketListHigh\", xdr.lookup(\"Int64\")],\r\n  [\"bucketListWriteFeeGrowthFactor\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractHistoricalDataV0\r\n//   {\r\n//       int64 feeHistorical1KB; // Fee for storing 1KB in archives\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractHistoricalDataV0\", [\r\n  [\"feeHistorical1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractEventsV0\r\n//   {\r\n//       // Maximum size of events that a contract call can emit.\r\n//       uint32 txMaxContractEventsSizeBytes;\r\n//       // Fee for generating 1KB of contract events.\r\n//       int64 feeContractEvents1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractEventsV0\", [\r\n  [\"txMaxContractEventsSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeContractEvents1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ConfigSettingContractBandwidthV0\r\n//   {\r\n//       // Maximum sum of all transaction sizes in the ledger in bytes\r\n//       uint32 ledgerMaxTxsSizeBytes;\r\n//       // Maximum size in bytes for a transaction\r\n//       uint32 txMaxSizeBytes;\r\n//\r\n//       // Fee for 1 KB of transaction size\r\n//       int64 feeTxSize1KB;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ConfigSettingContractBandwidthV0\", [\r\n  [\"ledgerMaxTxsSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"txMaxSizeBytes\", xdr.lookup(\"Uint32\")],\r\n  [\"feeTxSize1Kb\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ContractCostType {\r\n//       // Cost of running 1 wasm instruction\r\n//       WasmInsnExec = 0,\r\n//       // Cost of allocating a slice of memory (in bytes)\r\n//       MemAlloc = 1,\r\n//       // Cost of copying a slice of bytes into a pre-allocated memory\r\n//       MemCpy = 2,\r\n//       // Cost of comparing two slices of memory\r\n//       MemCmp = 3,\r\n//       // Cost of a host function dispatch, not including the actual work done by\r\n//       // the function nor the cost of VM invocation machinary\r\n//       DispatchHostFunction = 4,\r\n//       // Cost of visiting a host object from the host object storage. Exists to\r\n//       // make sure some baseline cost coverage, i.e. repeatly visiting objects\r\n//       // by the guest will always incur some charges.\r\n//       VisitObject = 5,\r\n//       // Cost of serializing an xdr object to bytes\r\n//       ValSer = 6,\r\n//       // Cost of deserializing an xdr object from bytes\r\n//       ValDeser = 7,\r\n//       // Cost of computing the sha256 hash from bytes\r\n//       ComputeSha256Hash = 8,\r\n//       // Cost of computing the ed25519 pubkey from bytes\r\n//       ComputeEd25519PubKey = 9,\r\n//       // Cost of verifying ed25519 signature of a payload.\r\n//       VerifyEd25519Sig = 10,\r\n//       // Cost of instantiation a VM from wasm bytes code.\r\n//       VmInstantiation = 11,\r\n//       // Cost of instantiation a VM from a cached state.\r\n//       VmCachedInstantiation = 12,\r\n//       // Cost of invoking a function on the VM. If the function is a host function,\r\n//       // additional cost will be covered by `DispatchHostFunction`.\r\n//       InvokeVmFunction = 13,\r\n//       // Cost of computing a keccak256 hash from bytes.\r\n//       ComputeKeccak256Hash = 14,\r\n//       // Cost of decoding an ECDSA signature computed from a 256-bit prime modulus\r\n//       // curve (e.g. secp256k1 and secp256r1)\r\n//       DecodeEcdsaCurve256Sig = 15,\r\n//       // Cost of recovering an ECDSA secp256k1 key from a signature.\r\n//       RecoverEcdsaSecp256k1Key = 16,\r\n//       // Cost of int256 addition (`+`) and subtraction (`-`) operations\r\n//       Int256AddSub = 17,\r\n//       // Cost of int256 multiplication (`*`) operation\r\n//       Int256Mul = 18,\r\n//       // Cost of int256 division (`/`) operation\r\n//       Int256Div = 19,\r\n//       // Cost of int256 power (`exp`) operation\r\n//       Int256Pow = 20,\r\n//       // Cost of int256 shift (`shl`, `shr`) operation\r\n//       Int256Shift = 21,\r\n//       // Cost of drawing random bytes using a ChaCha20 PRNG\r\n//       ChaCha20DrawBytes = 22,\r\n//\r\n//       // Cost of parsing wasm bytes that only encode instructions.\r\n//       ParseWasmInstructions = 23,\r\n//       // Cost of parsing a known number of wasm functions.\r\n//       ParseWasmFunctions = 24,\r\n//       // Cost of parsing a known number of wasm globals.\r\n//       ParseWasmGlobals = 25,\r\n//       // Cost of parsing a known number of wasm table entries.\r\n//       ParseWasmTableEntries = 26,\r\n//       // Cost of parsing a known number of wasm types.\r\n//       ParseWasmTypes = 27,\r\n//       // Cost of parsing a known number of wasm data segments.\r\n//       ParseWasmDataSegments = 28,\r\n//       // Cost of parsing a known number of wasm element segments.\r\n//       ParseWasmElemSegments = 29,\r\n//       // Cost of parsing a known number of wasm imports.\r\n//       ParseWasmImports = 30,\r\n//       // Cost of parsing a known number of wasm exports.\r\n//       ParseWasmExports = 31,\r\n//       // Cost of parsing a known number of data segment bytes.\r\n//       ParseWasmDataSegmentBytes = 32,\r\n//\r\n//       // Cost of instantiating wasm bytes that only encode instructions.\r\n//       InstantiateWasmInstructions = 33,\r\n//       // Cost of instantiating a known number of wasm functions.\r\n//       InstantiateWasmFunctions = 34,\r\n//       // Cost of instantiating a known number of wasm globals.\r\n//       InstantiateWasmGlobals = 35,\r\n//       // Cost of instantiating a known number of wasm table entries.\r\n//       InstantiateWasmTableEntries = 36,\r\n//       // Cost of instantiating a known number of wasm types.\r\n//       InstantiateWasmTypes = 37,\r\n//       // Cost of instantiating a known number of wasm data segments.\r\n//       InstantiateWasmDataSegments = 38,\r\n//       // Cost of instantiating a known number of wasm element segments.\r\n//       InstantiateWasmElemSegments = 39,\r\n//       // Cost of instantiating a known number of wasm imports.\r\n//       InstantiateWasmImports = 40,\r\n//       // Cost of instantiating a known number of wasm exports.\r\n//       InstantiateWasmExports = 41,\r\n//       // Cost of instantiating a known number of data segment bytes.\r\n//       InstantiateWasmDataSegmentBytes = 42,\r\n//\r\n//       // Cost of decoding a bytes array representing an uncompressed SEC-1 encoded\r\n//       // point on a 256-bit elliptic curve\r\n//       Sec1DecodePointUncompressed = 43,\r\n//       // Cost of verifying an ECDSA Secp256r1 signature\r\n//       VerifyEcdsaSecp256r1Sig = 44\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ContractCostType\", {\r\n  wasmInsnExec: 0,\r\n  memAlloc: 1,\r\n  memCpy: 2,\r\n  memCmp: 3,\r\n  dispatchHostFunction: 4,\r\n  visitObject: 5,\r\n  valSer: 6,\r\n  valDeser: 7,\r\n  computeSha256Hash: 8,\r\n  computeEd25519PubKey: 9,\r\n  verifyEd25519Sig: 10,\r\n  vmInstantiation: 11,\r\n  vmCachedInstantiation: 12,\r\n  invokeVmFunction: 13,\r\n  computeKeccak256Hash: 14,\r\n  decodeEcdsaCurve256Sig: 15,\r\n  recoverEcdsaSecp256k1Key: 16,\r\n  int256AddSub: 17,\r\n  int256Mul: 18,\r\n  int256Div: 19,\r\n  int256Pow: 20,\r\n  int256Shift: 21,\r\n  chaCha20DrawBytes: 22,\r\n  parseWasmInstructions: 23,\r\n  parseWasmFunctions: 24,\r\n  parseWasmGlobals: 25,\r\n  parseWasmTableEntries: 26,\r\n  parseWasmTypes: 27,\r\n  parseWasmDataSegments: 28,\r\n  parseWasmElemSegments: 29,\r\n  parseWasmImports: 30,\r\n  parseWasmExports: 31,\r\n  parseWasmDataSegmentBytes: 32,\r\n  instantiateWasmInstructions: 33,\r\n  instantiateWasmFunctions: 34,\r\n  instantiateWasmGlobals: 35,\r\n  instantiateWasmTableEntries: 36,\r\n  instantiateWasmTypes: 37,\r\n  instantiateWasmDataSegments: 38,\r\n  instantiateWasmElemSegments: 39,\r\n  instantiateWasmImports: 40,\r\n  instantiateWasmExports: 41,\r\n  instantiateWasmDataSegmentBytes: 42,\r\n  sec1DecodePointUncompressed: 43,\r\n  verifyEcdsaSecp256r1Sig: 44,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct ContractCostParamEntry {\r\n//       // use `ext` to add more terms (e.g. higher order polynomials) in the future\r\n//       ExtensionPoint ext;\r\n//\r\n//       int64 constTerm;\r\n//       int64 linearTerm;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"ContractCostParamEntry\", [\r\n  [\"ext\", xdr.lookup(\"ExtensionPoint\")],\r\n  [\"constTerm\", xdr.lookup(\"Int64\")],\r\n  [\"linearTerm\", xdr.lookup(\"Int64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct StateArchivalSettings {\r\n//       uint32 maxEntryTTL;\r\n//       uint32 minTemporaryTTL;\r\n//       uint32 minPersistentTTL;\r\n//\r\n//       // rent_fee = wfee_rate_average / rent_rate_denominator_for_type\r\n//       int64 persistentRentRateDenominator;\r\n//       int64 tempRentRateDenominator;\r\n//\r\n//       // max number of entries that emit archival meta in a single ledger\r\n//       uint32 maxEntriesToArchive;\r\n//\r\n//       // Number of snapshots to use when calculating average BucketList size\r\n//       uint32 bucketListSizeWindowSampleSize;\r\n//\r\n//       // How often to sample the BucketList size for the average, in ledgers\r\n//       uint32 bucketListWindowSamplePeriod;\r\n//\r\n//       // Maximum number of bytes that we scan for eviction per ledger\r\n//       uint32 evictionScanSize;\r\n//\r\n//       // Lowest BucketList level to be scanned to evict entries\r\n//       uint32 startingEvictionScanLevel;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"StateArchivalSettings\", [\r\n  [\"maxEntryTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"minTemporaryTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"minPersistentTtl\", xdr.lookup(\"Uint32\")],\r\n  [\"persistentRentRateDenominator\", xdr.lookup(\"Int64\")],\r\n  [\"tempRentRateDenominator\", xdr.lookup(\"Int64\")],\r\n  [\"maxEntriesToArchive\", xdr.lookup(\"Uint32\")],\r\n  [\"bucketListSizeWindowSampleSize\", xdr.lookup(\"Uint32\")],\r\n  [\"bucketListWindowSamplePeriod\", xdr.lookup(\"Uint32\")],\r\n  [\"evictionScanSize\", xdr.lookup(\"Uint32\")],\r\n  [\"startingEvictionScanLevel\", xdr.lookup(\"Uint32\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   struct EvictionIterator {\r\n//       uint32 bucketListLevel;\r\n//       bool isCurrBucket;\r\n//       uint64 bucketFileOffset;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.struct(\"EvictionIterator\", [\r\n  [\"bucketListLevel\", xdr.lookup(\"Uint32\")],\r\n  [\"isCurrBucket\", xdr.bool()],\r\n  [\"bucketFileOffset\", xdr.lookup(\"Uint64\")],\r\n]);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   const CONTRACT_COST_COUNT_LIMIT = 1024;\r\n//\r\n// ===========================================================================\r\nxdr.const(\"CONTRACT_COST_COUNT_LIMIT\", 1024);\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   typedef ContractCostParamEntry ContractCostParams<CONTRACT_COST_COUNT_LIMIT>;\r\n//\r\n// ===========================================================================\r\nxdr.typedef(\"ContractCostParams\", xdr.varArray(xdr.lookup(\"ContractCostParamEntry\"), xdr.lookup(\"CONTRACT_COST_COUNT_LIMIT\")));\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   enum ConfigSettingID\r\n//   {\r\n//       CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES = 0,\r\n//       CONFIG_SETTING_CONTRACT_COMPUTE_V0 = 1,\r\n//       CONFIG_SETTING_CONTRACT_LEDGER_COST_V0 = 2,\r\n//       CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0 = 3,\r\n//       CONFIG_SETTING_CONTRACT_EVENTS_V0 = 4,\r\n//       CONFIG_SETTING_CONTRACT_BANDWIDTH_V0 = 5,\r\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS = 6,\r\n//       CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES = 7,\r\n//       CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES = 8,\r\n//       CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES = 9,\r\n//       CONFIG_SETTING_STATE_ARCHIVAL = 10,\r\n//       CONFIG_SETTING_CONTRACT_EXECUTION_LANES = 11,\r\n//       CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW = 12,\r\n//       CONFIG_SETTING_EVICTION_ITERATOR = 13\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.enum(\"ConfigSettingId\", {\r\n  configSettingContractMaxSizeBytes: 0,\r\n  configSettingContractComputeV0: 1,\r\n  configSettingContractLedgerCostV0: 2,\r\n  configSettingContractHistoricalDataV0: 3,\r\n  configSettingContractEventsV0: 4,\r\n  configSettingContractBandwidthV0: 5,\r\n  configSettingContractCostParamsCpuInstructions: 6,\r\n  configSettingContractCostParamsMemoryBytes: 7,\r\n  configSettingContractDataKeySizeBytes: 8,\r\n  configSettingContractDataEntrySizeBytes: 9,\r\n  configSettingStateArchival: 10,\r\n  configSettingContractExecutionLanes: 11,\r\n  configSettingBucketlistSizeWindow: 12,\r\n  configSettingEvictionIterator: 13,\r\n});\r\n\r\n// === xdr source ============================================================\r\n//\r\n//   union ConfigSettingEntry switch (ConfigSettingID configSettingID)\r\n//   {\r\n//   case CONFIG_SETTING_CONTRACT_MAX_SIZE_BYTES:\r\n//       uint32 contractMaxSizeBytes;\r\n//   case CONFIG_SETTING_CONTRACT_COMPUTE_V0:\r\n//       ConfigSettingContractComputeV0 contractCompute;\r\n//   case CONFIG_SETTING_CONTRACT_LEDGER_COST_V0:\r\n//       ConfigSettingContractLedgerCostV0 contractLedgerCost;\r\n//   case CONFIG_SETTING_CONTRACT_HISTORICAL_DATA_V0:\r\n//       ConfigSettingContractHistoricalDataV0 contractHistoricalData;\r\n//   case CONFIG_SETTING_CONTRACT_EVENTS_V0:\r\n//       ConfigSettingContractEventsV0 contractEvents;\r\n//   case CONFIG_SETTING_CONTRACT_BANDWIDTH_V0:\r\n//       ConfigSettingContractBandwidthV0 contractBandwidth;\r\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_CPU_INSTRUCTIONS:\r\n//       ContractCostParams contractCostParamsCpuInsns;\r\n//   case CONFIG_SETTING_CONTRACT_COST_PARAMS_MEMORY_BYTES:\r\n//       ContractCostParams contractCostParamsMemBytes;\r\n//   case CONFIG_SETTING_CONTRACT_DATA_KEY_SIZE_BYTES:\r\n//       uint32 contractDataKeySizeBytes;\r\n//   case CONFIG_SETTING_CONTRACT_DATA_ENTRY_SIZE_BYTES:\r\n//       uint32 contractDataEntrySizeBytes;\r\n//   case CONFIG_SETTING_STATE_ARCHIVAL:\r\n//       StateArchivalSettings stateArchivalSettings;\r\n//   case CONFIG_SETTING_CONTRACT_EXECUTION_LANES:\r\n//       ConfigSettingContractExecutionLanesV0 contractExecutionLanes;\r\n//   case CONFIG_SETTING_BUCKETLIST_SIZE_WINDOW:\r\n//       uint64 bucketListSizeWindow<>;\r\n//   case CONFIG_SETTING_EVICTION_ITERATOR:\r\n//       EvictionIterator evictionIterator;\r\n//   };\r\n//\r\n// ===========================================================================\r\nxdr.union(\"ConfigSettingEntry\", {\r\n  switchOn: xdr.lookup(\"ConfigSettingId\"),\r\n  switchName: \"configSettingId\",\r\n  switches: [\r\n    [\"configSettingContractMaxSizeBytes\", \"contractMaxSizeBytes\"],\r\n    [\"configSettingContractComputeV0\", \"contractCompute\"],\r\n    [\"configSettingContractLedgerCostV0\", \"contractLedgerCost\"],\r\n    [\"configSettingContractHistoricalDataV0\", \"contractHistoricalData\"],\r\n    [\"configSettingContractEventsV0\", \"contractEvents\"],\r\n    [\"configSettingContractBandwidthV0\", \"contractBandwidth\"],\r\n    [\"configSettingContractCostParamsCpuInstructions\", \"contractCostParamsCpuInsns\"],\r\n    [\"configSettingContractCostParamsMemoryBytes\", \"contractCostParamsMemBytes\"],\r\n    [\"configSettingContractDataKeySizeBytes\", \"contractDataKeySizeBytes\"],\r\n    [\"configSettingContractDataEntrySizeBytes\", \"contractDataEntrySizeBytes\"],\r\n    [\"configSettingStateArchival\", \"stateArchivalSettings\"],\r\n    [\"configSettingContractExecutionLanes\", \"contractExecutionLanes\"],\r\n    [\"configSettingBucketlistSizeWindow\", \"bucketListSizeWindow\"],\r\n    [\"configSettingEvictionIterator\", \"evictionIterator\"],\r\n  ],\r\n  arms: {\r\n    contractMaxSizeBytes: xdr.lookup(\"Uint32\"),\r\n    contractCompute: xdr.lookup(\"ConfigSettingContractComputeV0\"),\r\n    contractLedgerCost: xdr.lookup(\"ConfigSettingContractLedgerCostV0\"),\r\n    contractHistoricalData: xdr.lookup(\"ConfigSettingContractHistoricalDataV0\"),\r\n    contractEvents: xdr.lookup(\"ConfigSettingContractEventsV0\"),\r\n    contractBandwidth: xdr.lookup(\"ConfigSettingContractBandwidthV0\"),\r\n    contractCostParamsCpuInsns: xdr.lookup(\"ContractCostParams\"),\r\n    contractCostParamsMemBytes: xdr.lookup(\"ContractCostParams\"),\r\n    contractDataKeySizeBytes: xdr.lookup(\"Uint32\"),\r\n    contractDataEntrySizeBytes: xdr.lookup(\"Uint32\"),\r\n    stateArchivalSettings: xdr.lookup(\"StateArchivalSettings\"),\r\n    contractExecutionLanes: xdr.lookup(\"ConfigSettingContractExecutionLanesV0\"),\r\n    bucketListSizeWindow: xdr.varArray(xdr.lookup(\"Uint64\"), 2147483647),\r\n    evictionIterator: xdr.lookup(\"EvictionIterator\"),\r\n  },\r\n});\r\n\r\n});\r\nexport default types;\r\n","import xdr from './xdr';\r\nimport { Asset } from './asset';\r\nimport { hash } from './hashing';\r\n\r\n// LiquidityPoolFeeV18 is the default liquidity pool fee in protocol v18. It defaults to 30 base points (0.3%).\r\nexport const LiquidityPoolFeeV18 = 30;\r\n\r\n/**\r\n * getLiquidityPoolId computes the Pool ID for the given assets, fee and pool type.\r\n *\r\n * @see [stellar-core getPoolID](https://github.com/stellar/stellar-core/blob/9f3a48c6a8f1aa77b6043a055d0638661f718080/src/ledger/test/LedgerTxnTests.cpp#L3746-L3751)\r\n *\r\n * @export\r\n * @param {string} liquidityPoolType – A string representing the liquidity pool type.\r\n * @param {object} liquidityPoolParameters        – The liquidity pool parameters.\r\n * @param {Asset}  liquidityPoolParameters.assetA – The first asset in the Pool, it must respect the rule assetA < assetB.\r\n * @param {Asset}  liquidityPoolParameters.assetB – The second asset in the Pool, it must respect the rule assetA < assetB.\r\n * @param {number} liquidityPoolParameters.fee    – The liquidity pool fee. For now the only fee supported is `30`.\r\n *\r\n * @return {Buffer} the raw Pool ID buffer, which can be stringfied with `toString('hex')`\r\n */\r\nexport function getLiquidityPoolId(\r\n  liquidityPoolType,\r\n  liquidityPoolParameters = {}\r\n) {\r\n  if (liquidityPoolType !== 'constant_product') {\r\n    throw new Error('liquidityPoolType is invalid');\r\n  }\r\n\r\n  const { assetA, assetB, fee } = liquidityPoolParameters;\r\n  if (!assetA || !(assetA instanceof Asset)) {\r\n    throw new Error('assetA is invalid');\r\n  }\r\n  if (!assetB || !(assetB instanceof Asset)) {\r\n    throw new Error('assetB is invalid');\r\n  }\r\n  if (!fee || fee !== LiquidityPoolFeeV18) {\r\n    throw new Error('fee is invalid');\r\n  }\r\n\r\n  if (Asset.compare(assetA, assetB) !== -1) {\r\n    throw new Error('Assets are not in lexicographic order');\r\n  }\r\n\r\n  const lpTypeData =\r\n    xdr.LiquidityPoolType.liquidityPoolConstantProduct().toXDR();\r\n  const lpParamsData = new xdr.LiquidityPoolConstantProductParameters({\r\n    assetA: assetA.toXDRObject(),\r\n    assetB: assetB.toXDRObject(),\r\n    fee\r\n  }).toXDR();\r\n  const payload = Buffer.concat([lpTypeData, lpParamsData]);\r\n  return hash(payload);\r\n}\r\n","import { sha256 } from 'sha.js';\r\n\r\nexport function hash(data) {\r\n  const hasher = new sha256();\r\n  hasher.update(data, 'utf8');\r\n  return hasher.digest();\r\n}\r\n","/* eslint-disable import/no-import-module-exports */\r\nimport xdr from './xdr';\r\nimport cereal from './jsxdr';\r\n\r\nexport { xdr };\r\nexport { cereal };\r\nexport { hash } from './hashing';\r\nexport { sign, verify, FastSigning } from './signing';\r\nexport {\r\n  getLiquidityPoolId,\r\n  LiquidityPoolFeeV18\r\n} from './get_liquidity_pool_id';\r\nexport { Keypair } from './keypair';\r\nexport { UnsignedHyper, Hyper } from '@stellar/js-xdr';\r\nexport { TransactionBase } from './transaction_base';\r\nexport { Transaction } from './transaction';\r\nexport { FeeBumpTransaction } from './fee_bump_transaction';\r\nexport {\r\n  TransactionBuilder,\r\n  TimeoutInfinite,\r\n  BASE_FEE\r\n} from './transaction_builder';\r\nexport { Asset } from './asset';\r\nexport { LiquidityPoolAsset } from './liquidity_pool_asset';\r\nexport { LiquidityPoolId } from './liquidity_pool_id';\r\nexport {\r\n  Operation,\r\n  AuthRequiredFlag,\r\n  AuthRevocableFlag,\r\n  AuthImmutableFlag,\r\n  AuthClawbackEnabledFlag\r\n} from './operation';\r\nexport * from './memo';\r\nexport { Account } from './account';\r\nexport { MuxedAccount } from './muxed_account';\r\nexport { Claimant } from './claimant';\r\nexport { Networks } from './network';\r\nexport { StrKey } from './strkey';\r\nexport { SignerKey } from './signerkey';\r\nexport { Soroban } from './soroban';\r\nexport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress,\r\n  extractBaseAddress,\r\n  encodeMuxedAccount\r\n} from './util/decode_encode_muxed_account';\r\n\r\n//\r\n// Soroban\r\n//\r\n\r\nexport { Contract } from './contract';\r\nexport { Address } from './address';\r\nexport * from './numbers';\r\nexport * from './scval';\r\nexport * from './events';\r\nexport * from './sorobandata_builder';\r\nexport * from './auth';\r\n\r\nexport * from './invocation';\r\n\r\nexport default module.exports;\r\n","import { Asset } from './asset';\r\nimport { Address } from './address';\r\nimport { scValToNative } from './scval';\r\n\r\n/**\r\n * @typedef CreateInvocation\r\n *\r\n * @prop {'wasm'|'sac'} type  a type indicating if this creation was a custom\r\n *    contract or a wrapping of an existing Stellar asset\r\n * @prop {string} [token] when `type=='sac'`, the canonical {@link Asset} that\r\n *    is being wrapped by this Stellar Asset Contract\r\n * @prop {object} [wasm]  when `type=='wasm'`, add'l creation parameters\r\n *\r\n * @prop {string} wasm.hash     hex hash of WASM bytecode backing this contract\r\n * @prop {string} wasm.address  contract address of this deployment\r\n * @prop {string} wasm.salt     hex salt that the user consumed when creating\r\n *    this contract (encoded in the resulting address)\r\n */\r\n\r\n/**\r\n * @typedef ExecuteInvocation\r\n *\r\n * @prop {string} source    the strkey of the contract (C...) being invoked\r\n * @prop {string} function  the name of the function being invoked\r\n * @prop {any[]}  args      the natively-represented parameters to the function\r\n *    invocation (see {@link scValToNative}) for rules on how they're\r\n *    represented a JS types\r\n */\r\n\r\n/**\r\n * @typedef InvocationTree\r\n * @prop {'execute' | 'create'} type  the type of invocation occurring, either\r\n *    contract creation or host function execution\r\n * @prop {CreateInvocation | ExecuteInvocation} args  the parameters to the\r\n *    invocation, depending on the type\r\n * @prop {InvocationTree[]} invocations   any sub-invocations that (may) occur\r\n *    as a result of this invocation (i.e. a tree of call stacks)\r\n */\r\n\r\n/**\r\n * Turns a raw invocation tree into a human-readable format.\r\n *\r\n * This is designed to make the invocation tree easier to understand in order to\r\n * inform users about the side-effects of their contract calls. This will help\r\n * make informed decisions about whether or not a particular invocation will\r\n * result in what you expect it to.\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} root  the raw XDR of the invocation,\r\n *    likely acquired from transaction simulation. this is either from the\r\n *    {@link Operation.invokeHostFunction} itself (the `func` field), or from\r\n *    the authorization entries ({@link xdr.SorobanAuthorizationEntry}, the\r\n *    `rootInvocation` field)\r\n *\r\n * @returns {InvocationTree}  a human-readable version of the invocation tree\r\n *\r\n * @example\r\n * Here, we show a browser modal after simulating an arbitrary transaction,\r\n * `tx`, which we assume has an `Operation.invokeHostFunction` inside of it:\r\n *\r\n * ```typescript\r\n * import { Server, buildInvocationTree } from '@stellar/stellar-sdk';\r\n *\r\n * const s = new Server(\"fill in accordingly\");\r\n *\r\n * s.simulateTransaction(tx).then(\r\n *  (resp: SorobanRpc.SimulateTransactionResponse) => {\r\n *    if (SorobanRpc.isSuccessfulSim(resp) && ) {\r\n *      // bold assumption: there's a valid result with an auth entry\r\n *      alert(\r\n *        \"You are authorizing the following invocation:\\n\" +\r\n *        JSON.stringify(\r\n *          buildInvocationTree(resp.result!.auth[0].rootInvocation()),\r\n *          null,\r\n *          2\r\n *        )\r\n *      );\r\n *    }\r\n *  }\r\n * );\r\n * ```\r\n */\r\nexport function buildInvocationTree(root) {\r\n  const fn = root.function();\r\n\r\n  /** @type {InvocationTree} */\r\n  const output = {};\r\n\r\n  /** @type {xdr.CreateContractArgs | xdr.InvokeContractArgs} */\r\n  const inner = fn.value();\r\n\r\n  switch (fn.switch().value) {\r\n    // sorobanAuthorizedFunctionTypeContractFn\r\n    case 0:\r\n      output.type = 'execute';\r\n      output.args = {\r\n        source: Address.fromScAddress(inner.contractAddress()).toString(),\r\n        function: inner.functionName(),\r\n        args: inner.args().map((arg) => scValToNative(arg))\r\n      };\r\n      break;\r\n\r\n    // sorobanAuthorizedFunctionTypeCreateContractHostFn\r\n    case 1: {\r\n      output.type = 'create';\r\n      output.args = {};\r\n\r\n      // If the executable is a WASM, the preimage MUST be an address. If it's a\r\n      // token, the preimage MUST be an asset. This is a cheeky way to check\r\n      // that, because wasm=0, token=1 and address=0, asset=1 in the XDR switch\r\n      // values.\r\n      //\r\n      // The first part may not be true in V2, but we'd need to update this code\r\n      // anyway so it can still be an error.\r\n      const [exec, preimage] = [inner.executable(), inner.contractIdPreimage()];\r\n      if (!!exec.switch().value !== !!preimage.switch().value) {\r\n        throw new Error(\r\n          `creation function appears invalid: ${JSON.stringify(\r\n            inner\r\n          )} (should be wasm+address or token+asset)`\r\n        );\r\n      }\r\n\r\n      switch (exec.switch().value) {\r\n        // contractExecutableWasm\r\n        case 0: {\r\n          /** @type {xdr.ContractIdPreimageFromAddress} */\r\n          const details = preimage.fromAddress();\r\n\r\n          output.args.type = 'wasm';\r\n          output.args.wasm = {\r\n            salt: details.salt().toString('hex'),\r\n            hash: exec.wasmHash().toString('hex'),\r\n            address: Address.fromScAddress(details.address()).toString()\r\n          };\r\n          break;\r\n        }\r\n\r\n        // contractExecutableStellarAsset\r\n        case 1:\r\n          output.args.type = 'sac';\r\n          output.args.asset = Asset.fromOperation(\r\n            preimage.fromAsset()\r\n          ).toString();\r\n          break;\r\n\r\n        default:\r\n          throw new Error(`unknown creation type: ${JSON.stringify(exec)}`);\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    default:\r\n      throw new Error(\r\n        `unknown invocation type (${fn.switch()}): ${JSON.stringify(fn)}`\r\n      );\r\n  }\r\n\r\n  output.invocations = root.subInvocations().map((i) => buildInvocationTree(i));\r\n  return output;\r\n}\r\n\r\n/**\r\n * @callback InvocationWalker\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} node  the currently explored node\r\n * @param {number} depth  the depth of the tree this node is occurring at (the\r\n *    root starts at a depth of 1)\r\n * @param {xdr.SorobanAuthorizedInvocation} [parent]  this `node`s parent node,\r\n *    if any (i.e. this doesn't exist at the root)\r\n *\r\n * @returns {boolean?}   returning `false` is a hint to stop exploring\r\n */\r\n\r\n/**\r\n * Executes a callback function on each node in the tree until stopped.\r\n *\r\n * Nodes are walked in a depth-first order. Returning `false` from the callback\r\n * stops further depth exploration at that node, but it does not stop the walk\r\n * in a \"global\" view.\r\n *\r\n * @param {xdr.SorobanAuthorizedInvocation} root  the tree to explore\r\n * @param {InvocationWalker} callback  the callback to execute for each node\r\n * @returns {void}\r\n */\r\nexport function walkInvocationTree(root, callback) {\r\n  walkHelper(root, 1, callback);\r\n}\r\n\r\nfunction walkHelper(node, depth, callback, parent) {\r\n  if (callback(node, depth, parent) === false /* allow void rv */) {\r\n    return;\r\n  }\r\n\r\n  node\r\n    .subInvocations()\r\n    .forEach((i) => walkHelper(i, depth + 1, callback, node));\r\n}\r\n","import { XdrWriter, XdrReader } from '@stellar/js-xdr';\r\n\r\nconst cereal = { XdrWriter, XdrReader };\r\nexport default cereal;\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"^\"]}] */\r\n\r\nimport nacl from 'tweetnacl';\r\n\r\nimport { sign, verify, generate } from './signing';\r\nimport { StrKey } from './strkey';\r\nimport { hash } from './hashing';\r\n\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * `Keypair` represents public (and secret) keys of the account.\r\n *\r\n * Currently `Keypair` only supports ed25519 but in a future this class can be abstraction layer for other\r\n * public-key signature systems.\r\n *\r\n * Use more convenient methods to create `Keypair` object:\r\n * * `{@link Keypair.fromPublicKey}`\r\n * * `{@link Keypair.fromSecret}`\r\n * * `{@link Keypair.random}`\r\n *\r\n * @constructor\r\n * @param {object} keys At least one of keys must be provided.\r\n * @param {string} keys.type Public-key signature system name. (currently only `ed25519` keys are supported)\r\n * @param {Buffer} [keys.publicKey] Raw public key\r\n * @param {Buffer} [keys.secretKey] Raw secret key (32-byte secret seed in ed25519`)\r\n */\r\nexport class Keypair {\r\n  constructor(keys) {\r\n    if (keys.type !== 'ed25519') {\r\n      throw new Error('Invalid keys type');\r\n    }\r\n\r\n    this.type = keys.type;\r\n\r\n    if (keys.secretKey) {\r\n      keys.secretKey = Buffer.from(keys.secretKey);\r\n\r\n      if (keys.secretKey.length !== 32) {\r\n        throw new Error('secretKey length is invalid');\r\n      }\r\n\r\n      this._secretSeed = keys.secretKey;\r\n      this._publicKey = generate(keys.secretKey);\r\n      this._secretKey = Buffer.concat([keys.secretKey, this._publicKey]);\r\n\r\n      if (\r\n        keys.publicKey &&\r\n        !this._publicKey.equals(Buffer.from(keys.publicKey))\r\n      ) {\r\n        throw new Error('secretKey does not match publicKey');\r\n      }\r\n    } else {\r\n      this._publicKey = Buffer.from(keys.publicKey);\r\n\r\n      if (this._publicKey.length !== 32) {\r\n        throw new Error('publicKey length is invalid');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` instance from secret. This can either be secret key or secret seed depending\r\n   * on underlying public-key signature system. Currently `Keypair` only supports ed25519.\r\n   * @param {string} secret secret key (ex. `SDAKFNYEIAORZKKCYRILFQKLLOCNPL5SWJ3YY5NM3ZH6GJSZGXHZEPQS`)\r\n   * @returns {Keypair}\r\n   */\r\n  static fromSecret(secret) {\r\n    const rawSecret = StrKey.decodeEd25519SecretSeed(secret);\r\n    return this.fromRawEd25519Seed(rawSecret);\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` object from ed25519 secret key seed raw bytes.\r\n   *\r\n   * @param {Buffer} rawSeed Raw 32-byte ed25519 secret key seed\r\n   * @returns {Keypair}\r\n   */\r\n  static fromRawEd25519Seed(rawSeed) {\r\n    return new this({ type: 'ed25519', secretKey: rawSeed });\r\n  }\r\n\r\n  /**\r\n   * Returns `Keypair` object representing network master key.\r\n   * @param {string} networkPassphrase passphrase of the target stellar network (e.g. \"Public Global Stellar Network ; September 2015\").\r\n   * @returns {Keypair}\r\n   */\r\n  static master(networkPassphrase) {\r\n    if (!networkPassphrase) {\r\n      throw new Error(\r\n        'No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.'\r\n      );\r\n    }\r\n\r\n    return this.fromRawEd25519Seed(hash(networkPassphrase));\r\n  }\r\n\r\n  /**\r\n   * Creates a new `Keypair` object from public key.\r\n   * @param {string} publicKey public key (ex. `GB3KJPLFUYN5VL6R3GU3EGCGVCKFDSD7BEDX42HWG5BWFKB3KQGJJRMA`)\r\n   * @returns {Keypair}\r\n   */\r\n  static fromPublicKey(publicKey) {\r\n    publicKey = StrKey.decodeEd25519PublicKey(publicKey);\r\n    if (publicKey.length !== 32) {\r\n      throw new Error('Invalid Stellar public key');\r\n    }\r\n    return new this({ type: 'ed25519', publicKey });\r\n  }\r\n\r\n  /**\r\n   * Create a random `Keypair` object.\r\n   * @returns {Keypair}\r\n   */\r\n  static random() {\r\n    const secret = nacl.randomBytes(32);\r\n    return this.fromRawEd25519Seed(secret);\r\n  }\r\n\r\n  xdrAccountId() {\r\n    return new xdr.AccountId.publicKeyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  xdrPublicKey() {\r\n    return new xdr.PublicKey.publicKeyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Creates a {@link xdr.MuxedAccount} object from the public key.\r\n   *\r\n   * You will get a different type of muxed account depending on whether or not\r\n   * you pass an ID.\r\n   *\r\n   * @param  {string} [id] - stringified integer indicating the underlying muxed\r\n   *     ID of the new account object\r\n   *\r\n   * @return {xdr.MuxedAccount}\r\n   */\r\n  xdrMuxedAccount(id) {\r\n    if (typeof id !== 'undefined') {\r\n      if (typeof id !== 'string') {\r\n        throw new TypeError(`expected string for ID, got ${typeof id}`);\r\n      }\r\n\r\n      return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n        new xdr.MuxedAccountMed25519({\r\n          id: xdr.Uint64.fromString(id),\r\n          ed25519: this._publicKey\r\n        })\r\n      );\r\n    }\r\n\r\n    return new xdr.MuxedAccount.keyTypeEd25519(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns raw public key\r\n   * @returns {Buffer}\r\n   */\r\n  rawPublicKey() {\r\n    return this._publicKey;\r\n  }\r\n\r\n  signatureHint() {\r\n    const a = this.xdrAccountId().toXDR();\r\n\r\n    return a.slice(a.length - 4);\r\n  }\r\n\r\n  /**\r\n   * Returns public key associated with this `Keypair` object.\r\n   * @returns {string}\r\n   */\r\n  publicKey() {\r\n    return StrKey.encodeEd25519PublicKey(this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns secret key associated with this `Keypair` object\r\n   * @returns {string}\r\n   */\r\n  secret() {\r\n    if (!this._secretSeed) {\r\n      throw new Error('no secret key available');\r\n    }\r\n\r\n    if (this.type === 'ed25519') {\r\n      return StrKey.encodeEd25519SecretSeed(this._secretSeed);\r\n    }\r\n\r\n    throw new Error('Invalid Keypair type');\r\n  }\r\n\r\n  /**\r\n   * Returns raw secret key.\r\n   * @returns {Buffer}\r\n   */\r\n  rawSecretKey() {\r\n    return this._secretSeed;\r\n  }\r\n\r\n  /**\r\n   * Returns `true` if this `Keypair` object contains secret key and can sign.\r\n   * @returns {boolean}\r\n   */\r\n  canSign() {\r\n    return !!this._secretKey;\r\n  }\r\n\r\n  /**\r\n   * Signs data.\r\n   * @param {Buffer} data Data to sign\r\n   * @returns {Buffer}\r\n   */\r\n  sign(data) {\r\n    if (!this.canSign()) {\r\n      throw new Error('cannot sign: no secret key available');\r\n    }\r\n\r\n    return sign(data, this._secretKey);\r\n  }\r\n\r\n  /**\r\n   * Verifies if `signature` for `data` is valid.\r\n   * @param {Buffer} data Signed data\r\n   * @param {Buffer} signature Signature\r\n   * @returns {boolean}\r\n   */\r\n  verify(data, signature) {\r\n    return verify(data, signature, this._publicKey);\r\n  }\r\n\r\n  /**\r\n   * Returns the decorated signature (hint+sig) for arbitrary data.\r\n   *\r\n   * @param  {Buffer} data  arbitrary data to sign\r\n   * @return {xdr.DecoratedSignature}   the raw signature structure which can be\r\n   *     added directly to a transaction envelope\r\n   *\r\n   * @see TransactionBase.addDecoratedSignature\r\n   */\r\n  signDecorated(data) {\r\n    const signature = this.sign(data);\r\n    const hint = this.signatureHint();\r\n\r\n    return new xdr.DecoratedSignature({ hint, signature });\r\n  }\r\n\r\n  /**\r\n   * Returns the raw decorated signature (hint+sig) for a signed payload signer.\r\n   *\r\n   *  The hint is defined as the last 4 bytes of the signer key XORed with last\r\n   *  4 bytes of the payload (zero-left-padded if necessary).\r\n   *\r\n   * @param  {Buffer} data    data to both sign and treat as the payload\r\n   * @return {xdr.DecoratedSignature}\r\n   *\r\n   * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0040.md#signature-hint\r\n   * @see TransactionBase.addDecoratedSignature\r\n   */\r\n  signPayloadDecorated(data) {\r\n    const signature = this.sign(data);\r\n    const keyHint = this.signatureHint();\r\n\r\n    let hint = Buffer.from(data.slice(-4));\r\n    if (hint.length < 4) {\r\n      // append zeroes as needed\r\n      hint = Buffer.concat([hint, Buffer.alloc(4 - data.length, 0)]);\r\n    }\r\n\r\n    return new xdr.DecoratedSignature({\r\n      hint: hint.map((byte, i) => byte ^ keyHint[i]),\r\n      signature\r\n    });\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { Asset } from './asset';\r\nimport {\r\n  LiquidityPoolFeeV18,\r\n  getLiquidityPoolId\r\n} from './get_liquidity_pool_id';\r\n\r\n/**\r\n * LiquidityPoolAsset class represents a liquidity pool trustline change.\r\n *\r\n * @constructor\r\n * @param {Asset} assetA – The first asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\r\n * @param {Asset} assetB – The second asset in the Pool, it must respect the rule assetA < assetB. See {@link Asset.compare} for more details on how assets are sorted.\r\n * @param {number} fee – The liquidity pool fee. For now the only fee supported is `30`.\r\n */\r\nexport class LiquidityPoolAsset {\r\n  constructor(assetA, assetB, fee) {\r\n    if (!assetA || !(assetA instanceof Asset)) {\r\n      throw new Error('assetA is invalid');\r\n    }\r\n    if (!assetB || !(assetB instanceof Asset)) {\r\n      throw new Error('assetB is invalid');\r\n    }\r\n    if (Asset.compare(assetA, assetB) !== -1) {\r\n      throw new Error('Assets are not in lexicographic order');\r\n    }\r\n    if (!fee || fee !== LiquidityPoolFeeV18) {\r\n      throw new Error('fee is invalid');\r\n    }\r\n\r\n    this.assetA = assetA;\r\n    this.assetB = assetB;\r\n    this.fee = fee;\r\n  }\r\n\r\n  /**\r\n   * Returns a liquidity pool asset object from its XDR ChangeTrustAsset object\r\n   * representation.\r\n   * @param {xdr.ChangeTrustAsset} ctAssetXdr - The asset XDR object.\r\n   * @returns {LiquidityPoolAsset}\r\n   */\r\n  static fromOperation(ctAssetXdr) {\r\n    const assetType = ctAssetXdr.switch();\r\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\r\n      const liquidityPoolParameters = ctAssetXdr\r\n        .liquidityPool()\r\n        .constantProduct();\r\n      return new this(\r\n        Asset.fromOperation(liquidityPoolParameters.assetA()),\r\n        Asset.fromOperation(liquidityPoolParameters.assetB()),\r\n        liquidityPoolParameters.fee()\r\n      );\r\n    }\r\n\r\n    throw new Error(`Invalid asset type: ${assetType.name}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the `xdr.ChangeTrustAsset` object for this liquidity pool asset.\r\n   *\r\n   * Note: To convert from an {@link Asset `Asset`} to `xdr.ChangeTrustAsset`\r\n   * please refer to the\r\n   * {@link Asset.toChangeTrustXDRObject `Asset.toChangeTrustXDRObject`} method.\r\n   *\r\n   * @returns {xdr.ChangeTrustAsset} XDR ChangeTrustAsset object.\r\n   */\r\n  toXDRObject() {\r\n    const lpConstantProductParamsXdr =\r\n      new xdr.LiquidityPoolConstantProductParameters({\r\n        assetA: this.assetA.toXDRObject(),\r\n        assetB: this.assetB.toXDRObject(),\r\n        fee: this.fee\r\n      });\r\n    const lpParamsXdr = new xdr.LiquidityPoolParameters(\r\n      'liquidityPoolConstantProduct',\r\n      lpConstantProductParamsXdr\r\n    );\r\n    return new xdr.ChangeTrustAsset('assetTypePoolShare', lpParamsXdr);\r\n  }\r\n\r\n  /**\r\n   * @returns {LiquidityPoolParameters} Liquidity pool parameters.\r\n   */\r\n  getLiquidityPoolParameters() {\r\n    return {\r\n      ...this,\r\n      assetA: this.assetA,\r\n      assetB: this.assetB,\r\n      fee: this.fee\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\r\n   */\r\n  getAssetType() {\r\n    return 'liquidity_pool_shares';\r\n  }\r\n\r\n  /**\r\n   * @param {LiquidityPoolAsset} other the LiquidityPoolAsset to compare\r\n   * @returns {boolean} `true` if this asset equals the given asset.\r\n   */\r\n  equals(other) {\r\n    return (\r\n      this.assetA.equals(other.assetA) &&\r\n      this.assetB.equals(other.assetB) &&\r\n      this.fee === other.fee\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    const poolId = getLiquidityPoolId(\r\n      'constant_product',\r\n      this.getLiquidityPoolParameters()\r\n    ).toString('hex');\r\n    return `liquidity_pool:${poolId}`;\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\n/**\r\n * LiquidityPoolId class represents the asset referenced by a trustline to a\r\n * liquidity pool.\r\n *\r\n * @constructor\r\n * @param {string} liquidityPoolId - The ID of the liquidity pool in string 'hex'.\r\n */\r\nexport class LiquidityPoolId {\r\n  constructor(liquidityPoolId) {\r\n    if (!liquidityPoolId) {\r\n      throw new Error('liquidityPoolId cannot be empty');\r\n    }\r\n    if (!/^[a-f0-9]{64}$/.test(liquidityPoolId)) {\r\n      throw new Error('Liquidity pool ID is not a valid hash');\r\n    }\r\n\r\n    this.liquidityPoolId = liquidityPoolId;\r\n  }\r\n\r\n  /**\r\n   * Returns a liquidity pool ID object from its xdr.TrustLineAsset representation.\r\n   * @param {xdr.TrustLineAsset} tlAssetXdr - The asset XDR object.\r\n   * @returns {LiquidityPoolId}\r\n   */\r\n  static fromOperation(tlAssetXdr) {\r\n    const assetType = tlAssetXdr.switch();\r\n    if (assetType === xdr.AssetType.assetTypePoolShare()) {\r\n      const liquidityPoolId = tlAssetXdr.liquidityPoolId().toString('hex');\r\n      return new this(liquidityPoolId);\r\n    }\r\n\r\n    throw new Error(`Invalid asset type: ${assetType.name}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the `xdr.TrustLineAsset` object for this liquidity pool ID.\r\n   *\r\n   * Note: To convert from {@link Asset `Asset`} to `xdr.TrustLineAsset` please\r\n   * refer to the\r\n   * {@link Asset.toTrustLineXDRObject `Asset.toTrustLineXDRObject`} method.\r\n   *\r\n   * @returns {xdr.TrustLineAsset} XDR LiquidityPoolId object\r\n   */\r\n  toXDRObject() {\r\n    const xdrPoolId = xdr.PoolId.fromXDR(this.liquidityPoolId, 'hex');\r\n    return new xdr.TrustLineAsset('assetTypePoolShare', xdrPoolId);\r\n  }\r\n\r\n  /**\r\n   * @returns {string} Liquidity pool ID.\r\n   */\r\n  getLiquidityPoolId() {\r\n    return String(this.liquidityPoolId);\r\n  }\r\n\r\n  /**\r\n   * @see [Assets concept](https://developers.stellar.org/docs/glossary/assets/)\r\n   * @returns {AssetType.liquidityPoolShares} asset type. Can only be `liquidity_pool_shares`.\r\n   */\r\n  getAssetType() {\r\n    return 'liquidity_pool_shares';\r\n  }\r\n\r\n  /**\r\n   * @param {LiquidityPoolId} asset LiquidityPoolId to compare.\r\n   * @returns {boolean} `true` if this asset equals the given asset.\r\n   */\r\n  equals(asset) {\r\n    return this.liquidityPoolId === asset.getLiquidityPoolId();\r\n  }\r\n\r\n  toString() {\r\n    return `liquidity_pool:${this.liquidityPoolId}`;\r\n  }\r\n}\r\n","import { UnsignedHyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\nimport xdr from './xdr';\r\n\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoNone = 'none';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoID = 'id';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoText = 'text';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoHash = 'hash';\r\n/**\r\n * Type of {@link Memo}.\r\n */\r\nexport const MemoReturn = 'return';\r\n\r\n/**\r\n * `Memo` represents memos attached to transactions.\r\n *\r\n * @param {string} type - `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\r\n * @param {*} value - `string` for `MemoID`, `MemoText`, buffer of hex string for `MemoHash` or `MemoReturn`\r\n * @see [Transactions concept](https://developers.stellar.org/docs/glossary/transactions/)\r\n * @class Memo\r\n */\r\nexport class Memo {\r\n  constructor(type, value = null) {\r\n    this._type = type;\r\n    this._value = value;\r\n\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        break;\r\n      case MemoID:\r\n        Memo._validateIdValue(value);\r\n        break;\r\n      case MemoText:\r\n        Memo._validateTextValue(value);\r\n        break;\r\n      case MemoHash:\r\n      case MemoReturn:\r\n        Memo._validateHashValue(value);\r\n        // We want MemoHash and MemoReturn to have Buffer as a value\r\n        if (typeof value === 'string') {\r\n          this._value = Buffer.from(value, 'hex');\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error('Invalid memo type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Contains memo type: `MemoNone`, `MemoID`, `MemoText`, `MemoHash` or `MemoReturn`\r\n   */\r\n  get type() {\r\n    return this._type;\r\n  }\r\n\r\n  set type(type) {\r\n    throw new Error('Memo is immutable');\r\n  }\r\n\r\n  /**\r\n   * Contains memo value:\r\n   * * `null` for `MemoNone`,\r\n   * * `string` for `MemoID`,\r\n   * * `Buffer` for `MemoText` after decoding using `fromXDRObject`, original value otherwise,\r\n   * * `Buffer` for `MemoHash`, `MemoReturn`.\r\n   */\r\n  get value() {\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        return null;\r\n      case MemoID:\r\n      case MemoText:\r\n        return this._value;\r\n      case MemoHash:\r\n      case MemoReturn:\r\n        return Buffer.from(this._value);\r\n      default:\r\n        throw new Error('Invalid memo type');\r\n    }\r\n  }\r\n\r\n  set value(value) {\r\n    throw new Error('Memo is immutable');\r\n  }\r\n\r\n  static _validateIdValue(value) {\r\n    const error = new Error(`Expects a int64 as a string. Got ${value}`);\r\n\r\n    if (typeof value !== 'string') {\r\n      throw error;\r\n    }\r\n\r\n    let number;\r\n    try {\r\n      number = new BigNumber(value);\r\n    } catch (e) {\r\n      throw error;\r\n    }\r\n\r\n    // Infinity\r\n    if (!number.isFinite()) {\r\n      throw error;\r\n    }\r\n\r\n    // NaN\r\n    if (number.isNaN()) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  static _validateTextValue(value) {\r\n    if (!xdr.Memo.armTypeForArm('text').isValid(value)) {\r\n      throw new Error('Expects string, array or buffer, max 28 bytes');\r\n    }\r\n  }\r\n\r\n  static _validateHashValue(value) {\r\n    const error = new Error(\r\n      `Expects a 32 byte hash value or hex encoded string. Got ${value}`\r\n    );\r\n\r\n    if (value === null || typeof value === 'undefined') {\r\n      throw error;\r\n    }\r\n\r\n    let valueBuffer;\r\n    if (typeof value === 'string') {\r\n      if (!/^[0-9A-Fa-f]{64}$/g.test(value)) {\r\n        throw error;\r\n      }\r\n      valueBuffer = Buffer.from(value, 'hex');\r\n    } else if (Buffer.isBuffer(value)) {\r\n      valueBuffer = Buffer.from(value);\r\n    } else {\r\n      throw error;\r\n    }\r\n\r\n    if (!valueBuffer.length || valueBuffer.length !== 32) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an empty memo (`MemoNone`).\r\n   * @returns {Memo}\r\n   */\r\n  static none() {\r\n    return new Memo(MemoNone);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoText` memo.\r\n   * @param {string} text - memo text\r\n   * @returns {Memo}\r\n   */\r\n  static text(text) {\r\n    return new Memo(MemoText, text);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoID` memo.\r\n   * @param {string} id - 64-bit number represented as a string\r\n   * @returns {Memo}\r\n   */\r\n  static id(id) {\r\n    return new Memo(MemoID, id);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoHash` memo.\r\n   * @param {array|string} hash - 32 byte hash or hex encoded string\r\n   * @returns {Memo}\r\n   */\r\n  static hash(hash) {\r\n    return new Memo(MemoHash, hash);\r\n  }\r\n\r\n  /**\r\n   * Creates and returns a `MemoReturn` memo.\r\n   * @param {array|string} hash - 32 byte hash or hex encoded string\r\n   * @returns {Memo}\r\n   */\r\n  static return(hash) {\r\n    return new Memo(MemoReturn, hash);\r\n  }\r\n\r\n  /**\r\n   * Returns XDR memo object.\r\n   * @returns {xdr.Memo}\r\n   */\r\n  toXDRObject() {\r\n    switch (this._type) {\r\n      case MemoNone:\r\n        return xdr.Memo.memoNone();\r\n      case MemoID:\r\n        return xdr.Memo.memoId(UnsignedHyper.fromString(this._value));\r\n      case MemoText:\r\n        return xdr.Memo.memoText(this._value);\r\n      case MemoHash:\r\n        return xdr.Memo.memoHash(this._value);\r\n      case MemoReturn:\r\n        return xdr.Memo.memoReturn(this._value);\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns {@link Memo} from XDR memo object.\r\n   * @param {xdr.Memo} object XDR memo object\r\n   * @returns {Memo}\r\n   */\r\n  static fromXDRObject(object) {\r\n    switch (object.arm()) {\r\n      case 'id':\r\n        return Memo.id(object.value().toString());\r\n      case 'text':\r\n        return Memo.text(object.value());\r\n      case 'hash':\r\n        return Memo.hash(object.value());\r\n      case 'retHash':\r\n        return Memo.return(object.value());\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (typeof object.value() === 'undefined') {\r\n      return Memo.none();\r\n    }\r\n\r\n    throw new Error('Unknown type');\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { Account } from './account';\r\nimport { StrKey } from './strkey';\r\nimport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress,\r\n  encodeMuxedAccount,\r\n  extractBaseAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Represents a muxed account for transactions and operations.\r\n *\r\n * A muxed (or *multiplexed*) account (defined rigorously in\r\n * [CAP-27](https://stellar.org/protocol/cap-27) and briefly in\r\n * [SEP-23](https://stellar.org/protocol/sep-23)) is one that resolves a single\r\n * Stellar `G...`` account to many different underlying IDs.\r\n *\r\n * For example, you may have a single Stellar address for accounting purposes:\r\n *   GA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJVSGZ\r\n *\r\n * Yet would like to use it for 4 different family members:\r\n *   1: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAGZFQ\r\n *   2: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAALIWQ\r\n *   3: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAPYHQ\r\n *   4: MA7QYNF7SOWQ3GLR2BGMZEHXAVIRZA4KVWLTJJFC7MGXUA74P7UJUAAAAAAAAAAAAQLQQ\r\n *\r\n * This object makes it easy to create muxed accounts from regular accounts,\r\n * duplicate them, get/set the underlying IDs, etc. without mucking around with\r\n * the raw XDR.\r\n *\r\n * Because muxed accounts are purely an off-chain convention, they all share the\r\n * sequence number tied to their underlying G... account. Thus, this object\r\n * *requires* an {@link Account} instance to be passed in, so that muxed\r\n * instances of an account can collectively modify the sequence number whenever\r\n * a muxed account is used as the source of a @{link Transaction} with {@link\r\n * TransactionBuilder}.\r\n *\r\n * @constructor\r\n *\r\n * @param {Account}   account - the @{link Account} instance representing the\r\n *                              underlying G... address\r\n * @param {string}    id      - a stringified uint64 value that represents the\r\n *                              ID of the muxed account\r\n *\r\n * @link https://developers.stellar.org/docs/glossary/muxed-accounts/\r\n */\r\nexport class MuxedAccount {\r\n  constructor(baseAccount, id) {\r\n    const accountId = baseAccount.accountId();\r\n    if (!StrKey.isValidEd25519PublicKey(accountId)) {\r\n      throw new Error('accountId is invalid');\r\n    }\r\n\r\n    this.account = baseAccount;\r\n    this._muxedXdr = encodeMuxedAccount(accountId, id);\r\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\r\n    this._id = id;\r\n  }\r\n\r\n  /**\r\n   * Parses an M-address into a MuxedAccount object.\r\n   *\r\n   * @param  {string} mAddress    - an M-address to transform\r\n   * @param  {string} sequenceNum - the sequence number of the underlying {@link\r\n   *     Account}, to use for the underlying base account (@link\r\n   *     MuxedAccount.baseAccount). If you're using the SDK, you can use\r\n   *     `server.loadAccount` to fetch this if you don't know it.\r\n   *\r\n   * @return {MuxedAccount}\r\n   */\r\n  static fromAddress(mAddress, sequenceNum) {\r\n    const muxedAccount = decodeAddressToMuxedAccount(mAddress);\r\n    const gAddress = extractBaseAddress(mAddress);\r\n    const id = muxedAccount.med25519().id().toString();\r\n\r\n    return new MuxedAccount(new Account(gAddress, sequenceNum), id);\r\n  }\r\n\r\n  /**\r\n   * @return {Account} the underlying account object shared among all muxed\r\n   *     accounts with this Stellar address\r\n   */\r\n  baseAccount() {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * @return {string} the M-address representing this account's (G-address, ID)\r\n   */\r\n  accountId() {\r\n    return this._mAddress;\r\n  }\r\n\r\n  id() {\r\n    return this._id;\r\n  }\r\n\r\n  setId(id) {\r\n    if (typeof id !== 'string') {\r\n      throw new Error('id should be a string representing a number (uint64)');\r\n    }\r\n\r\n    this._muxedXdr.med25519().id(xdr.Uint64.fromString(id));\r\n    this._mAddress = encodeMuxedAccountToAddress(this._muxedXdr);\r\n    this._id = id;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Accesses the underlying account's sequence number.\r\n   * @return {string}  strigified sequence number for the underlying account\r\n   */\r\n  sequenceNumber() {\r\n    return this.account.sequenceNumber();\r\n  }\r\n\r\n  /**\r\n   * Increments the underlying account's sequence number by one.\r\n   * @return {void}\r\n   */\r\n  incrementSequenceNumber() {\r\n    return this.account.incrementSequenceNumber();\r\n  }\r\n\r\n  /**\r\n   * @return {xdr.MuxedAccount} the XDR object representing this muxed account's\r\n   *     G-address and uint64 ID\r\n   */\r\n  toXDRObject() {\r\n    return this._muxedXdr;\r\n  }\r\n\r\n  equals(otherMuxedAccount) {\r\n    return this.accountId() === otherMuxedAccount.accountId();\r\n  }\r\n}\r\n","/**\r\n * Contains passphrases for common networks:\r\n * * `Networks.PUBLIC`: `Public Global Stellar Network ; September 2015`\r\n * * `Networks.TESTNET`: `Test SDF Network ; September 2015`\r\n * * `Networks.FUTURENET`: `Test SDF Future Network ; October 2022`\r\n * * `Networks.STANDALONE`: `Standalone Network ; February 2017`\r\n *\r\n * @type {{PUBLIC: string, TESTNET: string, FUTURENET: string, STANDALONE: string }}\r\n */\r\nexport const Networks = {\r\n  PUBLIC: 'Public Global Stellar Network ; September 2015',\r\n  TESTNET: 'Test SDF Network ; September 2015',\r\n  FUTURENET: 'Test SDF Future Network ; October 2022',\r\n  SANDBOX: 'Local Sandbox Stellar Network ; September 2022',\r\n  STANDALONE: 'Standalone Network ; February 2017'\r\n};\r\n","import { XdrLargeInt } from './xdr_large_int';\r\n\r\nexport { Uint128 } from './uint128';\r\nexport { Uint256 } from './uint256';\r\nexport { Int128 } from './int128';\r\nexport { Int256 } from './int256';\r\nexport { ScInt } from './sc_int';\r\nexport { XdrLargeInt };\r\n\r\n/**\r\n * Transforms an opaque {@link xdr.ScVal} into a native bigint, if possible.\r\n *\r\n * If you then want to use this in the abstractions provided by this module,\r\n * you can pass it to the constructor of {@link XdrLargeInt}.\r\n *\r\n * @example\r\n * let scv = contract.call(\"add\", x, y); // assume it returns an xdr.ScVal\r\n * let bigi = scValToBigInt(scv);\r\n *\r\n * new ScInt(bigi);               // if you don't care about types, and\r\n * new XdrLargeInt('i128', bigi); // if you do\r\n *\r\n * @param {xdr.ScVal} scv - the raw XDR value to parse into an integer\r\n * @returns {bigint} the native value of this input value\r\n *\r\n * @throws {TypeError} if the `scv` input value doesn't represent an integer\r\n */\r\nexport function scValToBigInt(scv) {\r\n  const scIntType = XdrLargeInt.getType(scv.switch().name);\r\n\r\n  switch (scv.switch().name) {\r\n    case 'scvU32':\r\n    case 'scvI32':\r\n      return BigInt(scv.value());\r\n\r\n    case 'scvU64':\r\n    case 'scvI64':\r\n      return new XdrLargeInt(scIntType, scv.value()).toBigInt();\r\n\r\n    case 'scvU128':\r\n    case 'scvI128':\r\n      return new XdrLargeInt(scIntType, [\r\n        scv.value().lo(),\r\n        scv.value().hi()\r\n      ]).toBigInt();\r\n\r\n    case 'scvU256':\r\n    case 'scvI256':\r\n      return new XdrLargeInt(scIntType, [\r\n        scv.value().loLo(),\r\n        scv.value().loHi(),\r\n        scv.value().hiLo(),\r\n        scv.value().hiHi()\r\n      ]).toBigInt();\r\n\r\n    default:\r\n      throw TypeError(`expected integer type, got ${scv.switch()}`);\r\n  }\r\n}\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Int128 extends LargeInt {\r\n  /**\r\n   * Construct a signed 128-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  get size() {\r\n    return 128;\r\n  }\r\n}\r\n\r\nInt128.defineIntBoundaries();\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Int256 extends LargeInt {\r\n  /**\r\n   * Construct a signed 256-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return false;\r\n  }\r\n\r\n  get size() {\r\n    return 256;\r\n  }\r\n}\r\n\r\nInt256.defineIntBoundaries();\r\n","import { XdrLargeInt } from './xdr_large_int';\r\n\r\n/**\r\n * Provides an easier way to manipulate large numbers for Stellar operations.\r\n *\r\n * You can instantiate this \"**s**mart **c**ontract integer\" value either from\r\n * bigints, strings, or numbers (whole numbers, or this will throw).\r\n *\r\n * If you need to create a native BigInt from a list of integer \"parts\" (for\r\n * example, you have a series of encoded 32-bit integers that represent a larger\r\n * value), you can use the lower level abstraction {@link XdrLargeInt}. For\r\n * example, you could do `new XdrLargeInt('u128', bytes...).toBigInt()`.\r\n *\r\n * @example\r\n * import { xdr, ScInt, scValToBigInt } from \"@stellar/stellar-base\";\r\n *\r\n * // You have an ScVal from a contract and want to parse it into JS native.\r\n * const value = xdr.ScVal.fromXDR(someXdr, \"base64\");\r\n * const bigi = scValToBigInt(value); // grab it as a BigInt\r\n * let sci = new ScInt(bigi);\r\n *\r\n * sci.toNumber(); // gives native JS type (w/ size check)\r\n * sci.toBigInt(); // gives the native BigInt value\r\n * sci.toU64();    // gives ScValType-specific XDR constructs (with size checks)\r\n *\r\n * // You have a number and want to shove it into a contract.\r\n * sci = ScInt(0xdeadcafebabe);\r\n * sci.toBigInt() // returns 244838016400062n\r\n * sci.toNumber() // throws: too large\r\n *\r\n * // Pass any to e.g. a Contract.call(), conversion happens automatically\r\n * // regardless of the initial type.\r\n * const scValU128 = sci.toU128();\r\n * const scValI256 = sci.toI256();\r\n * const scValU64  = sci.toU64();\r\n *\r\n * // Lots of ways to initialize:\r\n * ScInt(\"123456789123456789\")\r\n * ScInt(123456789123456789n);\r\n * ScInt(1n << 140n);\r\n * ScInt(-42);\r\n * ScInt(scValToBigInt(scValU128)); // from above\r\n *\r\n * // If you know the type ahead of time (accessing `.raw` is faster than\r\n * // conversions), you can specify the type directly (otherwise, it's\r\n * // interpreted from the numbers you pass in):\r\n * const i = ScInt(123456789n, { type: \"u256\" });\r\n *\r\n * // For example, you can use the underlying `sdk.U256` and convert it to an\r\n * // `xdr.ScVal` directly like so:\r\n * const scv = new xdr.ScVal.scvU256(i.raw);\r\n *\r\n * // Or reinterpret it as a different type (size permitting):\r\n * const scv = i.toI64();\r\n *\r\n * @param {number|bigint|string} value - a single, integer-like value which will\r\n *    be interpreted in the smallest appropriate XDR type supported by Stellar\r\n *    (64, 128, or 256 bit integer values). signed values are supported, though\r\n *    they are sanity-checked against `opts.type`. if you need 32-bit values,\r\n *    you can construct them directly without needing this wrapper, e.g.\r\n *    `xdr.ScVal.scvU32(1234)`.\r\n *\r\n * @param {object}  [opts] - an optional object controlling optional parameters\r\n * @param {string}  [opts.type] - force a specific data type. the type choices\r\n *    are: 'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the\r\n *    smallest one that fits the `value`)\r\n *\r\n * @throws {RangeError} if the `value` is invalid (e.g. floating point), too\r\n *    large (i.e. exceeds a 256-bit value), or doesn't fit in the `opts.type`\r\n * @throws {TypeError} on missing parameters, or if the \"signedness\" of `opts`\r\n *    doesn't match input `value`, e.g. passing `{type: 'u64'}` yet passing -1n\r\n * @throws {SyntaxError} if a string `value` can't be parsed as a big integer\r\n */\r\nexport class ScInt extends XdrLargeInt {\r\n  constructor(value, opts) {\r\n    const signed = value < 0;\r\n    let type = opts?.type ?? '';\r\n    if (type.startsWith('u') && signed) {\r\n      throw TypeError(`specified type ${opts.type} yet negative (${value})`);\r\n    }\r\n\r\n    // If unspecified, we make a best guess at the type based on the bit length\r\n    // of the value, treating 64 as a minimum and 256 as a maximum.\r\n    if (type === '') {\r\n      type = signed ? 'i' : 'u';\r\n      const bitlen = nearestBigIntSize(value);\r\n\r\n      switch (bitlen) {\r\n        case 64:\r\n        case 128:\r\n        case 256:\r\n          type += bitlen.toString();\r\n          break;\r\n\r\n        default:\r\n          throw RangeError(\r\n            `expected 64/128/256 bits for input (${value}), got ${bitlen}`\r\n          );\r\n      }\r\n    }\r\n\r\n    super(type, value);\r\n  }\r\n}\r\n\r\nfunction nearestBigIntSize(bigI) {\r\n  // Note: Even though BigInt.toString(2) includes the negative sign for\r\n  // negative values (???), the following is still accurate, because the\r\n  // negative sign would be represented by a sign bit.\r\n  const bitlen = bigI.toString(2).length;\r\n  return [64, 128, 256].find((len) => bitlen <= len) ?? bitlen;\r\n}\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Uint128 extends LargeInt {\r\n  /**\r\n   * Construct an unsigned 128-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  get size() {\r\n    return 128;\r\n  }\r\n}\r\n\r\nUint128.defineIntBoundaries();\r\n","import { LargeInt } from '@stellar/js-xdr';\r\n\r\nexport class Uint256 extends LargeInt {\r\n  /**\r\n   * Construct an unsigned 256-bit integer that can be XDR-encoded.\r\n   *\r\n   * @param  {Array<number|bigint|string>}  args - one or more slices to encode\r\n   *     in big-endian format (i.e. earlier elements are higher bits)\r\n   */\r\n  constructor(...args) {\r\n    super(args);\r\n  }\r\n\r\n  get unsigned() {\r\n    return true;\r\n  }\r\n\r\n  get size() {\r\n    return 256;\r\n  }\r\n}\r\n\r\nUint256.defineIntBoundaries();\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\">>\"]}] */\r\nimport { Hyper, UnsignedHyper } from '@stellar/js-xdr';\r\n\r\nimport { Uint128 } from './uint128';\r\nimport { Uint256 } from './uint256';\r\nimport { Int128 } from './int128';\r\nimport { Int256 } from './int256';\r\n\r\nimport xdr from '../xdr';\r\n\r\n/**\r\n * A wrapper class to represent large XDR-encodable integers.\r\n *\r\n * This operates at a lower level than {@link ScInt} by forcing you to specify\r\n * the type / width / size in bits of the integer you're targeting, regardless\r\n * of the input value(s) you provide.\r\n *\r\n * @param {string}  type - force a specific data type. the type choices are:\r\n *    'i64', 'u64', 'i128', 'u128', 'i256', and 'u256' (default: the smallest\r\n *    one that fits the `value`) (see {@link XdrLargeInt.isType})\r\n * @param {number|bigint|string|Array<number|bigint|string>} values   a list of\r\n *    integer-like values interpreted in big-endian order\r\n */\r\nexport class XdrLargeInt {\r\n  /** @type {xdr.LargeInt} */\r\n  int; // child class of a jsXdr.LargeInt\r\n\r\n  /** @type {string} */\r\n  type;\r\n\r\n  constructor(type, values) {\r\n    if (!(values instanceof Array)) {\r\n      values = [values];\r\n    }\r\n\r\n    // normalize values to one type\r\n    values = values.map((i) => {\r\n      // micro-optimization to no-op on the likeliest input value:\r\n      if (typeof i === 'bigint') {\r\n        return i;\r\n      }\r\n      if (i instanceof XdrLargeInt) {\r\n        return i.toBigInt();\r\n      }\r\n      return BigInt(i);\r\n    });\r\n\r\n    switch (type) {\r\n      case 'i64':\r\n        this.int = new Hyper(values);\r\n        break;\r\n      case 'i128':\r\n        this.int = new Int128(values);\r\n        break;\r\n      case 'i256':\r\n        this.int = new Int256(values);\r\n        break;\r\n      case 'u64':\r\n        this.int = new UnsignedHyper(values);\r\n        break;\r\n      case 'u128':\r\n        this.int = new Uint128(values);\r\n        break;\r\n      case 'u256':\r\n        this.int = new Uint256(values);\r\n        break;\r\n      default:\r\n        throw TypeError(`invalid type: ${type}`);\r\n    }\r\n\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * @returns {number}\r\n   * @throws {RangeError} if the value can't fit into a Number\r\n   */\r\n  toNumber() {\r\n    const bi = this.int.toBigInt();\r\n    if (bi > Number.MAX_SAFE_INTEGER || bi < Number.MIN_SAFE_INTEGER) {\r\n      throw RangeError(\r\n        `value ${bi} not in range for Number ` +\r\n          `[${Number.MAX_SAFE_INTEGER}, ${Number.MIN_SAFE_INTEGER}]`\r\n      );\r\n    }\r\n\r\n    return Number(bi);\r\n  }\r\n\r\n  /** @returns {bigint} */\r\n  toBigInt() {\r\n    return this.int.toBigInt();\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I64` */\r\n  toI64() {\r\n    this._sizeCheck(64);\r\n    const v = this.toBigInt();\r\n    if (BigInt.asIntN(64, v) !== v) {\r\n      throw RangeError(`value too large for i64: ${v}`);\r\n    }\r\n\r\n    return xdr.ScVal.scvI64(new xdr.Int64(v));\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U64` */\r\n  toU64() {\r\n    this._sizeCheck(64);\r\n    return xdr.ScVal.scvU64(\r\n      new xdr.Uint64(BigInt.asUintN(64, this.toBigInt())) // reiterpret as unsigned\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = I128`\r\n   * @throws {RangeError} if the value cannot fit in 128 bits\r\n   */\r\n  toI128() {\r\n    this._sizeCheck(128);\r\n\r\n    const v = this.int.toBigInt();\r\n    const hi64 = BigInt.asIntN(64, v >> 64n); // encode top 64 w/ sign bit\r\n    const lo64 = BigInt.asUintN(64, v); // grab btm 64, encode sign\r\n\r\n    return xdr.ScVal.scvI128(\r\n      new xdr.Int128Parts({\r\n        hi: new xdr.Int64(hi64),\r\n        lo: new xdr.Uint64(lo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.ScVal} the integer encoded with `ScValType = U128`\r\n   * @throws {RangeError} if the value cannot fit in 128 bits\r\n   */\r\n  toU128() {\r\n    this._sizeCheck(128);\r\n    const v = this.int.toBigInt();\r\n\r\n    return xdr.ScVal.scvU128(\r\n      new xdr.UInt128Parts({\r\n        hi: new xdr.Uint64(BigInt.asUintN(64, v >> 64n)),\r\n        lo: new xdr.Uint64(BigInt.asUintN(64, v))\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = I256` */\r\n  toI256() {\r\n    const v = this.int.toBigInt();\r\n    const hiHi64 = BigInt.asIntN(64, v >> 192n); // keep sign bit\r\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\r\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\r\n    const loLo64 = BigInt.asUintN(64, v);\r\n\r\n    return xdr.ScVal.scvI256(\r\n      new xdr.Int256Parts({\r\n        hiHi: new xdr.Int64(hiHi64),\r\n        hiLo: new xdr.Uint64(hiLo64),\r\n        loHi: new xdr.Uint64(loHi64),\r\n        loLo: new xdr.Uint64(loLo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the integer encoded with `ScValType = U256` */\r\n  toU256() {\r\n    const v = this.int.toBigInt();\r\n    const hiHi64 = BigInt.asUintN(64, v >> 192n); // encode sign bit\r\n    const hiLo64 = BigInt.asUintN(64, v >> 128n);\r\n    const loHi64 = BigInt.asUintN(64, v >> 64n);\r\n    const loLo64 = BigInt.asUintN(64, v);\r\n\r\n    return xdr.ScVal.scvU256(\r\n      new xdr.UInt256Parts({\r\n        hiHi: new xdr.Uint64(hiHi64),\r\n        hiLo: new xdr.Uint64(hiLo64),\r\n        loHi: new xdr.Uint64(loHi64),\r\n        loLo: new xdr.Uint64(loLo64)\r\n      })\r\n    );\r\n  }\r\n\r\n  /** @returns {xdr.ScVal} the smallest interpretation of the stored value */\r\n  toScVal() {\r\n    switch (this.type) {\r\n      case 'i64':\r\n        return this.toI64();\r\n      case 'i128':\r\n        return this.toI128();\r\n      case 'i256':\r\n        return this.toI256();\r\n      case 'u64':\r\n        return this.toU64();\r\n      case 'u128':\r\n        return this.toU128();\r\n      case 'u256':\r\n        return this.toU256();\r\n      default:\r\n        throw TypeError(`invalid type: ${this.type}`);\r\n    }\r\n  }\r\n\r\n  valueOf() {\r\n    return this.int.valueOf();\r\n  }\r\n\r\n  toString() {\r\n    return this.int.toString();\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      value: this.toBigInt().toString(),\r\n      type: this.type\r\n    };\r\n  }\r\n\r\n  _sizeCheck(bits) {\r\n    if (this.int.size > bits) {\r\n      throw RangeError(`value too large for ${bits} bits (${this.type})`);\r\n    }\r\n  }\r\n\r\n  static isType(type) {\r\n    switch (type) {\r\n      case 'i64':\r\n      case 'i128':\r\n      case 'i256':\r\n      case 'u64':\r\n      case 'u128':\r\n      case 'u256':\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert the raw `ScValType` string (e.g. 'scvI128', generated by the XDR)\r\n   * to a type description for {@link XdrLargeInt} construction (e.g. 'i128')\r\n   *\r\n   * @param {string} scvType  the `xdr.ScValType` as a string\r\n   * @returns {string} a suitable equivalent type to construct this object\r\n   */\r\n  static getType(scvType) {\r\n    return scvType.slice(3).toLowerCase();\r\n  }\r\n}\r\n","/* eslint-disable no-bitwise */\r\n\r\nimport { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\nimport { trimEnd } from './util/util';\r\nimport { best_r } from './util/continued_fraction';\r\nimport { Asset } from './asset';\r\nimport { LiquidityPoolAsset } from './liquidity_pool_asset';\r\nimport { Claimant } from './claimant';\r\nimport { StrKey } from './strkey';\r\nimport { LiquidityPoolId } from './liquidity_pool_id';\r\nimport xdr from './xdr';\r\nimport * as ops from './operations';\r\nimport {\r\n  decodeAddressToMuxedAccount,\r\n  encodeMuxedAccountToAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\nconst ONE = 10000000;\r\nconst MAX_INT64 = '9223372036854775807';\r\n\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, requires the issuing\r\n * account to give other accounts permission before they can hold the issuing\r\n * account’s credit.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthRequiredFlag = 1 << 0;\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, allows the issuing\r\n * account to revoke its credit held by other accounts.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthRevocableFlag = 1 << 1;\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, then none of the\r\n * authorization flags can be set and the account can never be deleted.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthImmutableFlag = 1 << 2;\r\n\r\n/**\r\n * When set using `{@link Operation.setOptions}` option, then any trustlines\r\n * created by this account can have a ClawbackOp operation submitted for the\r\n * corresponding asset.\r\n *\r\n * @constant\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport const AuthClawbackEnabledFlag = 1 << 3;\r\n\r\n/**\r\n * `Operation` class represents\r\n * [operations](https://developers.stellar.org/docs/glossary/operations/) in\r\n * Stellar network.\r\n *\r\n * Use one of static methods to create operations:\r\n * * `{@link Operation.createAccount}`\r\n * * `{@link Operation.payment}`\r\n * * `{@link Operation.pathPaymentStrictReceive}`\r\n * * `{@link Operation.pathPaymentStrictSend}`\r\n * * `{@link Operation.manageSellOffer}`\r\n * * `{@link Operation.manageBuyOffer}`\r\n * * `{@link Operation.createPassiveSellOffer}`\r\n * * `{@link Operation.setOptions}`\r\n * * `{@link Operation.changeTrust}`\r\n * * `{@link Operation.allowTrust}`\r\n * * `{@link Operation.accountMerge}`\r\n * * `{@link Operation.inflation}`\r\n * * `{@link Operation.manageData}`\r\n * * `{@link Operation.bumpSequence}`\r\n * * `{@link Operation.createClaimableBalance}`\r\n * * `{@link Operation.claimClaimableBalance}`\r\n * * `{@link Operation.beginSponsoringFutureReserves}`\r\n * * `{@link Operation.endSponsoringFutureReserves}`\r\n * * `{@link Operation.revokeAccountSponsorship}`\r\n * * `{@link Operation.revokeTrustlineSponsorship}`\r\n * * `{@link Operation.revokeOfferSponsorship}`\r\n * * `{@link Operation.revokeDataSponsorship}`\r\n * * `{@link Operation.revokeClaimableBalanceSponsorship}`\r\n * * `{@link Operation.revokeLiquidityPoolSponsorship}`\r\n * * `{@link Operation.revokeSignerSponsorship}`\r\n * * `{@link Operation.clawback}`\r\n * * `{@link Operation.clawbackClaimableBalance}`\r\n * * `{@link Operation.setTrustLineFlags}`\r\n * * `{@link Operation.liquidityPoolDeposit}`\r\n * * `{@link Operation.liquidityPoolWithdraw}`\r\n * * `{@link Operation.invokeHostFunction}`\r\n * * `{@link Operation.extendFootprintTtlOp}`\r\n * * `{@link Operation.restoreFootprint}`\r\n *\r\n * @class Operation\r\n */\r\nexport class Operation {\r\n  static setSourceAccount(opAttributes, opts) {\r\n    if (opts.source) {\r\n      try {\r\n        opAttributes.sourceAccount = decodeAddressToMuxedAccount(opts.source);\r\n      } catch (e) {\r\n        throw new Error('Source address is invalid');\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deconstructs the raw XDR operation object into the structured object that\r\n   * was used to create the operation (i.e. the `opts` parameter to most ops).\r\n   *\r\n   * @param {xdr.Operation}   operation - An XDR Operation.\r\n   * @return {Operation}\r\n   */\r\n  static fromXDRObject(operation) {\r\n    const result = {};\r\n    if (operation.sourceAccount()) {\r\n      result.source = encodeMuxedAccountToAddress(operation.sourceAccount());\r\n    }\r\n\r\n    const attrs = operation.body().value();\r\n    const operationName = operation.body().switch().name;\r\n\r\n    switch (operationName) {\r\n      case 'createAccount': {\r\n        result.type = 'createAccount';\r\n        result.destination = accountIdtoAddress(attrs.destination());\r\n        result.startingBalance = this._fromXDRAmount(attrs.startingBalance());\r\n        break;\r\n      }\r\n      case 'payment': {\r\n        result.type = 'payment';\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        break;\r\n      }\r\n      case 'pathPaymentStrictReceive': {\r\n        result.type = 'pathPaymentStrictReceive';\r\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\r\n        result.sendMax = this._fromXDRAmount(attrs.sendMax());\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\r\n        result.destAmount = this._fromXDRAmount(attrs.destAmount());\r\n        result.path = [];\r\n\r\n        const path = attrs.path();\r\n\r\n        // note that Object.values isn't supported by node 6!\r\n        Object.keys(path).forEach((pathKey) => {\r\n          result.path.push(Asset.fromOperation(path[pathKey]));\r\n        });\r\n        break;\r\n      }\r\n      case 'pathPaymentStrictSend': {\r\n        result.type = 'pathPaymentStrictSend';\r\n        result.sendAsset = Asset.fromOperation(attrs.sendAsset());\r\n        result.sendAmount = this._fromXDRAmount(attrs.sendAmount());\r\n        result.destination = encodeMuxedAccountToAddress(attrs.destination());\r\n        result.destAsset = Asset.fromOperation(attrs.destAsset());\r\n        result.destMin = this._fromXDRAmount(attrs.destMin());\r\n        result.path = [];\r\n\r\n        const path = attrs.path();\r\n\r\n        // note that Object.values isn't supported by node 6!\r\n        Object.keys(path).forEach((pathKey) => {\r\n          result.path.push(Asset.fromOperation(path[pathKey]));\r\n        });\r\n        break;\r\n      }\r\n      case 'changeTrust': {\r\n        result.type = 'changeTrust';\r\n        switch (attrs.line().switch()) {\r\n          case xdr.AssetType.assetTypePoolShare():\r\n            result.line = LiquidityPoolAsset.fromOperation(attrs.line());\r\n            break;\r\n          default:\r\n            result.line = Asset.fromOperation(attrs.line());\r\n            break;\r\n        }\r\n        result.limit = this._fromXDRAmount(attrs.limit());\r\n        break;\r\n      }\r\n      case 'allowTrust': {\r\n        result.type = 'allowTrust';\r\n        result.trustor = accountIdtoAddress(attrs.trustor());\r\n        result.assetCode = attrs.asset().value().toString();\r\n        result.assetCode = trimEnd(result.assetCode, '\\0');\r\n        result.authorize = attrs.authorize();\r\n        break;\r\n      }\r\n      case 'setOptions': {\r\n        result.type = 'setOptions';\r\n        if (attrs.inflationDest()) {\r\n          result.inflationDest = accountIdtoAddress(attrs.inflationDest());\r\n        }\r\n\r\n        result.clearFlags = attrs.clearFlags();\r\n        result.setFlags = attrs.setFlags();\r\n        result.masterWeight = attrs.masterWeight();\r\n        result.lowThreshold = attrs.lowThreshold();\r\n        result.medThreshold = attrs.medThreshold();\r\n        result.highThreshold = attrs.highThreshold();\r\n        // home_domain is checked by iscntrl in stellar-core\r\n        result.homeDomain =\r\n          attrs.homeDomain() !== undefined\r\n            ? attrs.homeDomain().toString('ascii')\r\n            : undefined;\r\n\r\n        if (attrs.signer()) {\r\n          const signer = {};\r\n          const arm = attrs.signer().key().arm();\r\n          if (arm === 'ed25519') {\r\n            signer.ed25519PublicKey = accountIdtoAddress(attrs.signer().key());\r\n          } else if (arm === 'preAuthTx') {\r\n            signer.preAuthTx = attrs.signer().key().preAuthTx();\r\n          } else if (arm === 'hashX') {\r\n            signer.sha256Hash = attrs.signer().key().hashX();\r\n          } else if (arm === 'ed25519SignedPayload') {\r\n            const signedPayload = attrs.signer().key().ed25519SignedPayload();\r\n            signer.ed25519SignedPayload = StrKey.encodeSignedPayload(\r\n              signedPayload.toXDR()\r\n            );\r\n          }\r\n\r\n          signer.weight = attrs.signer().weight();\r\n          result.signer = signer;\r\n        }\r\n        break;\r\n      }\r\n      // the next case intentionally falls through!\r\n      case 'manageOffer':\r\n      case 'manageSellOffer': {\r\n        result.type = 'manageSellOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        result.offerId = attrs.offerId().toString();\r\n        break;\r\n      }\r\n      case 'manageBuyOffer': {\r\n        result.type = 'manageBuyOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.buyAmount = this._fromXDRAmount(attrs.buyAmount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        result.offerId = attrs.offerId().toString();\r\n        break;\r\n      }\r\n      // the next case intentionally falls through!\r\n      case 'createPassiveOffer':\r\n      case 'createPassiveSellOffer': {\r\n        result.type = 'createPassiveSellOffer';\r\n        result.selling = Asset.fromOperation(attrs.selling());\r\n        result.buying = Asset.fromOperation(attrs.buying());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.price = this._fromXDRPrice(attrs.price());\r\n        break;\r\n      }\r\n      case 'accountMerge': {\r\n        result.type = 'accountMerge';\r\n        result.destination = encodeMuxedAccountToAddress(attrs);\r\n        break;\r\n      }\r\n      case 'manageData': {\r\n        result.type = 'manageData';\r\n        // manage_data.name is checked by iscntrl in stellar-core\r\n        result.name = attrs.dataName().toString('ascii');\r\n        result.value = attrs.dataValue();\r\n        break;\r\n      }\r\n      case 'inflation': {\r\n        result.type = 'inflation';\r\n        break;\r\n      }\r\n      case 'bumpSequence': {\r\n        result.type = 'bumpSequence';\r\n        result.bumpTo = attrs.bumpTo().toString();\r\n        break;\r\n      }\r\n      case 'createClaimableBalance': {\r\n        result.type = 'createClaimableBalance';\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.claimants = [];\r\n        attrs.claimants().forEach((claimant) => {\r\n          result.claimants.push(Claimant.fromXDR(claimant));\r\n        });\r\n        break;\r\n      }\r\n      case 'claimClaimableBalance': {\r\n        result.type = 'claimClaimableBalance';\r\n        result.balanceId = attrs.toXDR('hex');\r\n        break;\r\n      }\r\n      case 'beginSponsoringFutureReserves': {\r\n        result.type = 'beginSponsoringFutureReserves';\r\n        result.sponsoredId = accountIdtoAddress(attrs.sponsoredId());\r\n        break;\r\n      }\r\n      case 'endSponsoringFutureReserves': {\r\n        result.type = 'endSponsoringFutureReserves';\r\n        break;\r\n      }\r\n      case 'revokeSponsorship': {\r\n        extractRevokeSponshipDetails(attrs, result);\r\n        break;\r\n      }\r\n      case 'clawback': {\r\n        result.type = 'clawback';\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.from = encodeMuxedAccountToAddress(attrs.from());\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        break;\r\n      }\r\n      case 'clawbackClaimableBalance': {\r\n        result.type = 'clawbackClaimableBalance';\r\n        result.balanceId = attrs.toXDR('hex');\r\n        break;\r\n      }\r\n      case 'setTrustLineFlags': {\r\n        result.type = 'setTrustLineFlags';\r\n        result.asset = Asset.fromOperation(attrs.asset());\r\n        result.trustor = accountIdtoAddress(attrs.trustor());\r\n\r\n        // Convert from the integer-bitwised flag into a sensible object that\r\n        // indicates true/false for each flag that's on/off.\r\n        const clears = attrs.clearFlags();\r\n        const sets = attrs.setFlags();\r\n\r\n        const mapping = {\r\n          authorized: xdr.TrustLineFlags.authorizedFlag(),\r\n          authorizedToMaintainLiabilities:\r\n            xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\r\n          clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\r\n        };\r\n\r\n        const getFlagValue = (key) => {\r\n          const bit = mapping[key].value;\r\n          if (sets & bit) {\r\n            return true;\r\n          }\r\n          if (clears & bit) {\r\n            return false;\r\n          }\r\n          return undefined;\r\n        };\r\n\r\n        result.flags = {};\r\n        Object.keys(mapping).forEach((flagName) => {\r\n          result.flags[flagName] = getFlagValue(flagName);\r\n        });\r\n\r\n        break;\r\n      }\r\n      case 'liquidityPoolDeposit': {\r\n        result.type = 'liquidityPoolDeposit';\r\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\r\n        result.maxAmountA = this._fromXDRAmount(attrs.maxAmountA());\r\n        result.maxAmountB = this._fromXDRAmount(attrs.maxAmountB());\r\n        result.minPrice = this._fromXDRPrice(attrs.minPrice());\r\n        result.maxPrice = this._fromXDRPrice(attrs.maxPrice());\r\n        break;\r\n      }\r\n      case 'liquidityPoolWithdraw': {\r\n        result.type = 'liquidityPoolWithdraw';\r\n        result.liquidityPoolId = attrs.liquidityPoolId().toString('hex');\r\n        result.amount = this._fromXDRAmount(attrs.amount());\r\n        result.minAmountA = this._fromXDRAmount(attrs.minAmountA());\r\n        result.minAmountB = this._fromXDRAmount(attrs.minAmountB());\r\n        break;\r\n      }\r\n      case 'invokeHostFunction': {\r\n        result.type = 'invokeHostFunction';\r\n        result.func = attrs.hostFunction();\r\n        result.auth = attrs.auth() ?? [];\r\n        break;\r\n      }\r\n      case 'extendFootprintTtl': {\r\n        result.type = 'extendFootprintTtl';\r\n        result.extendTo = attrs.extendTo();\r\n        break;\r\n      }\r\n      case 'restoreFootprint': {\r\n        result.type = 'restoreFootprint';\r\n        break;\r\n      }\r\n      default: {\r\n        throw new Error(`Unknown operation: ${operationName}`);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Validates that a given amount is possible for a Stellar asset.\r\n   *\r\n   * Specifically, this means that the amount is well, a valid number, but also\r\n   * that it is within the int64 range and has no more than 7 decimal levels of\r\n   * precision.\r\n   *\r\n   * Note that while smart contracts allow larger amounts, this is oriented\r\n   * towards validating the standard Stellar operations.\r\n   *\r\n   * @param {string}  value       the amount to validate\r\n   * @param {boolean} allowZero   optionally, whether or not zero is valid (default: no)\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  static isValidAmount(value, allowZero = false) {\r\n    if (typeof value !== 'string') {\r\n      return false;\r\n    }\r\n\r\n    let amount;\r\n    try {\r\n      amount = new BigNumber(value);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      // == 0\r\n      (!allowZero && amount.isZero()) ||\r\n      // < 0\r\n      amount.isNegative() ||\r\n      // > Max value\r\n      amount.times(ONE).gt(new BigNumber(MAX_INT64).toString()) ||\r\n      // Decimal places (max 7)\r\n      amount.decimalPlaces() > 7 ||\r\n      // NaN or Infinity\r\n      amount.isNaN() ||\r\n      !amount.isFinite()\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  static constructAmountRequirementsError(arg) {\r\n    return `${arg} argument must be of type String, represent a positive number and have at most 7 digits after the decimal`;\r\n  }\r\n\r\n  /**\r\n   * Returns value converted to uint32 value or undefined.\r\n   * If `value` is not `Number`, `String` or `Undefined` then throws an error.\r\n   * Used in {@link Operation.setOptions}.\r\n   * @private\r\n   * @param {string} name Name of the property (used in error message only)\r\n   * @param {*} value Value to check\r\n   * @param {function(value, name)} isValidFunction Function to check other constraints (the argument will be a `Number`)\r\n   * @returns {undefined|Number}\r\n   */\r\n  static _checkUnsignedIntValue(name, value, isValidFunction = null) {\r\n    if (typeof value === 'undefined') {\r\n      return undefined;\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n      value = parseFloat(value);\r\n    }\r\n\r\n    switch (true) {\r\n      case typeof value !== 'number' ||\r\n        !Number.isFinite(value) ||\r\n        value % 1 !== 0:\r\n        throw new Error(`${name} value is invalid`);\r\n      case value < 0:\r\n        throw new Error(`${name} value must be unsigned`);\r\n      case !isValidFunction ||\r\n        (isValidFunction && isValidFunction(value, name)):\r\n        return value;\r\n      default:\r\n        throw new Error(`${name} value is invalid`);\r\n    }\r\n  }\r\n  /**\r\n   * @private\r\n   * @param {string|BigNumber} value Value\r\n   * @returns {Hyper} XDR amount\r\n   */\r\n  static _toXDRAmount(value) {\r\n    const amount = new BigNumber(value).times(ONE);\r\n    return Hyper.fromString(amount.toString());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string|BigNumber} value XDR amount\r\n   * @returns {BigNumber} Number\r\n   */\r\n  static _fromXDRAmount(value) {\r\n    return new BigNumber(value).div(ONE).toFixed(7);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {object} price Price object\r\n   * @param {function} price.n numerator function that returns a value\r\n   * @param {function} price.d denominator function that returns a value\r\n   * @returns {BigNumber} Big string\r\n   */\r\n  static _fromXDRPrice(price) {\r\n    const n = new BigNumber(price.n());\r\n    return n.div(new BigNumber(price.d())).toString();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {object} price Price object\r\n   * @param {function} price.n numerator function that returns a value\r\n   * @param {function} price.d denominator function that returns a value\r\n   * @returns {object} XDR price object\r\n   */\r\n  static _toXDRPrice(price) {\r\n    let xdrObject;\r\n    if (price.n && price.d) {\r\n      xdrObject = new xdr.Price(price);\r\n    } else {\r\n      const approx = best_r(price);\r\n      xdrObject = new xdr.Price({\r\n        n: parseInt(approx[0], 10),\r\n        d: parseInt(approx[1], 10)\r\n      });\r\n    }\r\n\r\n    if (xdrObject.n() < 0 || xdrObject.d() < 0) {\r\n      throw new Error('price must be positive');\r\n    }\r\n\r\n    return xdrObject;\r\n  }\r\n}\r\n\r\nfunction extractRevokeSponshipDetails(attrs, result) {\r\n  switch (attrs.switch().name) {\r\n    case 'revokeSponsorshipLedgerEntry': {\r\n      const ledgerKey = attrs.ledgerKey();\r\n      switch (ledgerKey.switch().name) {\r\n        case xdr.LedgerEntryType.account().name: {\r\n          result.type = 'revokeAccountSponsorship';\r\n          result.account = accountIdtoAddress(ledgerKey.account().accountId());\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.trustline().name: {\r\n          result.type = 'revokeTrustlineSponsorship';\r\n          result.account = accountIdtoAddress(\r\n            ledgerKey.trustLine().accountId()\r\n          );\r\n          const xdrAsset = ledgerKey.trustLine().asset();\r\n          switch (xdrAsset.switch()) {\r\n            case xdr.AssetType.assetTypePoolShare():\r\n              result.asset = LiquidityPoolId.fromOperation(xdrAsset);\r\n              break;\r\n            default:\r\n              result.asset = Asset.fromOperation(xdrAsset);\r\n              break;\r\n          }\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.offer().name: {\r\n          result.type = 'revokeOfferSponsorship';\r\n          result.seller = accountIdtoAddress(ledgerKey.offer().sellerId());\r\n          result.offerId = ledgerKey.offer().offerId().toString();\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.data().name: {\r\n          result.type = 'revokeDataSponsorship';\r\n          result.account = accountIdtoAddress(ledgerKey.data().accountId());\r\n          result.name = ledgerKey.data().dataName().toString('ascii');\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.claimableBalance().name: {\r\n          result.type = 'revokeClaimableBalanceSponsorship';\r\n          result.balanceId = ledgerKey\r\n            .claimableBalance()\r\n            .balanceId()\r\n            .toXDR('hex');\r\n          break;\r\n        }\r\n        case xdr.LedgerEntryType.liquidityPool().name: {\r\n          result.type = 'revokeLiquidityPoolSponsorship';\r\n          result.liquidityPoolId = ledgerKey\r\n            .liquidityPool()\r\n            .liquidityPoolId()\r\n            .toString('hex');\r\n          break;\r\n        }\r\n        default: {\r\n          throw new Error(`Unknown ledgerKey: ${attrs.switch().name}`);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'revokeSponsorshipSigner': {\r\n      result.type = 'revokeSignerSponsorship';\r\n      result.account = accountIdtoAddress(attrs.signer().accountId());\r\n      result.signer = convertXDRSignerKeyToObject(attrs.signer().signerKey());\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error(`Unknown revokeSponsorship: ${attrs.switch().name}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertXDRSignerKeyToObject(signerKey) {\r\n  const attrs = {};\r\n  switch (signerKey.switch().name) {\r\n    case xdr.SignerKeyType.signerKeyTypeEd25519().name: {\r\n      attrs.ed25519PublicKey = StrKey.encodeEd25519PublicKey(\r\n        signerKey.ed25519()\r\n      );\r\n      break;\r\n    }\r\n    case xdr.SignerKeyType.signerKeyTypePreAuthTx().name: {\r\n      attrs.preAuthTx = signerKey.preAuthTx().toString('hex');\r\n      break;\r\n    }\r\n    case xdr.SignerKeyType.signerKeyTypeHashX().name: {\r\n      attrs.sha256Hash = signerKey.hashX().toString('hex');\r\n      break;\r\n    }\r\n    default: {\r\n      throw new Error(`Unknown signerKey: ${signerKey.switch().name}`);\r\n    }\r\n  }\r\n\r\n  return attrs;\r\n}\r\n\r\nfunction accountIdtoAddress(accountId) {\r\n  return StrKey.encodeEd25519PublicKey(accountId.ed25519());\r\n}\r\n\r\n// Attach all imported operations as static methods on the Operation class\r\nOperation.accountMerge = ops.accountMerge;\r\nOperation.allowTrust = ops.allowTrust;\r\nOperation.bumpSequence = ops.bumpSequence;\r\nOperation.changeTrust = ops.changeTrust;\r\nOperation.createAccount = ops.createAccount;\r\nOperation.createClaimableBalance = ops.createClaimableBalance;\r\nOperation.claimClaimableBalance = ops.claimClaimableBalance;\r\nOperation.clawbackClaimableBalance = ops.clawbackClaimableBalance;\r\nOperation.createPassiveSellOffer = ops.createPassiveSellOffer;\r\nOperation.inflation = ops.inflation;\r\nOperation.manageData = ops.manageData;\r\nOperation.manageSellOffer = ops.manageSellOffer;\r\nOperation.manageBuyOffer = ops.manageBuyOffer;\r\nOperation.pathPaymentStrictReceive = ops.pathPaymentStrictReceive;\r\nOperation.pathPaymentStrictSend = ops.pathPaymentStrictSend;\r\nOperation.payment = ops.payment;\r\nOperation.setOptions = ops.setOptions;\r\nOperation.beginSponsoringFutureReserves = ops.beginSponsoringFutureReserves;\r\nOperation.endSponsoringFutureReserves = ops.endSponsoringFutureReserves;\r\nOperation.revokeAccountSponsorship = ops.revokeAccountSponsorship;\r\nOperation.revokeTrustlineSponsorship = ops.revokeTrustlineSponsorship;\r\nOperation.revokeOfferSponsorship = ops.revokeOfferSponsorship;\r\nOperation.revokeDataSponsorship = ops.revokeDataSponsorship;\r\nOperation.revokeClaimableBalanceSponsorship =\r\n  ops.revokeClaimableBalanceSponsorship;\r\nOperation.revokeLiquidityPoolSponsorship = ops.revokeLiquidityPoolSponsorship;\r\nOperation.revokeSignerSponsorship = ops.revokeSignerSponsorship;\r\nOperation.clawback = ops.clawback;\r\nOperation.setTrustLineFlags = ops.setTrustLineFlags;\r\nOperation.liquidityPoolDeposit = ops.liquidityPoolDeposit;\r\nOperation.liquidityPoolWithdraw = ops.liquidityPoolWithdraw;\r\nOperation.invokeHostFunction = ops.invokeHostFunction;\r\nOperation.extendFootprintTtl = ops.extendFootprintTtl;\r\nOperation.restoreFootprint = ops.restoreFootprint;\r\n\r\n// these are not `xdr.Operation`s directly, but are proxies for complex but\r\n// common versions of `Operation.invokeHostFunction`\r\nOperation.createStellarAssetContract = ops.createStellarAssetContract;\r\nOperation.invokeContractFunction = ops.invokeContractFunction;\r\nOperation.createCustomContract = ops.createCustomContract;\r\nOperation.uploadContractWasm = ops.uploadContractWasm;\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Transfers native balance to destination account.\r\n *\r\n * @function\r\n * @alias Operation.accountMerge\r\n *\r\n * @param {object} opts - options object\r\n * @param {string} opts.destination - destination to merge the source account into\r\n * @param {string} [opts.source]    - operation source account (defaults to\r\n *     transaction source)\r\n *\r\n * @returns {xdr.Operation} an Account Merge operation (xdr.AccountMergeOp)\r\n */\r\nexport function accountMerge(opts) {\r\n  const opAttributes = {};\r\n  try {\r\n    opAttributes.body = xdr.OperationBody.accountMerge(\r\n      decodeAddressToMuxedAccount(opts.destination)\r\n    );\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * @deprecated since v5.0\r\n *\r\n * Returns an XDR AllowTrustOp. An \"allow trust\" operation authorizes another\r\n * account to hold your account's credit for a given asset.\r\n *\r\n * @function\r\n * @alias Operation.allowTrust\r\n *\r\n * @param {object} opts Options object\r\n * @param {string} opts.trustor - The trusting account (the one being authorized)\r\n * @param {string} opts.assetCode - The asset code being authorized.\r\n * @param {(0|1|2)} opts.authorize - `1` to authorize, `2` to authorize to maintain liabilities, and `0` to deauthorize.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n *\r\n * @returns {xdr.AllowTrustOp} Allow Trust operation\r\n */\r\nexport function allowTrust(opts) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.trustor)) {\r\n    throw new Error('trustor is invalid');\r\n  }\r\n  const attributes = {};\r\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\r\n  if (opts.assetCode.length <= 4) {\r\n    const code = opts.assetCode.padEnd(4, '\\0');\r\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum4(code);\r\n  } else if (opts.assetCode.length <= 12) {\r\n    const code = opts.assetCode.padEnd(12, '\\0');\r\n    attributes.asset = xdr.AssetCode.assetTypeCreditAlphanum12(code);\r\n  } else {\r\n    throw new Error('Asset code must be 12 characters at max.');\r\n  }\r\n\r\n  if (typeof opts.authorize === 'boolean') {\r\n    if (opts.authorize) {\r\n      attributes.authorize = xdr.TrustLineFlags.authorizedFlag().value;\r\n    } else {\r\n      attributes.authorize = 0;\r\n    }\r\n  } else {\r\n    attributes.authorize = opts.authorize;\r\n  }\r\n\r\n  const allowTrustOp = new xdr.AllowTrustOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.allowTrust(allowTrustOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\nimport { Keypair } from '../keypair';\r\n\r\n/**\r\n * Create a \"begin sponsoring future reserves\" operation.\r\n * @function\r\n * @alias Operation.beginSponsoringFutureReserves\r\n * @param {object} opts Options object\r\n * @param {string} opts.sponsoredId - The sponsored account id.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.beginSponsoringFutureReserves({\r\n *   sponsoredId: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n * });\r\n *\r\n */\r\nexport function beginSponsoringFutureReserves(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.sponsoredId)) {\r\n    throw new Error('sponsoredId is invalid');\r\n  }\r\n  const op = new xdr.BeginSponsoringFutureReservesOp({\r\n    sponsoredId: Keypair.fromPublicKey(opts.sponsoredId).xdrAccountId()\r\n  });\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.beginSponsoringFutureReserves(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from '../util/bignumber';\r\nimport xdr from '../xdr';\r\n\r\n/**\r\n * This operation bumps sequence number.\r\n * @function\r\n * @alias Operation.bumpSequence\r\n * @param {object} opts Options object\r\n * @param {string} opts.bumpTo - Sequence number to bump to.\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.BumpSequenceOp} Operation\r\n */\r\nexport function bumpSequence(opts) {\r\n  const attributes = {};\r\n\r\n  if (typeof opts.bumpTo !== 'string') {\r\n    throw new Error('bumpTo must be a string');\r\n  }\r\n\r\n  try {\r\n    // eslint-disable-next-line no-new\r\n    new BigNumber(opts.bumpTo);\r\n  } catch (e) {\r\n    throw new Error('bumpTo must be a stringified number');\r\n  }\r\n\r\n  attributes.bumpTo = Hyper.fromString(opts.bumpTo);\r\n\r\n  const bumpSequenceOp = new xdr.BumpSequenceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.bumpSequence(bumpSequenceOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport BigNumber from '../util/bignumber';\r\nimport xdr from '../xdr';\r\nimport { Asset } from '../asset';\r\nimport { LiquidityPoolAsset } from '../liquidity_pool_asset';\r\n\r\nconst MAX_INT64 = '9223372036854775807';\r\n\r\n/**\r\n * Returns an XDR ChangeTrustOp. A \"change trust\" operation adds, removes, or updates a\r\n * trust line for a given asset from the source account to another.\r\n * @function\r\n * @alias Operation.changeTrust\r\n * @param {object} opts Options object\r\n * @param {Asset | LiquidityPoolAsset} opts.asset - The asset for the trust line.\r\n * @param {string} [opts.limit] - The limit for the asset, defaults to max int64.\r\n *                                If the limit is set to \"0\" it deletes the trustline.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @returns {xdr.ChangeTrustOp} Change Trust operation\r\n */\r\nexport function changeTrust(opts) {\r\n  const attributes = {};\r\n\r\n  if (opts.asset instanceof Asset) {\r\n    attributes.line = opts.asset.toChangeTrustXDRObject();\r\n  } else if (opts.asset instanceof LiquidityPoolAsset) {\r\n    attributes.line = opts.asset.toXDRObject();\r\n  } else {\r\n    throw new TypeError('asset must be Asset or LiquidityPoolAsset');\r\n  }\r\n\r\n  if (opts.limit !== undefined && !this.isValidAmount(opts.limit, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('limit'));\r\n  }\r\n\r\n  if (opts.limit) {\r\n    attributes.limit = this._toXDRAmount(opts.limit);\r\n  } else {\r\n    attributes.limit = Hyper.fromString(new BigNumber(MAX_INT64).toString());\r\n  }\r\n\r\n  if (opts.source) {\r\n    attributes.source = opts.source.masterKeypair;\r\n  }\r\n  const changeTrustOP = new xdr.ChangeTrustOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.changeTrust(changeTrustOP);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Create a new claim claimable balance operation.\r\n * @function\r\n * @alias Operation.claimClaimableBalance\r\n * @param {object} opts Options object\r\n * @param {string} opts.balanceId - The claimable balance id to be claimed.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} Claim claimable balance operation\r\n *\r\n * @example\r\n * const op = Operation.claimClaimableBalance({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n */\r\nexport function claimClaimableBalance(opts = {}) {\r\n  validateClaimableBalanceId(opts.balanceId);\r\n\r\n  const attributes = {};\r\n  attributes.balanceId = xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex');\r\n  const claimClaimableBalanceOp = new xdr.ClaimClaimableBalanceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.claimClaimableBalance(\r\n    claimClaimableBalanceOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\nexport function validateClaimableBalanceId(balanceId) {\r\n  if (\r\n    typeof balanceId !== 'string' ||\r\n    balanceId.length !== 8 + 64 /* 8b discriminant + 64b string */\r\n  ) {\r\n    throw new Error('must provide a valid claimable balance id');\r\n  }\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a clawback operation.\r\n *\r\n * @function\r\n * @alias Operation.clawback\r\n *\r\n * @param {object} opts - Options object\r\n * @param {Asset}  opts.asset   - The asset being clawed back.\r\n * @param {string} opts.amount  - The amount of the asset to claw back.\r\n * @param {string} opts.from    - The public key of the (optionally-muxed)\r\n *     account to claw back from.\r\n *\r\n * @param {string} [opts.source] - The source account for the operation.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @return {xdr.ClawbackOp}\r\n *\r\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-operation\r\n */\r\nexport function clawback(opts) {\r\n  const attributes = {};\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  try {\r\n    attributes.from = decodeAddressToMuxedAccount(opts.from);\r\n  } catch (e) {\r\n    throw new Error('from address is invalid');\r\n  }\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.clawback(new xdr.ClawbackOp(attributes))\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { validateClaimableBalanceId } from './claim_claimable_balance';\r\n\r\n/**\r\n * Creates a clawback operation for a claimable balance.\r\n *\r\n * @function\r\n * @alias Operation.clawbackClaimableBalance\r\n * @param {object} opts - Options object\r\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @return {xdr.ClawbackClaimableBalanceOp}\r\n *\r\n * @example\r\n * const op = Operation.clawbackClaimableBalance({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\r\n */\r\nexport function clawbackClaimableBalance(opts = {}) {\r\n  validateClaimableBalanceId(opts.balanceId);\r\n\r\n  const attributes = {\r\n    balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\r\n  };\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.clawbackClaimableBalance(\r\n      new xdr.ClawbackClaimableBalanceOp(attributes)\r\n    )\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * Create and fund a non existent account.\r\n * @function\r\n * @alias Operation.createAccount\r\n * @param {object} opts Options object\r\n * @param {string} opts.destination - Destination account ID to create an account for.\r\n * @param {string} opts.startingBalance - Amount in XLM the account should be funded for. Must be greater\r\n *                                   than the [reserve balance amount](https://developers.stellar.org/docs/glossary/fees/).\r\n * @param {string} [opts.source] - The source account for the payment. Defaults to the transaction's source account.\r\n * @returns {xdr.CreateAccountOp} Create account operation\r\n */\r\nexport function createAccount(opts) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.destination)) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  if (!this.isValidAmount(opts.startingBalance, true)) {\r\n    throw new TypeError(\r\n      this.constructAmountRequirementsError('startingBalance')\r\n    );\r\n  }\r\n  const attributes = {};\r\n  attributes.destination = Keypair.fromPublicKey(\r\n    opts.destination\r\n  ).xdrAccountId();\r\n  attributes.startingBalance = this._toXDRAmount(opts.startingBalance);\r\n  const createAccountOp = new xdr.CreateAccountOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createAccount(createAccountOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Asset } from '../asset';\r\n\r\n/**\r\n * Create a new claimable balance operation.\r\n *\r\n * @function\r\n * @alias Operation.createClaimableBalance\r\n *\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.asset - The asset for the claimable balance.\r\n * @param {string} opts.amount - Amount.\r\n * @param {Claimant[]} opts.claimants - An array of Claimants\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation} Create claimable balance operation\r\n *\r\n * @example\r\n * const asset = new Asset(\r\n *   'USD',\r\n *   'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n * );\r\n * const amount = '100.0000000';\r\n * const claimants = [\r\n *   new Claimant(\r\n *     'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ',\r\n *      Claimant.predicateBeforeAbsoluteTime(\"4102444800000\")\r\n *   )\r\n * ];\r\n *\r\n * const op = Operation.createClaimableBalance({\r\n *   asset,\r\n *   amount,\r\n *   claimants\r\n * });\r\n *\r\n */\r\nexport function createClaimableBalance(opts) {\r\n  if (!(opts.asset instanceof Asset)) {\r\n    throw new Error(\r\n      'must provide an asset for create claimable balance operation'\r\n    );\r\n  }\r\n\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n\r\n  if (!Array.isArray(opts.claimants) || opts.claimants.length === 0) {\r\n    throw new Error('must provide at least one claimant');\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  attributes.claimants = Object.values(opts.claimants).map((c) =>\r\n    c.toXDRObject()\r\n  );\r\n\r\n  const createClaimableBalanceOp = new xdr.CreateClaimableBalanceOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createClaimableBalance(\r\n    createClaimableBalanceOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\r\n * offer that won't consume a counter offer that exactly matches this offer. This is\r\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\r\n * to manage this offer after using this operation to create it.\r\n * @function\r\n * @alias Operation.createPassiveSellOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\r\n */\r\nexport function createPassiveSellOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n  const createPassiveSellOfferOp = new xdr.CreatePassiveSellOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.createPassiveSellOffer(\r\n    createPassiveSellOfferOp\r\n  );\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Create an \"end sponsoring future reserves\" operation.\r\n * @function\r\n * @alias Operation.endSponsoringFutureReserves\r\n * @param {object} opts Options object\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.endSponsoringFutureReserves();\r\n *\r\n */\r\nexport function endSponsoringFutureReserves(opts = {}) {\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.endSponsoringFutureReserves();\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Builds an operation to bump the time-to-live (TTL) of the ledger keys. The\r\n * keys for extension have to be provided in the read-only footprint of\r\n * the transaction.\r\n *\r\n * The only parameter of the operation itself is the new minimum TTL for\r\n * all the provided entries. If an entry already has a higher TTL, then it\r\n * will just be skipped.\r\n *\r\n * TTL is the number of ledgers from the current ledger (exclusive) until\r\n * the last ledger the entry is still considered alive (inclusive). Thus\r\n * the exact ledger until the entries will live will only be determined\r\n * when transaction has been applied.\r\n *\r\n * The footprint has to be specified in the transaction. See\r\n * {@link TransactionBuilder}'s `opts.sorobanData` parameter, which is a\r\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\r\n * usage as part of {@link xdr.SorobanResources}.\r\n *\r\n * @function\r\n * @alias Operation.extendFootprintTtl\r\n *\r\n * @param {object} opts - object holding operation parameters\r\n * @param {number} opts.extendTo - the minimum TTL that all the entries in\r\n *    the read-only footprint will have\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Extend Footprint TTL operation\r\n *    (xdr.ExtendFootprintTTLOp)\r\n */\r\nexport function extendFootprintTtl(opts) {\r\n  if ((opts.extendTo ?? -1) <= 0) {\r\n    throw new RangeError('extendTo has to be positive');\r\n  }\r\n\r\n  const extendFootprintOp = new xdr.ExtendFootprintTtlOp({\r\n    ext: new xdr.ExtensionPoint(0),\r\n    extendTo: opts.extendTo\r\n  });\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.extendFootprintTtl(extendFootprintOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","export { manageSellOffer } from './manage_sell_offer';\r\nexport { createPassiveSellOffer } from './create_passive_sell_offer';\r\nexport { accountMerge } from './account_merge';\r\nexport { allowTrust } from './allow_trust';\r\nexport { bumpSequence } from './bump_sequence';\r\nexport { changeTrust } from './change_trust';\r\nexport { createAccount } from './create_account';\r\nexport { createClaimableBalance } from './create_claimable_balance';\r\nexport { claimClaimableBalance } from './claim_claimable_balance';\r\nexport { clawbackClaimableBalance } from './clawback_claimable_balance';\r\nexport { inflation } from './inflation';\r\nexport { manageData } from './manage_data';\r\nexport { manageBuyOffer } from './manage_buy_offer';\r\nexport { pathPaymentStrictReceive } from './path_payment_strict_receive';\r\nexport { pathPaymentStrictSend } from './path_payment_strict_send';\r\nexport { payment } from './payment';\r\nexport { setOptions } from './set_options';\r\nexport { beginSponsoringFutureReserves } from './begin_sponsoring_future_reserves';\r\nexport { endSponsoringFutureReserves } from './end_sponsoring_future_reserves';\r\nexport {\r\n  revokeAccountSponsorship,\r\n  revokeTrustlineSponsorship,\r\n  revokeOfferSponsorship,\r\n  revokeDataSponsorship,\r\n  revokeClaimableBalanceSponsorship,\r\n  revokeLiquidityPoolSponsorship,\r\n  revokeSignerSponsorship\r\n} from './revoke_sponsorship';\r\nexport { clawback } from './clawback';\r\nexport { setTrustLineFlags } from './set_trustline_flags';\r\nexport { liquidityPoolDeposit } from './liquidity_pool_deposit';\r\nexport { liquidityPoolWithdraw } from './liquidity_pool_withdraw';\r\nexport {\r\n  invokeHostFunction,\r\n  invokeContractFunction,\r\n  createStellarAssetContract,\r\n  createCustomContract,\r\n  uploadContractWasm\r\n} from './invoke_host_function';\r\nexport { extendFootprintTtl } from './extend_footprint_ttl';\r\nexport { restoreFootprint } from './restore_footprint';\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * This operation generates the inflation.\r\n * @function\r\n * @alias Operation.inflation\r\n * @param {object} [opts] Options object\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.InflationOp} Inflation operation\r\n */\r\nexport function inflation(opts = {}) {\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.inflation();\r\n  this.setSourceAccount(opAttributes, opts);\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\nimport { Keypair } from '../keypair';\r\nimport { Address } from '../address';\r\nimport { Asset } from '../asset';\r\n\r\n/**\r\n * Invokes a single smart contract host function.\r\n *\r\n * @function\r\n * @alias Operation.invokeHostFunction\r\n *\r\n * @param {object} opts - options object\r\n * @param {xdr.HostFunction} opts.func - host function to execute (with its\r\n *    wrapped parameters)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - list outlining the\r\n *    tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n * @see Operation.invokeContractFunction\r\n * @see Operation.createCustomContract\r\n * @see Operation.createStellarAssetContract\r\n * @see Operation.uploadContractWasm\r\n * @see Contract.call\r\n */\r\nexport function invokeHostFunction(opts) {\r\n  if (!opts.func) {\r\n    throw new TypeError(\r\n      `host function invocation ('func') required (got ${JSON.stringify(opts)})`\r\n    );\r\n  }\r\n\r\n  const invokeHostFunctionOp = new xdr.InvokeHostFunctionOp({\r\n    hostFunction: opts.func,\r\n    auth: opts.auth || []\r\n  });\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.invokeHostFunction(invokeHostFunctionOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Returns an operation that invokes a contract function.\r\n *\r\n * @function\r\n * @alias Operation.invokeContractFunction\r\n *\r\n * @param {any}         opts - the set of parameters\r\n * @param {string}      opts.contract - a strkey-fied contract address (`C...`)\r\n * @param {string}      opts.function - the name of the contract fn to invoke\r\n * @param {xdr.ScVal[]} opts.args - parameters to pass to the function\r\n *    invocation (try {@link nativeToScVal} or {@link ScInt} to make building\r\n *    these easier)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see Operation.invokeHostFunction\r\n * @see Contract.call\r\n * @see Address\r\n */\r\nexport function invokeContractFunction(opts) {\r\n  const c = new Address(opts.contract);\r\n  if (c._type !== 'contract') {\r\n    throw new TypeError(`expected contract strkey instance, got ${c}`);\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeInvokeContract(\r\n      new xdr.InvokeContractArgs({\r\n        contractAddress: c.toScAddress(),\r\n        functionName: opts.function,\r\n        args: opts.args\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that creates a custom WASM contract.\r\n *\r\n * @function\r\n * @alias Operation.createCustomContract\r\n *\r\n * @param {any}     opts - the set of parameters\r\n * @param {Address} opts.address - the contract uploader address\r\n * @param {Uint8Array|Buffer}  opts.wasmHash - the SHA-256 hash of the contract\r\n *    WASM you're uploading (see {@link hash} and\r\n *    {@link Operation.uploadContractWasm})\r\n * @param {Uint8Array|Buffer} [opts.salt] - an optional, 32-byte salt to\r\n *    distinguish deployment instances of the same wasm from the same user (if\r\n *    omitted, one will be generated for you)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n */\r\nexport function createCustomContract(opts) {\r\n  const salt = Buffer.from(opts.salt || getSalty());\r\n\r\n  if (!opts.wasmHash || opts.wasmHash.length !== 32) {\r\n    throw new TypeError(\r\n      `expected hash(contract WASM) in 'opts.wasmHash', got ${opts.wasmHash}`\r\n    );\r\n  }\r\n  if (salt.length !== 32) {\r\n    throw new TypeError(\r\n      `expected 32-byte salt in 'opts.salt', got ${opts.wasmHash}`\r\n    );\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\r\n      new xdr.CreateContractArgs({\r\n        executable: xdr.ContractExecutable.contractExecutableWasm(\r\n          Buffer.from(opts.wasmHash)\r\n        ),\r\n        contractIdPreimage:\r\n          xdr.ContractIdPreimage.contractIdPreimageFromAddress(\r\n            new xdr.ContractIdPreimageFromAddress({\r\n              address: opts.address.toScAddress(),\r\n              salt\r\n            })\r\n          )\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that wraps a Stellar asset into a token contract.\r\n *\r\n * @function\r\n * @alias Operation.createStellarAssetContract\r\n *\r\n * @param {any}          opts - the set of parameters\r\n * @param {Asset|string} opts.asset - the Stellar asset to wrap, either as an\r\n *    {@link Asset} object or in canonical form (SEP-11, `code:issuer`)\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see https://stellar.org/protocol/sep-11#alphanum4-alphanum12\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions\r\n * @see\r\n * https://soroban.stellar.org/docs/advanced-tutorials/stellar-asset-contract\r\n * @see Operation.invokeHostFunction\r\n */\r\nexport function createStellarAssetContract(opts) {\r\n  let asset = opts.asset;\r\n  if (typeof asset === 'string') {\r\n    const [code, issuer] = asset.split(':');\r\n    asset = new Asset(code, issuer); // handles 'xlm' by default\r\n  }\r\n\r\n  if (!(asset instanceof Asset)) {\r\n    throw new TypeError(`expected Asset in 'opts.asset', got ${asset}`);\r\n  }\r\n\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeCreateContract(\r\n      new xdr.CreateContractArgs({\r\n        executable: xdr.ContractExecutable.contractExecutableStellarAsset(),\r\n        contractIdPreimage: xdr.ContractIdPreimage.contractIdPreimageFromAsset(\r\n          asset.toXDRObject()\r\n        )\r\n      })\r\n    )\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an operation that uploads WASM for a contract.\r\n *\r\n * @function\r\n * @alias Operation.uploadContractWasm\r\n *\r\n * @param {any}               opts - the set of parameters\r\n * @param {Uint8Array|Buffer} opts.wasm - a WASM blob to upload to the ledger\r\n * @param {xdr.SorobanAuthorizationEntry[]} [opts.auth] - an optional list\r\n *    outlining the tree of authorizations required for the call\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} an Invoke Host Function operation\r\n *    (xdr.InvokeHostFunctionOp)\r\n *\r\n * @see\r\n * https://soroban.stellar.org/docs/fundamentals-and-concepts/invoking-contracts-with-transactions#function\r\n */\r\nexport function uploadContractWasm(opts) {\r\n  return this.invokeHostFunction({\r\n    source: opts.source,\r\n    auth: opts.auth,\r\n    func: xdr.HostFunction.hostFunctionTypeUploadContractWasm(\r\n      Buffer.from(opts.wasm) // coalesce so we can drop `Buffer` someday\r\n    )\r\n  });\r\n}\r\n\r\n/** @returns {Buffer} a random 256-bit \"salt\" value. */\r\nfunction getSalty() {\r\n  return Keypair.random().xdrPublicKey().value(); // ed25519 is 256 bits, too\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Creates a liquidity pool deposit operation.\r\n *\r\n * @function\r\n * @alias Operation.liquidityPoolDeposit\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\r\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\r\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\r\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\r\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\r\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\r\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\r\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\r\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\r\n */\r\nexport function liquidityPoolDeposit(opts = {}) {\r\n  const { liquidityPoolId, maxAmountA, maxAmountB, minPrice, maxPrice } = opts;\r\n  const attributes = {};\r\n\r\n  if (!liquidityPoolId) {\r\n    throw new TypeError('liquidityPoolId argument is required');\r\n  }\r\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(liquidityPoolId, 'hex');\r\n\r\n  if (!this.isValidAmount(maxAmountA, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountA'));\r\n  }\r\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\r\n\r\n  if (!this.isValidAmount(maxAmountB, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('maxAmountB'));\r\n  }\r\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\r\n\r\n  if (minPrice === undefined) {\r\n    throw new TypeError('minPrice argument is required');\r\n  }\r\n  attributes.minPrice = this._toXDRPrice(minPrice);\r\n\r\n  if (maxPrice === undefined) {\r\n    throw new TypeError('maxPrice argument is required');\r\n  }\r\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\r\n\r\n  const liquidityPoolDepositOp = new xdr.LiquidityPoolDepositOp(attributes);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Creates a liquidity pool withdraw operation.\r\n *\r\n * @function\r\n * @alias Operation.liquidityPoolWithdraw\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-withdraw\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\r\n * @param {string} opts.amount - Amount of pool shares to withdraw.\r\n * @param {string} opts.minAmountA - Minimum amount of first asset to withdraw.\r\n * @param {string} opts.minAmountB - Minimum amount of second asset to withdraw.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   The resulting operation (xdr.LiquidityPoolWithdrawOp).\r\n */\r\nexport function liquidityPoolWithdraw(opts = {}) {\r\n  const attributes = {};\r\n  if (!opts.liquidityPoolId) {\r\n    throw new TypeError('liquidityPoolId argument is required');\r\n  }\r\n  attributes.liquidityPoolId = xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex');\r\n\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n\r\n  if (!this.isValidAmount(opts.minAmountA, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('minAmountA'));\r\n  }\r\n  attributes.minAmountA = this._toXDRAmount(opts.minAmountA);\r\n\r\n  if (!this.isValidAmount(opts.minAmountB, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('minAmountB'));\r\n  }\r\n  attributes.minAmountB = this._toXDRAmount(opts.minAmountB);\r\n\r\n  const liquidityPoolWithdrawOp = new xdr.LiquidityPoolWithdrawOp(attributes);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.liquidityPoolWithdraw(liquidityPoolWithdrawOp)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport xdr from '../xdr';\r\n/**\r\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\r\n * deletes a buy offer.\r\n * @function\r\n * @alias Operation.manageBuyOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\r\n */\r\nexport function manageBuyOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.buyAmount, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\r\n  }\r\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n\r\n  if (opts.offerId !== undefined) {\r\n    opts.offerId = opts.offerId.toString();\r\n  } else {\r\n    opts.offerId = '0';\r\n  }\r\n\r\n  attributes.offerId = Hyper.fromString(opts.offerId);\r\n  const manageBuyOfferOp = new xdr.ManageBuyOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageBuyOffer(manageBuyOfferOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * This operation adds data entry to the ledger.\r\n * @function\r\n * @alias Operation.manageData\r\n * @param {object} opts Options object\r\n * @param {string} opts.name - The name of the data entry.\r\n * @param {string|Buffer} opts.value - The value of the data entry.\r\n * @param {string} [opts.source] - The optional source account.\r\n * @returns {xdr.ManageDataOp} Manage Data operation\r\n */\r\nexport function manageData(opts) {\r\n  const attributes = {};\r\n\r\n  if (!(typeof opts.name === 'string' && opts.name.length <= 64)) {\r\n    throw new Error('name must be a string, up to 64 characters');\r\n  }\r\n  attributes.dataName = opts.name;\r\n\r\n  if (\r\n    typeof opts.value !== 'string' &&\r\n    !Buffer.isBuffer(opts.value) &&\r\n    opts.value !== null\r\n  ) {\r\n    throw new Error('value must be a string, Buffer or null');\r\n  }\r\n\r\n  if (typeof opts.value === 'string') {\r\n    attributes.dataValue = Buffer.from(opts.value);\r\n  } else {\r\n    attributes.dataValue = opts.value;\r\n  }\r\n\r\n  if (attributes.dataValue !== null && attributes.dataValue.length > 64) {\r\n    throw new Error('value cannot be longer that 64 bytes');\r\n  }\r\n\r\n  const manageDataOp = new xdr.ManageDataOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageData(manageDataOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import { Hyper } from '@stellar/js-xdr';\r\nimport xdr from '../xdr';\r\n/**\r\n * Returns a XDR ManageSellOfferOp. A \"manage sell offer\" operation creates, updates, or\r\n * deletes an offer.\r\n * @function\r\n * @alias Operation.manageSellOffer\r\n * @param {object} opts Options object\r\n * @param {Asset} opts.selling - What you're selling.\r\n * @param {Asset} opts.buying - What you're buying.\r\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\r\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\r\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\r\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\r\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\r\n * @returns {xdr.ManageSellOfferOp} Manage Sell Offer operation\r\n */\r\nexport function manageSellOffer(opts) {\r\n  const attributes = {};\r\n  attributes.selling = opts.selling.toXDRObject();\r\n  attributes.buying = opts.buying.toXDRObject();\r\n  if (!this.isValidAmount(opts.amount, true)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  if (opts.price === undefined) {\r\n    throw new TypeError('price argument is required');\r\n  }\r\n  attributes.price = this._toXDRPrice(opts.price);\r\n\r\n  if (opts.offerId !== undefined) {\r\n    opts.offerId = opts.offerId.toString();\r\n  } else {\r\n    opts.offerId = '0';\r\n  }\r\n\r\n  attributes.offerId = Hyper.fromString(opts.offerId);\r\n  const manageSellOfferOp = new xdr.ManageSellOfferOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.manageSellOffer(manageSellOfferOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a PathPaymentStrictReceive operation.\r\n *\r\n * A `PathPaymentStrictReceive` operation sends the specified amount to the\r\n * destination account. It credits the destination with `destAmount` of\r\n * `destAsset`, while debiting at most `sendMax` of `sendAsset` from the source.\r\n * The transfer optionally occurs through a path. XLM payments create the\r\n * destination account if it does not exist.\r\n *\r\n * @function\r\n * @alias Operation.pathPaymentStrictReceive\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-receive\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {Asset}   opts.sendAsset    - asset to pay with\r\n * @param {string}  opts.sendMax      - maximum amount of sendAsset to send\r\n * @param {string}  opts.destination  - destination account to send to\r\n * @param {Asset}   opts.destAsset    - asset the destination will receive\r\n * @param {string}  opts.destAmount   - amount the destination receives\r\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.PathPaymentStrictReceiveOp} the resulting path payment op\r\n */\r\nexport function pathPaymentStrictReceive(opts) {\r\n  switch (true) {\r\n    case !opts.sendAsset:\r\n      throw new Error('Must specify a send asset');\r\n    case !this.isValidAmount(opts.sendMax):\r\n      throw new TypeError(this.constructAmountRequirementsError('sendMax'));\r\n    case !opts.destAsset:\r\n      throw new Error('Must provide a destAsset for a payment operation');\r\n    case !this.isValidAmount(opts.destAmount):\r\n      throw new TypeError(this.constructAmountRequirementsError('destAmount'));\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\r\n  attributes.sendMax = this._toXDRAmount(opts.sendMax);\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n\r\n  attributes.destAsset = opts.destAsset.toXDRObject();\r\n  attributes.destAmount = this._toXDRAmount(opts.destAmount);\r\n\r\n  const path = opts.path ? opts.path : [];\r\n  attributes.path = path.map((x) => x.toXDRObject());\r\n\r\n  const payment = new xdr.PathPaymentStrictReceiveOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictReceive(payment);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Creates a PathPaymentStrictSend operation.\r\n *\r\n * A `PathPaymentStrictSend` operation sends the specified amount to the\r\n * destination account crediting at least `destMin` of `destAsset`, optionally\r\n * through a path. XLM payments create the destination account if it does not\r\n * exist.\r\n *\r\n * @function\r\n * @alias Operation.pathPaymentStrictSend\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#path-payment-strict-send\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {Asset}   opts.sendAsset    - asset to pay with\r\n * @param {string}  opts.sendAmount   - amount of sendAsset to send (excluding fees)\r\n * @param {string}  opts.destination  - destination account to send to\r\n * @param {Asset}   opts.destAsset    - asset the destination will receive\r\n * @param {string}  opts.destMin      - minimum amount of destAsset to be receive\r\n * @param {Asset[]} opts.path         - array of Asset objects to use as the path\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   the resulting path payment operation\r\n *     (xdr.PathPaymentStrictSendOp)\r\n */\r\nexport function pathPaymentStrictSend(opts) {\r\n  switch (true) {\r\n    case !opts.sendAsset:\r\n      throw new Error('Must specify a send asset');\r\n    case !this.isValidAmount(opts.sendAmount):\r\n      throw new TypeError(this.constructAmountRequirementsError('sendAmount'));\r\n    case !opts.destAsset:\r\n      throw new Error('Must provide a destAsset for a payment operation');\r\n    case !this.isValidAmount(opts.destMin):\r\n      throw new TypeError(this.constructAmountRequirementsError('destMin'));\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const attributes = {};\r\n  attributes.sendAsset = opts.sendAsset.toXDRObject();\r\n  attributes.sendAmount = this._toXDRAmount(opts.sendAmount);\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n  attributes.destAsset = opts.destAsset.toXDRObject();\r\n  attributes.destMin = this._toXDRAmount(opts.destMin);\r\n\r\n  const path = opts.path ? opts.path : [];\r\n  attributes.path = path.map((x) => x.toXDRObject());\r\n\r\n  const payment = new xdr.PathPaymentStrictSendOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.pathPaymentStrictSend(payment);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { decodeAddressToMuxedAccount } from '../util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Create a payment operation.\r\n *\r\n * @function\r\n * @alias Operation.payment\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#payment\r\n *\r\n * @param {object}  opts - Options object\r\n * @param {string}  opts.destination  - destination account ID\r\n * @param {Asset}   opts.asset        - asset to send\r\n * @param {string}  opts.amount       - amount to send\r\n *\r\n * @param {string}  [opts.source]     - The source account for the payment.\r\n *     Defaults to the transaction's source account.\r\n *\r\n * @returns {xdr.Operation}   The resulting payment operation (xdr.PaymentOp)\r\n */\r\nexport function payment(opts) {\r\n  if (!opts.asset) {\r\n    throw new Error('Must provide an asset for a payment operation');\r\n  }\r\n  if (!this.isValidAmount(opts.amount)) {\r\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\r\n  }\r\n\r\n  const attributes = {};\r\n  try {\r\n    attributes.destination = decodeAddressToMuxedAccount(opts.destination);\r\n  } catch (e) {\r\n    throw new Error('destination is invalid');\r\n  }\r\n\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.amount = this._toXDRAmount(opts.amount);\r\n  const paymentOp = new xdr.PaymentOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.payment(paymentOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\n\r\n/**\r\n * Builds an operation to restore the archived ledger entries specified\r\n * by the ledger keys.\r\n *\r\n * The ledger keys to restore are specified separately from the operation\r\n * in read-write footprint of the transaction.\r\n *\r\n * It takes no parameters because the relevant footprint is derived from the\r\n * transaction itself. See {@link TransactionBuilder}'s `opts.sorobanData`\r\n * parameter (or {@link TransactionBuilder.setSorobanData} /\r\n * {@link TransactionBuilder.setLedgerKeys}), which is a\r\n * {@link xdr.SorobanTransactionData} instance that contains fee data & resource\r\n * usage as part of {@link xdr.SorobanTransactionData}.\r\n *\r\n * @function\r\n * @alias Operation.restoreFootprint\r\n *\r\n * @param {object} [opts] - an optional set of parameters\r\n * @param {string} [opts.source] - an optional source account\r\n *\r\n * @returns {xdr.Operation} a Bump Footprint Expiration operation\r\n *    (xdr.RestoreFootprintOp)\r\n */\r\nexport function restoreFootprint(opts = {}) {\r\n  const op = new xdr.RestoreFootprintOp({ ext: new xdr.ExtensionPoint(0) });\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.restoreFootprint(op)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts ?? {});\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\nimport { Keypair } from '../keypair';\r\nimport { Asset } from '../asset';\r\nimport { LiquidityPoolId } from '../liquidity_pool_id';\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for an account.\r\n *\r\n * @function\r\n * @alias Operation.revokeAccountSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The sponsored account ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeAccountSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n * });\r\n *\r\n */\r\nexport function revokeAccountSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.account(\r\n    new xdr.LedgerKeyAccount({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId()\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a trustline.\r\n *\r\n * @function\r\n * @alias Operation.revokeTrustlineSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID which owns the trustline.\r\n * @param {Asset | LiquidityPoolId} opts.asset - The trustline asset.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeTrustlineSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   asset: new StellarBase.LiquidityPoolId(\r\n *     'USDUSD',\r\n *     'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7'\r\n *   )\r\n * });\r\n *\r\n */\r\nexport function revokeTrustlineSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n\r\n  let asset;\r\n  if (opts.asset instanceof Asset) {\r\n    asset = opts.asset.toTrustLineXDRObject();\r\n  } else if (opts.asset instanceof LiquidityPoolId) {\r\n    asset = opts.asset.toXDRObject();\r\n  } else {\r\n    throw new TypeError('asset must be an Asset or LiquidityPoolId');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.trustline(\r\n    new xdr.LedgerKeyTrustLine({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n      asset\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for an offer.\r\n *\r\n * @function\r\n * @alias Operation.revokeOfferSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.seller - The account ID which created the offer.\r\n * @param {string} opts.offerId - The offer ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeOfferSponsorship({\r\n *   seller: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   offerId: '1234'\r\n * });\r\n *\r\n */\r\nexport function revokeOfferSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.seller)) {\r\n    throw new Error('seller is invalid');\r\n  }\r\n  if (typeof opts.offerId !== 'string') {\r\n    throw new Error('offerId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.offer(\r\n    new xdr.LedgerKeyOffer({\r\n      sellerId: Keypair.fromPublicKey(opts.seller).xdrAccountId(),\r\n      offerId: xdr.Int64.fromString(opts.offerId)\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a data entry.\r\n *\r\n * @function\r\n * @alias Operation.revokeDataSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID which owns the data entry.\r\n * @param {string} opts.name - The name of the data entry\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeDataSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   name: 'foo'\r\n * });\r\n *\r\n */\r\nexport function revokeDataSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n  if (typeof opts.name !== 'string' || opts.name.length > 64) {\r\n    throw new Error('name must be a string, up to 64 characters');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.data(\r\n    new xdr.LedgerKeyData({\r\n      accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n      dataName: opts.name\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a claimable balance.\r\n *\r\n * @function\r\n * @alias Operation.revokeClaimableBalanceSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.balanceId - The sponsored claimable balance ID.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeClaimableBalanceSponsorship({\r\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\r\n * });\r\n *\r\n */\r\nexport function revokeClaimableBalanceSponsorship(opts = {}) {\r\n  if (typeof opts.balanceId !== 'string') {\r\n    throw new Error('balanceId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.claimableBalance(\r\n    new xdr.LedgerKeyClaimableBalance({\r\n      balanceId: xdr.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\r\n    })\r\n  );\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Creates a \"revoke sponsorship\" operation for a liquidity pool.\r\n *\r\n * @function\r\n * @alias Operation.revokeLiquidityPoolSponsorship\r\n * @param {object} opts – Options object.\r\n * @param {string} opts.liquidityPoolId - The sponsored liquidity pool ID in 'hex' string.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr Operation.\r\n *\r\n * @example\r\n * const op = Operation.revokeLiquidityPoolSponsorship({\r\n *   liquidityPoolId: 'dd7b1ab831c273310ddbec6f97870aa83c2fbd78ce22aded37ecbf4f3380fac7',\r\n * });\r\n *\r\n */\r\nexport function revokeLiquidityPoolSponsorship(opts = {}) {\r\n  if (typeof opts.liquidityPoolId !== 'string') {\r\n    throw new Error('liquidityPoolId is invalid');\r\n  }\r\n\r\n  const ledgerKey = xdr.LedgerKey.liquidityPool(\r\n    new xdr.LedgerKeyLiquidityPool({\r\n      liquidityPoolId: xdr.PoolId.fromXDR(opts.liquidityPoolId, 'hex')\r\n    })\r\n  );\r\n\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(ledgerKey);\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.revokeSponsorship(op)\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n\r\n/**\r\n * Create a \"revoke sponsorship\" operation for a signer.\r\n *\r\n * @function\r\n * @alias Operation.revokeSignerSponsorship\r\n * @param {object} opts Options object\r\n * @param {string} opts.account - The account ID where the signer sponsorship is being removed from.\r\n * @param {object} opts.signer - The signer whose sponsorship is being removed.\r\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\r\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string).\r\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction.\r\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\r\n * @returns {xdr.Operation} xdr operation\r\n *\r\n * @example\r\n * const op = Operation.revokeSignerSponsorship({\r\n *   account: 'GDGU5OAPHNPU5UCLE5RDJHG7PXZFQYWKCFOEXSXNMR6KRQRI5T6XXCD7\r\n *   signer: {\r\n *     ed25519PublicKey: 'GCEZWKCA5VLDNRLN3RPRJMRZOX3Z6G5CHCGSNFHEYVXM3XOJMDS674JZ'\r\n *   }\r\n * })\r\n *\r\n */\r\nexport function revokeSignerSponsorship(opts = {}) {\r\n  if (!StrKey.isValidEd25519PublicKey(opts.account)) {\r\n    throw new Error('account is invalid');\r\n  }\r\n  let key;\r\n  if (opts.signer.ed25519PublicKey) {\r\n    if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\r\n      throw new Error('signer.ed25519PublicKey is invalid.');\r\n    }\r\n    const rawKey = StrKey.decodeEd25519PublicKey(opts.signer.ed25519PublicKey);\r\n\r\n    key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\r\n  } else if (opts.signer.preAuthTx) {\r\n    let buffer;\r\n    if (typeof opts.signer.preAuthTx === 'string') {\r\n      buffer = Buffer.from(opts.signer.preAuthTx, 'hex');\r\n    } else {\r\n      buffer = opts.signer.preAuthTx;\r\n    }\r\n\r\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\r\n      throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\r\n    }\r\n\r\n    key = new xdr.SignerKey.signerKeyTypePreAuthTx(buffer);\r\n  } else if (opts.signer.sha256Hash) {\r\n    let buffer;\r\n    if (typeof opts.signer.sha256Hash === 'string') {\r\n      buffer = Buffer.from(opts.signer.sha256Hash, 'hex');\r\n    } else {\r\n      buffer = opts.signer.sha256Hash;\r\n    }\r\n\r\n    if (!(Buffer.isBuffer(buffer) && buffer.length === 32)) {\r\n      throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\r\n    }\r\n\r\n    key = new xdr.SignerKey.signerKeyTypeHashX(buffer);\r\n  } else {\r\n    throw new Error('signer is invalid');\r\n  }\r\n\r\n  const signer = new xdr.RevokeSponsorshipOpSigner({\r\n    accountId: Keypair.fromPublicKey(opts.account).xdrAccountId(),\r\n    signerKey: key\r\n  });\r\n\r\n  const op = xdr.RevokeSponsorshipOp.revokeSponsorshipSigner(signer);\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.revokeSponsorship(op);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\nimport { StrKey } from '../strkey';\r\n\r\nfunction weightCheckFunction(value, name) {\r\n  if (value >= 0 && value <= 255) {\r\n    return true;\r\n  }\r\n  throw new Error(`${name} value must be between 0 and 255`);\r\n}\r\n\r\n/**\r\n * Returns an XDR SetOptionsOp. A \"set options\" operations set or clear account flags,\r\n * set the account's inflation destination, and/or add new signers to the account.\r\n * The flags used in `opts.clearFlags` and `opts.setFlags` can be the following:\r\n *   - `{@link AuthRequiredFlag}`\r\n *   - `{@link AuthRevocableFlag}`\r\n *   - `{@link AuthImmutableFlag}`\r\n *   - `{@link AuthClawbackEnabledFlag}`\r\n *\r\n * It's possible to set/clear multiple flags at once using logical or.\r\n *\r\n * @function\r\n * @alias Operation.setOptions\r\n *\r\n * @param {object} opts Options object\r\n * @param {string} [opts.inflationDest] - Set this account ID as the account's inflation destination.\r\n * @param {(number|string)} [opts.clearFlags] - Bitmap integer for which account flags to clear.\r\n * @param {(number|string)} [opts.setFlags] - Bitmap integer for which account flags to set.\r\n * @param {number|string} [opts.masterWeight] - The master key weight.\r\n * @param {number|string} [opts.lowThreshold] - The sum weight for the low threshold.\r\n * @param {number|string} [opts.medThreshold] - The sum weight for the medium threshold.\r\n * @param {number|string} [opts.highThreshold] - The sum weight for the high threshold.\r\n * @param {object} [opts.signer] - Add or remove a signer from the account. The signer is\r\n *                                 deleted if the weight is 0. Only one of `ed25519PublicKey`, `sha256Hash`, `preAuthTx` should be defined.\r\n * @param {string} [opts.signer.ed25519PublicKey] - The ed25519 public key of the signer.\r\n * @param {Buffer|string} [opts.signer.sha256Hash] - sha256 hash (Buffer or hex string) of preimage that will unlock funds. Preimage should be used as signature of future transaction.\r\n * @param {Buffer|string} [opts.signer.preAuthTx] - Hash (Buffer or hex string) of transaction that will unlock funds.\r\n * @param {string} [opts.signer.ed25519SignedPayload] - Signed payload signer (ed25519 public key + raw payload) for atomic transaction signature disclosure.\r\n * @param {number|string} [opts.signer.weight] - The weight of the new signer (0 to delete or 1-255)\r\n * @param {string} [opts.homeDomain] - sets the home domain used for reverse federation lookup.\r\n * @param {string} [opts.source] - The source account (defaults to transaction source).\r\n *\r\n * @returns {xdr.SetOptionsOp}  XDR operation\r\n * @see [Account flags](https://developers.stellar.org/docs/glossary/accounts/#flags)\r\n */\r\nexport function setOptions(opts) {\r\n  const attributes = {};\r\n\r\n  if (opts.inflationDest) {\r\n    if (!StrKey.isValidEd25519PublicKey(opts.inflationDest)) {\r\n      throw new Error('inflationDest is invalid');\r\n    }\r\n    attributes.inflationDest = Keypair.fromPublicKey(\r\n      opts.inflationDest\r\n    ).xdrAccountId();\r\n  }\r\n\r\n  attributes.clearFlags = this._checkUnsignedIntValue(\r\n    'clearFlags',\r\n    opts.clearFlags\r\n  );\r\n  attributes.setFlags = this._checkUnsignedIntValue('setFlags', opts.setFlags);\r\n  attributes.masterWeight = this._checkUnsignedIntValue(\r\n    'masterWeight',\r\n    opts.masterWeight,\r\n    weightCheckFunction\r\n  );\r\n  attributes.lowThreshold = this._checkUnsignedIntValue(\r\n    'lowThreshold',\r\n    opts.lowThreshold,\r\n    weightCheckFunction\r\n  );\r\n  attributes.medThreshold = this._checkUnsignedIntValue(\r\n    'medThreshold',\r\n    opts.medThreshold,\r\n    weightCheckFunction\r\n  );\r\n  attributes.highThreshold = this._checkUnsignedIntValue(\r\n    'highThreshold',\r\n    opts.highThreshold,\r\n    weightCheckFunction\r\n  );\r\n\r\n  if (opts.homeDomain !== undefined && typeof opts.homeDomain !== 'string') {\r\n    throw new TypeError('homeDomain argument must be of type String');\r\n  }\r\n  attributes.homeDomain = opts.homeDomain;\r\n\r\n  if (opts.signer) {\r\n    const weight = this._checkUnsignedIntValue(\r\n      'signer.weight',\r\n      opts.signer.weight,\r\n      weightCheckFunction\r\n    );\r\n    let key;\r\n\r\n    let setValues = 0;\r\n\r\n    if (opts.signer.ed25519PublicKey) {\r\n      if (!StrKey.isValidEd25519PublicKey(opts.signer.ed25519PublicKey)) {\r\n        throw new Error('signer.ed25519PublicKey is invalid.');\r\n      }\r\n      const rawKey = StrKey.decodeEd25519PublicKey(\r\n        opts.signer.ed25519PublicKey\r\n      );\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypeEd25519(rawKey);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.preAuthTx) {\r\n      if (typeof opts.signer.preAuthTx === 'string') {\r\n        opts.signer.preAuthTx = Buffer.from(opts.signer.preAuthTx, 'hex');\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Buffer.isBuffer(opts.signer.preAuthTx) &&\r\n          opts.signer.preAuthTx.length === 32\r\n        )\r\n      ) {\r\n        throw new Error('signer.preAuthTx must be 32 bytes Buffer.');\r\n      }\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypePreAuthTx(opts.signer.preAuthTx);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.sha256Hash) {\r\n      if (typeof opts.signer.sha256Hash === 'string') {\r\n        opts.signer.sha256Hash = Buffer.from(opts.signer.sha256Hash, 'hex');\r\n      }\r\n\r\n      if (\r\n        !(\r\n          Buffer.isBuffer(opts.signer.sha256Hash) &&\r\n          opts.signer.sha256Hash.length === 32\r\n        )\r\n      ) {\r\n        throw new Error('signer.sha256Hash must be 32 bytes Buffer.');\r\n      }\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = new xdr.SignerKey.signerKeyTypeHashX(opts.signer.sha256Hash);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (opts.signer.ed25519SignedPayload) {\r\n      if (!StrKey.isValidSignedPayload(opts.signer.ed25519SignedPayload)) {\r\n        throw new Error('signer.ed25519SignedPayload is invalid.');\r\n      }\r\n      const rawKey = StrKey.decodeSignedPayload(\r\n        opts.signer.ed25519SignedPayload\r\n      );\r\n      const signedPayloadXdr =\r\n        xdr.SignerKeyEd25519SignedPayload.fromXDR(rawKey);\r\n\r\n      // eslint-disable-next-line new-cap\r\n      key = xdr.SignerKey.signerKeyTypeEd25519SignedPayload(signedPayloadXdr);\r\n      setValues += 1;\r\n    }\r\n\r\n    if (setValues !== 1) {\r\n      throw new Error(\r\n        'Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.'\r\n      );\r\n    }\r\n\r\n    attributes.signer = new xdr.Signer({ key, weight });\r\n  }\r\n\r\n  const setOptionsOp = new xdr.SetOptionsOp(attributes);\r\n\r\n  const opAttributes = {};\r\n  opAttributes.body = xdr.OperationBody.setOptions(setOptionsOp);\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from '../xdr';\r\nimport { Keypair } from '../keypair';\r\n\r\n/**\r\n * Creates a trustline flag configuring operation.\r\n *\r\n * For the flags, set them to true to enable them and false to disable them. Any\r\n * unmodified operations will be marked `undefined` in the result.\r\n *\r\n * Note that you can only **clear** the clawbackEnabled flag set; it must be set\r\n * account-wide via operations.SetOptions (setting\r\n * xdr.AccountFlags.clawbackEnabled).\r\n *\r\n * @function\r\n * @alias Operation.setTrustLineFlags\r\n *\r\n * @param {object} opts - Options object\r\n * @param {string} opts.trustor     - the account whose trustline this is\r\n * @param {Asset}  opts.asset       - the asset on the trustline\r\n * @param {object} opts.flags       - the set of flags to modify\r\n *\r\n * @param {bool}   [opts.flags.authorized]  - authorize account to perform\r\n *     transactions with its credit\r\n * @param {bool}   [opts.flags.authorizedToMaintainLiabilities] - authorize\r\n *     account to maintain and reduce liabilities for its credit\r\n * @param {bool}   [opts.flags.clawbackEnabled] - stop claimable balances on\r\n *     this trustlines from having clawbacks enabled (this flag can only be set\r\n *     to false!)\r\n * @param {string} [opts.source] - The source account for the operation.\r\n *                                 Defaults to the transaction's source account.\r\n *\r\n * @note You must include at least one flag.\r\n *\r\n * @return {xdr.SetTrustLineFlagsOp}\r\n *\r\n * @link xdr.AccountFlags\r\n * @link xdr.TrustLineFlags\r\n * @see https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#set-trustline-flags-operation\r\n * @see https://developers.stellar.org/docs/start/list-of-operations/#set-options\r\n */\r\nexport function setTrustLineFlags(opts = {}) {\r\n  const attributes = {};\r\n\r\n  if (typeof opts.flags !== 'object' || Object.keys(opts.flags).length === 0) {\r\n    throw new Error('opts.flags must be a map of boolean flags to modify');\r\n  }\r\n\r\n  const mapping = {\r\n    authorized: xdr.TrustLineFlags.authorizedFlag(),\r\n    authorizedToMaintainLiabilities:\r\n      xdr.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(),\r\n    clawbackEnabled: xdr.TrustLineFlags.trustlineClawbackEnabledFlag()\r\n  };\r\n\r\n  /* eslint no-bitwise: \"off\" */\r\n  let clearFlag = 0;\r\n  let setFlag = 0;\r\n\r\n  Object.keys(opts.flags).forEach((flagName) => {\r\n    if (!Object.prototype.hasOwnProperty.call(mapping, flagName)) {\r\n      throw new Error(`unsupported flag name specified: ${flagName}`);\r\n    }\r\n\r\n    const flagValue = opts.flags[flagName];\r\n    const bit = mapping[flagName].value;\r\n    if (flagValue === true) {\r\n      setFlag |= bit;\r\n    } else if (flagValue === false) {\r\n      clearFlag |= bit;\r\n    }\r\n  });\r\n\r\n  attributes.trustor = Keypair.fromPublicKey(opts.trustor).xdrAccountId();\r\n  attributes.asset = opts.asset.toXDRObject();\r\n  attributes.clearFlags = clearFlag;\r\n  attributes.setFlags = setFlag;\r\n\r\n  const opAttributes = {\r\n    body: xdr.OperationBody.setTrustLineFlags(\r\n      new xdr.SetTrustLineFlagsOp(attributes)\r\n    )\r\n  };\r\n  this.setSourceAccount(opAttributes, opts);\r\n\r\n  return new xdr.Operation(opAttributes);\r\n}\r\n","import xdr from './xdr';\r\n\r\nimport { Address } from './address';\r\nimport { Contract } from './contract';\r\nimport { ScInt, XdrLargeInt, scValToBigInt } from './numbers/index';\r\n\r\n/**\r\n * Attempts to convert native types into smart contract values\r\n * ({@link xdr.ScVal}).\r\n *\r\n * Provides conversions from smart contract XDR values ({@link xdr.ScVal}) to\r\n * native JavaScript types.\r\n *\r\n * The conversions are as follows:\r\n *\r\n *  - xdr.ScVal -> passthrough\r\n *  - null/undefined -> scvVoid\r\n *  - string -> scvString (a copy is made)\r\n *  - UintArray8 -> scvBytes (a copy is made)\r\n *  - boolean -> scvBool\r\n *\r\n *  - number/bigint -> the smallest possible XDR integer type that will fit the\r\n *    input value (if you want a specific type, use {@link ScInt})\r\n *\r\n *  - {@link Address} or {@link Contract} -> scvAddress (for contracts and\r\n *    public keys)\r\n *\r\n *  - Array<T> -> scvVec after attempting to convert each item of type `T` to an\r\n *    xdr.ScVal (recursively). note that all values must be the same type!\r\n *\r\n *  - object -> scvMap after attempting to convert each key and value to an\r\n *    xdr.ScVal (recursively). note that there is no restriction on types\r\n *    matching anywhere (unlike arrays)\r\n *\r\n * When passing an integer-like native value, you can also optionally specify a\r\n * type which will force a particular interpretation of that value.\r\n *\r\n * Note that not all type specifications are compatible with all `ScVal`s, e.g.\r\n * `toScVal(\"a string\", {type: \"i256\"})` will throw.\r\n *\r\n * @param {any} val -       a native (or convertible) input value to wrap\r\n * @param {object} [opts] - an optional set of hints around the type of\r\n *    conversion you'd like to see\r\n * @param {string} [opts.type] - there is different behavior for different input\r\n *    types for `val`:\r\n *\r\n *     - when `val` is an integer-like type (i.e. number|bigint), this will be\r\n *       forwarded to {@link ScInt} or forced to be u32/i32.\r\n *\r\n *     - when `val` is an array type, this is forwarded to the recursion\r\n *\r\n *     - when `val` is an object type (key-value entries), this should be an\r\n *       object in which each key has a pair of types (to represent forced types\r\n *       for the key and the value), where `null` (or a missing entry) indicates\r\n *       the default interpretation(s) (refer to the examples, below)\r\n *\r\n *     - when `val` is a string type, this can be 'string' or 'symbol' to force\r\n *       a particular interpretation of `val`.\r\n *\r\n *     - when `val` is a bytes-like type, this can be 'string', 'symbol', or\r\n *       'bytes' to force a particular interpretation\r\n *\r\n *    As a simple example, `nativeToScVal(\"hello\", {type: 'symbol'})` will\r\n *    return an `scvSymbol`, whereas without the type it would have been an\r\n *    `scvString`.\r\n *\r\n * @returns {xdr.ScVal} a wrapped, smart, XDR version of the input value\r\n * @throws {TypeError} if...\r\n *  - there are arrays with more than one type in them\r\n *  - there are values that do not have a sensible conversion (e.g. random XDR\r\n *    types, custom classes)\r\n *  - the type of the input object (or some inner value of said object) cannot\r\n *    be determined (via `typeof`)\r\n *  - the type you specified (via `opts.type`) is incompatible with the value\r\n *    you passed in (`val`), e.g. `nativeToScVal(\"a string\", { type: 'i128' })`,\r\n *    though this does not apply for types that ignore `opts` (e.g. addresses).\r\n * @see scValToNative\r\n *\r\n * @example\r\n * nativeToScVal(1000);                   // gives ScValType === scvU64\r\n * nativeToScVal(1000n);                  // gives ScValType === scvU64\r\n * nativeToScVal(1n << 100n);             // gives ScValType === scvU128\r\n * nativeToScVal(1000, { type: 'u32' });  // gives ScValType === scvU32\r\n * nativeToScVal(1000, { type: 'i125' }); // gives ScValType === scvI256\r\n * nativeToScVal(\"a string\");                     // gives ScValType === scvString\r\n * nativeToScVal(\"a string\", { type: 'symbol' }); // gives scvSymbol\r\n * nativeToScVal(new Uint8Array(5));                      // scvBytes\r\n * nativeToScVal(new Uint8Array(5), { type: 'symbol' });  // scvSymbol\r\n * nativeToScVal(null); // scvVoid\r\n * nativeToScVal(true); // scvBool\r\n * nativeToScVal([1, 2, 3]);                    // gives scvVec with each element as scvU64\r\n * nativeToScVal([1, 2, 3], { type: 'i128' });  // scvVec<scvI128>\r\n * nativeToScVal({ 'hello': 1, 'world': [ true, false ] }, {\r\n *   type: {\r\n *     'hello': [ 'symbol', 'i128' ],\r\n *   }\r\n * })\r\n * // gives scvMap with entries: [\r\n * //     [ scvSymbol, scvI128 ],\r\n * //     [ scvString, scvArray<scvBool> ]\r\n * // ]\r\n *\r\n * @example\r\n * import {\r\n *   nativeToScVal,\r\n *   scValToNative,\r\n *   ScInt,\r\n *   xdr\r\n * } from '@stellar/stellar-base';\r\n *\r\n * let gigaMap = {\r\n *   bool: true,\r\n *   void: null,\r\n *   u32: xdr.ScVal.scvU32(1),\r\n *   i32: xdr.ScVal.scvI32(1),\r\n *   u64: 1n,\r\n *   i64: -1n,\r\n *   u128: new ScInt(1).toU128(),\r\n *   i128: new ScInt(1).toI128(),\r\n *   u256: new ScInt(1).toU256(),\r\n *   i256: new ScInt(1).toI256(),\r\n *   map: {\r\n *     arbitrary: 1n,\r\n *     nested: 'values',\r\n *     etc: false\r\n *   },\r\n *   vec: ['same', 'type', 'list'],\r\n * };\r\n *\r\n * // then, simply:\r\n * let scv = nativeToScVal(gigaMap);    // scv.switch() == xdr.ScValType.scvMap()\r\n *\r\n * // then...\r\n * someContract.call(\"method\", scv);\r\n *\r\n * // Similarly, the inverse should work:\r\n * scValToNative(scv) == gigaMap;       // true\r\n */\r\nexport function nativeToScVal(val, opts = {}) {\r\n  switch (typeof val) {\r\n    case 'object':\r\n      if (val === null) {\r\n        return xdr.ScVal.scvVoid();\r\n      }\r\n\r\n      if (val instanceof xdr.ScVal) {\r\n        return val; // should we copy?\r\n      }\r\n\r\n      if (val instanceof Address) {\r\n        return val.toScVal();\r\n      }\r\n\r\n      if (val instanceof Contract) {\r\n        return val.address().toScVal();\r\n      }\r\n\r\n      if (val instanceof Uint8Array || Buffer.isBuffer(val)) {\r\n        const copy = Uint8Array.from(val);\r\n        switch (opts?.type ?? 'bytes') {\r\n          case 'bytes':\r\n            return xdr.ScVal.scvBytes(copy);\r\n          case 'symbol':\r\n            return xdr.ScVal.scvSymbol(copy);\r\n          case 'string':\r\n            return xdr.ScVal.scvString(copy);\r\n          default:\r\n            throw new TypeError(\r\n              `invalid type (${opts.type}) specified for bytes-like value`\r\n            );\r\n        }\r\n      }\r\n\r\n      if (Array.isArray(val)) {\r\n        if (val.length > 0 && val.some((v) => typeof v !== typeof val[0])) {\r\n          throw new TypeError(\r\n            `array values (${val}) must have the same type (types: ${val\r\n              .map((v) => typeof v)\r\n              .join(',')})`\r\n          );\r\n        }\r\n        return xdr.ScVal.scvVec(val.map((v) => nativeToScVal(v, opts)));\r\n      }\r\n\r\n      if ((val.constructor?.name ?? '') !== 'Object') {\r\n        throw new TypeError(\r\n          `cannot interpret ${\r\n            val.constructor?.name\r\n          } value as ScVal (${JSON.stringify(val)})`\r\n        );\r\n      }\r\n\r\n      return xdr.ScVal.scvMap(\r\n        Object.entries(val).map(([k, v]) => {\r\n          // the type can be specified with an entry for the key and the value,\r\n          // e.g. val = { 'hello': 1 } and opts.type = { hello: [ 'symbol',\r\n          // 'u128' ]} or you can use `null` for the default interpretation\r\n          const [keyType, valType] = (opts?.type ?? {})[k] ?? [null, null];\r\n          const keyOpts = keyType ? { type: keyType } : {};\r\n          const valOpts = valType ? { type: valType } : {};\r\n\r\n          return new xdr.ScMapEntry({\r\n            key: nativeToScVal(k, keyOpts),\r\n            val: nativeToScVal(v, valOpts)\r\n          });\r\n        })\r\n      );\r\n\r\n    case 'number':\r\n    case 'bigint':\r\n      switch (opts?.type) {\r\n        case 'u32':\r\n          return xdr.ScVal.scvU32(val);\r\n\r\n        case 'i32':\r\n          return xdr.ScVal.scvI32(val);\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return new ScInt(val, { type: opts?.type }).toScVal();\r\n\r\n    case 'string': {\r\n      const optType = opts?.type ?? 'string';\r\n      switch (optType) {\r\n        case 'string':\r\n          return xdr.ScVal.scvString(val);\r\n\r\n        case 'symbol':\r\n          return xdr.ScVal.scvSymbol(val);\r\n\r\n        case 'address':\r\n          return new Address(val).toScVal();\r\n\r\n        default:\r\n          if (XdrLargeInt.isType(optType)) {\r\n            return new XdrLargeInt(optType, val).toScVal();\r\n          }\r\n\r\n          throw new TypeError(\r\n            `invalid type (${opts.type}) specified for string value`\r\n          );\r\n      }\r\n    }\r\n\r\n    case 'boolean':\r\n      return xdr.ScVal.scvBool(val);\r\n\r\n    case 'undefined':\r\n      return xdr.ScVal.scvVoid();\r\n\r\n    case 'function': // FIXME: Is this too helpful?\r\n      return nativeToScVal(val());\r\n\r\n    default:\r\n      throw new TypeError(`failed to convert typeof ${typeof val} (${val})`);\r\n  }\r\n}\r\n\r\n/**\r\n * Given a smart contract value, attempt to convert it to a native type.\r\n * Possible conversions include:\r\n *\r\n *  - void -> `null`\r\n *  - u32, i32 -> `number`\r\n *  - u64, i64, u128, i128, u256, i256 -> `bigint`\r\n *  - vec -> `Array` of any of the above (via recursion)\r\n *  - map -> key-value object of any of the above (via recursion)\r\n *  - bool -> `boolean`\r\n *  - bytes -> `Uint8Array`\r\n *  - symbol -> `string`\r\n *  - string -> `string` IF the underlying buffer can be decoded as ascii/utf8,\r\n *              `Uint8Array` of the raw contents in any error case\r\n *\r\n * If no viable conversion can be determined, this just \"unwraps\" the smart\r\n * value to return its underlying XDR value.\r\n *\r\n * @param {xdr.ScVal} scv - the input smart contract value\r\n *\r\n * @returns {any}\r\n * @see nativeToScVal\r\n */\r\nexport function scValToNative(scv) {\r\n  // we use the verbose xdr.ScValType.<type>.value form here because it's faster\r\n  // than string comparisons and the underlying constants never need to be\r\n  // updated\r\n  switch (scv.switch().value) {\r\n    case xdr.ScValType.scvVoid().value:\r\n      return null;\r\n\r\n    // these can be converted to bigints directly\r\n    case xdr.ScValType.scvU64().value:\r\n    case xdr.ScValType.scvI64().value:\r\n      return scv.value().toBigInt();\r\n\r\n    // these can be parsed by internal abstractions note that this can also\r\n    // handle the above two cases, but it's not as efficient (another\r\n    // type-check, parsing, etc.)\r\n    case xdr.ScValType.scvU128().value:\r\n    case xdr.ScValType.scvI128().value:\r\n    case xdr.ScValType.scvU256().value:\r\n    case xdr.ScValType.scvI256().value:\r\n      return scValToBigInt(scv);\r\n\r\n    case xdr.ScValType.scvVec().value:\r\n      return (scv.vec() ?? []).map(scValToNative);\r\n\r\n    case xdr.ScValType.scvAddress().value:\r\n      return Address.fromScVal(scv).toString();\r\n\r\n    case xdr.ScValType.scvMap().value:\r\n      return Object.fromEntries(\r\n        (scv.map() ?? []).map((entry) => [\r\n          scValToNative(entry.key()),\r\n          scValToNative(entry.val())\r\n        ])\r\n      );\r\n\r\n    // these return the primitive type directly\r\n    case xdr.ScValType.scvBool().value:\r\n    case xdr.ScValType.scvU32().value:\r\n    case xdr.ScValType.scvI32().value:\r\n    case xdr.ScValType.scvBytes().value:\r\n      return scv.value();\r\n\r\n    // Symbols are limited to [a-zA-Z0-9_]+, so we can safely make ascii strings\r\n    //\r\n    // Strings, however, are \"presented\" as strings and we treat them as such\r\n    // (in other words, string = bytes with a hint that it's text). If the user\r\n    // encoded non-printable bytes in their string value, that's on them.\r\n    //\r\n    // Note that we assume a utf8 encoding (ascii-compatible). For other\r\n    // encodings, you should probably use bytes anyway. If it cannot be decoded,\r\n    // the raw bytes are returned.\r\n    case xdr.ScValType.scvSymbol().value:\r\n    case xdr.ScValType.scvString().value: {\r\n      const v = scv.value(); // string|Buffer\r\n      if (Buffer.isBuffer(v) || ArrayBuffer.isView(v)) {\r\n        try {\r\n          return new TextDecoder().decode(v);\r\n        } catch (e) {\r\n          return new Uint8Array(v.buffer); // copy of bytes\r\n        }\r\n      }\r\n      return v; // string already\r\n    }\r\n\r\n    // these can be converted to bigint\r\n    case xdr.ScValType.scvTimepoint().value:\r\n    case xdr.ScValType.scvDuration().value:\r\n      return new xdr.Uint64(scv.value()).toBigInt();\r\n\r\n    case xdr.ScValType.scvError().value:\r\n      switch (scv.error().switch().value) {\r\n        // Distinguish errors from the user contract.\r\n        case xdr.ScErrorType.sceContract().value:\r\n          return { type: 'contract', code: scv.error().contractCode() };\r\n        default: {\r\n          const err = scv.error();\r\n          return {\r\n            type: 'system',\r\n            code: err.code().value,\r\n            value: err.code().name\r\n          };\r\n        }\r\n      }\r\n\r\n    // in the fallthrough case, just return the underlying value directly\r\n    default:\r\n      return scv.value();\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { StrKey, encodeCheck, decodeCheck } from './strkey';\r\n\r\n/**\r\n * A container class with helpers to convert between signer keys\r\n * (`xdr.SignerKey`) and {@link StrKey}s.\r\n *\r\n * It's primarly used for manipulating the `extraSigners` precondition on a\r\n * {@link Transaction}.\r\n *\r\n * @see {@link TransactionBuilder.setExtraSigners}\r\n */\r\nexport class SignerKey {\r\n  /**\r\n   * Decodes a StrKey address into an xdr.SignerKey instance.\r\n   *\r\n   * Only ED25519 public keys (G...), pre-auth transactions (T...), hashes\r\n   * (H...), and signed payloads (P...) can be signer keys.\r\n   *\r\n   * @param   {string} address  a StrKey-encoded signer address\r\n   * @returns {xdr.SignerKey}\r\n   */\r\n  static decodeAddress(address) {\r\n    const signerKeyMap = {\r\n      ed25519PublicKey: xdr.SignerKey.signerKeyTypeEd25519,\r\n      preAuthTx: xdr.SignerKey.signerKeyTypePreAuthTx,\r\n      sha256Hash: xdr.SignerKey.signerKeyTypeHashX,\r\n      signedPayload: xdr.SignerKey.signerKeyTypeEd25519SignedPayload\r\n    };\r\n\r\n    const vb = StrKey.getVersionByteForPrefix(address);\r\n    const encoder = signerKeyMap[vb];\r\n    if (!encoder) {\r\n      throw new Error(`invalid signer key type (${vb})`);\r\n    }\r\n\r\n    const raw = decodeCheck(vb, address);\r\n    switch (vb) {\r\n      case 'signedPayload':\r\n        return encoder(\r\n          new xdr.SignerKeyEd25519SignedPayload({\r\n            ed25519: raw.slice(0, 32),\r\n            payload: raw.slice(32 + 4)\r\n          })\r\n        );\r\n\r\n      case 'ed25519PublicKey': // falls through\r\n      case 'preAuthTx': // falls through\r\n      case 'sha256Hash': // falls through\r\n      default:\r\n        return encoder(raw);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Encodes a signer key into its StrKey equivalent.\r\n   *\r\n   * @param   {xdr.SignerKey} signerKey   the signer\r\n   * @returns {string} the StrKey representation of the signer\r\n   */\r\n  static encodeSignerKey(signerKey) {\r\n    let strkeyType;\r\n    let raw;\r\n\r\n    switch (signerKey.switch()) {\r\n      case xdr.SignerKeyType.signerKeyTypeEd25519():\r\n        strkeyType = 'ed25519PublicKey';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypePreAuthTx():\r\n        strkeyType = 'preAuthTx';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypeHashX():\r\n        strkeyType = 'sha256Hash';\r\n        raw = signerKey.value();\r\n        break;\r\n\r\n      case xdr.SignerKeyType.signerKeyTypeEd25519SignedPayload():\r\n        strkeyType = 'signedPayload';\r\n        raw = signerKey.ed25519SignedPayload().toXDR('raw');\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`invalid SignerKey (type: ${signerKey.switch()})`);\r\n    }\r\n\r\n    return encodeCheck(strkeyType, raw);\r\n  }\r\n}\r\n","//  This module provides the signing functionality used by the stellar network\r\n//  The code below may look a little strange... this is because we try to provide\r\n//  the most efficient signing method possible.  First, we try to load the\r\n//  native `sodium-native` package for node.js environments, and if that fails we\r\n//  fallback to `tweetnacl`\r\n\r\nconst actualMethods = {};\r\n\r\n/**\r\n * Use this flag to check if fast signing (provided by `sodium-native` package) is available.\r\n * If your app is signing a large number of transaction or verifying a large number\r\n * of signatures make sure `sodium-native` package is installed.\r\n */\r\nexport const FastSigning = checkFastSigning();\r\n\r\nexport function sign(data, secretKey) {\r\n  return actualMethods.sign(data, secretKey);\r\n}\r\n\r\nexport function verify(data, signature, publicKey) {\r\n  return actualMethods.verify(data, signature, publicKey);\r\n}\r\n\r\nexport function generate(secretKey) {\r\n  return actualMethods.generate(secretKey);\r\n}\r\n\r\nfunction checkFastSigning() {\r\n  return typeof window === 'undefined'\r\n    ? checkFastSigningNode()\r\n    : checkFastSigningBrowser();\r\n}\r\n\r\nfunction checkFastSigningNode() {\r\n  // NOTE: we use commonjs style require here because es6 imports\r\n  // can only occur at the top level.  thanks, obama.\r\n  let sodium;\r\n  try {\r\n    // eslint-disable-next-line\r\n    sodium = require('sodium-native');\r\n  } catch (err) {\r\n    return checkFastSigningBrowser();\r\n  }\r\n\r\n  if (!Object.keys(sodium).length) {\r\n    return checkFastSigningBrowser();\r\n  }\r\n\r\n  actualMethods.generate = (secretKey) => {\r\n    const pk = Buffer.alloc(sodium.crypto_sign_PUBLICKEYBYTES);\r\n    const sk = Buffer.alloc(sodium.crypto_sign_SECRETKEYBYTES);\r\n    sodium.crypto_sign_seed_keypair(pk, sk, secretKey);\r\n    return pk;\r\n  };\r\n\r\n  actualMethods.sign = (data, secretKey) => {\r\n    data = Buffer.from(data);\r\n    const signature = Buffer.alloc(sodium.crypto_sign_BYTES);\r\n    sodium.crypto_sign_detached(signature, data, secretKey);\r\n    return signature;\r\n  };\r\n\r\n  actualMethods.verify = (data, signature, publicKey) => {\r\n    data = Buffer.from(data);\r\n    try {\r\n      return sodium.crypto_sign_verify_detached(signature, data, publicKey);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return true;\r\n}\r\n\r\nfunction checkFastSigningBrowser() {\r\n  // fallback to `tweetnacl` if we're in the browser or\r\n  // if there was a failure installing `sodium-native`\r\n  // eslint-disable-next-line\r\n  const nacl = require('tweetnacl');\r\n\r\n  actualMethods.generate = (secretKey) => {\r\n    const secretKeyUint8 = new Uint8Array(secretKey);\r\n    const naclKeys = nacl.sign.keyPair.fromSeed(secretKeyUint8);\r\n    return Buffer.from(naclKeys.publicKey);\r\n  };\r\n\r\n  actualMethods.sign = (data, secretKey) => {\r\n    data = Buffer.from(data);\r\n    data = new Uint8Array(data.toJSON().data);\r\n    secretKey = new Uint8Array(secretKey.toJSON().data);\r\n\r\n    const signature = nacl.sign.detached(data, secretKey);\r\n\r\n    return Buffer.from(signature);\r\n  };\r\n\r\n  actualMethods.verify = (data, signature, publicKey) => {\r\n    data = Buffer.from(data);\r\n    data = new Uint8Array(data.toJSON().data);\r\n    signature = new Uint8Array(signature.toJSON().data);\r\n    publicKey = new Uint8Array(publicKey.toJSON().data);\r\n\r\n    return nacl.sign.detached.verify(data, signature, publicKey);\r\n  };\r\n\r\n  return false;\r\n}\r\n","/* Helper class to assist with formatting and parsing token amounts. */\r\nexport class Soroban {\r\n  /**\r\n   * Given a whole number smart contract amount of a token and an amount of\r\n   * decimal places (if the token has any), it returns a \"display\" value.\r\n   *\r\n   * All arithmetic inside the contract is performed on integers to avoid\r\n   * potential precision and consistency issues of floating-point.\r\n   *\r\n   * @param {string} amount   the token amount you want to display\r\n   * @param {number} decimals specify how many decimal places a token has\r\n   *\r\n   * @returns {string} the display value\r\n   * @throws {TypeError} if the given amount has a decimal point already\r\n   * @example\r\n   * formatTokenAmount(\"123000\", 4) === \"12.3\";\r\n   */\r\n  static formatTokenAmount(amount, decimals) {\r\n    if (amount.includes('.')) {\r\n      throw new TypeError('No decimals are allowed');\r\n    }\r\n\r\n    let formatted = amount;\r\n    if (decimals > 0) {\r\n      if (decimals > formatted.length) {\r\n        formatted = ['0', formatted.toString().padStart(decimals, '0')].join(\r\n          '.'\r\n        );\r\n      } else {\r\n        formatted = [\r\n          formatted.slice(0, -decimals),\r\n          formatted.slice(-decimals)\r\n        ].join('.');\r\n      }\r\n    }\r\n\r\n    // remove trailing zero if any\r\n    return formatted.replace(/(\\.\\d*?)0+$/, '$1');\r\n  }\r\n\r\n  /**\r\n   * Parse a token amount to use it on smart contract\r\n   *\r\n   * This function takes the display value and its decimals (if the token has\r\n   * any) and returns a string that'll be used within the smart contract.\r\n   *\r\n   * @param {string} value      the token amount you want to use it on smart\r\n   *    contract which you've been displaying in a UI\r\n   * @param {number} decimals   the number of decimal places expected in the\r\n   *    display value (different than the \"actual\" number, because suffix zeroes\r\n   *    might not be present)\r\n   *\r\n   * @returns {string}  the whole number token amount represented by the display\r\n   *    value with the decimal places shifted over\r\n   *\r\n   * @example\r\n   * const displayValueAmount = \"123.4560\"\r\n   * const parsedAmtForSmartContract = parseTokenAmount(displayValueAmount, 5);\r\n   * parsedAmtForSmartContract === \"12345600\"\r\n   */\r\n  static parseTokenAmount(value, decimals) {\r\n    const [whole, fraction, ...rest] = value.split('.').slice();\r\n\r\n    if (rest.length) {\r\n      throw new Error(`Invalid decimal value: ${value}`);\r\n    }\r\n\r\n    const shifted = BigInt(\r\n      whole + (fraction?.padEnd(decimals, '0') ?? '0'.repeat(decimals))\r\n    );\r\n\r\n    return shifted.toString();\r\n  }\r\n}\r\n","import xdr from './xdr';\r\n\r\n/**\r\n * Supports building {@link xdr.SorobanTransactionData} structures with various\r\n * items set to specific values.\r\n *\r\n * This is recommended for when you are building\r\n * {@link Operation.extendFootprintTtl} / {@link Operation.restoreFootprint}\r\n * operations and need to {@link TransactionBuilder.setSorobanData} to avoid\r\n * (re)building the entire data structure from scratch.\r\n *\r\n * @constructor\r\n *\r\n * @param {string | xdr.SorobanTransactionData} [sorobanData]  either a\r\n *      base64-encoded string that represents an\r\n *      {@link xdr.SorobanTransactionData} instance or an XDR instance itself\r\n *      (it will be copied); if omitted or \"falsy\" (e.g. an empty string), it\r\n *      starts with an empty instance\r\n *\r\n * @example\r\n * // You want to use an existing data blob but override specific parts.\r\n * const newData = new SorobanDataBuilder(existing)\r\n *   .setReadOnly(someLedgerKeys)\r\n *   .setRefundableFee(\"1000\")\r\n *   .build();\r\n *\r\n * // You want an instance from scratch\r\n * const newData = new SorobanDataBuilder()\r\n *   .setFootprint([someLedgerKey], [])\r\n *   .setRefundableFee(\"1000\")\r\n *   .build();\r\n */\r\nexport class SorobanDataBuilder {\r\n  _data;\r\n\r\n  constructor(sorobanData) {\r\n    let data;\r\n\r\n    if (!sorobanData) {\r\n      data = new xdr.SorobanTransactionData({\r\n        resources: new xdr.SorobanResources({\r\n          footprint: new xdr.LedgerFootprint({ readOnly: [], readWrite: [] }),\r\n          instructions: 0,\r\n          readBytes: 0,\r\n          writeBytes: 0\r\n        }),\r\n        ext: new xdr.ExtensionPoint(0),\r\n        resourceFee: new xdr.Int64(0)\r\n      });\r\n    } else if (\r\n      typeof sorobanData === 'string' ||\r\n      ArrayBuffer.isView(sorobanData)\r\n    ) {\r\n      data = SorobanDataBuilder.fromXDR(sorobanData);\r\n    } else {\r\n      data = SorobanDataBuilder.fromXDR(sorobanData.toXDR()); // copy\r\n    }\r\n\r\n    this._data = data;\r\n    this._data.resourceFee(new xdr.Int64(1e7));\r\n  }\r\n\r\n  /**\r\n   * Decodes and builds a {@link xdr.SorobanTransactionData} instance.\r\n   * @param {Uint8Array|Buffer|string} data   raw input to decode\r\n   * @returns {xdr.SorobanTransactionData}\r\n   */\r\n  static fromXDR(data) {\r\n    return xdr.SorobanTransactionData.fromXDR(\r\n      data,\r\n      typeof data === 'string' ? 'base64' : 'raw'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the resource fee portion of the Soroban data.\r\n   * @param {number | bigint | string} fee  the resource fee to set (int64)\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setResourceFee(fee) {\r\n    this._data.resourceFee(new xdr.Int64(fee));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets up the resource metrics.\r\n   *\r\n   * You should almost NEVER need this, as its often generated / provided to you\r\n   * by transaction simulation/preflight from a Soroban RPC server.\r\n   *\r\n   * @param {number} cpuInstrs      number of CPU instructions\r\n   * @param {number} readBytes      number of bytes being read\r\n   * @param {number} writeBytes     number of bytes being written\r\n   *\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setResources(cpuInstrs, readBytes, writeBytes) {\r\n    this._data.resources().instructions(cpuInstrs);\r\n    this._data.resources().readBytes(readBytes);\r\n    this._data.resources().writeBytes(writeBytes);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends the given ledger keys to the existing storage access footprint.\r\n   * @param {xdr.LedgerKey[]} readOnly   read-only keys to add\r\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys to add\r\n   * @returns {SorobanDataBuilder} this builder instance\r\n   */\r\n  appendFootprint(readOnly, readWrite) {\r\n    return this.setFootprint(\r\n      this.getReadOnly().concat(readOnly),\r\n      this.getReadWrite().concat(readWrite)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sets the storage access footprint to be a certain set of ledger keys.\r\n   *\r\n   * You can also set each field explicitly via\r\n   * {@link SorobanDataBuilder.setReadOnly} and\r\n   * {@link SorobanDataBuilder.setReadWrite} or add to the existing footprint\r\n   * via {@link SorobanDataBuilder.appendFootprint}.\r\n   *\r\n   * Passing `null|undefined` to either parameter will IGNORE the existing\r\n   * values. If you want to clear them, pass `[]`, instead.\r\n   *\r\n   * @param {xdr.LedgerKey[]|null} [readOnly]   the set of ledger keys to set in\r\n   *    the read-only portion of the transaction's `sorobanData`, or `null |\r\n   *    undefined` to keep the existing keys\r\n   * @param {xdr.LedgerKey[]|null} [readWrite]  the set of ledger keys to set in\r\n   *    the read-write portion of the transaction's `sorobanData`, or `null |\r\n   *    undefined` to keep the existing keys\r\n   * @returns {SorobanDataBuilder} this builder instance\r\n   */\r\n  setFootprint(readOnly, readWrite) {\r\n    if (readOnly !== null) {\r\n      // null means \"leave me alone\"\r\n      this.setReadOnly(readOnly);\r\n    }\r\n    if (readWrite !== null) {\r\n      this.setReadWrite(readWrite);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {xdr.LedgerKey[]} readOnly  read-only keys in the access footprint\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setReadOnly(readOnly) {\r\n    this._data\r\n      .resources()\r\n      .footprint()\r\n      .readOnly(readOnly ?? []);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param {xdr.LedgerKey[]} readWrite  read-write keys in the access footprint\r\n   * @returns {SorobanDataBuilder}\r\n   */\r\n  setReadWrite(readWrite) {\r\n    this._data\r\n      .resources()\r\n      .footprint()\r\n      .readWrite(readWrite ?? []);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @returns {xdr.SorobanTransactionData} a copy of the final data structure\r\n   */\r\n  build() {\r\n    return xdr.SorobanTransactionData.fromXDR(this._data.toXDR()); // clone\r\n  }\r\n\r\n  //\r\n  // getters follow\r\n  //\r\n\r\n  /** @returns {xdr.LedgerKey[]} the read-only storage access pattern */\r\n  getReadOnly() {\r\n    return this.getFootprint().readOnly();\r\n  }\r\n\r\n  /** @returns {xdr.LedgerKey[]} the read-write storage access pattern */\r\n  getReadWrite() {\r\n    return this.getFootprint().readWrite();\r\n  }\r\n\r\n  /** @returns {xdr.LedgerFootprint} the storage access pattern */\r\n  getFootprint() {\r\n    return this._data.resources().footprint();\r\n  }\r\n}\r\n","/* eslint no-bitwise: [\"error\", {\"allow\": [\"<<\", \">>\", \"^\", \"&\", \"&=\"]}] */\r\n\r\nimport base32 from 'base32.js';\r\nimport { verifyChecksum } from './util/checksum';\r\n\r\nconst versionBytes = {\r\n  ed25519PublicKey: 6 << 3, // G (when encoded in base32)\r\n  ed25519SecretSeed: 18 << 3, // S\r\n  med25519PublicKey: 12 << 3, // M\r\n  preAuthTx: 19 << 3, // T\r\n  sha256Hash: 23 << 3, // X\r\n  signedPayload: 15 << 3, // P\r\n  contract: 2 << 3 // C\r\n};\r\n\r\nconst strkeyTypes = {\r\n  G: 'ed25519PublicKey',\r\n  S: 'ed25519SecretSeed',\r\n  M: 'med25519PublicKey',\r\n  T: 'preAuthTx',\r\n  X: 'sha256Hash',\r\n  P: 'signedPayload',\r\n  C: 'contract'\r\n};\r\n\r\n/**\r\n * StrKey is a helper class that allows encoding and decoding Stellar keys\r\n * to/from strings, i.e. between their binary (Buffer, xdr.PublicKey, etc.) and\r\n * string (i.e. \"GABCD...\", etc.) representations.\r\n */\r\nexport class StrKey {\r\n  /**\r\n   * Encodes `data` to strkey ed25519 public key.\r\n   *\r\n   * @param   {Buffer} data   raw data to encode\r\n   * @returns {string}        \"G...\" representation of the key\r\n   */\r\n  static encodeEd25519PublicKey(data) {\r\n    return encodeCheck('ed25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey ed25519 public key to raw data.\r\n   *\r\n   * If the parameter is a muxed account key (\"M...\"), this will only encode it\r\n   * as a basic Ed25519 key (as if in \"G...\" format).\r\n   *\r\n   * @param   {string} data   \"G...\" (or \"M...\") key representation to decode\r\n   * @returns {Buffer}        raw key\r\n   */\r\n  static decodeEd25519PublicKey(data) {\r\n    return decodeCheck('ed25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar public key is a valid ed25519 public key.\r\n   * @param {string} publicKey public key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidEd25519PublicKey(publicKey) {\r\n    return isValid('ed25519PublicKey', publicKey);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey ed25519 seed.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeEd25519SecretSeed(data) {\r\n    return encodeCheck('ed25519SecretSeed', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey ed25519 seed to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeEd25519SecretSeed(address) {\r\n    return decodeCheck('ed25519SecretSeed', address);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar secret key is a valid ed25519 secret seed.\r\n   * @param {string} seed seed to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidEd25519SecretSeed(seed) {\r\n    return isValid('ed25519SecretSeed', seed);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey med25519 public key.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeMed25519PublicKey(data) {\r\n    return encodeCheck('med25519PublicKey', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey med25519 public key to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeMed25519PublicKey(address) {\r\n    return decodeCheck('med25519PublicKey', address);\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given Stellar public key is a valid med25519 public key.\r\n   * @param {string} publicKey public key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidMed25519PublicKey(publicKey) {\r\n    return isValid('med25519PublicKey', publicKey);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey preAuthTx.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodePreAuthTx(data) {\r\n    return encodeCheck('preAuthTx', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey PreAuthTx to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodePreAuthTx(address) {\r\n    return decodeCheck('preAuthTx', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes data to strkey sha256 hash.\r\n   * @param {Buffer} data data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeSha256Hash(data) {\r\n    return encodeCheck('sha256Hash', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey sha256 hash to raw data.\r\n   * @param {string} address data to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeSha256Hash(address) {\r\n    return decodeCheck('sha256Hash', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes raw data to strkey signed payload (P...).\r\n   * @param   {Buffer} data  data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeSignedPayload(data) {\r\n    return encodeCheck('signedPayload', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey signed payload (P...) to raw data.\r\n   * @param   {string} address  address to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeSignedPayload(address) {\r\n    return decodeCheck('signedPayload', address);\r\n  }\r\n\r\n  /**\r\n   * Checks validity of alleged signed payload (P...) strkey address.\r\n   * @param   {string} address  signer key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidSignedPayload(address) {\r\n    return isValid('signedPayload', address);\r\n  }\r\n\r\n  /**\r\n   * Encodes raw data to strkey contract (C...).\r\n   * @param   {Buffer} data  data to encode\r\n   * @returns {string}\r\n   */\r\n  static encodeContract(data) {\r\n    return encodeCheck('contract', data);\r\n  }\r\n\r\n  /**\r\n   * Decodes strkey contract (C...) to raw data.\r\n   * @param   {string} address  address to decode\r\n   * @returns {Buffer}\r\n   */\r\n  static decodeContract(address) {\r\n    return decodeCheck('contract', address);\r\n  }\r\n\r\n  /**\r\n   * Checks validity of alleged contract (C...) strkey address.\r\n   * @param   {string} address  signer key to check\r\n   * @returns {boolean}\r\n   */\r\n  static isValidContract(address) {\r\n    return isValid('contract', address);\r\n  }\r\n\r\n  static getVersionByteForPrefix(address) {\r\n    return strkeyTypes[address[0]];\r\n  }\r\n}\r\n\r\n/**\r\n * Sanity-checks whether or not a strkey *appears* valid.\r\n *\r\n * @param  {string}  versionByteName the type of strkey to expect in `encoded`\r\n * @param  {string}  encoded         the strkey to validate\r\n *\r\n * @return {Boolean} whether or not the `encoded` strkey appears valid for the\r\n *     `versionByteName` strkey type (see `versionBytes`, above).\r\n *\r\n * @note This isn't a *definitive* check of validity, but rather a best-effort\r\n *     check based on (a) input length, (b) whether or not it can be decoded,\r\n *     and (c) output length.\r\n */\r\nfunction isValid(versionByteName, encoded) {\r\n  if (typeof encoded !== 'string') {\r\n    return false;\r\n  }\r\n\r\n  // basic length checks on the strkey lengths\r\n  switch (versionByteName) {\r\n    case 'ed25519PublicKey': // falls through\r\n    case 'ed25519SecretSeed': // falls through\r\n    case 'preAuthTx': // falls through\r\n    case 'sha256Hash': // falls through\r\n    case 'contract':\r\n      if (encoded.length !== 56) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    case 'med25519PublicKey':\r\n      if (encoded.length !== 69) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    case 'signedPayload':\r\n      if (encoded.length < 56 || encoded.length > 165) {\r\n        return false;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return false;\r\n  }\r\n\r\n  let decoded = '';\r\n  try {\r\n    decoded = decodeCheck(versionByteName, encoded);\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n\r\n  // basic length checks on the resulting buffer sizes\r\n  switch (versionByteName) {\r\n    case 'ed25519PublicKey': // falls through\r\n    case 'ed25519SecretSeed': // falls through\r\n    case 'preAuthTx': // falls through\r\n    case 'sha256Hash': // falls through\r\n    case 'contract':\r\n      return decoded.length === 32;\r\n\r\n    case 'med25519PublicKey':\r\n      return decoded.length === 40; // +8 bytes for the ID\r\n\r\n    case 'signedPayload':\r\n      return (\r\n        // 32 for the signer, +4 for the payload size, then either +4 for the\r\n        // min or +64 for the max payload\r\n        decoded.length >= 32 + 4 + 4 && decoded.length <= 32 + 4 + 64\r\n      );\r\n\r\n    default:\r\n      return false;\r\n  }\r\n}\r\n\r\nexport function decodeCheck(versionByteName, encoded) {\r\n  if (typeof encoded !== 'string') {\r\n    throw new TypeError('encoded argument must be of type String');\r\n  }\r\n\r\n  const decoded = base32.decode(encoded);\r\n  const versionByte = decoded[0];\r\n  const payload = decoded.slice(0, -2);\r\n  const data = payload.slice(1);\r\n  const checksum = decoded.slice(-2);\r\n\r\n  if (encoded !== base32.encode(decoded)) {\r\n    throw new Error('invalid encoded string');\r\n  }\r\n\r\n  const expectedVersion = versionBytes[versionByteName];\r\n\r\n  if (expectedVersion === undefined) {\r\n    throw new Error(\r\n      `${versionByteName} is not a valid version byte name. ` +\r\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\r\n    );\r\n  }\r\n\r\n  if (versionByte !== expectedVersion) {\r\n    throw new Error(\r\n      `invalid version byte. expected ${expectedVersion}, got ${versionByte}`\r\n    );\r\n  }\r\n\r\n  const expectedChecksum = calculateChecksum(payload);\r\n\r\n  if (!verifyChecksum(expectedChecksum, checksum)) {\r\n    throw new Error(`invalid checksum`);\r\n  }\r\n\r\n  return Buffer.from(data);\r\n}\r\n\r\nexport function encodeCheck(versionByteName, data) {\r\n  if (data === null || data === undefined) {\r\n    throw new Error('cannot encode null data');\r\n  }\r\n\r\n  const versionByte = versionBytes[versionByteName];\r\n\r\n  if (versionByte === undefined) {\r\n    throw new Error(\r\n      `${versionByteName} is not a valid version byte name. ` +\r\n        `Expected one of ${Object.keys(versionBytes).join(', ')}`\r\n    );\r\n  }\r\n  data = Buffer.from(data);\r\n\r\n  const versionBuffer = Buffer.from([versionByte]);\r\n  const payload = Buffer.concat([versionBuffer, data]);\r\n  const checksum = Buffer.from(calculateChecksum(payload));\r\n  const unencoded = Buffer.concat([payload, checksum]);\r\n\r\n  return base32.encode(unencoded);\r\n}\r\n\r\n// Computes the CRC16-XModem checksum of `payload` in little-endian order\r\nfunction calculateChecksum(payload) {\r\n  const crcTable = [\r\n    0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108,\r\n    0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210,\r\n    0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b,\r\n    0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401,\r\n    0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee,\r\n    0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6,\r\n    0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d,\r\n    0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823,\r\n    0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5,\r\n    0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc,\r\n    0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4,\r\n    0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd,\r\n    0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13,\r\n    0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a,\r\n    0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e,\r\n    0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067,\r\n    0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1,\r\n    0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb,\r\n    0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0,\r\n    0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8,\r\n    0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657,\r\n    0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9,\r\n    0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882,\r\n    0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a,\r\n    0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e,\r\n    0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07,\r\n    0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d,\r\n    0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74,\r\n    0x2e93, 0x3eb2, 0x0ed1, 0x1ef0\r\n  ];\r\n\r\n  let crc16 = 0x0;\r\n\r\n  for (let i = 0; i < payload.length; i += 1) {\r\n    const byte = payload[i];\r\n    const lookupIndex = (crc16 >> 8) ^ byte;\r\n    crc16 = (crc16 << 8) ^ crcTable[lookupIndex];\r\n    crc16 &= 0xffff;\r\n  }\r\n  const checksum = new Uint8Array(2);\r\n  checksum[0] = crc16 & 0xff;\r\n  checksum[1] = (crc16 >> 8) & 0xff;\r\n  return checksum;\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { Operation } from './operation';\r\nimport { Memo } from './memo';\r\nimport { TransactionBase } from './transaction_base';\r\nimport {\r\n  extractBaseAddress,\r\n  encodeMuxedAccountToAddress\r\n} from './util/decode_encode_muxed_account';\r\n\r\n/**\r\n * Use {@link TransactionBuilder} to build a transaction object. If you have an\r\n * object or base64-encoded string of the transaction envelope XDR, use {@link\r\n * TransactionBuilder.fromXDR}.\r\n *\r\n * Once a Transaction has been created, its attributes and operations should not\r\n * be changed. You should only add signatures (using {@link Transaction#sign})\r\n * to a Transaction object before submitting to the network or forwarding on to\r\n * additional signers.\r\n *\r\n * @constructor\r\n *\r\n * @param {string|xdr.TransactionEnvelope} envelope - transaction envelope\r\n *     object or base64 encoded string\r\n * @param {string}  [networkPassphrase] - passphrase of the target stellar\r\n *     network (e.g. \"Public Global Stellar Network ; September 2015\")\r\n *\r\n * @extends TransactionBase\r\n */\r\nexport class Transaction extends TransactionBase {\r\n  constructor(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      const buffer = Buffer.from(envelope, 'base64');\r\n      envelope = xdr.TransactionEnvelope.fromXDR(buffer);\r\n    }\r\n\r\n    const envelopeType = envelope.switch();\r\n    if (\r\n      !(\r\n        envelopeType === xdr.EnvelopeType.envelopeTypeTxV0() ||\r\n        envelopeType === xdr.EnvelopeType.envelopeTypeTx()\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${envelopeType.name}.`\r\n      );\r\n    }\r\n\r\n    const txEnvelope = envelope.value();\r\n    const tx = txEnvelope.tx();\r\n    const fee = tx.fee().toString();\r\n    const signatures = (txEnvelope.signatures() || []).slice();\r\n\r\n    super(tx, signatures, fee, networkPassphrase);\r\n\r\n    this._envelopeType = envelopeType;\r\n    this._memo = tx.memo();\r\n    this._sequence = tx.seqNum().toString();\r\n\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        this._source = StrKey.encodeEd25519PublicKey(\r\n          this.tx.sourceAccountEd25519()\r\n        );\r\n        break;\r\n      default:\r\n        this._source = encodeMuxedAccountToAddress(this.tx.sourceAccount());\r\n        break;\r\n    }\r\n\r\n    let cond = null;\r\n    let timeBounds = null;\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        timeBounds = tx.timeBounds();\r\n        break;\r\n\r\n      case xdr.EnvelopeType.envelopeTypeTx():\r\n        switch (tx.cond().switch()) {\r\n          case xdr.PreconditionType.precondTime():\r\n            timeBounds = tx.cond().timeBounds();\r\n            break;\r\n\r\n          case xdr.PreconditionType.precondV2():\r\n            cond = tx.cond().v2();\r\n            timeBounds = cond.timeBounds();\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (timeBounds) {\r\n      this._timeBounds = {\r\n        minTime: timeBounds.minTime().toString(),\r\n        maxTime: timeBounds.maxTime().toString()\r\n      };\r\n    }\r\n\r\n    if (cond) {\r\n      const ledgerBounds = cond.ledgerBounds();\r\n      if (ledgerBounds) {\r\n        this._ledgerBounds = {\r\n          minLedger: ledgerBounds.minLedger(),\r\n          maxLedger: ledgerBounds.maxLedger()\r\n        };\r\n      }\r\n\r\n      const minSeq = cond.minSeqNum();\r\n      if (minSeq) {\r\n        this._minAccountSequence = minSeq.toString();\r\n      }\r\n\r\n      this._minAccountSequenceAge = cond.minSeqAge();\r\n      this._minAccountSequenceLedgerGap = cond.minSeqLedgerGap();\r\n      this._extraSigners = cond.extraSigners();\r\n    }\r\n\r\n    const operations = tx.operations() || [];\r\n    this._operations = operations.map((op) => Operation.fromXDRObject(op));\r\n  }\r\n\r\n  /**\r\n   * @type {object}\r\n   * @property {string} 64 bit unix timestamp\r\n   * @property {string} 64 bit unix timestamp\r\n   * @readonly\r\n   */\r\n  get timeBounds() {\r\n    return this._timeBounds;\r\n  }\r\n  set timeBounds(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {object}\r\n   * @property {number} minLedger - smallest ledger bound (uint32)\r\n   * @property {number} maxLedger - largest ledger bound (or 0 for inf)\r\n   * @readonly\r\n   */\r\n  get ledgerBounds() {\r\n    return this._ledgerBounds;\r\n  }\r\n  set ledgerBounds(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 64 bit account sequence\r\n   * @readonly\r\n   * @type {string}\r\n   */\r\n  get minAccountSequence() {\r\n    return this._minAccountSequence;\r\n  }\r\n  set minAccountSequence(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 64 bit number of seconds\r\n   * @type {number}\r\n   * @readonly\r\n   */\r\n  get minAccountSequenceAge() {\r\n    return this._minAccountSequenceAge;\r\n  }\r\n  set minAccountSequenceAge(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * 32 bit number of ledgers\r\n   * @type {number}\r\n   * @readonly\r\n   */\r\n  get minAccountSequenceLedgerGap() {\r\n    return this._minAccountSequenceLedgerGap;\r\n  }\r\n  set minAccountSequenceLedgerGap(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * array of extra signers ({@link StrKey}s)\r\n   * @type {string[]}\r\n   * @readonly\r\n   */\r\n  get extraSigners() {\r\n    return this._extraSigners;\r\n  }\r\n  set extraSigners(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get sequence() {\r\n    return this._sequence;\r\n  }\r\n  set sequence(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get source() {\r\n    return this._source;\r\n  }\r\n  set source(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {Array.<xdr.Operation>}\r\n   * @readonly\r\n   */\r\n  get operations() {\r\n    return this._operations;\r\n  }\r\n  set operations(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get memo() {\r\n    return Memo.fromXDRObject(this._memo);\r\n  }\r\n  set memo(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * Returns the \"signature base\" of this transaction, which is the value\r\n   * that, when hashed, should be signed to create a signature that\r\n   * validators on the Stellar Network will accept.\r\n   *\r\n   * It is composed of a 4 prefix bytes followed by the xdr-encoded form\r\n   * of this transaction.\r\n   * @returns {Buffer}\r\n   */\r\n  signatureBase() {\r\n    let tx = this.tx;\r\n\r\n    // Backwards Compatibility: Use ENVELOPE_TYPE_TX to sign ENVELOPE_TYPE_TX_V0\r\n    // we need a Transaction to generate the signature base\r\n    if (this._envelopeType === xdr.EnvelopeType.envelopeTypeTxV0()) {\r\n      tx = xdr.Transaction.fromXDR(\r\n        Buffer.concat([\r\n          // TransactionV0 is a transaction with the AccountID discriminant\r\n          // stripped off, we need to put it back to build a valid transaction\r\n          // which we can use to build a TransactionSignaturePayloadTaggedTransaction\r\n          xdr.PublicKeyType.publicKeyTypeEd25519().toXDR(),\r\n          tx.toXDR()\r\n        ])\r\n      );\r\n    }\r\n\r\n    const taggedTransaction =\r\n      new xdr.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(tx);\r\n\r\n    const txSignature = new xdr.TransactionSignaturePayload({\r\n      networkId: xdr.Hash.fromXDR(hash(this.networkPassphrase)),\r\n      taggedTransaction\r\n    });\r\n\r\n    return txSignature.toXDR();\r\n  }\r\n\r\n  /**\r\n   * To envelope returns a xdr.TransactionEnvelope which can be submitted to the network.\r\n   * @returns {xdr.TransactionEnvelope}\r\n   */\r\n  toEnvelope() {\r\n    const rawTx = this.tx.toXDR();\r\n    const signatures = this.signatures.slice(); // make a copy of the signatures\r\n\r\n    let envelope;\r\n    switch (this._envelopeType) {\r\n      case xdr.EnvelopeType.envelopeTypeTxV0():\r\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTxV0(\r\n          new xdr.TransactionV0Envelope({\r\n            tx: xdr.TransactionV0.fromXDR(rawTx), // make a copy of tx\r\n            signatures\r\n          })\r\n        );\r\n        break;\r\n      case xdr.EnvelopeType.envelopeTypeTx():\r\n        envelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n          new xdr.TransactionV1Envelope({\r\n            tx: xdr.Transaction.fromXDR(rawTx), // make a copy of tx\r\n            signatures\r\n          })\r\n        );\r\n        break;\r\n      default:\r\n        throw new Error(\r\n          `Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ${this._envelopeType.name}.`\r\n        );\r\n    }\r\n\r\n    return envelope;\r\n  }\r\n\r\n  /**\r\n   * Calculate the claimable balance ID for an operation within the transaction.\r\n   *\r\n   * @param   {integer}  opIndex   the index of the CreateClaimableBalance op\r\n   * @returns {string}   a hex string representing the claimable balance ID\r\n   *\r\n   * @throws {RangeError}   for invalid `opIndex` value\r\n   * @throws {TypeError}    if op at `opIndex` is not `CreateClaimableBalance`\r\n   * @throws for general XDR un/marshalling failures\r\n   *\r\n   * @see https://github.com/stellar/go/blob/d712346e61e288d450b0c08038c158f8848cc3e4/txnbuild/transaction.go#L392-L435\r\n   *\r\n   */\r\n  getClaimableBalanceId(opIndex) {\r\n    // Validate and then extract the operation from the transaction.\r\n    if (\r\n      !Number.isInteger(opIndex) ||\r\n      opIndex < 0 ||\r\n      opIndex >= this.operations.length\r\n    ) {\r\n      throw new RangeError('invalid operation index');\r\n    }\r\n\r\n    let op = this.operations[opIndex];\r\n    try {\r\n      op = Operation.createClaimableBalance(op);\r\n    } catch (err) {\r\n      throw new TypeError(\r\n        `expected createClaimableBalance, got ${op.type}: ${err}`\r\n      );\r\n    }\r\n\r\n    // Always use the transaction's *unmuxed* source.\r\n    const account = StrKey.decodeEd25519PublicKey(\r\n      extractBaseAddress(this.source)\r\n    );\r\n    const operationId = xdr.HashIdPreimage.envelopeTypeOpId(\r\n      new xdr.HashIdPreimageOperationId({\r\n        sourceAccount: xdr.AccountId.publicKeyTypeEd25519(account),\r\n        seqNum: xdr.SequenceNumber.fromString(this.sequence),\r\n        opNum: opIndex\r\n      })\r\n    );\r\n\r\n    const opIdHash = hash(operationId.toXDR('raw'));\r\n    const balanceId = xdr.ClaimableBalanceId.claimableBalanceIdTypeV0(opIdHash);\r\n    return balanceId.toXDR('hex');\r\n  }\r\n}\r\n","import xdr from './xdr';\r\nimport { hash } from './hashing';\r\nimport { Keypair } from './keypair';\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class TransactionBase {\r\n  constructor(tx, signatures, fee, networkPassphrase) {\r\n    if (typeof networkPassphrase !== 'string') {\r\n      throw new Error(\r\n        `Invalid passphrase provided to Transaction: expected a string but got a ${typeof networkPassphrase}`\r\n      );\r\n    }\r\n\r\n    this._networkPassphrase = networkPassphrase;\r\n    this._tx = tx;\r\n    this._signatures = signatures;\r\n    this._fee = fee;\r\n  }\r\n\r\n  /**\r\n   * @type {Array.<xdr.DecoratedSignature>}\r\n   * @readonly\r\n   */\r\n  get signatures() {\r\n    return this._signatures;\r\n  }\r\n\r\n  set signatures(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  get tx() {\r\n    return this._tx;\r\n  }\r\n\r\n  set tx(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get fee() {\r\n    return this._fee;\r\n  }\r\n\r\n  set fee(value) {\r\n    throw new Error('Transaction is immutable');\r\n  }\r\n\r\n  /**\r\n   * @type {string}\r\n   * @readonly\r\n   */\r\n  get networkPassphrase() {\r\n    return this._networkPassphrase;\r\n  }\r\n\r\n  set networkPassphrase(networkPassphrase) {\r\n    this._networkPassphrase = networkPassphrase;\r\n  }\r\n\r\n  /**\r\n   * Signs the transaction with the given {@link Keypair}.\r\n   * @param {...Keypair} keypairs Keypairs of signers\r\n   * @returns {void}\r\n   */\r\n  sign(...keypairs) {\r\n    const txHash = this.hash();\r\n    keypairs.forEach((kp) => {\r\n      const sig = kp.signDecorated(txHash);\r\n      this.signatures.push(sig);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Signs a transaction with the given {@link Keypair}. Useful if someone sends\r\n   * you a transaction XDR for you to sign and return (see\r\n   * [addSignature](#addSignature) for more information).\r\n   *\r\n   * When you get a transaction XDR to sign....\r\n   * - Instantiate a `Transaction` object with the XDR\r\n   * - Use {@link Keypair} to generate a keypair object for your Stellar seed.\r\n   * - Run `getKeypairSignature` with that keypair\r\n   * - Send back the signature along with your publicKey (not your secret seed!)\r\n   *\r\n   * Example:\r\n   * ```javascript\r\n   * // `transactionXDR` is a string from the person generating the transaction\r\n   * const transaction = new Transaction(transactionXDR, networkPassphrase);\r\n   * const keypair = Keypair.fromSecret(myStellarSeed);\r\n   * return transaction.getKeypairSignature(keypair);\r\n   * ```\r\n   *\r\n   * @param {Keypair} keypair Keypair of signer\r\n   * @returns {string} Signature string\r\n   */\r\n  getKeypairSignature(keypair) {\r\n    return keypair.sign(this.hash()).toString('base64');\r\n  }\r\n\r\n  /**\r\n   * Add a signature to the transaction. Useful when a party wants to pre-sign\r\n   * a transaction but doesn't want to give access to their secret keys.\r\n   * This will also verify whether the signature is valid.\r\n   *\r\n   * Here's how you would use this feature to solicit multiple signatures.\r\n   * - Use `TransactionBuilder` to build a new transaction.\r\n   * - Make sure to set a long enough timeout on that transaction to give your\r\n   * signers enough time to sign!\r\n   * - Once you build the transaction, use `transaction.toXDR()` to get the\r\n   * base64-encoded XDR string.\r\n   * - _Warning!_ Once you've built this transaction, don't submit any other\r\n   * transactions onto your account! Doing so will invalidate this pre-compiled\r\n   * transaction!\r\n   * - Send this XDR string to your other parties. They can use the instructions\r\n   * for [getKeypairSignature](#getKeypairSignature) to sign the transaction.\r\n   * - They should send you back their `publicKey` and the `signature` string\r\n   * from [getKeypairSignature](#getKeypairSignature), both of which you pass to\r\n   * this function.\r\n   *\r\n   * @param {string} publicKey The public key of the signer\r\n   * @param {string} signature The base64 value of the signature XDR\r\n   * @returns {void}\r\n   */\r\n  addSignature(publicKey = '', signature = '') {\r\n    if (!signature || typeof signature !== 'string') {\r\n      throw new Error('Invalid signature');\r\n    }\r\n\r\n    if (!publicKey || typeof publicKey !== 'string') {\r\n      throw new Error('Invalid publicKey');\r\n    }\r\n\r\n    let keypair;\r\n    let hint;\r\n    const signatureBuffer = Buffer.from(signature, 'base64');\r\n\r\n    try {\r\n      keypair = Keypair.fromPublicKey(publicKey);\r\n      hint = keypair.signatureHint();\r\n    } catch (e) {\r\n      throw new Error('Invalid publicKey');\r\n    }\r\n\r\n    if (!keypair.verify(this.hash(), signatureBuffer)) {\r\n      throw new Error('Invalid signature');\r\n    }\r\n\r\n    this.signatures.push(\r\n      new xdr.DecoratedSignature({\r\n        hint,\r\n        signature: signatureBuffer\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a decorated signature directly to the transaction envelope.\r\n   *\r\n   * @param {xdr.DecoratedSignature} signature    raw signature to add\r\n   * @returns {void}\r\n   *\r\n   * @see Keypair.signDecorated\r\n   * @see Keypair.signPayloadDecorated\r\n   */\r\n  addDecoratedSignature(signature) {\r\n    this.signatures.push(signature);\r\n  }\r\n\r\n  /**\r\n   * Add `hashX` signer preimage as signature.\r\n   * @param {Buffer|String} preimage Preimage of hash used as signer\r\n   * @returns {void}\r\n   */\r\n  signHashX(preimage) {\r\n    if (typeof preimage === 'string') {\r\n      preimage = Buffer.from(preimage, 'hex');\r\n    }\r\n\r\n    if (preimage.length > 64) {\r\n      throw new Error('preimage cannnot be longer than 64 bytes');\r\n    }\r\n\r\n    const signature = preimage;\r\n    const hashX = hash(preimage);\r\n    const hint = hashX.slice(hashX.length - 4);\r\n    this.signatures.push(new xdr.DecoratedSignature({ hint, signature }));\r\n  }\r\n\r\n  /**\r\n   * Returns a hash for this transaction, suitable for signing.\r\n   * @returns {Buffer}\r\n   */\r\n  hash() {\r\n    return hash(this.signatureBase());\r\n  }\r\n\r\n  signatureBase() {\r\n    throw new Error('Implement in subclass');\r\n  }\r\n\r\n  toEnvelope() {\r\n    throw new Error('Implement in subclass');\r\n  }\r\n\r\n  /**\r\n   * Get the transaction envelope as a base64-encoded string\r\n   * @returns {string} XDR string\r\n   */\r\n  toXDR() {\r\n    return this.toEnvelope().toXDR().toString('base64');\r\n  }\r\n}\r\n","import { UnsignedHyper } from '@stellar/js-xdr';\r\nimport BigNumber from './util/bignumber';\r\n\r\nimport xdr from './xdr';\r\n\r\nimport { Account } from './account';\r\nimport { MuxedAccount } from './muxed_account';\r\nimport { decodeAddressToMuxedAccount } from './util/decode_encode_muxed_account';\r\n\r\nimport { Transaction } from './transaction';\r\nimport { FeeBumpTransaction } from './fee_bump_transaction';\r\nimport { SorobanDataBuilder } from './sorobandata_builder';\r\n\r\nimport { StrKey } from './strkey';\r\nimport { SignerKey } from './signerkey';\r\nimport { Memo } from './memo';\r\n\r\n/**\r\n * Minimum base fee for transactions. If this fee is below the network\r\n * minimum, the transaction will fail. The more operations in the\r\n * transaction, the greater the required fee. Use {@link\r\n * Server#fetchBaseFee} to get an accurate value of minimum transaction\r\n * fee on the network.\r\n *\r\n * @constant\r\n * @see [Fees](https://developers.stellar.org/docs/glossary/fees/)\r\n */\r\nexport const BASE_FEE = '100'; // Stroops\r\n\r\n/**\r\n * @constant\r\n * @see {@link TransactionBuilder#setTimeout}\r\n * @see [Timeout](https://developers.stellar.org/api/resources/transactions/post/)\r\n */\r\nexport const TimeoutInfinite = 0;\r\n\r\n/**\r\n * <p>Transaction builder helps constructs a new `{@link Transaction}` using the\r\n * given {@link Account} as the transaction's \"source account\". The transaction\r\n * will use the current sequence number of the given account as its sequence\r\n * number and increment the given account's sequence number by one. The given\r\n * source account must include a private key for signing the transaction or an\r\n * error will be thrown.</p>\r\n *\r\n * <p>Operations can be added to the transaction via their corresponding builder\r\n * methods, and each returns the TransactionBuilder object so they can be\r\n * chained together. After adding the desired operations, call the `build()`\r\n * method on the `TransactionBuilder` to return a fully constructed `{@link\r\n * Transaction}` that can be signed. The returned transaction will contain the\r\n * sequence number of the source account and include the signature from the\r\n * source account.</p>\r\n *\r\n * <p><strong>Be careful about unsubmitted transactions!</strong> When you build\r\n * a transaction, `stellar-sdk` automatically increments the source account's\r\n * sequence number. If you end up not submitting this transaction and submitting\r\n * another one instead, it'll fail due to the sequence number being wrong. So if\r\n * you decide not to use a built transaction, make sure to update the source\r\n * account's sequence number with\r\n * [Server.loadAccount](https://stellar.github.io/js-stellar-sdk/Server.html#loadAccount)\r\n * before creating another transaction.</p>\r\n *\r\n * <p>The following code example creates a new transaction with {@link\r\n * Operation.createAccount} and {@link Operation.payment} operations. The\r\n * Transaction's source account first funds `destinationA`, then sends a payment\r\n * to `destinationB`. The built transaction is then signed by\r\n * `sourceKeypair`.</p>\r\n *\r\n * ```\r\n * var transaction = new TransactionBuilder(source, { fee, networkPassphrase: Networks.TESTNET })\r\n * .addOperation(Operation.createAccount({\r\n *     destination: destinationA,\r\n *     startingBalance: \"20\"\r\n * })) // <- funds and creates destinationA\r\n * .addOperation(Operation.payment({\r\n *     destination: destinationB,\r\n *     amount: \"100\",\r\n *     asset: Asset.native()\r\n * })) // <- sends 100 XLM to destinationB\r\n * .setTimeout(30)\r\n * .build();\r\n *\r\n * transaction.sign(sourceKeypair);\r\n * ```\r\n *\r\n * @constructor\r\n *\r\n * @param {Account} sourceAccount - source account for this transaction\r\n * @param {object}  opts          - Options object\r\n * @param {string}  opts.fee      - max fee you're willing to pay per\r\n *     operation in this transaction (**in stroops**)\r\n *\r\n * @param {object}              [opts.timebounds] - timebounds for the\r\n *     validity of this transaction\r\n * @param {number|string|Date}  [opts.timebounds.minTime] - 64-bit UNIX\r\n *     timestamp or Date object\r\n * @param {number|string|Date}  [opts.timebounds.maxTime] - 64-bit UNIX\r\n *     timestamp or Date object\r\n * @param {object}              [opts.ledgerbounds] - ledger bounds for the\r\n *     validity of this transaction\r\n * @param {number}              [opts.ledgerbounds.minLedger] - number of the minimum\r\n *     ledger sequence\r\n * @param {number}              [opts.ledgerbounds.maxLedger] - number of the maximum\r\n *     ledger sequence\r\n * @param {string}              [opts.minAccountSequence] - number for\r\n *     the minimum account sequence\r\n * @param {number}              [opts.minAccountSequenceAge] - number of\r\n *     seconds for the minimum account sequence age\r\n * @param {number}              [opts.minAccountSequenceLedgerGap] - number of\r\n *     ledgers for the minimum account sequence ledger gap\r\n * @param {string[]}            [opts.extraSigners] - list of the extra signers\r\n *     required for this transaction\r\n * @param {Memo}                [opts.memo] - memo for the transaction\r\n * @param {string}              [opts.networkPassphrase] passphrase of the\r\n *     target Stellar network (e.g. \"Public Global Stellar Network ; September\r\n *     2015\" for the pubnet)\r\n * @param {xdr.SorobanTransactionData | string}  [opts.sorobanData] - an\r\n *     optional instance of {@link xdr.SorobanTransactionData} to be set as the\r\n *     internal `Transaction.Ext.SorobanData` field (either the xdr object or a\r\n *     base64 string). In the case of Soroban transactions, this can be obtained\r\n *     from a prior simulation of the transaction with a contract invocation and\r\n *     provides necessary resource estimations. You can also use\r\n *     {@link SorobanDataBuilder} to construct complicated combinations of\r\n *     parameters without mucking with XDR directly. **Note:** For\r\n *     non-contract(non-Soroban) transactions, this has no effect.\r\n */\r\nexport class TransactionBuilder {\r\n  constructor(sourceAccount, opts = {}) {\r\n    if (!sourceAccount) {\r\n      throw new Error('must specify source account for the transaction');\r\n    }\r\n\r\n    if (opts.fee === undefined) {\r\n      throw new Error('must specify fee for the transaction (in stroops)');\r\n    }\r\n\r\n    this.source = sourceAccount;\r\n    this.operations = [];\r\n\r\n    this.baseFee = opts.fee;\r\n    this.timebounds = opts.timebounds ? { ...opts.timebounds } : null;\r\n    this.ledgerbounds = opts.ledgerbounds ? { ...opts.ledgerbounds } : null;\r\n    this.minAccountSequence = opts.minAccountSequence || null;\r\n    this.minAccountSequenceAge = opts.minAccountSequenceAge || null;\r\n    this.minAccountSequenceLedgerGap = opts.minAccountSequenceLedgerGap || null;\r\n    this.extraSigners = opts.extraSigners ? [...opts.extraSigners] : null;\r\n    this.memo = opts.memo || Memo.none();\r\n    this.networkPassphrase = opts.networkPassphrase || null;\r\n\r\n    this.sorobanData = opts.sorobanData\r\n      ? new SorobanDataBuilder(opts.sorobanData).build()\r\n      : null;\r\n  }\r\n\r\n  /**\r\n   * Creates a builder instance using an existing {@link Transaction} as a\r\n   * template, ignoring any existing envelope signatures.\r\n   *\r\n   * Note that the sequence number WILL be cloned, so EITHER this transaction or\r\n   * the one it was cloned from will be valid. This is useful in situations\r\n   * where you are constructing a transaction in pieces and need to make\r\n   * adjustments as you go (for example, when filling out Soroban resource\r\n   * information).\r\n   *\r\n   * @param {Transaction} tx  a \"template\" transaction to clone exactly\r\n   * @param {object} [opts]   additional options to override the clone, e.g.\r\n   *    {fee: '1000'} will override the existing base fee derived from `tx` (see\r\n   *    the {@link TransactionBuilder} constructor for detailed options)\r\n   *\r\n   * @returns {TransactionBuilder} a \"prepared\" builder instance with the same\r\n   *    configuration and operations as the given transaction\r\n   *\r\n   * @warning This does not clone the transaction's\r\n   *    {@link xdr.SorobanTransactionData} (if applicable), use\r\n   *    {@link SorobanDataBuilder} and {@link TransactionBuilder.setSorobanData}\r\n   *    as needed, instead..\r\n   *\r\n   * @todo This cannot clone {@link FeeBumpTransaction}s, yet.\r\n   */\r\n  static cloneFrom(tx, opts = {}) {\r\n    if (!(tx instanceof Transaction)) {\r\n      throw new TypeError(`expected a 'Transaction', got: ${tx}`);\r\n    }\r\n\r\n    const sequenceNum = (BigInt(tx.sequence) - 1n).toString();\r\n\r\n    let source;\r\n    // rebuild the source account based on the strkey\r\n    if (StrKey.isValidMed25519PublicKey(tx.source)) {\r\n      source = MuxedAccount.fromAddress(tx.source, sequenceNum);\r\n    } else if (StrKey.isValidEd25519PublicKey(tx.source)) {\r\n      source = new Account(tx.source, sequenceNum);\r\n    } else {\r\n      throw new TypeError(`unsupported tx source account: ${tx.source}`);\r\n    }\r\n\r\n    // the initial fee passed to the builder gets scaled up based on the number\r\n    // of operations at the end, so we have to down-scale first\r\n    const unscaledFee = parseInt(tx.fee, 10) / tx.operations.length;\r\n\r\n    const builder = new TransactionBuilder(source, {\r\n      fee: (unscaledFee || BASE_FEE).toString(),\r\n      memo: tx.memo,\r\n      networkPassphrase: tx.networkPassphrase,\r\n      timebounds: tx.timeBounds,\r\n      ledgerbounds: tx.ledgerBounds,\r\n      minAccountSequence: tx.minAccountSequence,\r\n      minAccountSequenceAge: tx.minAccountSequenceAge,\r\n      minAccountSequenceLedgerGap: tx.minAccountSequenceLedgerGap,\r\n      extraSigners: tx.extraSigners,\r\n      ...opts\r\n    });\r\n\r\n    tx._tx.operations().forEach((op) => builder.addOperation(op));\r\n\r\n    return builder;\r\n  }\r\n\r\n  /**\r\n   * Adds an operation to the transaction.\r\n   *\r\n   * @param {xdr.Operation} operation   The xdr operation object, use {@link\r\n   *     Operation} static methods.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  addOperation(operation) {\r\n    this.operations.push(operation);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the operations from the builder (useful when cloning).\r\n   * @returns {TransactionBuilder} this builder instance\r\n   */\r\n  clearOperations() {\r\n    this.operations = [];\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds a memo to the transaction.\r\n   * @param {Memo} memo {@link Memo} object\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  addMemo(memo) {\r\n    this.memo = memo;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets a timeout precondition on the transaction.\r\n   *\r\n   *  Because of the distributed nature of the Stellar network it is possible\r\n   *  that the status of your transaction will be determined after a long time\r\n   *  if the network is highly congested. If you want to be sure to receive the\r\n   *  status of the transaction within a given period you should set the {@link\r\n   *  TimeBounds} with `maxTime` on the transaction (this is what `setTimeout`\r\n   *  does internally; if there's `minTime` set but no `maxTime` it will be\r\n   *  added).\r\n   *\r\n   *  A call to `TransactionBuilder.setTimeout` is **required** if Transaction\r\n   *  does not have `max_time` set. If you don't want to set timeout, use\r\n   *  `{@link TimeoutInfinite}`. In general you should set `{@link\r\n   *  TimeoutInfinite}` only in smart contracts.\r\n   *\r\n   *  Please note that Horizon may still return <code>504 Gateway Timeout</code>\r\n   *  error, even for short timeouts. In such case you need to resubmit the same\r\n   *  transaction again without making any changes to receive a status. This\r\n   *  method is using the machine system time (UTC), make sure it is set\r\n   *  correctly.\r\n   *\r\n   * @param {number} timeoutSeconds   Number of seconds the transaction is good.\r\n   *     Can't be negative. If the value is {@link TimeoutInfinite}, the\r\n   *     transaction is good indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   *\r\n   * @see {@link TimeoutInfinite}\r\n   * @see https://developers.stellar.org/docs/tutorials/handling-errors/\r\n   */\r\n  setTimeout(timeoutSeconds) {\r\n    if (this.timebounds !== null && this.timebounds.maxTime > 0) {\r\n      throw new Error(\r\n        'TimeBounds.max_time has been already set - setting timeout would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (timeoutSeconds < 0) {\r\n      throw new Error('timeout cannot be negative');\r\n    }\r\n\r\n    if (timeoutSeconds > 0) {\r\n      const timeoutTimestamp = Math.floor(Date.now() / 1000) + timeoutSeconds;\r\n      if (this.timebounds === null) {\r\n        this.timebounds = { minTime: 0, maxTime: timeoutTimestamp };\r\n      } else {\r\n        this.timebounds = {\r\n          minTime: this.timebounds.minTime,\r\n          maxTime: timeoutTimestamp\r\n        };\r\n      }\r\n    } else {\r\n      this.timebounds = {\r\n        minTime: 0,\r\n        maxTime: 0\r\n      };\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will become valid at some point\r\n   * in the future, or be invalid after some time, you can set a timebounds\r\n   * precondition. Internally this will set the `minTime`, and `maxTime`\r\n   * preconditions. Conflicts with `setTimeout`, so use one or the other.\r\n   *\r\n   * @param {Date|number} minEpochOrDate  Either a JS Date object, or a number\r\n   *     of UNIX epoch seconds. The transaction is valid after this timestamp.\r\n   *     Can't be negative. If the value is `0`, the transaction is valid\r\n   *     immediately.\r\n   * @param {Date|number} maxEpochOrDate  Either a JS Date object, or a number\r\n   *     of UNIX epoch seconds. The transaction is valid until this timestamp.\r\n   *     Can't be negative. If the value is `0`, the transaction is valid\r\n   *     indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setTimebounds(minEpochOrDate, maxEpochOrDate) {\r\n    // Force it to a date type\r\n    if (typeof minEpochOrDate === 'number') {\r\n      minEpochOrDate = new Date(minEpochOrDate * 1000);\r\n    }\r\n    if (typeof maxEpochOrDate === 'number') {\r\n      maxEpochOrDate = new Date(maxEpochOrDate * 1000);\r\n    }\r\n\r\n    if (this.timebounds !== null) {\r\n      throw new Error(\r\n        'TimeBounds has been already set - setting timebounds would overwrite it.'\r\n      );\r\n    }\r\n\r\n    // Convert that date to the epoch seconds\r\n    const minTime = Math.floor(minEpochOrDate.valueOf() / 1000);\r\n    const maxTime = Math.floor(maxEpochOrDate.valueOf() / 1000);\r\n    if (minTime < 0) {\r\n      throw new Error('min_time cannot be negative');\r\n    }\r\n    if (maxTime < 0) {\r\n      throw new Error('max_time cannot be negative');\r\n    }\r\n    if (maxTime > 0 && minTime > maxTime) {\r\n      throw new Error('min_time cannot be greater than max_time');\r\n    }\r\n\r\n    this.timebounds = { minTime, maxTime };\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will only be valid within some\r\n   * range of ledgers, you can set a ledgerbounds precondition.\r\n   * Internally this will set the `minLedger` and `maxLedger` preconditions.\r\n   *\r\n   * @param {number} minLedger  The minimum ledger this transaction is valid at\r\n   *     or after. Cannot be negative. If the value is `0` (the default), the\r\n   *     transaction is valid immediately.\r\n   *\r\n   * @param {number} maxLedger  The maximum ledger this transaction is valid\r\n   *     before. Cannot be negative. If the value is `0`, the transaction is\r\n   *     valid indefinitely.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setLedgerbounds(minLedger, maxLedger) {\r\n    if (this.ledgerbounds !== null) {\r\n      throw new Error(\r\n        'LedgerBounds has been already set - setting ledgerbounds would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (minLedger < 0) {\r\n      throw new Error('min_ledger cannot be negative');\r\n    }\r\n    if (maxLedger < 0) {\r\n      throw new Error('max_ledger cannot be negative');\r\n    }\r\n    if (maxLedger > 0 && minLedger > maxLedger) {\r\n      throw new Error('min_ledger cannot be greater than max_ledger');\r\n    }\r\n\r\n    this.ledgerbounds = { minLedger, maxLedger };\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * If you want to prepare a transaction which will be valid only while the\r\n   * account sequence number is\r\n   *\r\n   *     minAccountSequence <= sourceAccountSequence < tx.seqNum\r\n   *\r\n   * Note that after execution the account's sequence number is always raised to\r\n   * `tx.seqNum`. Internally this will set the `minAccountSequence`\r\n   * precondition.\r\n   *\r\n   * @param {string} minAccountSequence   The minimum source account sequence\r\n   *     number this transaction is valid for. If the value is `0` (the\r\n   *     default), the transaction is valid when `sourceAccount's sequence\r\n   *     number == tx.seqNum- 1`.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequence(minAccountSequence) {\r\n    if (this.minAccountSequence !== null) {\r\n      throw new Error(\r\n        'min_account_sequence has been already set - setting min_account_sequence would overwrite it.'\r\n      );\r\n    }\r\n\r\n    this.minAccountSequence = minAccountSequence;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, the current ledger time must be at least\r\n   * `minAccountSequenceAge` greater than sourceAccount's `sequenceTime`.\r\n   * Internally this will set the `minAccountSequenceAge` precondition.\r\n   *\r\n   * @param {number} durationInSeconds  The minimum amount of time between\r\n   *     source account sequence time and the ledger time when this transaction\r\n   *     will become valid. If the value is `0`, the transaction is unrestricted\r\n   *     by the account sequence age. Cannot be negative.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequenceAge(durationInSeconds) {\r\n    if (typeof durationInSeconds !== 'number') {\r\n      throw new Error('min_account_sequence_age must be a number');\r\n    }\r\n    if (this.minAccountSequenceAge !== null) {\r\n      throw new Error(\r\n        'min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (durationInSeconds < 0) {\r\n      throw new Error('min_account_sequence_age cannot be negative');\r\n    }\r\n\r\n    this.minAccountSequenceAge = durationInSeconds;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, the current ledger number must be at least\r\n   * `minAccountSequenceLedgerGap` greater than sourceAccount's ledger sequence.\r\n   * Internally this will set the `minAccountSequenceLedgerGap` precondition.\r\n   *\r\n   * @param {number} gap  The minimum number of ledgers between source account\r\n   *     sequence and the ledger number when this transaction will become valid.\r\n   *     If the value is `0`, the transaction is unrestricted by the account\r\n   *     sequence ledger. Cannot be negative.\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setMinAccountSequenceLedgerGap(gap) {\r\n    if (this.minAccountSequenceLedgerGap !== null) {\r\n      throw new Error(\r\n        'min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (gap < 0) {\r\n      throw new Error('min_account_sequence_ledger_gap cannot be negative');\r\n    }\r\n\r\n    this.minAccountSequenceLedgerGap = gap;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * For the transaction to be valid, there must be a signature corresponding to\r\n   * every Signer in this array, even if the signature is not otherwise required\r\n   * by the sourceAccount or operations. Internally this will set the\r\n   * `extraSigners` precondition.\r\n   *\r\n   * @param {string[]} extraSigners   required extra signers (as {@link StrKey}s)\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setExtraSigners(extraSigners) {\r\n    if (!Array.isArray(extraSigners)) {\r\n      throw new Error('extra_signers must be an array of strings.');\r\n    }\r\n\r\n    if (this.extraSigners !== null) {\r\n      throw new Error(\r\n        'extra_signers has been already set - setting extra_signers would overwrite it.'\r\n      );\r\n    }\r\n\r\n    if (extraSigners.length > 2) {\r\n      throw new Error('extra_signers cannot be longer than 2 elements.');\r\n    }\r\n\r\n    this.extraSigners = [...extraSigners];\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set network nassphrase for the Transaction that will be built.\r\n   *\r\n   * @param {string} networkPassphrase    passphrase of the target Stellar\r\n   *     network (e.g. \"Public Global Stellar Network ; September 2015\").\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   */\r\n  setNetworkPassphrase(networkPassphrase) {\r\n    this.networkPassphrase = networkPassphrase;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction's internal Soroban transaction data (resources,\r\n   * footprint, etc.).\r\n   *\r\n   * For non-contract(non-Soroban) transactions, this setting has no effect. In\r\n   * the case of Soroban transactions, this is either an instance of\r\n   * {@link xdr.SorobanTransactionData} or a base64-encoded string of said\r\n   * structure. This is usually obtained from the simulation response based on a\r\n   * transaction with a Soroban operation (e.g.\r\n   * {@link Operation.invokeHostFunction}, providing necessary resource\r\n   * and storage footprint estimations for contract invocation.\r\n   *\r\n   * @param {xdr.SorobanTransactionData | string} sorobanData    the\r\n   *    {@link xdr.SorobanTransactionData} as a raw xdr object or a base64\r\n   *    string to be decoded\r\n   *\r\n   * @returns {TransactionBuilder}\r\n   * @see {SorobanDataBuilder}\r\n   */\r\n  setSorobanData(sorobanData) {\r\n    this.sorobanData = new SorobanDataBuilder(sorobanData).build();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * This will build the transaction.\r\n   * It will also increment the source account's sequence number by 1.\r\n   * @returns {Transaction} This method will return the built {@link Transaction}.\r\n   */\r\n  build() {\r\n    const sequenceNumber = new BigNumber(this.source.sequenceNumber()).plus(1);\r\n    const fee = new BigNumber(this.baseFee)\r\n      .times(this.operations.length)\r\n      .toNumber();\r\n    const attrs = {\r\n      fee,\r\n      seqNum: xdr.SequenceNumber.fromString(sequenceNumber.toString()),\r\n      memo: this.memo ? this.memo.toXDRObject() : null\r\n    };\r\n\r\n    if (\r\n      this.timebounds === null ||\r\n      typeof this.timebounds.minTime === 'undefined' ||\r\n      typeof this.timebounds.maxTime === 'undefined'\r\n    ) {\r\n      throw new Error(\r\n        'TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).'\r\n      );\r\n    }\r\n\r\n    if (isValidDate(this.timebounds.minTime)) {\r\n      this.timebounds.minTime = this.timebounds.minTime.getTime() / 1000;\r\n    }\r\n    if (isValidDate(this.timebounds.maxTime)) {\r\n      this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1000;\r\n    }\r\n\r\n    this.timebounds.minTime = UnsignedHyper.fromString(\r\n      this.timebounds.minTime.toString()\r\n    );\r\n    this.timebounds.maxTime = UnsignedHyper.fromString(\r\n      this.timebounds.maxTime.toString()\r\n    );\r\n\r\n    const timeBounds = new xdr.TimeBounds(this.timebounds);\r\n\r\n    if (this.hasV2Preconditions()) {\r\n      let ledgerBounds = null;\r\n      if (this.ledgerbounds !== null) {\r\n        ledgerBounds = new xdr.LedgerBounds(this.ledgerbounds);\r\n      }\r\n\r\n      let minSeqNum = this.minAccountSequence || '0';\r\n      minSeqNum = xdr.SequenceNumber.fromString(minSeqNum);\r\n\r\n      const minSeqAge = UnsignedHyper.fromString(\r\n        this.minAccountSequenceAge !== null\r\n          ? this.minAccountSequenceAge.toString()\r\n          : '0'\r\n      );\r\n\r\n      const minSeqLedgerGap = this.minAccountSequenceLedgerGap || 0;\r\n\r\n      const extraSigners =\r\n        this.extraSigners !== null\r\n          ? this.extraSigners.map(SignerKey.decodeAddress)\r\n          : [];\r\n\r\n      attrs.cond = xdr.Preconditions.precondV2(\r\n        new xdr.PreconditionsV2({\r\n          timeBounds,\r\n          ledgerBounds,\r\n          minSeqNum,\r\n          minSeqAge,\r\n          minSeqLedgerGap,\r\n          extraSigners\r\n        })\r\n      );\r\n    } else {\r\n      attrs.cond = xdr.Preconditions.precondTime(timeBounds);\r\n    }\r\n\r\n    attrs.sourceAccount = decodeAddressToMuxedAccount(this.source.accountId());\r\n\r\n    // TODO - remove this workaround for TransactionExt ts constructor\r\n    //       and use the typescript generated static factory method once fixed\r\n    //       https://github.com/stellar/dts-xdr/issues/5\r\n    if (this.sorobanData) {\r\n      // @ts-ignore\r\n      attrs.ext = new xdr.TransactionExt(1, this.sorobanData);\r\n    } else {\r\n      // @ts-ignore\r\n      attrs.ext = new xdr.TransactionExt(0, xdr.Void);\r\n    }\r\n\r\n    const xtx = new xdr.Transaction(attrs);\r\n    xtx.operations(this.operations);\r\n    const txEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n      new xdr.TransactionV1Envelope({ tx: xtx })\r\n    );\r\n\r\n    const tx = new Transaction(txEnvelope, this.networkPassphrase);\r\n\r\n    this.source.incrementSequenceNumber();\r\n\r\n    return tx;\r\n  }\r\n\r\n  hasV2Preconditions() {\r\n    return (\r\n      this.ledgerbounds !== null ||\r\n      this.minAccountSequence !== null ||\r\n      this.minAccountSequenceAge !== null ||\r\n      this.minAccountSequenceLedgerGap !== null ||\r\n      (this.extraSigners !== null && this.extraSigners.length > 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Builds a {@link FeeBumpTransaction}, enabling you to resubmit an existing\r\n   * transaction with a higher fee.\r\n   *\r\n   * @param {Keypair|string}  feeSource - account paying for the transaction,\r\n   *     in the form of either a Keypair (only the public key is used) or\r\n   *     an account ID (in G... or M... form, but refer to `withMuxing`)\r\n   * @param {string}          baseFee   - max fee willing to pay per operation\r\n   *     in inner transaction (**in stroops**)\r\n   * @param {Transaction}     innerTx   - {@link Transaction} to be bumped by\r\n   *     the fee bump transaction\r\n   * @param {string}          networkPassphrase - passphrase of the target\r\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September 2015\",\r\n   *     see {@link Networks})\r\n   *\r\n   * @todo Alongside the next major version bump, this type signature can be\r\n   *       changed to be less awkward: accept a MuxedAccount as the `feeSource`\r\n   *       rather than a keypair or string.\r\n   *\r\n   * @note Your fee-bump amount should be >= 10x the original fee.\r\n   * @see  https://developers.stellar.org/docs/glossary/fee-bumps/#replace-by-fee\r\n   *\r\n   * @returns {FeeBumpTransaction}\r\n   */\r\n  static buildFeeBumpTransaction(\r\n    feeSource,\r\n    baseFee,\r\n    innerTx,\r\n    networkPassphrase\r\n  ) {\r\n    const innerOps = innerTx.operations.length;\r\n    const innerBaseFeeRate = new BigNumber(innerTx.fee).div(innerOps);\r\n    const base = new BigNumber(baseFee);\r\n\r\n    // The fee rate for fee bump is at least the fee rate of the inner transaction\r\n    if (base.lt(innerBaseFeeRate)) {\r\n      throw new Error(\r\n        `Invalid baseFee, it should be at least ${innerBaseFeeRate} stroops.`\r\n      );\r\n    }\r\n\r\n    const minBaseFee = new BigNumber(BASE_FEE);\r\n\r\n    // The fee rate is at least the minimum fee\r\n    if (base.lt(minBaseFee)) {\r\n      throw new Error(\r\n        `Invalid baseFee, it should be at least ${minBaseFee} stroops.`\r\n      );\r\n    }\r\n\r\n    let innerTxEnvelope = innerTx.toEnvelope();\r\n    if (innerTxEnvelope.switch() === xdr.EnvelopeType.envelopeTypeTxV0()) {\r\n      const v0Tx = innerTxEnvelope.v0().tx();\r\n      const v1Tx = new xdr.Transaction({\r\n        sourceAccount: new xdr.MuxedAccount.keyTypeEd25519(\r\n          v0Tx.sourceAccountEd25519()\r\n        ),\r\n        fee: v0Tx.fee(),\r\n        seqNum: v0Tx.seqNum(),\r\n        cond: xdr.Preconditions.precondTime(v0Tx.timeBounds()),\r\n        memo: v0Tx.memo(),\r\n        operations: v0Tx.operations(),\r\n        ext: new xdr.TransactionExt(0)\r\n      });\r\n      innerTxEnvelope = new xdr.TransactionEnvelope.envelopeTypeTx(\r\n        new xdr.TransactionV1Envelope({\r\n          tx: v1Tx,\r\n          signatures: innerTxEnvelope.v0().signatures()\r\n        })\r\n      );\r\n    }\r\n\r\n    let feeSourceAccount;\r\n    if (typeof feeSource === 'string') {\r\n      feeSourceAccount = decodeAddressToMuxedAccount(feeSource);\r\n    } else {\r\n      feeSourceAccount = feeSource.xdrMuxedAccount();\r\n    }\r\n\r\n    const tx = new xdr.FeeBumpTransaction({\r\n      feeSource: feeSourceAccount,\r\n      fee: xdr.Int64.fromString(base.times(innerOps + 1).toString()),\r\n      innerTx: xdr.FeeBumpTransactionInnerTx.envelopeTypeTx(\r\n        innerTxEnvelope.v1()\r\n      ),\r\n      ext: new xdr.FeeBumpTransactionExt(0)\r\n    });\r\n    const feeBumpTxEnvelope = new xdr.FeeBumpTransactionEnvelope({\r\n      tx,\r\n      signatures: []\r\n    });\r\n    const envelope = new xdr.TransactionEnvelope.envelopeTypeTxFeeBump(\r\n      feeBumpTxEnvelope\r\n    );\r\n\r\n    return new FeeBumpTransaction(envelope, networkPassphrase);\r\n  }\r\n\r\n  /**\r\n   * Build a {@link Transaction} or {@link FeeBumpTransaction} from an\r\n   * xdr.TransactionEnvelope.\r\n   *\r\n   * @param {string|xdr.TransactionEnvelope} envelope - The transaction envelope\r\n   *     object or base64 encoded string.\r\n   * @param {string} networkPassphrase - The network passphrase of the target\r\n   *     Stellar network (e.g. \"Public Global Stellar Network ; September\r\n   *     2015\"), see {@link Networks}.\r\n   *\r\n   * @returns {Transaction|FeeBumpTransaction}\r\n   */\r\n  static fromXDR(envelope, networkPassphrase) {\r\n    if (typeof envelope === 'string') {\r\n      envelope = xdr.TransactionEnvelope.fromXDR(envelope, 'base64');\r\n    }\r\n\r\n    if (envelope.switch() === xdr.EnvelopeType.envelopeTypeTxFeeBump()) {\r\n      return new FeeBumpTransaction(envelope, networkPassphrase);\r\n    }\r\n\r\n    return new Transaction(envelope, networkPassphrase);\r\n  }\r\n}\r\n\r\n/**\r\n * Checks whether a provided object is a valid Date.\r\n * @argument {Date} d date object\r\n * @returns {boolean}\r\n */\r\nexport function isValidDate(d) {\r\n  // isnan is okay here because it correctly checks for invalid date objects\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return d instanceof Date && !isNaN(d);\r\n}\r\n","import OriginBigNumber from 'bignumber.js';\r\n\r\nconst BigNumber = OriginBigNumber.clone();\r\n\r\nBigNumber.DEBUG = true; // gives us exceptions on bad constructor values\r\n\r\nexport default BigNumber;\r\n","export function verifyChecksum(expected, actual) {\r\n  if (expected.length !== actual.length) {\r\n    return false;\r\n  }\r\n\r\n  if (expected.length === 0) {\r\n    return true;\r\n  }\r\n\r\n  for (let i = 0; i < expected.length; i += 1) {\r\n    if (expected[i] !== actual[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import BigNumber from './bignumber';\r\n\r\n// eslint-disable-next-line no-bitwise\r\nconst MAX_INT = ((1 << 31) >>> 0) - 1;\r\n\r\n/**\r\n * Calculates and returns the best rational approximation of the given real number.\r\n * @private\r\n * @param {string|number|BigNumber} rawNumber Real number\r\n * @throws Error Throws `Error` when the best rational approximation cannot be found.\r\n * @returns {array} first element is n (numerator), second element is d (denominator)\r\n */\r\nexport function best_r(rawNumber) {\r\n  let number = new BigNumber(rawNumber);\r\n  let a;\r\n  let f;\r\n  const fractions = [\r\n    [new BigNumber(0), new BigNumber(1)],\r\n    [new BigNumber(1), new BigNumber(0)]\r\n  ];\r\n  let i = 2;\r\n\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    if (number.gt(MAX_INT)) {\r\n      break;\r\n    }\r\n    a = number.integerValue(BigNumber.ROUND_FLOOR);\r\n    f = number.minus(a);\r\n    const h = a.times(fractions[i - 1][0]).plus(fractions[i - 2][0]);\r\n    const k = a.times(fractions[i - 1][1]).plus(fractions[i - 2][1]);\r\n    if (h.gt(MAX_INT) || k.gt(MAX_INT)) {\r\n      break;\r\n    }\r\n    fractions.push([h, k]);\r\n    if (f.eq(0)) {\r\n      break;\r\n    }\r\n    number = new BigNumber(1).div(f);\r\n    i += 1;\r\n  }\r\n  const [n, d] = fractions[fractions.length - 1];\r\n\r\n  if (n.isZero() || d.isZero()) {\r\n    throw new Error(\"Couldn't find approximation\");\r\n  }\r\n\r\n  return [n.toNumber(), d.toNumber()];\r\n}\r\n","import xdr from '../xdr';\r\nimport { StrKey } from '../strkey';\r\n\r\n/**\r\n * Converts a Stellar address (in G... or M... form) to an `xdr.MuxedAccount`\r\n * structure, using the ed25519 representation when possible.\r\n *\r\n * This supports full muxed accounts, where an `M...` address will resolve to\r\n * both its underlying `G...` address and an integer ID.\r\n *\r\n * @param   {string}  address   G... or M... address to encode into XDR\r\n * @returns {xdr.MuxedAccount}  a muxed account object for this address string\r\n */\r\nexport function decodeAddressToMuxedAccount(address) {\r\n  if (StrKey.isValidMed25519PublicKey(address)) {\r\n    return _decodeAddressFullyToMuxedAccount(address);\r\n  }\r\n\r\n  return xdr.MuxedAccount.keyTypeEd25519(\r\n    StrKey.decodeEd25519PublicKey(address)\r\n  );\r\n}\r\n\r\n/**\r\n * Converts an xdr.MuxedAccount to its StrKey representation.\r\n *\r\n * This returns its \"M...\" string representation if there is a muxing ID within\r\n * the object and returns the \"G...\" representation otherwise.\r\n *\r\n * @param   {xdr.MuxedAccount} muxedAccount   Raw account to stringify\r\n * @returns {string} Stringified G... (corresponding to the underlying pubkey)\r\n *     or M... address (corresponding to both the key and the muxed ID)\r\n *\r\n * @see https://stellar.org/protocol/sep-23\r\n */\r\nexport function encodeMuxedAccountToAddress(muxedAccount) {\r\n  if (\r\n    muxedAccount.switch().value ===\r\n    xdr.CryptoKeyType.keyTypeMuxedEd25519().value\r\n  ) {\r\n    return _encodeMuxedAccountFullyToAddress(muxedAccount);\r\n  }\r\n\r\n  return StrKey.encodeEd25519PublicKey(muxedAccount.ed25519());\r\n}\r\n\r\n/**\r\n * Transform a Stellar address (G...) and an ID into its XDR representation.\r\n *\r\n * @param  {string} address   - a Stellar G... address\r\n * @param  {string} id        - a Uint64 ID represented as a string\r\n *\r\n * @return {xdr.MuxedAccount} - XDR representation of the above muxed account\r\n */\r\nexport function encodeMuxedAccount(address, id) {\r\n  if (!StrKey.isValidEd25519PublicKey(address)) {\r\n    throw new Error('address should be a Stellar account ID (G...)');\r\n  }\r\n  if (typeof id !== 'string') {\r\n    throw new Error('id should be a string representing a number (uint64)');\r\n  }\r\n\r\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n    new xdr.MuxedAccountMed25519({\r\n      id: xdr.Uint64.fromString(id),\r\n      ed25519: StrKey.decodeEd25519PublicKey(address)\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Extracts the underlying base (G...) address from an M-address.\r\n * @param  {string} address   an account address (either M... or G...)\r\n * @return {string} a Stellar public key address (G...)\r\n */\r\nexport function extractBaseAddress(address) {\r\n  if (StrKey.isValidEd25519PublicKey(address)) {\r\n    return address;\r\n  }\r\n\r\n  if (!StrKey.isValidMed25519PublicKey(address)) {\r\n    throw new TypeError(`expected muxed account (M...), got ${address}`);\r\n  }\r\n\r\n  const muxedAccount = decodeAddressToMuxedAccount(address);\r\n  return StrKey.encodeEd25519PublicKey(muxedAccount.med25519().ed25519());\r\n}\r\n\r\n// Decodes an \"M...\" account ID into its MuxedAccount object representation.\r\nfunction _decodeAddressFullyToMuxedAccount(address) {\r\n  const rawBytes = StrKey.decodeMed25519PublicKey(address);\r\n\r\n  // Decoding M... addresses cannot be done through a simple\r\n  // MuxedAccountMed25519.fromXDR() call, because the definition is:\r\n  //\r\n  //    constructor(attributes: { id: Uint64; ed25519: Buffer });\r\n  //\r\n  // Note the ID is the first attribute. However, the ID comes *last* in the\r\n  // stringified (base32-encoded) address itself (it's the last 8-byte suffix).\r\n  // The `fromXDR()` method interprets bytes in order, so we need to parse out\r\n  // the raw binary into its requisite parts, i.e. use the MuxedAccountMed25519\r\n  // constructor directly.\r\n  //\r\n  // Refer to https://github.com/stellar/go/blob/master/xdr/muxed_account.go#L26\r\n  // for the Golang implementation of the M... parsing.\r\n  return xdr.MuxedAccount.keyTypeMuxedEd25519(\r\n    new xdr.MuxedAccountMed25519({\r\n      id: xdr.Uint64.fromXDR(rawBytes.subarray(-8)),\r\n      ed25519: rawBytes.subarray(0, -8)\r\n    })\r\n  );\r\n}\r\n\r\n// Converts an xdr.MuxedAccount into its *true* \"M...\" string representation.\r\nfunction _encodeMuxedAccountFullyToAddress(muxedAccount) {\r\n  if (muxedAccount.switch() === xdr.CryptoKeyType.keyTypeEd25519()) {\r\n    return encodeMuxedAccountToAddress(muxedAccount);\r\n  }\r\n\r\n  const muxed = muxedAccount.med25519();\r\n  return StrKey.encodeMed25519PublicKey(\r\n    Buffer.concat([muxed.ed25519(), muxed.id().toXDR('raw')])\r\n  );\r\n}\r\n","export const trimEnd = (input, char) => {\r\n  const isNumber = typeof input === 'number';\r\n  let str = String(input);\r\n\r\n  while (str.endsWith(char)) {\r\n    str = str.slice(0, -1);\r\n  }\r\n\r\n  return isNumber ? Number(str) : str;\r\n};\r\n","import xdr from './generated/curr_generated';\r\n\r\nexport default xdr;\r\n","\"use strict\";\n\n/**\n * Generate a character map.\n * @param {string} alphabet e.g. \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"\n * @param {object} mappings map overrides from key to value\n * @method\n */\n\nvar charmap = function (alphabet, mappings) {\n  mappings || (mappings = {});\n  alphabet.split(\"\").forEach(function (c, i) {\n    if (!(c in mappings)) mappings[c] = i;\n  });\n  return mappings;\n}\n\n/**\n * The RFC 4648 base 32 alphabet and character map.\n * @see {@link https://tools.ietf.org/html/rfc4648}\n */\n\nvar rfc4648 = {\n  alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n  charmap: {\n    0: 14,\n    1: 8\n  }\n};\n\nrfc4648.charmap = charmap(rfc4648.alphabet, rfc4648.charmap);\n\n/**\n * The Crockford base 32 alphabet and character map.\n * @see {@link http://www.crockford.com/wrmg/base32.html}\n */\n\nvar crockford = {\n  alphabet: \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\",\n  charmap: {\n    O: 0,\n    I: 1,\n    L: 1\n  }\n};\n\ncrockford.charmap = charmap(crockford.alphabet, crockford.charmap);\n\n/**\n * base32hex\n * @see {@link https://en.wikipedia.org/wiki/Base32#base32hex}\n */\n\nvar base32hex = {\n  alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n  charmap: {}\n};\n\nbase32hex.charmap = charmap(base32hex.alphabet, base32hex.charmap);\n\n/**\n * Create a new `Decoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [charmap] Override the character map used in decoding.\n * @constructor\n */\n\nfunction Decoder (options) {\n  this.buf = [];\n  this.shift = 8;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.charmap = exports.rfc4648.charmap;\n        break;\n      case \"crockford\":\n        this.charmap = exports.crockford.charmap;\n        break;\n      case \"base32hex\":\n        this.charmap = exports.base32hex.charmap;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.charmap) this.charmap = options.charmap;\n  }\n}\n\n/**\n * The default character map coresponds to RFC4648.\n */\n\nDecoder.prototype.charmap = rfc4648.charmap;\n\n/**\n * Decode a string, continuing from the previous state.\n *\n * @param {string} str\n * @return {Decoder} this\n */\n\nDecoder.prototype.write = function (str) {\n  var charmap = this.charmap;\n  var buf = this.buf;\n  var shift = this.shift;\n  var carry = this.carry;\n\n  // decode string\n  str.toUpperCase().split(\"\").forEach(function (char) {\n\n    // ignore padding\n    if (char == \"=\") return;\n\n    // lookup symbol\n    var symbol = charmap[char] & 0xff;\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    shift -= 5;\n    if (shift > 0) {\n      carry |= symbol << shift;\n    } else if (shift < 0) {\n      buf.push(carry | (symbol >> -shift));\n      shift += 8;\n      carry = (symbol << shift) & 0xff;\n    } else {\n      buf.push(carry | symbol);\n      shift = 8;\n      carry = 0;\n    }\n  });\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish decoding.\n *\n * @param {string} [str] The final string to decode.\n * @return {Array} Decoded byte array.\n */\n\nDecoder.prototype.finalize = function (str) {\n  if (str) {\n    this.write(str);\n  }\n  if (this.shift !== 8 && this.carry !== 0) {\n    this.buf.push(this.carry);\n    this.shift = 8;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Create a new `Encoder` with the given options.\n *\n * @param {object} [options]\n *   @param {string} [type] Supported Base-32 variants are \"rfc4648\" and\n *     \"crockford\".\n *   @param {object} [alphabet] Override the alphabet used in encoding.\n * @constructor\n */\n\nfunction Encoder (options) {\n  this.buf = \"\";\n  this.shift = 3;\n  this.carry = 0;\n\n  if (options) {\n\n    switch (options.type) {\n      case \"rfc4648\":\n        this.alphabet = exports.rfc4648.alphabet;\n        break;\n      case \"crockford\":\n        this.alphabet = exports.crockford.alphabet;\n        break;\n      case \"base32hex\":\n        this.alphabet = exports.base32hex.alphabet;\n        break;\n      default:\n        throw new Error(\"invalid type\");\n    }\n\n    if (options.alphabet) this.alphabet = options.alphabet;\n    else if (options.lc) this.alphabet = this.alphabet.toLowerCase();\n  }\n}\n\n/**\n * The default alphabet coresponds to RFC4648.\n */\n\nEncoder.prototype.alphabet = rfc4648.alphabet;\n\n/**\n * Encode a byte array, continuing from the previous state.\n *\n * @param {byte[]} buf The byte array to encode.\n * @return {Encoder} this\n */\n\nEncoder.prototype.write = function (buf) {\n  var shift = this.shift;\n  var carry = this.carry;\n  var symbol;\n  var byte;\n  var i;\n\n  // encode each byte in buf\n  for (i = 0; i < buf.length; i++) {\n    byte = buf[i];\n\n    // 1: 00000 000\n    // 2:          00 00000 0\n    // 3:                    0000 0000\n    // 4:                             0 00000 00\n    // 5:                                       000 00000\n    // 6:                                                00000 000\n    // 7:                                                         00 00000 0\n\n    symbol = carry | (byte >> shift);\n    this.buf += this.alphabet[symbol & 0x1f];\n\n    if (shift > 5) {\n      shift -= 5;\n      symbol = byte >> shift;\n      this.buf += this.alphabet[symbol & 0x1f];\n    }\n\n    shift = 5 - shift;\n    carry = byte << shift;\n    shift = 8 - shift;\n  }\n\n  // save state\n  this.shift = shift;\n  this.carry = carry;\n\n  // for chaining\n  return this;\n};\n\n/**\n * Finish encoding.\n *\n * @param {byte[]} [buf] The final byte array to encode.\n * @return {string} The encoded byte array.\n */\n\nEncoder.prototype.finalize = function (buf) {\n  if (buf) {\n    this.write(buf);\n  }\n  if (this.shift !== 3) {\n    this.buf += this.alphabet[this.carry & 0x1f];\n    this.shift = 3;\n    this.carry = 0;\n  }\n  return this.buf;\n};\n\n/**\n * Convenience encoder.\n *\n * @param {byte[]} buf The byte array to encode.\n * @param {object} [options] Options to pass to the encoder.\n * @return {string} The encoded string.\n */\n\nexports.encode = function (buf, options) {\n  return new Encoder(options).finalize(buf);\n};\n\n/**\n * Convenience decoder.\n *\n * @param {string} str The string to decode.\n * @param {object} [options] Options to pass to the decoder.\n * @return {byte[]} The decoded byte array.\n */\n\nexports.decode = function (str, options) {\n  return new Decoder(options).finalize(str);\n};\n\n// Exports.\nexports.Decoder = Decoder;\nexports.Encoder = Encoder;\nexports.charmap = charmap;\nexports.crockford = crockford;\nexports.rfc4648 = rfc4648;\nexports.base32hex = base32hex;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nfunction now() { return new Date().getTime() }\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    delete times[label]\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar defineDataProperty = require('define-data-property');\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar supportsDescriptors = require('has-property-descriptors')();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object) {\n\t\tif (predicate === true) {\n\t\t\tif (object[name] === value) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (!isFunction(predicate) || !predicate()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (supportsDescriptors) {\n\t\tdefineDataProperty(object, name, value, true);\n\t} else {\n\t\tdefineDataProperty(object, name, value);\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n"],"names":["e","t","r","d","A","i","n","hp","alloc","subarray","prototype","Uint8Array","call","this","Object","setPrototypeOf","exports","Array","j","Bool","O","Double","$","Enum","X","Float","T","Hyper","I","Int","B","LargeInt","Opaque","M","Option","F","Quadruple","L","Reference","k","String","N","Struct","q","Union","Y","UnsignedHyper","R","UnsignedInt","U","VarArray","z","VarOpaque","D","Void","P","XdrReader","u","XdrWriter","c","config","rt","TypeError","constructor","super","o","s","f","isBuffer","isArray","ArrayBuffer","isView","from","_buffer","_length","length","_index","eof","advance","rewind","read","readInt32BE","readUInt32BE","readBigInt64BE","readBigUInt64BE","readFloatBE","readDoubleBE","ensureInputConsumed","a","h","allocUnsafe","resize","Math","ceil","copy","finalize","toArray","write","fill","writeInt32BE","writeUInt32BE","writeBigInt64BE","writeBigUInt64BE","writeFloatBE","writeDoubleBE","static","l","p","toXDR","y","fromXDR","m","validateXDR","isValid","g","w","toString","b","E","BigInt","asIntN","v","MAX_VALUE","MIN_VALUE","_value","RangeError","valueOf","asUintN","size","unsigned","slice","toJSON","toBigInt","reverse","name","fromString","defineIntBoundaries","low","Number","high","fromBits","x","S","_maxLength","readString","byteLength","V","C","_childType","value","_byValue","enumName","members","_members","values","fromName","fromValue","create","results","entries","resolve","_attributes","_fields","structName","G","set","_switchOn","_switch","armForSwitch","_arm","_armType","_arms","get","arm","armType","_switches","_defaultArm","armTypeForArm","unionName","switch","switchOn","Map","defaultArm","switches","arms","W","definitions","H","childReference","variable","J","Q","sizedType","Z","K","tt","et","_destination","_definitions","enum","define","struct","union","typedef","bool","int","hyper","uint","uhyper","float","double","quadruple","string","opaque","varOpaque","array","varArray","option","lookup","toByteArray","charCodeAt","fromByteArray","push","join","Error","indexOf","Symbol","for","IS","isEncoding","buffer","byteOffset","SharedArrayBuffer","type","data","toPrimitive","arguments","toLowerCase","lastIndexOf","readUInt16BE","_","parseInt","substr","min","fromCharCode","apply","TYPED_ARRAY_SUPPORT","foo","console","error","defineProperty","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","offset","concat","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","includes","isFinite","_arr","readUintLE","readUIntLE","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readBigUInt64LE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readBigInt64LE","readFloatLE","readDoubleLE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeBigUInt64LE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeBigInt64LE","writeFloatLE","writeDoubleLE","copyWithin","writable","configurable","stack","code","message","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","isInteger","abs","split","NaN","isNaN","log","LN2","globalThis","Function","window","hasOwnProperty","toStringTag","module","_typeof","iterator","_defineProperties","target","props","descriptor","arg","key","input","hint","prim","undefined","res","_toPrimitive","_createClass","Constructor","protoProps","staticProps","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","_require$types","isPromise","isRegExp","objectAssign","objectIs","RegExpPrototypeTest","lazyLoadComparison","comparison","warned","assert","ok","NO_EXCEPTION_SENTINEL","innerFail","obj","innerOk","fn","argLen","generatedMessage","err","actual","expected","operator","stackStartFn","_len","args","_key","fail","internalMessage","argsLen","process","emitWarning","warn","bind","errArgs","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","keys","_this","instance","_classCallCheck","forEach","expectedException","msg","compareExceptionKey","isPrototypeOf","getActual","checkIsPromise","then","catch","waitForActual","promiseFn","Promise","resultPromise","expectsError","details","fnType","expectsNoError","internalMatch","regexp","fnName","match","strict","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","result","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","shift","tmp1","pos","doesNotMatch","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","has","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","__proto__","getPrototypeOf","endsWith","str","search","this_len","substring","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","source","inspectValue","val","compact","customInspect","depth","maxArrayLength","Infinity","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","other","lastPos","end","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","count","maxCount","repeat","pop","maxLines","max","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","_inspect$custom","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","_super","Super","NewTarget","options","limit","stackTraceLimit","getColorDepth","base","_res","knownOperators","captureStackTrace","recurseTimes","ctx","custom","_createSuper","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","len","map","determiner","start","reason","inspected","_slicedToArray","arr","_arrayWithHoles","next","done","return","_iterableToArrayLimit","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","_nonIterableRest","arr2","regexFlagsSupported","flags","arrayFromSet","arrayFromMap","is","objectGetOwnPropertySymbols","numberIsNaN","uncurryThis","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isArrayBufferView","isDate","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","kNoIterator","kIsArray","kIsSet","kIsMap","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","Date","getTime","RegExp","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","memo","aValues","Set","add","setMightHaveLoosePrim","bValues","_i","_val","setHasEqualElement","setEquiv","aEntries","_aEntries$i","item1","item2","mapMightHaveLoosePrim","bEntries","_i2","_bEntries$_i","item","mapHasEqualEntry","mapEquiv","keysA","objEquiv","delete","setValues","findLooseMatchingPrimitives","altValue","curB","key1","key2","cov_118vcxxaru","actualCoverage","Buffer","cov_18pn2le279","Account","accountId","sequence","StrKey","isValidMed25519PublicKey","isValidEd25519PublicKey","_accountId","BigNumber","plus","cov_dbktpdr9u","Address","address","_type","decodeEd25519PublicKey","isValidContract","decodeContract","encodeEd25519PublicKey","encodeContract","scVal","fromScAddress","scAddress","xdr","ScAddressType","scAddressTypeAccount","account","ed25519","scAddressTypeContract","contract","contractId","ScVal","scvAddress","toScAddress","ScAddress","PublicKey","publicKeyTypeEd25519","cov_1uiuefwhy4","Asset","issuer","_toXDRObject","ChangeTrustAsset","TrustLineAsset","networkPassphrase","networkId","hash","preimage","HashIdPreimage","envelopeTypeContractId","HashIdPreimageContractId","contractIdPreimage","ContractIdPreimage","contractIdPreimageFromAsset","toXDRObject","xdrType","xdrTypeString","xdrAsset","isNative","assetTypeNative","AlphaNum4","AlphaNum12","padLength","paddedCode","padEnd","assetType","assetCode","Keypair","fromPublicKey","xdrAccountId","getRawAssetType","AssetType","assetTypeCreditAlphanum4","assetTypeCreditAlphanum12","asset","getCode","getIssuer","assetXdr","anum","alphaNum4","alphaNum12","trimEnd","assetA","assetB","xdrAtype","xdrBtype","asciiCompare","cov_1c5kk0th4g","_regeneratorRuntime","asyncIterator","wrap","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","awrap","async","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","authorizeEntry","_x","_x2","_x3","_authorizeEntry","_callee","entry","signer","validUntilLedgerSeq","clone","addrAuth","payload","signature","publicKey","sigScVal","_args","_context","Networks","FUTURENET","credentials","SorobanCredentialsType","sorobanCredentialsAddress","SorobanAuthorizationEntry","signatureExpirationLedger","envelopeTypeSorobanAuthorization","HashIdPreimageSorobanAuthorization","nonce","invocation","rootInvocation","t0","t1","sign","verify","nativeToScVal","public_key","scvVec","_next","_throw","authorizeInvocation","bytes","kp","random","rawPublicKey","Int64","reduce","accum","pk","SorobanCredentials","SorobanAddressCredentials","cov_1o8vdir191","Claimant","destination","predicate","ClaimPredicate","_predicate","claimPredicateUnconditional","left","right","claimPredicateAnd","claimPredicateOr","claimPredicateNot","absBefore","claimPredicateBeforeAbsoluteTime","seconds","claimPredicateBeforeRelativeTime","claimantXdr","ClaimantType","claimantTypeV0","v0","claimant","ClaimantV0","cov_jjeqefjz5","Contract","_id","params","Operation","invokeContractFunction","function","LedgerKey","contractData","LedgerKeyContractData","scvLedgerKeyContractInstance","durability","ContractDataDurability","persistent","cov_lvy0u2wm1","humanizeEvents","events","DiagnosticEvent","extractEvent","event","topics","body","scValToNative","cov_18cpdxq0jo","_callSuper","FeeBumpTransaction","_TransactionBase","envelope","TransactionEnvelope","envelopeType","EnvelopeType","envelopeTypeTxFeeBump","txEnvelope","tx","fee","signatures","innerTxEnvelope","envelopeTypeTx","innerTx","v1","_feeSource","encodeMuxedAccountToAddress","feeSource","_innerTransaction","Transaction","operations","taggedTransaction","TransactionSignaturePayloadTaggedTransaction","txSignature","TransactionSignaturePayload","Hash","FeeBumpTransactionEnvelope","TransactionBase","cov_bjfnf6oex","XDR","SCSYMBOL_LIMIT","SC_SPEC_DOC_LIMIT","scpStPrepare","scpStConfirm","scpStExternalize","scpStNominate","switchName","prepare","confirm","externalize","nominate","assetTypePoolShare","assetCode4","assetCode12","thresholdMasterWeight","thresholdLow","thresholdMed","thresholdHigh","trustline","offer","claimableBalance","liquidityPool","contractCode","configSetting","ttl","authRequiredFlag","authRevocableFlag","authImmutableFlag","authClawbackEnabledFlag","v3","v2","authorizedFlag","authorizedToMaintainLiabilitiesFlag","trustlineClawbackEnabledFlag","liquidityPoolConstantProduct","liquidityPoolId","passiveFlag","andPredicates","orPredicates","notPredicate","relBefore","claimableBalanceIdTypeV0","claimableBalanceClawbackEnabledFlag","constantProduct","temporary","trustLine","envelopeTypeTxV0","envelopeTypeScp","envelopeTypeAuth","envelopeTypeScpvalue","envelopeTypeOpId","envelopeTypePoolRevokeOpId","stellarValueBasic","stellarValueSigned","lcValueSignature","disableLiquidityPoolTradingFlag","disableLiquidityPoolDepositFlag","disableLiquidityPoolWithdrawalFlag","ledgerUpgradeVersion","ledgerUpgradeBaseFee","ledgerUpgradeMaxTxSetSize","ledgerUpgradeBaseReserve","ledgerUpgradeFlags","ledgerUpgradeConfig","ledgerUpgradeMaxSorobanTxSetSize","newLedgerVersion","newBaseFee","newMaxTxSetSize","newBaseReserve","newFlags","newConfig","newMaxSorobanTxSetSize","metaentry","liveentry","deadentry","initentry","liveEntry","deadEntry","metaEntry","txsetCompTxsMaybeDiscountedFee","txsMaybeDiscountedFee","v0Components","v1TxSet","generalizedTxSet","ledgerEntryCreated","ledgerEntryUpdated","ledgerEntryRemoved","ledgerEntryState","created","updated","removed","state","system","diagnostic","errMisc","errData","errConf","errAuth","errLoad","iPv4","iPv6","ipv4","ipv6","errorMsg","auth","dontHave","getPeers","peers","getTxSet","txSet","transaction","getScpQuorumset","scpQuorumset","scpMessage","getScpState","hello","surveyRequest","surveyResponse","sendMore","sendMoreExtended","floodAdvert","floodDemand","surveyTopology","surveyTopologyResponseV0","surveyTopologyResponseV1","topologyResponseBodyV0","topologyResponseBodyV1","txSetHash","signedSurveyRequestMessage","signedSurveyResponseMessage","qSetHash","qSet","getScpLedgerSeq","sendMoreMessage","sendMoreExtendedMessage","med25519","createAccount","payment","pathPaymentStrictReceive","manageSellOffer","createPassiveSellOffer","setOptions","changeTrust","allowTrust","accountMerge","inflation","manageData","bumpSequence","manageBuyOffer","pathPaymentStrictSend","createClaimableBalance","claimClaimableBalance","beginSponsoringFutureReserves","endSponsoringFutureReserves","revokeSponsorship","clawback","clawbackClaimableBalance","setTrustLineFlags","liquidityPoolDeposit","liquidityPoolWithdraw","invokeHostFunction","extendFootprintTtl","restoreFootprint","revokeSponsorshipLedgerEntry","revokeSponsorshipSigner","ledgerKey","hostFunctionTypeInvokeContract","hostFunctionTypeCreateContract","hostFunctionTypeUploadContractWasm","contractIdPreimageFromAddress","fromAddress","fromAsset","invokeContract","createContract","wasm","sorobanAuthorizedFunctionTypeContractFn","sorobanAuthorizedFunctionTypeCreateContractHostFn","contractFn","createContractHostFn","sorobanCredentialsSourceAccount","createAccountOp","paymentOp","pathPaymentStrictReceiveOp","manageSellOfferOp","createPassiveSellOfferOp","setOptionsOp","changeTrustOp","allowTrustOp","manageDataOp","bumpSequenceOp","manageBuyOfferOp","pathPaymentStrictSendOp","createClaimableBalanceOp","claimClaimableBalanceOp","beginSponsoringFutureReservesOp","revokeSponsorshipOp","clawbackOp","clawbackClaimableBalanceOp","setTrustLineFlagsOp","liquidityPoolDepositOp","liquidityPoolWithdrawOp","invokeHostFunctionOp","extendFootprintTtlOp","restoreFootprintOp","operationId","revokeId","sorobanAuthorization","memoNone","memoText","memoId","memoHash","memoReturn","text","id","retHash","precondNone","precondTime","precondV2","timeBounds","sorobanData","feeBump","claimAtomTypeV0","claimAtomTypeOrderBook","claimAtomTypeLiquidityPool","orderBook","createAccountSuccess","createAccountMalformed","createAccountUnderfunded","createAccountLowReserve","createAccountAlreadyExist","paymentSuccess","paymentMalformed","paymentUnderfunded","paymentSrcNoTrust","paymentSrcNotAuthorized","paymentNoDestination","paymentNoTrust","paymentNotAuthorized","paymentLineFull","paymentNoIssuer","pathPaymentStrictReceiveSuccess","pathPaymentStrictReceiveMalformed","pathPaymentStrictReceiveUnderfunded","pathPaymentStrictReceiveSrcNoTrust","pathPaymentStrictReceiveSrcNotAuthorized","pathPaymentStrictReceiveNoDestination","pathPaymentStrictReceiveNoTrust","pathPaymentStrictReceiveNotAuthorized","pathPaymentStrictReceiveLineFull","pathPaymentStrictReceiveNoIssuer","pathPaymentStrictReceiveTooFewOffers","pathPaymentStrictReceiveOfferCrossSelf","pathPaymentStrictReceiveOverSendmax","success","noIssuer","pathPaymentStrictSendSuccess","pathPaymentStrictSendMalformed","pathPaymentStrictSendUnderfunded","pathPaymentStrictSendSrcNoTrust","pathPaymentStrictSendSrcNotAuthorized","pathPaymentStrictSendNoDestination","pathPaymentStrictSendNoTrust","pathPaymentStrictSendNotAuthorized","pathPaymentStrictSendLineFull","pathPaymentStrictSendNoIssuer","pathPaymentStrictSendTooFewOffers","pathPaymentStrictSendOfferCrossSelf","pathPaymentStrictSendUnderDestmin","manageSellOfferSuccess","manageSellOfferMalformed","manageSellOfferSellNoTrust","manageSellOfferBuyNoTrust","manageSellOfferSellNotAuthorized","manageSellOfferBuyNotAuthorized","manageSellOfferLineFull","manageSellOfferUnderfunded","manageSellOfferCrossSelf","manageSellOfferSellNoIssuer","manageSellOfferBuyNoIssuer","manageSellOfferNotFound","manageSellOfferLowReserve","manageOfferCreated","manageOfferUpdated","manageOfferDeleted","manageBuyOfferSuccess","manageBuyOfferMalformed","manageBuyOfferSellNoTrust","manageBuyOfferBuyNoTrust","manageBuyOfferSellNotAuthorized","manageBuyOfferBuyNotAuthorized","manageBuyOfferLineFull","manageBuyOfferUnderfunded","manageBuyOfferCrossSelf","manageBuyOfferSellNoIssuer","manageBuyOfferBuyNoIssuer","manageBuyOfferNotFound","manageBuyOfferLowReserve","setOptionsSuccess","setOptionsLowReserve","setOptionsTooManySigners","setOptionsBadFlags","setOptionsInvalidInflation","setOptionsCantChange","setOptionsUnknownFlag","setOptionsThresholdOutOfRange","setOptionsBadSigner","setOptionsInvalidHomeDomain","setOptionsAuthRevocableRequired","changeTrustSuccess","changeTrustMalformed","changeTrustNoIssuer","changeTrustInvalidLimit","changeTrustLowReserve","changeTrustSelfNotAllowed","changeTrustTrustLineMissing","changeTrustCannotDelete","changeTrustNotAuthMaintainLiabilities","allowTrustSuccess","allowTrustMalformed","allowTrustNoTrustLine","allowTrustTrustNotRequired","allowTrustCantRevoke","allowTrustSelfNotAllowed","allowTrustLowReserve","accountMergeSuccess","accountMergeMalformed","accountMergeNoAccount","accountMergeImmutableSet","accountMergeHasSubEntries","accountMergeSeqnumTooFar","accountMergeDestFull","accountMergeIsSponsor","sourceAccountBalance","inflationSuccess","inflationNotTime","payouts","manageDataSuccess","manageDataNotSupportedYet","manageDataNameNotFound","manageDataLowReserve","manageDataInvalidName","bumpSequenceSuccess","bumpSequenceBadSeq","createClaimableBalanceSuccess","createClaimableBalanceMalformed","createClaimableBalanceLowReserve","createClaimableBalanceNoTrust","createClaimableBalanceNotAuthorized","createClaimableBalanceUnderfunded","balanceId","claimClaimableBalanceSuccess","claimClaimableBalanceDoesNotExist","claimClaimableBalanceCannotClaim","claimClaimableBalanceLineFull","claimClaimableBalanceNoTrust","claimClaimableBalanceNotAuthorized","beginSponsoringFutureReservesSuccess","beginSponsoringFutureReservesMalformed","beginSponsoringFutureReservesAlreadySponsored","beginSponsoringFutureReservesRecursive","endSponsoringFutureReservesSuccess","endSponsoringFutureReservesNotSponsored","revokeSponsorshipSuccess","revokeSponsorshipDoesNotExist","revokeSponsorshipNotSponsor","revokeSponsorshipLowReserve","revokeSponsorshipOnlyTransferable","revokeSponsorshipMalformed","clawbackSuccess","clawbackMalformed","clawbackNotClawbackEnabled","clawbackNoTrust","clawbackUnderfunded","clawbackClaimableBalanceSuccess","clawbackClaimableBalanceDoesNotExist","clawbackClaimableBalanceNotIssuer","clawbackClaimableBalanceNotClawbackEnabled","setTrustLineFlagsSuccess","setTrustLineFlagsMalformed","setTrustLineFlagsNoTrustLine","setTrustLineFlagsCantRevoke","setTrustLineFlagsInvalidState","setTrustLineFlagsLowReserve","liquidityPoolDepositSuccess","liquidityPoolDepositMalformed","liquidityPoolDepositNoTrust","liquidityPoolDepositNotAuthorized","liquidityPoolDepositUnderfunded","liquidityPoolDepositLineFull","liquidityPoolDepositBadPrice","liquidityPoolDepositPoolFull","liquidityPoolWithdrawSuccess","liquidityPoolWithdrawMalformed","liquidityPoolWithdrawNoTrust","liquidityPoolWithdrawUnderfunded","liquidityPoolWithdrawLineFull","liquidityPoolWithdrawUnderMinimum","invokeHostFunctionSuccess","invokeHostFunctionMalformed","invokeHostFunctionTrapped","invokeHostFunctionResourceLimitExceeded","invokeHostFunctionEntryArchived","invokeHostFunctionInsufficientRefundableFee","extendFootprintTtlSuccess","extendFootprintTtlMalformed","extendFootprintTtlResourceLimitExceeded","extendFootprintTtlInsufficientRefundableFee","restoreFootprintSuccess","restoreFootprintMalformed","restoreFootprintResourceLimitExceeded","restoreFootprintInsufficientRefundableFee","opInner","opBadAuth","opNoAccount","opNotSupported","opTooManySubentries","opExceededWorkLimit","opTooManySponsoring","createAccountResult","paymentResult","pathPaymentStrictReceiveResult","manageSellOfferResult","createPassiveSellOfferResult","setOptionsResult","changeTrustResult","allowTrustResult","accountMergeResult","inflationResult","manageDataResult","bumpSeqResult","manageBuyOfferResult","pathPaymentStrictSendResult","createClaimableBalanceResult","claimClaimableBalanceResult","beginSponsoringFutureReservesResult","endSponsoringFutureReservesResult","revokeSponsorshipResult","clawbackResult","clawbackClaimableBalanceResult","setTrustLineFlagsResult","liquidityPoolDepositResult","liquidityPoolWithdrawResult","invokeHostFunctionResult","extendFootprintTtlResult","restoreFootprintResult","tr","txFeeBumpInnerSuccess","txSuccess","txFailed","txTooEarly","txTooLate","txMissingOperation","txBadSeq","txBadAuth","txInsufficientBalance","txNoAccount","txInsufficientFee","txBadAuthExtra","txInternalError","txNotSupported","txFeeBumpInnerFailed","txBadSponsorship","txBadMinSeqAgeOrGap","txMalformed","txSorobanInvalid","innerResultPair","keyTypeEd25519","keyTypePreAuthTx","keyTypeHashX","keyTypeEd25519SignedPayload","keyTypeMuxedEd25519","signerKeyTypeEd25519","signerKeyTypePreAuthTx","signerKeyTypeHashX","signerKeyTypeEd25519SignedPayload","preAuthTx","hashX","ed25519SignedPayload","scvBool","scvVoid","scvError","scvU32","scvI32","scvU64","scvI64","scvTimepoint","scvDuration","scvU128","scvI128","scvU256","scvI256","scvBytes","scvString","scvSymbol","scvMap","scvContractInstance","scvLedgerKeyNonce","sceContract","sceWasmVm","sceContext","sceStorage","sceObject","sceCrypto","sceEvents","sceBudget","sceValue","sceAuth","scecArithDomain","scecIndexBounds","scecInvalidInput","scecMissingValue","scecExistingValue","scecExceededLimit","scecInvalidAction","scecInternalError","scecUnexpectedType","scecUnexpectedSize","contractExecutableWasm","contractExecutableStellarAsset","wasmHash","u32","i32","u64","i64","timepoint","duration","u128","i128","u256","i256","sym","vec","nonceKey","scEnvMetaKindInterfaceVersion","interfaceVersion","scMetaV0","scSpecTypeVal","scSpecTypeBool","scSpecTypeVoid","scSpecTypeError","scSpecTypeU32","scSpecTypeI32","scSpecTypeU64","scSpecTypeI64","scSpecTypeTimepoint","scSpecTypeDuration","scSpecTypeU128","scSpecTypeI128","scSpecTypeU256","scSpecTypeI256","scSpecTypeBytes","scSpecTypeString","scSpecTypeSymbol","scSpecTypeAddress","scSpecTypeOption","scSpecTypeResult","scSpecTypeVec","scSpecTypeMap","scSpecTypeTuple","scSpecTypeBytesN","scSpecTypeUdt","tuple","bytesN","udt","scSpecUdtUnionCaseVoidV0","scSpecUdtUnionCaseTupleV0","voidCase","tupleCase","scSpecEntryFunctionV0","scSpecEntryUdtStructV0","scSpecEntryUdtUnionV0","scSpecEntryUdtEnumV0","scSpecEntryUdtErrorEnumV0","functionV0","udtStructV0","udtUnionV0","udtEnumV0","udtErrorEnumV0","wasmInsnExec","memAlloc","memCpy","memCmp","dispatchHostFunction","visitObject","valSer","valDeser","computeSha256Hash","computeEd25519PubKey","verifyEd25519Sig","vmInstantiation","vmCachedInstantiation","invokeVmFunction","computeKeccak256Hash","decodeEcdsaCurve256Sig","recoverEcdsaSecp256k1Key","int256AddSub","int256Mul","int256Div","int256Pow","int256Shift","chaCha20DrawBytes","parseWasmInstructions","parseWasmFunctions","parseWasmGlobals","parseWasmTableEntries","parseWasmTypes","parseWasmDataSegments","parseWasmElemSegments","parseWasmImports","parseWasmExports","parseWasmDataSegmentBytes","instantiateWasmInstructions","instantiateWasmFunctions","instantiateWasmGlobals","instantiateWasmTableEntries","instantiateWasmTypes","instantiateWasmDataSegments","instantiateWasmElemSegments","instantiateWasmImports","instantiateWasmExports","instantiateWasmDataSegmentBytes","sec1DecodePointUncompressed","verifyEcdsaSecp256r1Sig","configSettingContractMaxSizeBytes","configSettingContractComputeV0","configSettingContractLedgerCostV0","configSettingContractHistoricalDataV0","configSettingContractEventsV0","configSettingContractBandwidthV0","configSettingContractCostParamsCpuInstructions","configSettingContractCostParamsMemoryBytes","configSettingContractDataKeySizeBytes","configSettingContractDataEntrySizeBytes","configSettingStateArchival","configSettingContractExecutionLanes","configSettingBucketlistSizeWindow","configSettingEvictionIterator","contractMaxSizeBytes","contractCompute","contractLedgerCost","contractHistoricalData","contractEvents","contractBandwidth","contractCostParamsCpuInsns","contractCostParamsMemBytes","contractDataKeySizeBytes","contractDataEntrySizeBytes","stateArchivalSettings","contractExecutionLanes","bucketListSizeWindow","evictionIterator","cov_7g2na1tuy","LiquidityPoolFeeV18","getLiquidityPoolId","liquidityPoolType","liquidityPoolParameters","_ref","lpTypeData","LiquidityPoolType","lpParamsData","LiquidityPoolConstantProductParameters","cov_1kcgdhumip","hasher","sha256","update","digest","cov_3xzh2p1lr","cov_et36hksgm","buildInvocationTree","root","output","inner","contractAddress","functionName","_ref2","executable","exec","JSON","stringify","salt","fromOperation","invocations","subInvocations","walkInvocationTree","callback","walkHelper","node","parent","cov_1kizel6wp","cov_1s5vdn3x62","secretKey","_secretSeed","_publicKey","generate","_secretKey","secret","rawSecret","decodeEd25519SecretSeed","fromRawEd25519Seed","rawSeed","nacl","AccountId","MuxedAccount","MuxedAccountMed25519","Uint64","encodeEd25519SecretSeed","canSign","signatureHint","DecoratedSignature","keyHint","byte","cov_1jj1aoa787","LiquidityPoolAsset","ctAssetXdr","lpConstantProductParamsXdr","lpParamsXdr","LiquidityPoolParameters","poolId","getLiquidityPoolParameters","cov_2qna3qnfvt","LiquidityPoolId","tlAssetXdr","xdrPoolId","PoolId","cov_12we4ny8ps","MemoNone","MemoID","MemoText","MemoHash","MemoReturn","Memo","_validateIdValue","_validateTextValue","_validateHashValue","number","valueBuffer","object","none","cov_vn5e1dkey","baseAccount","_muxedXdr","encodeMuxedAccount","_mAddress","mAddress","sequenceNum","muxedAccount","decodeAddressToMuxedAccount","gAddress","extractBaseAddress","sequenceNumber","incrementSequenceNumber","otherMuxedAccount","cov_5cjos4ncd","PUBLIC","TESTNET","SANDBOX","STANDALONE","cov_1us86969q3","scValToBigInt","scv","scIntType","XdrLargeInt","getType","lo","hi","loLo","loHi","hiLo","hiHi","cov_1ued0cj9tt","Int128","_LargeInt","cov_2nfdupichx","Int256","cov_10avdhrpuy","ScInt","_XdrLargeInt","opts","signed","startsWith","bitlen","bigI","find","nearestBigIntSize","cov_8t7gecsj1","Uint128","cov_s4w0hg7pz","Uint256","cov_2l9nsosvg5","scvType","bi","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","_sizeCheck","hi64","lo64","Int128Parts","UInt128Parts","hiHi64","hiLo64","loHi64","loLo64","Int256Parts","UInt256Parts","toI64","toI128","toI256","toU64","toU128","toU256","bits","cov_u89el4qoz","ONE","MAX_INT64","AuthRequiredFlag","AuthRevocableFlag","AuthImmutableFlag","AuthClawbackEnabledFlag","opAttributes","sourceAccount","operation","attrs","operationName","accountIdtoAddress","startingBalance","_fromXDRAmount","amount","sendAsset","sendMax","destAsset","destAmount","path","pathKey","sendAmount","destMin","line","trustor","authorize","inflationDest","clearFlags","setFlags","masterWeight","lowThreshold","medThreshold","highThreshold","homeDomain","ed25519PublicKey","sha256Hash","signedPayload","encodeSignedPayload","weight","selling","buying","price","_fromXDRPrice","offerId","buyAmount","dataName","dataValue","bumpTo","claimants","sponsoredId","LedgerEntryType","seller","sellerId","signerKey","SignerKeyType","convertXDRSignerKeyToObject","extractRevokeSponshipDetails","clears","sets","mapping","authorized","TrustLineFlags","authorizedToMaintainLiabilities","clawbackEnabled","flagName","bit","getFlagValue","maxAmountA","maxAmountB","minPrice","maxPrice","minAmountA","minAmountB","func","hostFunction","extendTo","allowZero","isZero","isNegative","times","gt","decimalPlaces","isValidFunction","parseFloat","div","toFixed","xdrObject","Price","approx","best_r","ops","revokeAccountSponsorship","revokeTrustlineSponsorship","revokeOfferSponsorship","revokeDataSponsorship","revokeClaimableBalanceSponsorship","revokeLiquidityPoolSponsorship","revokeSignerSponsorship","createStellarAssetContract","createCustomContract","uploadContractWasm","cov_2dgenyishd","OperationBody","setSourceAccount","cov_vv23ghe1m","attributes","AssetCode","AllowTrustOp","cov_29nkvby3u5","op","BeginSponsoringFutureReservesOp","cov_1q4oslf4h","BumpSequenceOp","cov_2muzzqmip2","toChangeTrustXDRObject","isValidAmount","constructAmountRequirementsError","_toXDRAmount","masterKeypair","changeTrustOP","ChangeTrustOp","cov_a76b269gy","validateClaimableBalanceId","ClaimableBalanceId","ClaimClaimableBalanceOp","cov_14y3xl1qn","ClawbackOp","cov_27hkzhvxf6","ClawbackClaimableBalanceOp","cov_19q42h5994","CreateAccountOp","cov_1q2uwrebg4","CreateClaimableBalanceOp","cov_flm1seqbm","_toXDRPrice","CreatePassiveSellOfferOp","cov_93qkp190r","cov_25diyezq4h","extendFootprintOp","ExtendFootprintTtlOp","ext","ExtensionPoint","cov_1ln42usqgn","cov_1oa50f4q2z","cov_imvjqvfp1","InvokeHostFunctionOp","HostFunction","InvokeContractArgs","xdrPublicKey","CreateContractArgs","ContractExecutable","ContractIdPreimageFromAddress","cov_1by9byefag","LiquidityPoolDepositOp","cov_2rl2112yea","LiquidityPoolWithdrawOp","cov_8uya2potr","ManageBuyOfferOp","cov_2rh5klwqq0","ManageDataOp","cov_1jpk3rcxkh","ManageSellOfferOp","cov_2pawkfmgrq","PathPaymentStrictReceiveOp","cov_1fpc3lwsy5","PathPaymentStrictSendOp","cov_15out076lz","PaymentOp","cov_1vyt557do1","RestoreFootprintOp","cov_nme4nrudl","LedgerKeyAccount","RevokeSponsorshipOp","toTrustLineXDRObject","LedgerKeyTrustLine","LedgerKeyOffer","LedgerKeyData","LedgerKeyClaimableBalance","LedgerKeyLiquidityPool","rawKey","SignerKey","RevokeSponsorshipOpSigner","cov_2jznwxgx9j","weightCheckFunction","_checkUnsignedIntValue","isValidSignedPayload","decodeSignedPayload","signedPayloadXdr","SignerKeyEd25519SignedPayload","Signer","SetOptionsOp","cov_2a4ra6orjp","clearFlag","setFlag","flagValue","SetTrustLineFlagsOp","cov_em5kw5dhe","_val$constructor","toScVal","some","_val$constructor2","_ref3","_ref7","_ref8","_ref4","_ref6","keyType","valType","keyOpts","valOpts","ScMapEntry","_ref9","optType","isType","_ref10","_ref11","ScValType","fromScVal","fromEntries","TextDecoder","decode","ScErrorType","cov_mdialdew2","signerKeyMap","vb","getVersionByteForPrefix","encoder","raw","decodeCheck","strkeyType","encodeCheck","cov_vt1opgbqi","actualMethods","FastSigning","sodium","require","checkFastSigningBrowser","crypto_sign_PUBLICKEYBYTES","sk","crypto_sign_SECRETKEYBYTES","crypto_sign_seed_keypair","crypto_sign_BYTES","crypto_sign_detached","crypto_sign_verify_detached","checkFastSigningNode","secretKeyUint8","naclKeys","keyPair","fromSeed","detached","cov_2c07tdahuc","_toArray","_iterableToArray","Soroban","decimals","formatted","padStart","whole","fraction","rest","shifted","cov_jf3v2z1o0","SorobanDataBuilder","SorobanTransactionData","resources","SorobanResources","footprint","LedgerFootprint","readOnly","readWrite","instructions","readBytes","writeBytes","resourceFee","_data","cpuInstrs","setFootprint","getReadOnly","getReadWrite","setReadOnly","setReadWrite","getFootprint","cov_sqew50tpm","versionBytes","ed25519SecretSeed","med25519PublicKey","strkeyTypes","seed","versionByteName","encoded","decoded","base32","versionByte","checksum","expectedVersion","expectedChecksum","calculateChecksum","verifyChecksum","versionBuffer","unencoded","crcTable","crc16","lookupIndex","cov_1le2dk4qq7","_envelopeType","_memo","_sequence","seqNum","_source","sourceAccountEd25519","cond","PreconditionType","_timeBounds","minTime","maxTime","ledgerBounds","_ledgerBounds","minLedger","maxLedger","minSeq","minSeqNum","_minAccountSequence","_minAccountSequenceAge","minSeqAge","_minAccountSequenceLedgerGap","minSeqLedgerGap","_extraSigners","extraSigners","_operations","fromXDRObject","PublicKeyType","rawTx","TransactionV0Envelope","TransactionV0","TransactionV1Envelope","opIndex","HashIdPreimageOperationId","SequenceNumber","opNum","opIdHash","cov_tgdykq0vi","_networkPassphrase","_tx","_signatures","_fee","txHash","keypairs","sig","signDecorated","keypair","signatureBuffer","signatureBase","toEnvelope","cov_2ppqragv4s","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","BASE_FEE","TimeoutInfinite","TransactionBuilder","baseFee","timebounds","ledgerbounds","minAccountSequence","minAccountSequenceAge","minAccountSequenceLedgerGap","build","unscaledFee","builder","addOperation","innerOps","innerBaseFeeRate","lt","minBaseFee","feeSourceAccount","v0Tx","v1Tx","Preconditions","TransactionExt","xdrMuxedAccount","FeeBumpTransactionInnerTx","FeeBumpTransactionExt","feeBumpTxEnvelope","timeoutSeconds","timeoutTimestamp","now","minEpochOrDate","maxEpochOrDate","durationInSeconds","gap","toNumber","isValidDate","TimeBounds","hasV2Preconditions","LedgerBounds","decodeAddress","PreconditionsV2","xtx","cov_29up3qbrjn","OriginBigNumber","DEBUG","cov_1nl30284m1","cov_1jndmq8a95","MAX_INT","rawNumber","fractions","integerValue","ROUND_FLOOR","minus","eq","cov_1cdeamnr9x","rawBytes","decodeMed25519PublicKey","_decodeAddressFullyToMuxedAccount","CryptoKeyType","muxed","encodeMed25519PublicKey","_encodeMuxedAccountFullyToAddress","cov_1x5lzwvct0","char","isNumber","cov_23jfgoqflx","charmap","alphabet","mappings","rfc4648","crockford","base32hex","Decoder","buf","carry","Encoder","lc","toUpperCase","symbol","encode","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","num","base64","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","encodingOrOffset","encoding","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","checked","fromObject","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","proto","typedArraySupport","list","thisStart","thisEnd","thisCopy","targetCopy","ret","out","hexSliceLookupTable","checkOffset","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","mul","defineBigIntMethod","validateNumber","first","last","boundsError","sub","targetStart","errors","addNumericalSeparator","range","checkBounds","received","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","functions","label","time","format","expression","$SyntaxError","gopd","property","nonEnumerable","nonWritable","nonConfigurable","loose","desc","hasSymbols","toStr","defineDataProperty","supportsDescriptors","predicates","EvalError","SyntaxError","URIError","isCallable","thisArg","receiver","forEachArray","forEachString","forEachObject","concatty","that","bound","arrLike","slicy","boundLength","boundArgs","joiner","joiny","Empty","implementation","$Error","$EvalError","$RangeError","$ReferenceError","$URIError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasProto","getProto","needsEval","TypedArray","INTRINSICS","AggregateError","Atomics","BigInt64Array","BigUint64Array","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","errorProto","doEval","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","splice","$replace","$strSlice","$exec","rePropName","reEscapeChar","getBaseIntrinsic","alias","intrinsicName","quote","subString","stringToPath","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","hasPropertyDescriptors","hasArrayLengthDefineBug","$Object","origSymbol","hasSymbolSham","symObj","getOwnPropertyNames","syms","$hasOwn","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","ctor","superCtor","super_","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","document","all","strClass","isFnRegex","generatorFunc","getGeneratorFunc","getPolyfill","shim","polyfill","whichTypedArray","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","objectKeys","toObject","$push","$propIsEnumerable","originalGetSymbols","source1","to","getSymbols","nextKey","propValue","assign","letters","lacksProperEnumerationOrder","preventExtensions","thrower","assignHasPendingExceptions","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","copyProps","SafeBuffer","hasDescriptors","gOPD","$floor","functionLengthIsConfigurable","functionLengthIsWritable","blockSize","finalSize","_block","_finalSize","_blockSize","enc","block","assigned","remainder","_update","rem","lowBits","highBits","_hash","algorithm","Algorithm","sha","sha1","sha224","sha384","sha512","inherits","Sha","init","_w","rotl30","ft","_a","_b","_c","_d","_e","Sha1","rotl5","Sha256","Sha224","_f","_g","_h","ch","maj","sigma0","sigma1","gamma0","T1","T2","SHA512","Sha384","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","writeInt64BE","Sha512","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","gf","randombytes","_0","_9","gf0","gf1","_121665","D2","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t2","t3","t4","t5","t6","t7","pad","leftover","fin","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","seedLength","signatureLength","hashLength","setPRNG","crypto","msCrypto","getRandomValues","isArgumentsObject","isTypedArray","BigIntSupported","SymbolSupported","ObjectToString","numberValue","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","descriptors","formatRegExp","objects","isNull","deprecate","noDeprecation","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","seen","stylize","stylizeNoColor","colors","isBoolean","_extend","isUndefined","stylizeWithColor","formatValue","styleType","style","styles","primitive","simple","formatPrimitive","visibleKeys","idx","arrayToHash","isError","formatError","braces","toUTCString","formatProperty","formatArray","numLinesEst","reduceToSingleString","ar","re","debuglog","pid","types","isNullOrUndefined","isSymbol","isPrimitive","months","prop","getHours","getMinutes","getSeconds","getDate","getMonth","origin","kCustomPromisifiedSymbol","callbackifyOnRejected","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","reject","callbackify","callbackified","maybeCb","rej","availableTypedArrays","typedArrays","$slice","cache","typedArray","superProto","tag","getter","trySlices","tryTypedArrays","possibleNames","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","xc","yc","intCheck","isOdd","toExponential","toFixedPoint","zs","configObject","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","caseChanged","isNum","_isBigNumber","round","rm","c0","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","dp","rand","sum","decimal","toBaseOut","baseIn","baseOut","arrL","callerIsToString","multiply","temp","xlo","xhi","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","qc","remL","rem0","xL","yc0","yL","yz","p1","p2","absoluteValue","comparedTo","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","mod","isEqualTo","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isPositive","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","md","exp","n0","n1","toPrecision","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","__esModule","definition","hmd","children","__webpack_exports__"],"sourceRoot":""}